{
    "pipes": [],
    "interfaces": [
        {
            "name": "BreadcrumbItem",
            "id": "interface-BreadcrumbItem-aef77d9b89ccf7b31532e0192af64038ddb0790ae19495762f7adf3aeff6aff7895aff60810f9228f120c98dba5114017581bec8f057038a0d27b0698417d71e",
            "file": "src/stories/softobiz-ui/breadcrumb/breadcrumb.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, ViewEncapsulation, Input } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\n\r\n// import { ButtonVariant } from './types';\r\n\r\n@Component({\r\n  selector: 'sft-breadcrumb',\r\n  templateUrl: './breadcrumb.component.html',\r\n  styleUrls: ['./breadcrumb.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class Breadcrumb {\r\n  @Input() class: string = '';\r\n\r\n  @Input() id: string = '';\r\n\r\n  @Input() items: BreadcrumbItem[];\r\n}\r\n\r\nexport interface BreadcrumbItem {\r\n  label: string;\r\n  link?: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "link",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 23
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "coupon",
            "id": "interface-coupon-909fa3dce09599287106c3f3da3f0937a6e5c6871a710630a9736728d8608dd49fd2a191015bdfda04f21b892c532494e6d23ba5a32be2bd656206fc8e6b3892",
            "file": "src/app/shared/constants/consants.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n}\r\nexport interface Data_Type {\r\n  product_ID: string;\r\n  title: string;\r\n  description: string;\r\n  features: string[];\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface selectOptions {\r\n  value: number;\r\n  title: string;\r\n}\r\nexport interface features {\r\n  feature_id: string;\r\n  product_name: string;\r\n  feature_name: string;\r\n  description: string;\r\n  feature_type: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\n\r\nexport interface coupon {\r\n  coupon_id: string;\r\n  coupon_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface loginCredientials {\r\n  csrf_token:string,\r\n  method: string,\r\n  password_identifier: string,\r\n  password: string\r\n}\r\nexport interface Product {\r\n  productId: string;\r\n  imageUrl: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface GetProduct {\r\n  productId: string;\r\n  imageUrl: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface plansFields {\r\n  plan_ID: string;\r\n  external_name: string;\r\n  internal_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Feature {\r\n  featureId: string;\r\n  productId: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n  unit: string;\r\n  levels: [];\r\n}\r\nexport interface FeatureList {\r\n  featureId: number;\r\n  name: string;\r\n  productName: string;\r\n  levels: [];\r\n  description: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  type: string;\r\n  status: string;\r\n}\r\nexport interface Customer {\r\n  id: string;\r\n  name: string;\r\n  companyName: string;\r\n  email: string,\r\n  workPhone: string,\r\n  website: string,\r\n  subscription: string\r\n}\r\nexport interface GetFeature {\r\n  featureId: string;\r\n  productID: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n}\r\n\r\nexport interface invoice {\r\n  id: string;\r\n  customer_info: string;\r\n  issued_on: string;\r\n  voided_on: string;\r\n  paid_on: string;\r\n  created_at: string;\r\n  status: string;\r\n  amount: string;\r\n}\r\n\r\nexport interface logs {\r\n  Timestamp: any;\r\n  Events: string;\r\n  Customer_Info: string;\r\n  Event_Source: string;\r\n}\r\nexport interface Plan {\r\n  planId: string;\r\n  internalName: string;\r\n  externalName: string;\r\n  type: string;\r\n  description: string;\r\n  status: string;\r\n}\r\n\r\nexport interface PlanList {\r\n  productVariantId: string;\r\n  name: string;\r\n  productID: string;\r\n  type: string;\r\n  features: [];\r\n  status: string;\r\n}\r\n\r\nexport interface ProductVariant {\r\n  productVariantId: string;\r\n  name: string,\r\n  productID: string;\r\n  type: string;\r\n  features: { featureID: string; value: string }[];\r\n  status: string;\r\n\r\n}\r\nexport const MENUITEMS = [\r\n  {\r\n    state: '/overview',\r\n    type: 'link',\r\n    name: 'Overview',\r\n    icon: 'space_dashboard',\r\n    category: 'Dashboard'\r\n  },\r\n  {\r\n    state: '/customers',\r\n    type: 'link',\r\n    name: 'Customer',\r\n    icon: 'account_box',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/subscription',\r\n    type: 'link',\r\n    name: 'Subscription',\r\n    icon: 'card_membership',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/products',\r\n    type: 'link',\r\n    name: 'Products',\r\n    icon: 'local_mall',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/features',\r\n    type: 'link',\r\n    name: 'Features',\r\n    icon: 'featured_play_list',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/plans',\r\n    type: 'link',\r\n    name: 'Plans',\r\n    icon: 'quick_reference_all',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/stepper',\r\n    type: 'link',\r\n    name: 'Add Ons',\r\n    icon: 'add_notes',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/coupons',\r\n    type: 'link',\r\n    name: 'Coupons',\r\n    icon: 'confirmation_number',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/payment/transactions',\r\n    type: 'link',\r\n    name: 'Transactions',\r\n    icon: 'compare_arrows',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/invoices',\r\n    type: 'link',\r\n    name: 'Invoices',\r\n    icon: 'receipt_long',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/logs',\r\n    type: 'link',\r\n    name: 'Logs',\r\n    icon: 'list_alt',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Menu_Headings = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Dashboard',\r\n    icon: 'settings',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Product Catalog ',\r\n    icon: 'logout',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Payment History ',\r\n    icon: 'logout',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Config_Menu = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Settings',\r\n    icon: 'settings',\r\n    category: 'Config',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'LogOut ',\r\n    icon: 'logout',\r\n    category: 'Confog',\r\n  },\r\n];\r\nexport const User_Options = [\r\n  {\r\n    path: '/user:id',\r\n    icon: 'account_circle',\r\n    name: 'My Account',\r\n    toggle: false,\r\n  },\r\n  { path: '/inbox', icon: 'inbox_outline', name: 'My Inbox', toggle: false },\r\n  { path: '', icon: 'clear_day', name: 'Dark Mode', toggle: true },\r\n  { path: '/help', icon: 'live_help', name: 'Help', toggle: false },\r\n];\r\n// Product listing\r\nexport const User_Data = [\r\n  {\r\n    id: 'random_id_1234',\r\n    product_ID: '#O365ProPlusRetail',\r\n    title: 'Microsoft Teams',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Host Online Calls', 'Unlimited Internet', 'Conference Calls'],\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_555',\r\n    product_ID: '#Or65SuperSupreme',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: [\r\n      'Unlimited Repos',\r\n      'Upto 50 Team Members',\r\n      'Host Online Calls',\r\n      'Unlimited Internet',\r\n      'Conference Calls',\r\n    ],\r\n    created_at: 'June 11th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_6969',\r\n    product_ID: '#Ow65Basic',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Conference Calls'],\r\n    created_at: 'June 18th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Features_Data = [\r\n  {\r\n    id: 'feature_id_459',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'feature_id_4591',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\n\r\nexport const Coupon_Data = [\r\n  {\r\n    id: 'coupon_id_459',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'coupon_id_460',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Plans_Data = [\r\n  {\r\n    id: 'ychvjbknk1',\r\n    plan_ID: 'As-012P',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.3',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: '1i23op1j2eo',\r\n    plan_ID: 'As-099G',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.2',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Notifications_Data = [\r\n  // {\r\n  //   user: 'John Smith' ,\r\n  //   message: 'subscriptione_created',\r\n  //   created_at: 'Aug 7th, 2023'\r\n  // }\r\n];\r\nexport const TransactionList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const InvoiceList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-003',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Payment Due',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const CustomerList = [\r\n  {\r\n    id: '#S0-001',\r\n    name: 'Alex C',\r\n    companyName: 'Greenplus Enterprises',\r\n    email: 'alex@example.com',\r\n    workPhone: '9876778865',\r\n    website: 'www.greenplus.com',\r\n    subscription: '2 subscripton (Available)',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    name: 'Zen D',\r\n    companyName: 'Zencorporation',\r\n    email: 'zen@example.com',\r\n    workPhone: '839103113',\r\n    website: 'www.zencorporation.com',\r\n    subscription: '1 subscripton (Available)',\r\n  },\r\n];\r\nexport const Logs_Data = [\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Subscription has been created for the Plan.',\r\n    Customer_Info: 'Greenplus Enterprises',\r\n    Event_Source: 'Via Portal',\r\n  },\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Active  subscription created for demo',\r\n    Customer_Info: 'Zencorporation',\r\n    Event_Source: 'Via Interface',\r\n  },\r\n];\r\nexport const feature_types = [\r\n  { value: 1, title: 'switch' },\r\n  { value: 2, title: 'range' },\r\n  { value: 3, title: 'quantity' },\r\n  { value: 4, title: 'custom' },\r\n];\r\nexport const pricingModels = [\r\n  { value: 1, title: 'Flat fee' },\r\n  { value: 2, title: 'Per unit' },\r\n  { value: 3, title: 'Tiered' },\r\n  { value: 4, title: 'Volume' },\r\n  { value: 5, title: 'Stairstep' },\r\n];\r\nexport const periodUnit = ['Daily', 'Weekly', 'Monthly', 'Yearly'];\r\nexport const StaticRoutes = {\r\n  features: ['features'],\r\n  products: ['products'],\r\n};\r\nexport const plan_add_empty_data = [\r\n  {\r\n    titleIcon:\r\n      '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n    iconAlt: 'invoice-outline-icon',\r\n    title: 'Product Details',\r\n    subtitle:\r\n      'Please click the “Add” button below to add a new product. Once you clicked the button, you will be prompted to enter the name of product, description and additional details.',\r\n    btnTitle: 'Add product',\r\n    btnPath: '/#',\r\n  },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Pricing Plans',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new pricing plans. Once you clicked the button, you will be prompted to enter pricing and additional details.',\r\n  //   btnTitle: 'Add Pricing',\r\n  //   btnPath: '/#',\r\n  // },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Add-ons Details',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new add-on. Once you have click button, you will be prompted to select add-on.',\r\n  //   btnTitle: 'Add Add-on',\r\n  //   btnPath: '/#',\r\n  // },\r\n];\r\nexport const noProducts = [\r\n  {\r\n    heading: 'Products',\r\n    imgPath: '../../../../assets/images/empty-illustrations.png',\r\n    alt: 'no proudcts available',\r\n    subtext: 'Looking for Product',\r\n    text: \"Seems like you haven't added any Product. Start adding products by click on “Create Product” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Product',\r\n    path: '/products/create',\r\n  },\r\n];\r\nexport const noFeatures = [\r\n  {\r\n    heading: 'Features',\r\n    imgPath: '../../../../assets/images/empty-illustrations-2.png',\r\n    alt: 'no features available',\r\n    subtext: 'Looking for Features',\r\n    text: \"Seems like you haven't added any feature. Start adding feature by click on “Create Feature” button \",\r\n    showButton: true,\r\n    buttonTxt: 'Create Feature',\r\n    path: '/features/create',\r\n  },\r\n];\r\nexport const noPlans = [\r\n  {\r\n    heading: 'Plans',\r\n    imgPath: '../../../../assets/images/empty-illustrations-4.png',\r\n    alt: 'no Plans available',\r\n    subtext: 'Looking for Plans',\r\n    text: \"Seems like you haven't added any Plan. Start adding plan by click on “Create Plan” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Plan',\r\n    path: '/plans/create',\r\n  },\r\n];\r\nexport const noPageFound = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/404-page.png',\r\n    alt: 'No Page Found',\r\n    subtext: \"Oops! Why you're here?\",\r\n    text: \"We are very sorry for inconvenience. It looks like you're try to access a page that either has been deleted or never existed.\",\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noCustomers = [\r\n  {\r\n    heading: 'Customers',\r\n    imgPath: '../../../../assets/images/empty-illustrations-6.png',\r\n    alt: 'no customers',\r\n    subtext: 'No customer yet',\r\n    text: 'Customers No customer yet After your first customer you will be able to view it here.',\r\n    showButton: false,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const nocoupons = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noTransactions = [\r\n  {\r\n    heading: 'Transaction',\r\n    imgPath: '../../../../assets/images/empty-illustrations-5.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'NO transaction yet',\r\n    text: 'After your first transaction you will be able to view it here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const noInvoice = [\r\n  {\r\n    heading: 'Invoice',\r\n    imgPath: '../../../../assets/images/invoice-empty.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'No invoice yet',\r\n    text: 'After your first transaction you will be able to view invoice here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const noLogs = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const Stepper = [\r\n  {\r\n    id: 1,\r\n    title: 'Step 1',\r\n    caption: 'Plan Information',\r\n    isVisible: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Step 2',\r\n    caption: 'Add Plan Pricing',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Step 3',\r\n    caption: 'Product Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Step 4',\r\n    caption: 'Add-on Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Step 5',\r\n    caption: 'Charges',\r\n    isVisible: false,\r\n  },\r\n];\r\nexport const listFilterOptions = [\r\n  'Yesterday',\r\n  'Last 7 days',\r\n  'Last Week',\r\n  'Last 30 days',\r\n  'Last 4 weeks',\r\n  'Last 12 weeks',\r\n  'Current month',\r\n  'Last calendar month',\r\n];\r\n\r\nexport interface ProductVariants {\r\n  productVariantId: string;\r\n  name: string;\r\n  productID: string;\r\n  type: string;\r\n  features: { featureID: string; value: string }[];\r\n  status: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "coupon_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "coupon_name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "created_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 34
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "Customer",
            "id": "interface-Customer-909fa3dce09599287106c3f3da3f0937a6e5c6871a710630a9736728d8608dd49fd2a191015bdfda04f21b892c532494e6d23ba5a32be2bd656206fc8e6b3892",
            "file": "src/app/shared/constants/consants.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n}\r\nexport interface Data_Type {\r\n  product_ID: string;\r\n  title: string;\r\n  description: string;\r\n  features: string[];\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface selectOptions {\r\n  value: number;\r\n  title: string;\r\n}\r\nexport interface features {\r\n  feature_id: string;\r\n  product_name: string;\r\n  feature_name: string;\r\n  description: string;\r\n  feature_type: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\n\r\nexport interface coupon {\r\n  coupon_id: string;\r\n  coupon_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface loginCredientials {\r\n  csrf_token:string,\r\n  method: string,\r\n  password_identifier: string,\r\n  password: string\r\n}\r\nexport interface Product {\r\n  productId: string;\r\n  imageUrl: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface GetProduct {\r\n  productId: string;\r\n  imageUrl: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface plansFields {\r\n  plan_ID: string;\r\n  external_name: string;\r\n  internal_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Feature {\r\n  featureId: string;\r\n  productId: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n  unit: string;\r\n  levels: [];\r\n}\r\nexport interface FeatureList {\r\n  featureId: number;\r\n  name: string;\r\n  productName: string;\r\n  levels: [];\r\n  description: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  type: string;\r\n  status: string;\r\n}\r\nexport interface Customer {\r\n  id: string;\r\n  name: string;\r\n  companyName: string;\r\n  email: string,\r\n  workPhone: string,\r\n  website: string,\r\n  subscription: string\r\n}\r\nexport interface GetFeature {\r\n  featureId: string;\r\n  productID: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n}\r\n\r\nexport interface invoice {\r\n  id: string;\r\n  customer_info: string;\r\n  issued_on: string;\r\n  voided_on: string;\r\n  paid_on: string;\r\n  created_at: string;\r\n  status: string;\r\n  amount: string;\r\n}\r\n\r\nexport interface logs {\r\n  Timestamp: any;\r\n  Events: string;\r\n  Customer_Info: string;\r\n  Event_Source: string;\r\n}\r\nexport interface Plan {\r\n  planId: string;\r\n  internalName: string;\r\n  externalName: string;\r\n  type: string;\r\n  description: string;\r\n  status: string;\r\n}\r\n\r\nexport interface PlanList {\r\n  productVariantId: string;\r\n  name: string;\r\n  productID: string;\r\n  type: string;\r\n  features: [];\r\n  status: string;\r\n}\r\n\r\nexport interface ProductVariant {\r\n  productVariantId: string;\r\n  name: string,\r\n  productID: string;\r\n  type: string;\r\n  features: { featureID: string; value: string }[];\r\n  status: string;\r\n\r\n}\r\nexport const MENUITEMS = [\r\n  {\r\n    state: '/overview',\r\n    type: 'link',\r\n    name: 'Overview',\r\n    icon: 'space_dashboard',\r\n    category: 'Dashboard'\r\n  },\r\n  {\r\n    state: '/customers',\r\n    type: 'link',\r\n    name: 'Customer',\r\n    icon: 'account_box',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/subscription',\r\n    type: 'link',\r\n    name: 'Subscription',\r\n    icon: 'card_membership',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/products',\r\n    type: 'link',\r\n    name: 'Products',\r\n    icon: 'local_mall',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/features',\r\n    type: 'link',\r\n    name: 'Features',\r\n    icon: 'featured_play_list',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/plans',\r\n    type: 'link',\r\n    name: 'Plans',\r\n    icon: 'quick_reference_all',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/stepper',\r\n    type: 'link',\r\n    name: 'Add Ons',\r\n    icon: 'add_notes',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/coupons',\r\n    type: 'link',\r\n    name: 'Coupons',\r\n    icon: 'confirmation_number',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/payment/transactions',\r\n    type: 'link',\r\n    name: 'Transactions',\r\n    icon: 'compare_arrows',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/invoices',\r\n    type: 'link',\r\n    name: 'Invoices',\r\n    icon: 'receipt_long',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/logs',\r\n    type: 'link',\r\n    name: 'Logs',\r\n    icon: 'list_alt',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Menu_Headings = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Dashboard',\r\n    icon: 'settings',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Product Catalog ',\r\n    icon: 'logout',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Payment History ',\r\n    icon: 'logout',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Config_Menu = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Settings',\r\n    icon: 'settings',\r\n    category: 'Config',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'LogOut ',\r\n    icon: 'logout',\r\n    category: 'Confog',\r\n  },\r\n];\r\nexport const User_Options = [\r\n  {\r\n    path: '/user:id',\r\n    icon: 'account_circle',\r\n    name: 'My Account',\r\n    toggle: false,\r\n  },\r\n  { path: '/inbox', icon: 'inbox_outline', name: 'My Inbox', toggle: false },\r\n  { path: '', icon: 'clear_day', name: 'Dark Mode', toggle: true },\r\n  { path: '/help', icon: 'live_help', name: 'Help', toggle: false },\r\n];\r\n// Product listing\r\nexport const User_Data = [\r\n  {\r\n    id: 'random_id_1234',\r\n    product_ID: '#O365ProPlusRetail',\r\n    title: 'Microsoft Teams',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Host Online Calls', 'Unlimited Internet', 'Conference Calls'],\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_555',\r\n    product_ID: '#Or65SuperSupreme',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: [\r\n      'Unlimited Repos',\r\n      'Upto 50 Team Members',\r\n      'Host Online Calls',\r\n      'Unlimited Internet',\r\n      'Conference Calls',\r\n    ],\r\n    created_at: 'June 11th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_6969',\r\n    product_ID: '#Ow65Basic',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Conference Calls'],\r\n    created_at: 'June 18th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Features_Data = [\r\n  {\r\n    id: 'feature_id_459',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'feature_id_4591',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\n\r\nexport const Coupon_Data = [\r\n  {\r\n    id: 'coupon_id_459',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'coupon_id_460',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Plans_Data = [\r\n  {\r\n    id: 'ychvjbknk1',\r\n    plan_ID: 'As-012P',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.3',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: '1i23op1j2eo',\r\n    plan_ID: 'As-099G',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.2',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Notifications_Data = [\r\n  // {\r\n  //   user: 'John Smith' ,\r\n  //   message: 'subscriptione_created',\r\n  //   created_at: 'Aug 7th, 2023'\r\n  // }\r\n];\r\nexport const TransactionList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const InvoiceList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-003',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Payment Due',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const CustomerList = [\r\n  {\r\n    id: '#S0-001',\r\n    name: 'Alex C',\r\n    companyName: 'Greenplus Enterprises',\r\n    email: 'alex@example.com',\r\n    workPhone: '9876778865',\r\n    website: 'www.greenplus.com',\r\n    subscription: '2 subscripton (Available)',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    name: 'Zen D',\r\n    companyName: 'Zencorporation',\r\n    email: 'zen@example.com',\r\n    workPhone: '839103113',\r\n    website: 'www.zencorporation.com',\r\n    subscription: '1 subscripton (Available)',\r\n  },\r\n];\r\nexport const Logs_Data = [\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Subscription has been created for the Plan.',\r\n    Customer_Info: 'Greenplus Enterprises',\r\n    Event_Source: 'Via Portal',\r\n  },\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Active  subscription created for demo',\r\n    Customer_Info: 'Zencorporation',\r\n    Event_Source: 'Via Interface',\r\n  },\r\n];\r\nexport const feature_types = [\r\n  { value: 1, title: 'switch' },\r\n  { value: 2, title: 'range' },\r\n  { value: 3, title: 'quantity' },\r\n  { value: 4, title: 'custom' },\r\n];\r\nexport const pricingModels = [\r\n  { value: 1, title: 'Flat fee' },\r\n  { value: 2, title: 'Per unit' },\r\n  { value: 3, title: 'Tiered' },\r\n  { value: 4, title: 'Volume' },\r\n  { value: 5, title: 'Stairstep' },\r\n];\r\nexport const periodUnit = ['Daily', 'Weekly', 'Monthly', 'Yearly'];\r\nexport const StaticRoutes = {\r\n  features: ['features'],\r\n  products: ['products'],\r\n};\r\nexport const plan_add_empty_data = [\r\n  {\r\n    titleIcon:\r\n      '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n    iconAlt: 'invoice-outline-icon',\r\n    title: 'Product Details',\r\n    subtitle:\r\n      'Please click the “Add” button below to add a new product. Once you clicked the button, you will be prompted to enter the name of product, description and additional details.',\r\n    btnTitle: 'Add product',\r\n    btnPath: '/#',\r\n  },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Pricing Plans',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new pricing plans. Once you clicked the button, you will be prompted to enter pricing and additional details.',\r\n  //   btnTitle: 'Add Pricing',\r\n  //   btnPath: '/#',\r\n  // },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Add-ons Details',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new add-on. Once you have click button, you will be prompted to select add-on.',\r\n  //   btnTitle: 'Add Add-on',\r\n  //   btnPath: '/#',\r\n  // },\r\n];\r\nexport const noProducts = [\r\n  {\r\n    heading: 'Products',\r\n    imgPath: '../../../../assets/images/empty-illustrations.png',\r\n    alt: 'no proudcts available',\r\n    subtext: 'Looking for Product',\r\n    text: \"Seems like you haven't added any Product. Start adding products by click on “Create Product” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Product',\r\n    path: '/products/create',\r\n  },\r\n];\r\nexport const noFeatures = [\r\n  {\r\n    heading: 'Features',\r\n    imgPath: '../../../../assets/images/empty-illustrations-2.png',\r\n    alt: 'no features available',\r\n    subtext: 'Looking for Features',\r\n    text: \"Seems like you haven't added any feature. Start adding feature by click on “Create Feature” button \",\r\n    showButton: true,\r\n    buttonTxt: 'Create Feature',\r\n    path: '/features/create',\r\n  },\r\n];\r\nexport const noPlans = [\r\n  {\r\n    heading: 'Plans',\r\n    imgPath: '../../../../assets/images/empty-illustrations-4.png',\r\n    alt: 'no Plans available',\r\n    subtext: 'Looking for Plans',\r\n    text: \"Seems like you haven't added any Plan. Start adding plan by click on “Create Plan” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Plan',\r\n    path: '/plans/create',\r\n  },\r\n];\r\nexport const noPageFound = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/404-page.png',\r\n    alt: 'No Page Found',\r\n    subtext: \"Oops! Why you're here?\",\r\n    text: \"We are very sorry for inconvenience. It looks like you're try to access a page that either has been deleted or never existed.\",\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noCustomers = [\r\n  {\r\n    heading: 'Customers',\r\n    imgPath: '../../../../assets/images/empty-illustrations-6.png',\r\n    alt: 'no customers',\r\n    subtext: 'No customer yet',\r\n    text: 'Customers No customer yet After your first customer you will be able to view it here.',\r\n    showButton: false,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const nocoupons = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noTransactions = [\r\n  {\r\n    heading: 'Transaction',\r\n    imgPath: '../../../../assets/images/empty-illustrations-5.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'NO transaction yet',\r\n    text: 'After your first transaction you will be able to view it here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const noInvoice = [\r\n  {\r\n    heading: 'Invoice',\r\n    imgPath: '../../../../assets/images/invoice-empty.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'No invoice yet',\r\n    text: 'After your first transaction you will be able to view invoice here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const noLogs = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const Stepper = [\r\n  {\r\n    id: 1,\r\n    title: 'Step 1',\r\n    caption: 'Plan Information',\r\n    isVisible: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Step 2',\r\n    caption: 'Add Plan Pricing',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Step 3',\r\n    caption: 'Product Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Step 4',\r\n    caption: 'Add-on Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Step 5',\r\n    caption: 'Charges',\r\n    isVisible: false,\r\n  },\r\n];\r\nexport const listFilterOptions = [\r\n  'Yesterday',\r\n  'Last 7 days',\r\n  'Last Week',\r\n  'Last 30 days',\r\n  'Last 4 weeks',\r\n  'Last 12 weeks',\r\n  'Current month',\r\n  'Last calendar month',\r\n];\r\n\r\nexport interface ProductVariants {\r\n  productVariantId: string;\r\n  name: string;\r\n  productID: string;\r\n  type: string;\r\n  features: { featureID: string; value: string }[];\r\n  status: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "companyName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 93
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 94
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 91
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 92
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 97
                },
                {
                    "name": "website",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 96
                },
                {
                    "name": "workPhone",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 95
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "Data_Type",
            "id": "interface-Data_Type-909fa3dce09599287106c3f3da3f0937a6e5c6871a710630a9736728d8608dd49fd2a191015bdfda04f21b892c532494e6d23ba5a32be2bd656206fc8e6b3892",
            "file": "src/app/shared/constants/consants.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n}\r\nexport interface Data_Type {\r\n  product_ID: string;\r\n  title: string;\r\n  description: string;\r\n  features: string[];\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface selectOptions {\r\n  value: number;\r\n  title: string;\r\n}\r\nexport interface features {\r\n  feature_id: string;\r\n  product_name: string;\r\n  feature_name: string;\r\n  description: string;\r\n  feature_type: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\n\r\nexport interface coupon {\r\n  coupon_id: string;\r\n  coupon_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface loginCredientials {\r\n  csrf_token:string,\r\n  method: string,\r\n  password_identifier: string,\r\n  password: string\r\n}\r\nexport interface Product {\r\n  productId: string;\r\n  imageUrl: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface GetProduct {\r\n  productId: string;\r\n  imageUrl: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface plansFields {\r\n  plan_ID: string;\r\n  external_name: string;\r\n  internal_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Feature {\r\n  featureId: string;\r\n  productId: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n  unit: string;\r\n  levels: [];\r\n}\r\nexport interface FeatureList {\r\n  featureId: number;\r\n  name: string;\r\n  productName: string;\r\n  levels: [];\r\n  description: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  type: string;\r\n  status: string;\r\n}\r\nexport interface Customer {\r\n  id: string;\r\n  name: string;\r\n  companyName: string;\r\n  email: string,\r\n  workPhone: string,\r\n  website: string,\r\n  subscription: string\r\n}\r\nexport interface GetFeature {\r\n  featureId: string;\r\n  productID: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n}\r\n\r\nexport interface invoice {\r\n  id: string;\r\n  customer_info: string;\r\n  issued_on: string;\r\n  voided_on: string;\r\n  paid_on: string;\r\n  created_at: string;\r\n  status: string;\r\n  amount: string;\r\n}\r\n\r\nexport interface logs {\r\n  Timestamp: any;\r\n  Events: string;\r\n  Customer_Info: string;\r\n  Event_Source: string;\r\n}\r\nexport interface Plan {\r\n  planId: string;\r\n  internalName: string;\r\n  externalName: string;\r\n  type: string;\r\n  description: string;\r\n  status: string;\r\n}\r\n\r\nexport interface PlanList {\r\n  productVariantId: string;\r\n  name: string;\r\n  productID: string;\r\n  type: string;\r\n  features: [];\r\n  status: string;\r\n}\r\n\r\nexport interface ProductVariant {\r\n  productVariantId: string;\r\n  name: string,\r\n  productID: string;\r\n  type: string;\r\n  features: { featureID: string; value: string }[];\r\n  status: string;\r\n\r\n}\r\nexport const MENUITEMS = [\r\n  {\r\n    state: '/overview',\r\n    type: 'link',\r\n    name: 'Overview',\r\n    icon: 'space_dashboard',\r\n    category: 'Dashboard'\r\n  },\r\n  {\r\n    state: '/customers',\r\n    type: 'link',\r\n    name: 'Customer',\r\n    icon: 'account_box',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/subscription',\r\n    type: 'link',\r\n    name: 'Subscription',\r\n    icon: 'card_membership',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/products',\r\n    type: 'link',\r\n    name: 'Products',\r\n    icon: 'local_mall',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/features',\r\n    type: 'link',\r\n    name: 'Features',\r\n    icon: 'featured_play_list',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/plans',\r\n    type: 'link',\r\n    name: 'Plans',\r\n    icon: 'quick_reference_all',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/stepper',\r\n    type: 'link',\r\n    name: 'Add Ons',\r\n    icon: 'add_notes',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/coupons',\r\n    type: 'link',\r\n    name: 'Coupons',\r\n    icon: 'confirmation_number',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/payment/transactions',\r\n    type: 'link',\r\n    name: 'Transactions',\r\n    icon: 'compare_arrows',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/invoices',\r\n    type: 'link',\r\n    name: 'Invoices',\r\n    icon: 'receipt_long',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/logs',\r\n    type: 'link',\r\n    name: 'Logs',\r\n    icon: 'list_alt',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Menu_Headings = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Dashboard',\r\n    icon: 'settings',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Product Catalog ',\r\n    icon: 'logout',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Payment History ',\r\n    icon: 'logout',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Config_Menu = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Settings',\r\n    icon: 'settings',\r\n    category: 'Config',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'LogOut ',\r\n    icon: 'logout',\r\n    category: 'Confog',\r\n  },\r\n];\r\nexport const User_Options = [\r\n  {\r\n    path: '/user:id',\r\n    icon: 'account_circle',\r\n    name: 'My Account',\r\n    toggle: false,\r\n  },\r\n  { path: '/inbox', icon: 'inbox_outline', name: 'My Inbox', toggle: false },\r\n  { path: '', icon: 'clear_day', name: 'Dark Mode', toggle: true },\r\n  { path: '/help', icon: 'live_help', name: 'Help', toggle: false },\r\n];\r\n// Product listing\r\nexport const User_Data = [\r\n  {\r\n    id: 'random_id_1234',\r\n    product_ID: '#O365ProPlusRetail',\r\n    title: 'Microsoft Teams',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Host Online Calls', 'Unlimited Internet', 'Conference Calls'],\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_555',\r\n    product_ID: '#Or65SuperSupreme',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: [\r\n      'Unlimited Repos',\r\n      'Upto 50 Team Members',\r\n      'Host Online Calls',\r\n      'Unlimited Internet',\r\n      'Conference Calls',\r\n    ],\r\n    created_at: 'June 11th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_6969',\r\n    product_ID: '#Ow65Basic',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Conference Calls'],\r\n    created_at: 'June 18th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Features_Data = [\r\n  {\r\n    id: 'feature_id_459',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'feature_id_4591',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\n\r\nexport const Coupon_Data = [\r\n  {\r\n    id: 'coupon_id_459',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'coupon_id_460',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Plans_Data = [\r\n  {\r\n    id: 'ychvjbknk1',\r\n    plan_ID: 'As-012P',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.3',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: '1i23op1j2eo',\r\n    plan_ID: 'As-099G',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.2',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Notifications_Data = [\r\n  // {\r\n  //   user: 'John Smith' ,\r\n  //   message: 'subscriptione_created',\r\n  //   created_at: 'Aug 7th, 2023'\r\n  // }\r\n];\r\nexport const TransactionList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const InvoiceList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-003',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Payment Due',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const CustomerList = [\r\n  {\r\n    id: '#S0-001',\r\n    name: 'Alex C',\r\n    companyName: 'Greenplus Enterprises',\r\n    email: 'alex@example.com',\r\n    workPhone: '9876778865',\r\n    website: 'www.greenplus.com',\r\n    subscription: '2 subscripton (Available)',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    name: 'Zen D',\r\n    companyName: 'Zencorporation',\r\n    email: 'zen@example.com',\r\n    workPhone: '839103113',\r\n    website: 'www.zencorporation.com',\r\n    subscription: '1 subscripton (Available)',\r\n  },\r\n];\r\nexport const Logs_Data = [\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Subscription has been created for the Plan.',\r\n    Customer_Info: 'Greenplus Enterprises',\r\n    Event_Source: 'Via Portal',\r\n  },\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Active  subscription created for demo',\r\n    Customer_Info: 'Zencorporation',\r\n    Event_Source: 'Via Interface',\r\n  },\r\n];\r\nexport const feature_types = [\r\n  { value: 1, title: 'switch' },\r\n  { value: 2, title: 'range' },\r\n  { value: 3, title: 'quantity' },\r\n  { value: 4, title: 'custom' },\r\n];\r\nexport const pricingModels = [\r\n  { value: 1, title: 'Flat fee' },\r\n  { value: 2, title: 'Per unit' },\r\n  { value: 3, title: 'Tiered' },\r\n  { value: 4, title: 'Volume' },\r\n  { value: 5, title: 'Stairstep' },\r\n];\r\nexport const periodUnit = ['Daily', 'Weekly', 'Monthly', 'Yearly'];\r\nexport const StaticRoutes = {\r\n  features: ['features'],\r\n  products: ['products'],\r\n};\r\nexport const plan_add_empty_data = [\r\n  {\r\n    titleIcon:\r\n      '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n    iconAlt: 'invoice-outline-icon',\r\n    title: 'Product Details',\r\n    subtitle:\r\n      'Please click the “Add” button below to add a new product. Once you clicked the button, you will be prompted to enter the name of product, description and additional details.',\r\n    btnTitle: 'Add product',\r\n    btnPath: '/#',\r\n  },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Pricing Plans',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new pricing plans. Once you clicked the button, you will be prompted to enter pricing and additional details.',\r\n  //   btnTitle: 'Add Pricing',\r\n  //   btnPath: '/#',\r\n  // },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Add-ons Details',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new add-on. Once you have click button, you will be prompted to select add-on.',\r\n  //   btnTitle: 'Add Add-on',\r\n  //   btnPath: '/#',\r\n  // },\r\n];\r\nexport const noProducts = [\r\n  {\r\n    heading: 'Products',\r\n    imgPath: '../../../../assets/images/empty-illustrations.png',\r\n    alt: 'no proudcts available',\r\n    subtext: 'Looking for Product',\r\n    text: \"Seems like you haven't added any Product. Start adding products by click on “Create Product” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Product',\r\n    path: '/products/create',\r\n  },\r\n];\r\nexport const noFeatures = [\r\n  {\r\n    heading: 'Features',\r\n    imgPath: '../../../../assets/images/empty-illustrations-2.png',\r\n    alt: 'no features available',\r\n    subtext: 'Looking for Features',\r\n    text: \"Seems like you haven't added any feature. Start adding feature by click on “Create Feature” button \",\r\n    showButton: true,\r\n    buttonTxt: 'Create Feature',\r\n    path: '/features/create',\r\n  },\r\n];\r\nexport const noPlans = [\r\n  {\r\n    heading: 'Plans',\r\n    imgPath: '../../../../assets/images/empty-illustrations-4.png',\r\n    alt: 'no Plans available',\r\n    subtext: 'Looking for Plans',\r\n    text: \"Seems like you haven't added any Plan. Start adding plan by click on “Create Plan” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Plan',\r\n    path: '/plans/create',\r\n  },\r\n];\r\nexport const noPageFound = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/404-page.png',\r\n    alt: 'No Page Found',\r\n    subtext: \"Oops! Why you're here?\",\r\n    text: \"We are very sorry for inconvenience. It looks like you're try to access a page that either has been deleted or never existed.\",\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noCustomers = [\r\n  {\r\n    heading: 'Customers',\r\n    imgPath: '../../../../assets/images/empty-illustrations-6.png',\r\n    alt: 'no customers',\r\n    subtext: 'No customer yet',\r\n    text: 'Customers No customer yet After your first customer you will be able to view it here.',\r\n    showButton: false,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const nocoupons = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noTransactions = [\r\n  {\r\n    heading: 'Transaction',\r\n    imgPath: '../../../../assets/images/empty-illustrations-5.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'NO transaction yet',\r\n    text: 'After your first transaction you will be able to view it here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const noInvoice = [\r\n  {\r\n    heading: 'Invoice',\r\n    imgPath: '../../../../assets/images/invoice-empty.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'No invoice yet',\r\n    text: 'After your first transaction you will be able to view invoice here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const noLogs = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const Stepper = [\r\n  {\r\n    id: 1,\r\n    title: 'Step 1',\r\n    caption: 'Plan Information',\r\n    isVisible: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Step 2',\r\n    caption: 'Add Plan Pricing',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Step 3',\r\n    caption: 'Product Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Step 4',\r\n    caption: 'Add-on Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Step 5',\r\n    caption: 'Charges',\r\n    isVisible: false,\r\n  },\r\n];\r\nexport const listFilterOptions = [\r\n  'Yesterday',\r\n  'Last 7 days',\r\n  'Last Week',\r\n  'Last 30 days',\r\n  'Last 4 weeks',\r\n  'Last 12 weeks',\r\n  'Current month',\r\n  'Last calendar month',\r\n];\r\n\r\nexport interface ProductVariants {\r\n  productVariantId: string;\r\n  name: string;\r\n  productID: string;\r\n  type: string;\r\n  features: { featureID: string; value: string }[];\r\n  status: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "created_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "features",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "product_ID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "DialogData",
            "id": "interface-DialogData-9c36cf54c36b49b7689ca15ccf9ed1dd9ecd3468e63fab5f9173ddd112911b2a924c029a1e4fc5ac602b878297644d10f5d5c20df92464743c426f3f823888a3",
            "file": "src/app/shared/components/dialog-box/coupons-delete-success/coupons-delete-success.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, EventEmitter, Inject, Output } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\nexport interface DialogData {\r\n  module: string;\r\n  deleteId: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-coupons-delete-success',\r\n  templateUrl: './coupons-delete-success.component.html',\r\n  styleUrls: ['./coupons-delete-success.component.scss']\r\n})\r\nexport class CouponsDeleteSuccessComponent {\r\n  @Output() confirmed: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  constructor(public dialogRef: MatDialogRef<CouponsDeleteSuccessComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\r\n\r\n  onCancelClick(): void {\r\n    this.dialogRef.close(false);\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "deleteId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "module",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "DialogData",
            "id": "interface-DialogData-d87e73f189e3e1858a7f6ba56234953ac4ae60ad362620dd9899ef67d2e3c18b14b6068dc66ee63da158096b2c37fb3b55651901c40e7db4d801036da6a29150-1",
            "file": "src/app/shared/components/dialog-box/delete-confirmation/delete-confirmation.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, EventEmitter, Inject, Output } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { CouponsDeleteSuccessComponent } from 'src/app/shared/components/dialog-box/coupons-delete-success/coupons-delete-success.component';\r\n\r\n\r\nexport interface DialogData {\r\n  module: string;\r\n  deleteId: number;\r\n}\r\n@Component({\r\n  selector: 'app-delete-confirmation',\r\n  templateUrl: './delete-confirmation.component.html',\r\n  styleUrls: ['./delete-confirmation.component.scss']\r\n})\r\nexport class DeleteConfirmationComponent {\r\n  @Output() confirmed: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeleteConfirmationComponent>,\r\n    public dialog: MatDialog,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\r\n  ) {}\r\n  // dialogRef: any;\r\n\r\n  onCancelClick(): void {\r\n    this.dialogRef.close(false);\r\n  }\r\n\r\n}\r\n",
            "properties": [
                {
                    "name": "deleteId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "module",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "DialogData-1"
        },
        {
            "name": "DialogData",
            "id": "interface-DialogData-75bdac5a457f7a234d5209ce9ff6a6fdc36628bddb590cd50280c07c5488886b91bf42a47d83426979423bc9717a00b8dbef7a3ab55065a483806a88766adf14-2",
            "file": "src/app/shared/components/dialog-box/edit-customer-details/edit-customer-details.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\ninterface DialogData {\r\n  type: 'general' | 'address' | 'other';\r\n}\r\n\r\n@Component({\r\n  selector: 'app-edit-customer-details',\r\n  templateUrl: './edit-customer-details.component.html',\r\n  styleUrls: ['./edit-customer-details.component.scss'],\r\n})\r\nexport class EditCustomerDetailsComponent {\r\n  popupType: string;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<EditCustomerDetailsComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\r\n  ) {\r\n    this.popupType = data.type;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"general\" | \"address\" | \"other\"",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "DialogData-2"
        },
        {
            "name": "DialogData",
            "id": "interface-DialogData-c9e2392553d1ecd9cdbadc9fda6f064bf9bac6c1793b89828e131fff255ca8485549e949cf6504b383fa55ef3c36587be2fa648b5ba732c850f772c103d78bea-3",
            "file": "src/app/shared/components/dialog-box/feature-details-popup/feature-details-popup.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Inject, Input, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FeatureService } from 'src/app/modules/features/services/feature.service';\r\nimport {\r\n  MatDialogRef,\r\n  MatDialog,\r\n  MAT_DIALOG_DATA,\r\n} from '@angular/material/dialog';\r\n\r\nexport interface DialogData {\r\n  featureId: string;\r\n  featureName: string;\r\n  featureType: string;\r\n  entitlement: string;\r\n  status: string;\r\n}\r\n@Component({\r\n  selector: 'app-feature-details-popup',\r\n  templateUrl: './feature-details-popup.component.html',\r\n  styleUrls: ['./feature-details-popup.component.scss'],\r\n})\r\nexport class FeatureDetailsPopupComponent implements OnInit {\r\n  featureDetails: any;\r\n  constructor(\r\n    private featureService: FeatureService,\r\n    private router: Router,\r\n    public dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.featureService\r\n      .getFeatureById(this.data.featureId['featureId'])\r\n      .subscribe((res) => {\r\n        this.featureDetails = res;\r\n\r\n        this.data.featureName = this.featureDetails?.name;\r\n        this.data.featureType = this.featureDetails?.type;\r\n        this.data.status = this.featureDetails?.status;\r\n\r\n        if (this.data.featureType === 'switch') {\r\n          this.data.entitlement = 'OFF';\r\n        } else if (this.data.featureType === 'quantity') {\r\n          this.data.entitlement = 'ON';\r\n        }\r\n      });\r\n  }\r\n\r\n  closePopup() {\r\n    this.dialog.closeAll();\r\n  }\r\n\r\n  editFeature() {\r\n    this.router.navigate([\r\n      `/features/edit-feature/${this.data.featureId['featureId']}`,\r\n    ]);\r\n    this.dialog.closeAll();\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "entitlement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "featureId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "featureName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "featureType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 3,
            "duplicateName": "DialogData-3"
        },
        {
            "name": "DialogData",
            "id": "interface-DialogData-0456fbdc5dcc85c1f7ab300f4b9e376b11d7bdec85b9155c8d846c262192430a369a2e86bb0852722bfee1019073b48f051322c7d289924687ed824db4630eb7-4",
            "file": "src/app/shared/components/dialog-box/success-dialog/success-dialog.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Inject, Input } from '@angular/core';\r\nimport {\r\n  MatDialogRef,\r\n  MatDialog,\r\n  MAT_DIALOG_DATA,\r\n} from '@angular/material/dialog';\r\n\r\nexport interface DialogData {\r\n  module: string;\r\n  operation: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-success-dialog',\r\n  templateUrl: './success-dialog.component.html',\r\n  styleUrls: ['./success-dialog.component.scss'],\r\n})\r\nexport class SuccessDialogComponent {\r\n  @Input() operation: string;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<SuccessDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\r\n  ) {}\r\n}\r\n",
            "properties": [
                {
                    "name": "module",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "operation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 4,
            "duplicateName": "DialogData-4"
        },
        {
            "name": "DiscountElement",
            "id": "interface-DiscountElement-bdc75da5c4e4173faa05551b7c9da2fa80314d84e76516573caeb6af31fdc11fddec013becd54ef4f2346726c3f138684f1c3c94ef1e04a8aadd8c54d132337b",
            "file": "src/app/modules/coupons/components/view-coupons/view-coupons.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\nexport interface DiscountElement {\r\n  Discount : string;\r\n  Amount: any;\r\n}\r\nexport interface DurationElement {\r\n  Duration : string;\r\n  time: any;\r\n}\r\n\r\nexport interface ValidityElement {\r\n  Validity : string;\r\n  time: any;\r\n}\r\n\r\nconst ELEMENT_DATA: DiscountElement[] = [\r\n  {  Discount : 'Discount Type', Amount: 'Fixed Amount' },\r\n  { Discount : 'Applied on', Amount: 'Fixed Amount' },\r\n  {  Discount : 'Discount Type', Amount: 'Invoice Amount' },\r\n];\r\n\r\nconst Duration_DATA: DurationElement[] = [\r\n  {  Duration : 'Discount Type', time: 'Forever' },\r\n  { Duration : 'Applied on', time: 'All Plans' },\r\n  {  Duration : 'Discount Type', time: 'All Addons' },\r\n];\r\n\r\nconst Validity_DATA: ValidityElement[] = [\r\n  {  Validity : 'Valid Till', time: 'Forever' },\r\n  { Validity : 'Maximum Redemptions', time: '0 to unlimited' },\r\n];\r\n@Component({\r\n  selector: 'app-view-coupons',\r\n  templateUrl: './view-coupons.component.html',\r\n  styleUrls: ['./view-coupons.component.scss']\r\n})\r\nexport class ViewCouponsComponent {\r\n  displayedColumns: string[] = ['Discount', 'Amount'];\r\n  displayedColumns2: string[] = ['Duration','time'];\r\n  displayedColumns3: string[] = ['Validity','time'];\r\n  dataSource = ELEMENT_DATA;\r\n  dataDuration = Duration_DATA;\r\n  dataValidity = Validity_DATA;\r\n  clickedRows = new Set<DiscountElement>();\r\n}\r\n",
            "properties": [
                {
                    "name": "Amount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "Discount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "DurationElement",
            "id": "interface-DurationElement-bdc75da5c4e4173faa05551b7c9da2fa80314d84e76516573caeb6af31fdc11fddec013becd54ef4f2346726c3f138684f1c3c94ef1e04a8aadd8c54d132337b",
            "file": "src/app/modules/coupons/components/view-coupons/view-coupons.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\nexport interface DiscountElement {\r\n  Discount : string;\r\n  Amount: any;\r\n}\r\nexport interface DurationElement {\r\n  Duration : string;\r\n  time: any;\r\n}\r\n\r\nexport interface ValidityElement {\r\n  Validity : string;\r\n  time: any;\r\n}\r\n\r\nconst ELEMENT_DATA: DiscountElement[] = [\r\n  {  Discount : 'Discount Type', Amount: 'Fixed Amount' },\r\n  { Discount : 'Applied on', Amount: 'Fixed Amount' },\r\n  {  Discount : 'Discount Type', Amount: 'Invoice Amount' },\r\n];\r\n\r\nconst Duration_DATA: DurationElement[] = [\r\n  {  Duration : 'Discount Type', time: 'Forever' },\r\n  { Duration : 'Applied on', time: 'All Plans' },\r\n  {  Duration : 'Discount Type', time: 'All Addons' },\r\n];\r\n\r\nconst Validity_DATA: ValidityElement[] = [\r\n  {  Validity : 'Valid Till', time: 'Forever' },\r\n  { Validity : 'Maximum Redemptions', time: '0 to unlimited' },\r\n];\r\n@Component({\r\n  selector: 'app-view-coupons',\r\n  templateUrl: './view-coupons.component.html',\r\n  styleUrls: ['./view-coupons.component.scss']\r\n})\r\nexport class ViewCouponsComponent {\r\n  displayedColumns: string[] = ['Discount', 'Amount'];\r\n  displayedColumns2: string[] = ['Duration','time'];\r\n  displayedColumns3: string[] = ['Validity','time'];\r\n  dataSource = ELEMENT_DATA;\r\n  dataDuration = Duration_DATA;\r\n  dataValidity = Validity_DATA;\r\n  clickedRows = new Set<DiscountElement>();\r\n}\r\n",
            "properties": [
                {
                    "name": "Duration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "time",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "Feature",
            "id": "interface-Feature-909fa3dce09599287106c3f3da3f0937a6e5c6871a710630a9736728d8608dd49fd2a191015bdfda04f21b892c532494e6d23ba5a32be2bd656206fc8e6b3892",
            "file": "src/app/shared/constants/consants.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n}\r\nexport interface Data_Type {\r\n  product_ID: string;\r\n  title: string;\r\n  description: string;\r\n  features: string[];\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface selectOptions {\r\n  value: number;\r\n  title: string;\r\n}\r\nexport interface features {\r\n  feature_id: string;\r\n  product_name: string;\r\n  feature_name: string;\r\n  description: string;\r\n  feature_type: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\n\r\nexport interface coupon {\r\n  coupon_id: string;\r\n  coupon_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface loginCredientials {\r\n  csrf_token:string,\r\n  method: string,\r\n  password_identifier: string,\r\n  password: string\r\n}\r\nexport interface Product {\r\n  productId: string;\r\n  imageUrl: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface GetProduct {\r\n  productId: string;\r\n  imageUrl: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface plansFields {\r\n  plan_ID: string;\r\n  external_name: string;\r\n  internal_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Feature {\r\n  featureId: string;\r\n  productId: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n  unit: string;\r\n  levels: [];\r\n}\r\nexport interface FeatureList {\r\n  featureId: number;\r\n  name: string;\r\n  productName: string;\r\n  levels: [];\r\n  description: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  type: string;\r\n  status: string;\r\n}\r\nexport interface Customer {\r\n  id: string;\r\n  name: string;\r\n  companyName: string;\r\n  email: string,\r\n  workPhone: string,\r\n  website: string,\r\n  subscription: string\r\n}\r\nexport interface GetFeature {\r\n  featureId: string;\r\n  productID: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n}\r\n\r\nexport interface invoice {\r\n  id: string;\r\n  customer_info: string;\r\n  issued_on: string;\r\n  voided_on: string;\r\n  paid_on: string;\r\n  created_at: string;\r\n  status: string;\r\n  amount: string;\r\n}\r\n\r\nexport interface logs {\r\n  Timestamp: any;\r\n  Events: string;\r\n  Customer_Info: string;\r\n  Event_Source: string;\r\n}\r\nexport interface Plan {\r\n  planId: string;\r\n  internalName: string;\r\n  externalName: string;\r\n  type: string;\r\n  description: string;\r\n  status: string;\r\n}\r\n\r\nexport interface PlanList {\r\n  productVariantId: string;\r\n  name: string;\r\n  productID: string;\r\n  type: string;\r\n  features: [];\r\n  status: string;\r\n}\r\n\r\nexport interface ProductVariant {\r\n  productVariantId: string;\r\n  name: string,\r\n  productID: string;\r\n  type: string;\r\n  features: { featureID: string; value: string }[];\r\n  status: string;\r\n\r\n}\r\nexport const MENUITEMS = [\r\n  {\r\n    state: '/overview',\r\n    type: 'link',\r\n    name: 'Overview',\r\n    icon: 'space_dashboard',\r\n    category: 'Dashboard'\r\n  },\r\n  {\r\n    state: '/customers',\r\n    type: 'link',\r\n    name: 'Customer',\r\n    icon: 'account_box',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/subscription',\r\n    type: 'link',\r\n    name: 'Subscription',\r\n    icon: 'card_membership',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/products',\r\n    type: 'link',\r\n    name: 'Products',\r\n    icon: 'local_mall',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/features',\r\n    type: 'link',\r\n    name: 'Features',\r\n    icon: 'featured_play_list',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/plans',\r\n    type: 'link',\r\n    name: 'Plans',\r\n    icon: 'quick_reference_all',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/stepper',\r\n    type: 'link',\r\n    name: 'Add Ons',\r\n    icon: 'add_notes',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/coupons',\r\n    type: 'link',\r\n    name: 'Coupons',\r\n    icon: 'confirmation_number',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/payment/transactions',\r\n    type: 'link',\r\n    name: 'Transactions',\r\n    icon: 'compare_arrows',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/invoices',\r\n    type: 'link',\r\n    name: 'Invoices',\r\n    icon: 'receipt_long',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/logs',\r\n    type: 'link',\r\n    name: 'Logs',\r\n    icon: 'list_alt',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Menu_Headings = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Dashboard',\r\n    icon: 'settings',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Product Catalog ',\r\n    icon: 'logout',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Payment History ',\r\n    icon: 'logout',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Config_Menu = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Settings',\r\n    icon: 'settings',\r\n    category: 'Config',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'LogOut ',\r\n    icon: 'logout',\r\n    category: 'Confog',\r\n  },\r\n];\r\nexport const User_Options = [\r\n  {\r\n    path: '/user:id',\r\n    icon: 'account_circle',\r\n    name: 'My Account',\r\n    toggle: false,\r\n  },\r\n  { path: '/inbox', icon: 'inbox_outline', name: 'My Inbox', toggle: false },\r\n  { path: '', icon: 'clear_day', name: 'Dark Mode', toggle: true },\r\n  { path: '/help', icon: 'live_help', name: 'Help', toggle: false },\r\n];\r\n// Product listing\r\nexport const User_Data = [\r\n  {\r\n    id: 'random_id_1234',\r\n    product_ID: '#O365ProPlusRetail',\r\n    title: 'Microsoft Teams',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Host Online Calls', 'Unlimited Internet', 'Conference Calls'],\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_555',\r\n    product_ID: '#Or65SuperSupreme',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: [\r\n      'Unlimited Repos',\r\n      'Upto 50 Team Members',\r\n      'Host Online Calls',\r\n      'Unlimited Internet',\r\n      'Conference Calls',\r\n    ],\r\n    created_at: 'June 11th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_6969',\r\n    product_ID: '#Ow65Basic',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Conference Calls'],\r\n    created_at: 'June 18th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Features_Data = [\r\n  {\r\n    id: 'feature_id_459',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'feature_id_4591',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\n\r\nexport const Coupon_Data = [\r\n  {\r\n    id: 'coupon_id_459',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'coupon_id_460',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Plans_Data = [\r\n  {\r\n    id: 'ychvjbknk1',\r\n    plan_ID: 'As-012P',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.3',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: '1i23op1j2eo',\r\n    plan_ID: 'As-099G',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.2',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Notifications_Data = [\r\n  // {\r\n  //   user: 'John Smith' ,\r\n  //   message: 'subscriptione_created',\r\n  //   created_at: 'Aug 7th, 2023'\r\n  // }\r\n];\r\nexport const TransactionList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const InvoiceList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-003',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Payment Due',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const CustomerList = [\r\n  {\r\n    id: '#S0-001',\r\n    name: 'Alex C',\r\n    companyName: 'Greenplus Enterprises',\r\n    email: 'alex@example.com',\r\n    workPhone: '9876778865',\r\n    website: 'www.greenplus.com',\r\n    subscription: '2 subscripton (Available)',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    name: 'Zen D',\r\n    companyName: 'Zencorporation',\r\n    email: 'zen@example.com',\r\n    workPhone: '839103113',\r\n    website: 'www.zencorporation.com',\r\n    subscription: '1 subscripton (Available)',\r\n  },\r\n];\r\nexport const Logs_Data = [\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Subscription has been created for the Plan.',\r\n    Customer_Info: 'Greenplus Enterprises',\r\n    Event_Source: 'Via Portal',\r\n  },\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Active  subscription created for demo',\r\n    Customer_Info: 'Zencorporation',\r\n    Event_Source: 'Via Interface',\r\n  },\r\n];\r\nexport const feature_types = [\r\n  { value: 1, title: 'switch' },\r\n  { value: 2, title: 'range' },\r\n  { value: 3, title: 'quantity' },\r\n  { value: 4, title: 'custom' },\r\n];\r\nexport const pricingModels = [\r\n  { value: 1, title: 'Flat fee' },\r\n  { value: 2, title: 'Per unit' },\r\n  { value: 3, title: 'Tiered' },\r\n  { value: 4, title: 'Volume' },\r\n  { value: 5, title: 'Stairstep' },\r\n];\r\nexport const periodUnit = ['Daily', 'Weekly', 'Monthly', 'Yearly'];\r\nexport const StaticRoutes = {\r\n  features: ['features'],\r\n  products: ['products'],\r\n};\r\nexport const plan_add_empty_data = [\r\n  {\r\n    titleIcon:\r\n      '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n    iconAlt: 'invoice-outline-icon',\r\n    title: 'Product Details',\r\n    subtitle:\r\n      'Please click the “Add” button below to add a new product. Once you clicked the button, you will be prompted to enter the name of product, description and additional details.',\r\n    btnTitle: 'Add product',\r\n    btnPath: '/#',\r\n  },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Pricing Plans',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new pricing plans. Once you clicked the button, you will be prompted to enter pricing and additional details.',\r\n  //   btnTitle: 'Add Pricing',\r\n  //   btnPath: '/#',\r\n  // },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Add-ons Details',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new add-on. Once you have click button, you will be prompted to select add-on.',\r\n  //   btnTitle: 'Add Add-on',\r\n  //   btnPath: '/#',\r\n  // },\r\n];\r\nexport const noProducts = [\r\n  {\r\n    heading: 'Products',\r\n    imgPath: '../../../../assets/images/empty-illustrations.png',\r\n    alt: 'no proudcts available',\r\n    subtext: 'Looking for Product',\r\n    text: \"Seems like you haven't added any Product. Start adding products by click on “Create Product” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Product',\r\n    path: '/products/create',\r\n  },\r\n];\r\nexport const noFeatures = [\r\n  {\r\n    heading: 'Features',\r\n    imgPath: '../../../../assets/images/empty-illustrations-2.png',\r\n    alt: 'no features available',\r\n    subtext: 'Looking for Features',\r\n    text: \"Seems like you haven't added any feature. Start adding feature by click on “Create Feature” button \",\r\n    showButton: true,\r\n    buttonTxt: 'Create Feature',\r\n    path: '/features/create',\r\n  },\r\n];\r\nexport const noPlans = [\r\n  {\r\n    heading: 'Plans',\r\n    imgPath: '../../../../assets/images/empty-illustrations-4.png',\r\n    alt: 'no Plans available',\r\n    subtext: 'Looking for Plans',\r\n    text: \"Seems like you haven't added any Plan. Start adding plan by click on “Create Plan” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Plan',\r\n    path: '/plans/create',\r\n  },\r\n];\r\nexport const noPageFound = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/404-page.png',\r\n    alt: 'No Page Found',\r\n    subtext: \"Oops! Why you're here?\",\r\n    text: \"We are very sorry for inconvenience. It looks like you're try to access a page that either has been deleted or never existed.\",\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noCustomers = [\r\n  {\r\n    heading: 'Customers',\r\n    imgPath: '../../../../assets/images/empty-illustrations-6.png',\r\n    alt: 'no customers',\r\n    subtext: 'No customer yet',\r\n    text: 'Customers No customer yet After your first customer you will be able to view it here.',\r\n    showButton: false,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const nocoupons = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noTransactions = [\r\n  {\r\n    heading: 'Transaction',\r\n    imgPath: '../../../../assets/images/empty-illustrations-5.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'NO transaction yet',\r\n    text: 'After your first transaction you will be able to view it here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const noInvoice = [\r\n  {\r\n    heading: 'Invoice',\r\n    imgPath: '../../../../assets/images/invoice-empty.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'No invoice yet',\r\n    text: 'After your first transaction you will be able to view invoice here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const noLogs = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const Stepper = [\r\n  {\r\n    id: 1,\r\n    title: 'Step 1',\r\n    caption: 'Plan Information',\r\n    isVisible: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Step 2',\r\n    caption: 'Add Plan Pricing',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Step 3',\r\n    caption: 'Product Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Step 4',\r\n    caption: 'Add-on Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Step 5',\r\n    caption: 'Charges',\r\n    isVisible: false,\r\n  },\r\n];\r\nexport const listFilterOptions = [\r\n  'Yesterday',\r\n  'Last 7 days',\r\n  'Last Week',\r\n  'Last 30 days',\r\n  'Last 4 weeks',\r\n  'Last 12 weeks',\r\n  'Current month',\r\n  'Last calendar month',\r\n];\r\n\r\nexport interface ProductVariants {\r\n  productVariantId: string;\r\n  name: string;\r\n  productID: string;\r\n  type: string;\r\n  features: { featureID: string; value: string }[];\r\n  status: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "createdOn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 70
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 73
                },
                {
                    "name": "featureId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "levels",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 77
                },
                {
                    "name": "modifiedOn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 71
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 72
                },
                {
                    "name": "productId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 69
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 75
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 74
                },
                {
                    "name": "unit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 76
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "FeatureList",
            "id": "interface-FeatureList-909fa3dce09599287106c3f3da3f0937a6e5c6871a710630a9736728d8608dd49fd2a191015bdfda04f21b892c532494e6d23ba5a32be2bd656206fc8e6b3892",
            "file": "src/app/shared/constants/consants.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n}\r\nexport interface Data_Type {\r\n  product_ID: string;\r\n  title: string;\r\n  description: string;\r\n  features: string[];\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface selectOptions {\r\n  value: number;\r\n  title: string;\r\n}\r\nexport interface features {\r\n  feature_id: string;\r\n  product_name: string;\r\n  feature_name: string;\r\n  description: string;\r\n  feature_type: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\n\r\nexport interface coupon {\r\n  coupon_id: string;\r\n  coupon_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface loginCredientials {\r\n  csrf_token:string,\r\n  method: string,\r\n  password_identifier: string,\r\n  password: string\r\n}\r\nexport interface Product {\r\n  productId: string;\r\n  imageUrl: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface GetProduct {\r\n  productId: string;\r\n  imageUrl: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface plansFields {\r\n  plan_ID: string;\r\n  external_name: string;\r\n  internal_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Feature {\r\n  featureId: string;\r\n  productId: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n  unit: string;\r\n  levels: [];\r\n}\r\nexport interface FeatureList {\r\n  featureId: number;\r\n  name: string;\r\n  productName: string;\r\n  levels: [];\r\n  description: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  type: string;\r\n  status: string;\r\n}\r\nexport interface Customer {\r\n  id: string;\r\n  name: string;\r\n  companyName: string;\r\n  email: string,\r\n  workPhone: string,\r\n  website: string,\r\n  subscription: string\r\n}\r\nexport interface GetFeature {\r\n  featureId: string;\r\n  productID: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n}\r\n\r\nexport interface invoice {\r\n  id: string;\r\n  customer_info: string;\r\n  issued_on: string;\r\n  voided_on: string;\r\n  paid_on: string;\r\n  created_at: string;\r\n  status: string;\r\n  amount: string;\r\n}\r\n\r\nexport interface logs {\r\n  Timestamp: any;\r\n  Events: string;\r\n  Customer_Info: string;\r\n  Event_Source: string;\r\n}\r\nexport interface Plan {\r\n  planId: string;\r\n  internalName: string;\r\n  externalName: string;\r\n  type: string;\r\n  description: string;\r\n  status: string;\r\n}\r\n\r\nexport interface PlanList {\r\n  productVariantId: string;\r\n  name: string;\r\n  productID: string;\r\n  type: string;\r\n  features: [];\r\n  status: string;\r\n}\r\n\r\nexport interface ProductVariant {\r\n  productVariantId: string;\r\n  name: string,\r\n  productID: string;\r\n  type: string;\r\n  features: { featureID: string; value: string }[];\r\n  status: string;\r\n\r\n}\r\nexport const MENUITEMS = [\r\n  {\r\n    state: '/overview',\r\n    type: 'link',\r\n    name: 'Overview',\r\n    icon: 'space_dashboard',\r\n    category: 'Dashboard'\r\n  },\r\n  {\r\n    state: '/customers',\r\n    type: 'link',\r\n    name: 'Customer',\r\n    icon: 'account_box',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/subscription',\r\n    type: 'link',\r\n    name: 'Subscription',\r\n    icon: 'card_membership',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/products',\r\n    type: 'link',\r\n    name: 'Products',\r\n    icon: 'local_mall',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/features',\r\n    type: 'link',\r\n    name: 'Features',\r\n    icon: 'featured_play_list',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/plans',\r\n    type: 'link',\r\n    name: 'Plans',\r\n    icon: 'quick_reference_all',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/stepper',\r\n    type: 'link',\r\n    name: 'Add Ons',\r\n    icon: 'add_notes',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/coupons',\r\n    type: 'link',\r\n    name: 'Coupons',\r\n    icon: 'confirmation_number',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/payment/transactions',\r\n    type: 'link',\r\n    name: 'Transactions',\r\n    icon: 'compare_arrows',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/invoices',\r\n    type: 'link',\r\n    name: 'Invoices',\r\n    icon: 'receipt_long',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/logs',\r\n    type: 'link',\r\n    name: 'Logs',\r\n    icon: 'list_alt',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Menu_Headings = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Dashboard',\r\n    icon: 'settings',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Product Catalog ',\r\n    icon: 'logout',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Payment History ',\r\n    icon: 'logout',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Config_Menu = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Settings',\r\n    icon: 'settings',\r\n    category: 'Config',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'LogOut ',\r\n    icon: 'logout',\r\n    category: 'Confog',\r\n  },\r\n];\r\nexport const User_Options = [\r\n  {\r\n    path: '/user:id',\r\n    icon: 'account_circle',\r\n    name: 'My Account',\r\n    toggle: false,\r\n  },\r\n  { path: '/inbox', icon: 'inbox_outline', name: 'My Inbox', toggle: false },\r\n  { path: '', icon: 'clear_day', name: 'Dark Mode', toggle: true },\r\n  { path: '/help', icon: 'live_help', name: 'Help', toggle: false },\r\n];\r\n// Product listing\r\nexport const User_Data = [\r\n  {\r\n    id: 'random_id_1234',\r\n    product_ID: '#O365ProPlusRetail',\r\n    title: 'Microsoft Teams',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Host Online Calls', 'Unlimited Internet', 'Conference Calls'],\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_555',\r\n    product_ID: '#Or65SuperSupreme',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: [\r\n      'Unlimited Repos',\r\n      'Upto 50 Team Members',\r\n      'Host Online Calls',\r\n      'Unlimited Internet',\r\n      'Conference Calls',\r\n    ],\r\n    created_at: 'June 11th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_6969',\r\n    product_ID: '#Ow65Basic',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Conference Calls'],\r\n    created_at: 'June 18th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Features_Data = [\r\n  {\r\n    id: 'feature_id_459',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'feature_id_4591',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\n\r\nexport const Coupon_Data = [\r\n  {\r\n    id: 'coupon_id_459',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'coupon_id_460',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Plans_Data = [\r\n  {\r\n    id: 'ychvjbknk1',\r\n    plan_ID: 'As-012P',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.3',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: '1i23op1j2eo',\r\n    plan_ID: 'As-099G',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.2',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Notifications_Data = [\r\n  // {\r\n  //   user: 'John Smith' ,\r\n  //   message: 'subscriptione_created',\r\n  //   created_at: 'Aug 7th, 2023'\r\n  // }\r\n];\r\nexport const TransactionList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const InvoiceList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-003',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Payment Due',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const CustomerList = [\r\n  {\r\n    id: '#S0-001',\r\n    name: 'Alex C',\r\n    companyName: 'Greenplus Enterprises',\r\n    email: 'alex@example.com',\r\n    workPhone: '9876778865',\r\n    website: 'www.greenplus.com',\r\n    subscription: '2 subscripton (Available)',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    name: 'Zen D',\r\n    companyName: 'Zencorporation',\r\n    email: 'zen@example.com',\r\n    workPhone: '839103113',\r\n    website: 'www.zencorporation.com',\r\n    subscription: '1 subscripton (Available)',\r\n  },\r\n];\r\nexport const Logs_Data = [\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Subscription has been created for the Plan.',\r\n    Customer_Info: 'Greenplus Enterprises',\r\n    Event_Source: 'Via Portal',\r\n  },\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Active  subscription created for demo',\r\n    Customer_Info: 'Zencorporation',\r\n    Event_Source: 'Via Interface',\r\n  },\r\n];\r\nexport const feature_types = [\r\n  { value: 1, title: 'switch' },\r\n  { value: 2, title: 'range' },\r\n  { value: 3, title: 'quantity' },\r\n  { value: 4, title: 'custom' },\r\n];\r\nexport const pricingModels = [\r\n  { value: 1, title: 'Flat fee' },\r\n  { value: 2, title: 'Per unit' },\r\n  { value: 3, title: 'Tiered' },\r\n  { value: 4, title: 'Volume' },\r\n  { value: 5, title: 'Stairstep' },\r\n];\r\nexport const periodUnit = ['Daily', 'Weekly', 'Monthly', 'Yearly'];\r\nexport const StaticRoutes = {\r\n  features: ['features'],\r\n  products: ['products'],\r\n};\r\nexport const plan_add_empty_data = [\r\n  {\r\n    titleIcon:\r\n      '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n    iconAlt: 'invoice-outline-icon',\r\n    title: 'Product Details',\r\n    subtitle:\r\n      'Please click the “Add” button below to add a new product. Once you clicked the button, you will be prompted to enter the name of product, description and additional details.',\r\n    btnTitle: 'Add product',\r\n    btnPath: '/#',\r\n  },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Pricing Plans',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new pricing plans. Once you clicked the button, you will be prompted to enter pricing and additional details.',\r\n  //   btnTitle: 'Add Pricing',\r\n  //   btnPath: '/#',\r\n  // },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Add-ons Details',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new add-on. Once you have click button, you will be prompted to select add-on.',\r\n  //   btnTitle: 'Add Add-on',\r\n  //   btnPath: '/#',\r\n  // },\r\n];\r\nexport const noProducts = [\r\n  {\r\n    heading: 'Products',\r\n    imgPath: '../../../../assets/images/empty-illustrations.png',\r\n    alt: 'no proudcts available',\r\n    subtext: 'Looking for Product',\r\n    text: \"Seems like you haven't added any Product. Start adding products by click on “Create Product” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Product',\r\n    path: '/products/create',\r\n  },\r\n];\r\nexport const noFeatures = [\r\n  {\r\n    heading: 'Features',\r\n    imgPath: '../../../../assets/images/empty-illustrations-2.png',\r\n    alt: 'no features available',\r\n    subtext: 'Looking for Features',\r\n    text: \"Seems like you haven't added any feature. Start adding feature by click on “Create Feature” button \",\r\n    showButton: true,\r\n    buttonTxt: 'Create Feature',\r\n    path: '/features/create',\r\n  },\r\n];\r\nexport const noPlans = [\r\n  {\r\n    heading: 'Plans',\r\n    imgPath: '../../../../assets/images/empty-illustrations-4.png',\r\n    alt: 'no Plans available',\r\n    subtext: 'Looking for Plans',\r\n    text: \"Seems like you haven't added any Plan. Start adding plan by click on “Create Plan” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Plan',\r\n    path: '/plans/create',\r\n  },\r\n];\r\nexport const noPageFound = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/404-page.png',\r\n    alt: 'No Page Found',\r\n    subtext: \"Oops! Why you're here?\",\r\n    text: \"We are very sorry for inconvenience. It looks like you're try to access a page that either has been deleted or never existed.\",\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noCustomers = [\r\n  {\r\n    heading: 'Customers',\r\n    imgPath: '../../../../assets/images/empty-illustrations-6.png',\r\n    alt: 'no customers',\r\n    subtext: 'No customer yet',\r\n    text: 'Customers No customer yet After your first customer you will be able to view it here.',\r\n    showButton: false,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const nocoupons = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noTransactions = [\r\n  {\r\n    heading: 'Transaction',\r\n    imgPath: '../../../../assets/images/empty-illustrations-5.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'NO transaction yet',\r\n    text: 'After your first transaction you will be able to view it here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const noInvoice = [\r\n  {\r\n    heading: 'Invoice',\r\n    imgPath: '../../../../assets/images/invoice-empty.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'No invoice yet',\r\n    text: 'After your first transaction you will be able to view invoice here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const noLogs = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const Stepper = [\r\n  {\r\n    id: 1,\r\n    title: 'Step 1',\r\n    caption: 'Plan Information',\r\n    isVisible: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Step 2',\r\n    caption: 'Add Plan Pricing',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Step 3',\r\n    caption: 'Product Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Step 4',\r\n    caption: 'Add-on Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Step 5',\r\n    caption: 'Charges',\r\n    isVisible: false,\r\n  },\r\n];\r\nexport const listFilterOptions = [\r\n  'Yesterday',\r\n  'Last 7 days',\r\n  'Last Week',\r\n  'Last 30 days',\r\n  'Last 4 weeks',\r\n  'Last 12 weeks',\r\n  'Current month',\r\n  'Last calendar month',\r\n];\r\n\r\nexport interface ProductVariants {\r\n  productVariantId: string;\r\n  name: string;\r\n  productID: string;\r\n  type: string;\r\n  features: { featureID: string; value: string }[];\r\n  status: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "createdOn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 85
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 84
                },
                {
                    "name": "featureId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 80
                },
                {
                    "name": "levels",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 83
                },
                {
                    "name": "modifiedOn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 86
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 81
                },
                {
                    "name": "productName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 82
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 88
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 87
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "features",
            "id": "interface-features-909fa3dce09599287106c3f3da3f0937a6e5c6871a710630a9736728d8608dd49fd2a191015bdfda04f21b892c532494e6d23ba5a32be2bd656206fc8e6b3892",
            "file": "src/app/shared/constants/consants.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n}\r\nexport interface Data_Type {\r\n  product_ID: string;\r\n  title: string;\r\n  description: string;\r\n  features: string[];\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface selectOptions {\r\n  value: number;\r\n  title: string;\r\n}\r\nexport interface features {\r\n  feature_id: string;\r\n  product_name: string;\r\n  feature_name: string;\r\n  description: string;\r\n  feature_type: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\n\r\nexport interface coupon {\r\n  coupon_id: string;\r\n  coupon_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface loginCredientials {\r\n  csrf_token:string,\r\n  method: string,\r\n  password_identifier: string,\r\n  password: string\r\n}\r\nexport interface Product {\r\n  productId: string;\r\n  imageUrl: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface GetProduct {\r\n  productId: string;\r\n  imageUrl: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface plansFields {\r\n  plan_ID: string;\r\n  external_name: string;\r\n  internal_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Feature {\r\n  featureId: string;\r\n  productId: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n  unit: string;\r\n  levels: [];\r\n}\r\nexport interface FeatureList {\r\n  featureId: number;\r\n  name: string;\r\n  productName: string;\r\n  levels: [];\r\n  description: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  type: string;\r\n  status: string;\r\n}\r\nexport interface Customer {\r\n  id: string;\r\n  name: string;\r\n  companyName: string;\r\n  email: string,\r\n  workPhone: string,\r\n  website: string,\r\n  subscription: string\r\n}\r\nexport interface GetFeature {\r\n  featureId: string;\r\n  productID: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n}\r\n\r\nexport interface invoice {\r\n  id: string;\r\n  customer_info: string;\r\n  issued_on: string;\r\n  voided_on: string;\r\n  paid_on: string;\r\n  created_at: string;\r\n  status: string;\r\n  amount: string;\r\n}\r\n\r\nexport interface logs {\r\n  Timestamp: any;\r\n  Events: string;\r\n  Customer_Info: string;\r\n  Event_Source: string;\r\n}\r\nexport interface Plan {\r\n  planId: string;\r\n  internalName: string;\r\n  externalName: string;\r\n  type: string;\r\n  description: string;\r\n  status: string;\r\n}\r\n\r\nexport interface PlanList {\r\n  productVariantId: string;\r\n  name: string;\r\n  productID: string;\r\n  type: string;\r\n  features: [];\r\n  status: string;\r\n}\r\n\r\nexport interface ProductVariant {\r\n  productVariantId: string;\r\n  name: string,\r\n  productID: string;\r\n  type: string;\r\n  features: { featureID: string; value: string }[];\r\n  status: string;\r\n\r\n}\r\nexport const MENUITEMS = [\r\n  {\r\n    state: '/overview',\r\n    type: 'link',\r\n    name: 'Overview',\r\n    icon: 'space_dashboard',\r\n    category: 'Dashboard'\r\n  },\r\n  {\r\n    state: '/customers',\r\n    type: 'link',\r\n    name: 'Customer',\r\n    icon: 'account_box',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/subscription',\r\n    type: 'link',\r\n    name: 'Subscription',\r\n    icon: 'card_membership',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/products',\r\n    type: 'link',\r\n    name: 'Products',\r\n    icon: 'local_mall',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/features',\r\n    type: 'link',\r\n    name: 'Features',\r\n    icon: 'featured_play_list',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/plans',\r\n    type: 'link',\r\n    name: 'Plans',\r\n    icon: 'quick_reference_all',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/stepper',\r\n    type: 'link',\r\n    name: 'Add Ons',\r\n    icon: 'add_notes',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/coupons',\r\n    type: 'link',\r\n    name: 'Coupons',\r\n    icon: 'confirmation_number',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/payment/transactions',\r\n    type: 'link',\r\n    name: 'Transactions',\r\n    icon: 'compare_arrows',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/invoices',\r\n    type: 'link',\r\n    name: 'Invoices',\r\n    icon: 'receipt_long',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/logs',\r\n    type: 'link',\r\n    name: 'Logs',\r\n    icon: 'list_alt',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Menu_Headings = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Dashboard',\r\n    icon: 'settings',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Product Catalog ',\r\n    icon: 'logout',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Payment History ',\r\n    icon: 'logout',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Config_Menu = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Settings',\r\n    icon: 'settings',\r\n    category: 'Config',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'LogOut ',\r\n    icon: 'logout',\r\n    category: 'Confog',\r\n  },\r\n];\r\nexport const User_Options = [\r\n  {\r\n    path: '/user:id',\r\n    icon: 'account_circle',\r\n    name: 'My Account',\r\n    toggle: false,\r\n  },\r\n  { path: '/inbox', icon: 'inbox_outline', name: 'My Inbox', toggle: false },\r\n  { path: '', icon: 'clear_day', name: 'Dark Mode', toggle: true },\r\n  { path: '/help', icon: 'live_help', name: 'Help', toggle: false },\r\n];\r\n// Product listing\r\nexport const User_Data = [\r\n  {\r\n    id: 'random_id_1234',\r\n    product_ID: '#O365ProPlusRetail',\r\n    title: 'Microsoft Teams',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Host Online Calls', 'Unlimited Internet', 'Conference Calls'],\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_555',\r\n    product_ID: '#Or65SuperSupreme',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: [\r\n      'Unlimited Repos',\r\n      'Upto 50 Team Members',\r\n      'Host Online Calls',\r\n      'Unlimited Internet',\r\n      'Conference Calls',\r\n    ],\r\n    created_at: 'June 11th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_6969',\r\n    product_ID: '#Ow65Basic',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Conference Calls'],\r\n    created_at: 'June 18th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Features_Data = [\r\n  {\r\n    id: 'feature_id_459',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'feature_id_4591',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\n\r\nexport const Coupon_Data = [\r\n  {\r\n    id: 'coupon_id_459',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'coupon_id_460',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Plans_Data = [\r\n  {\r\n    id: 'ychvjbknk1',\r\n    plan_ID: 'As-012P',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.3',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: '1i23op1j2eo',\r\n    plan_ID: 'As-099G',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.2',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Notifications_Data = [\r\n  // {\r\n  //   user: 'John Smith' ,\r\n  //   message: 'subscriptione_created',\r\n  //   created_at: 'Aug 7th, 2023'\r\n  // }\r\n];\r\nexport const TransactionList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const InvoiceList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-003',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Payment Due',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const CustomerList = [\r\n  {\r\n    id: '#S0-001',\r\n    name: 'Alex C',\r\n    companyName: 'Greenplus Enterprises',\r\n    email: 'alex@example.com',\r\n    workPhone: '9876778865',\r\n    website: 'www.greenplus.com',\r\n    subscription: '2 subscripton (Available)',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    name: 'Zen D',\r\n    companyName: 'Zencorporation',\r\n    email: 'zen@example.com',\r\n    workPhone: '839103113',\r\n    website: 'www.zencorporation.com',\r\n    subscription: '1 subscripton (Available)',\r\n  },\r\n];\r\nexport const Logs_Data = [\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Subscription has been created for the Plan.',\r\n    Customer_Info: 'Greenplus Enterprises',\r\n    Event_Source: 'Via Portal',\r\n  },\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Active  subscription created for demo',\r\n    Customer_Info: 'Zencorporation',\r\n    Event_Source: 'Via Interface',\r\n  },\r\n];\r\nexport const feature_types = [\r\n  { value: 1, title: 'switch' },\r\n  { value: 2, title: 'range' },\r\n  { value: 3, title: 'quantity' },\r\n  { value: 4, title: 'custom' },\r\n];\r\nexport const pricingModels = [\r\n  { value: 1, title: 'Flat fee' },\r\n  { value: 2, title: 'Per unit' },\r\n  { value: 3, title: 'Tiered' },\r\n  { value: 4, title: 'Volume' },\r\n  { value: 5, title: 'Stairstep' },\r\n];\r\nexport const periodUnit = ['Daily', 'Weekly', 'Monthly', 'Yearly'];\r\nexport const StaticRoutes = {\r\n  features: ['features'],\r\n  products: ['products'],\r\n};\r\nexport const plan_add_empty_data = [\r\n  {\r\n    titleIcon:\r\n      '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n    iconAlt: 'invoice-outline-icon',\r\n    title: 'Product Details',\r\n    subtitle:\r\n      'Please click the “Add” button below to add a new product. Once you clicked the button, you will be prompted to enter the name of product, description and additional details.',\r\n    btnTitle: 'Add product',\r\n    btnPath: '/#',\r\n  },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Pricing Plans',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new pricing plans. Once you clicked the button, you will be prompted to enter pricing and additional details.',\r\n  //   btnTitle: 'Add Pricing',\r\n  //   btnPath: '/#',\r\n  // },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Add-ons Details',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new add-on. Once you have click button, you will be prompted to select add-on.',\r\n  //   btnTitle: 'Add Add-on',\r\n  //   btnPath: '/#',\r\n  // },\r\n];\r\nexport const noProducts = [\r\n  {\r\n    heading: 'Products',\r\n    imgPath: '../../../../assets/images/empty-illustrations.png',\r\n    alt: 'no proudcts available',\r\n    subtext: 'Looking for Product',\r\n    text: \"Seems like you haven't added any Product. Start adding products by click on “Create Product” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Product',\r\n    path: '/products/create',\r\n  },\r\n];\r\nexport const noFeatures = [\r\n  {\r\n    heading: 'Features',\r\n    imgPath: '../../../../assets/images/empty-illustrations-2.png',\r\n    alt: 'no features available',\r\n    subtext: 'Looking for Features',\r\n    text: \"Seems like you haven't added any feature. Start adding feature by click on “Create Feature” button \",\r\n    showButton: true,\r\n    buttonTxt: 'Create Feature',\r\n    path: '/features/create',\r\n  },\r\n];\r\nexport const noPlans = [\r\n  {\r\n    heading: 'Plans',\r\n    imgPath: '../../../../assets/images/empty-illustrations-4.png',\r\n    alt: 'no Plans available',\r\n    subtext: 'Looking for Plans',\r\n    text: \"Seems like you haven't added any Plan. Start adding plan by click on “Create Plan” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Plan',\r\n    path: '/plans/create',\r\n  },\r\n];\r\nexport const noPageFound = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/404-page.png',\r\n    alt: 'No Page Found',\r\n    subtext: \"Oops! Why you're here?\",\r\n    text: \"We are very sorry for inconvenience. It looks like you're try to access a page that either has been deleted or never existed.\",\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noCustomers = [\r\n  {\r\n    heading: 'Customers',\r\n    imgPath: '../../../../assets/images/empty-illustrations-6.png',\r\n    alt: 'no customers',\r\n    subtext: 'No customer yet',\r\n    text: 'Customers No customer yet After your first customer you will be able to view it here.',\r\n    showButton: false,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const nocoupons = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noTransactions = [\r\n  {\r\n    heading: 'Transaction',\r\n    imgPath: '../../../../assets/images/empty-illustrations-5.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'NO transaction yet',\r\n    text: 'After your first transaction you will be able to view it here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const noInvoice = [\r\n  {\r\n    heading: 'Invoice',\r\n    imgPath: '../../../../assets/images/invoice-empty.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'No invoice yet',\r\n    text: 'After your first transaction you will be able to view invoice here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const noLogs = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const Stepper = [\r\n  {\r\n    id: 1,\r\n    title: 'Step 1',\r\n    caption: 'Plan Information',\r\n    isVisible: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Step 2',\r\n    caption: 'Add Plan Pricing',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Step 3',\r\n    caption: 'Product Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Step 4',\r\n    caption: 'Add-on Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Step 5',\r\n    caption: 'Charges',\r\n    isVisible: false,\r\n  },\r\n];\r\nexport const listFilterOptions = [\r\n  'Yesterday',\r\n  'Last 7 days',\r\n  'Last Week',\r\n  'Last 30 days',\r\n  'Last 4 weeks',\r\n  'Last 12 weeks',\r\n  'Current month',\r\n  'Last calendar month',\r\n];\r\n\r\nexport interface ProductVariants {\r\n  productVariantId: string;\r\n  name: string;\r\n  productID: string;\r\n  type: string;\r\n  features: { featureID: string; value: string }[];\r\n  status: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "created_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "feature_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "feature_name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "feature_type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "product_name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "GetFeature",
            "id": "interface-GetFeature-909fa3dce09599287106c3f3da3f0937a6e5c6871a710630a9736728d8608dd49fd2a191015bdfda04f21b892c532494e6d23ba5a32be2bd656206fc8e6b3892",
            "file": "src/app/shared/constants/consants.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n}\r\nexport interface Data_Type {\r\n  product_ID: string;\r\n  title: string;\r\n  description: string;\r\n  features: string[];\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface selectOptions {\r\n  value: number;\r\n  title: string;\r\n}\r\nexport interface features {\r\n  feature_id: string;\r\n  product_name: string;\r\n  feature_name: string;\r\n  description: string;\r\n  feature_type: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\n\r\nexport interface coupon {\r\n  coupon_id: string;\r\n  coupon_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface loginCredientials {\r\n  csrf_token:string,\r\n  method: string,\r\n  password_identifier: string,\r\n  password: string\r\n}\r\nexport interface Product {\r\n  productId: string;\r\n  imageUrl: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface GetProduct {\r\n  productId: string;\r\n  imageUrl: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface plansFields {\r\n  plan_ID: string;\r\n  external_name: string;\r\n  internal_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Feature {\r\n  featureId: string;\r\n  productId: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n  unit: string;\r\n  levels: [];\r\n}\r\nexport interface FeatureList {\r\n  featureId: number;\r\n  name: string;\r\n  productName: string;\r\n  levels: [];\r\n  description: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  type: string;\r\n  status: string;\r\n}\r\nexport interface Customer {\r\n  id: string;\r\n  name: string;\r\n  companyName: string;\r\n  email: string,\r\n  workPhone: string,\r\n  website: string,\r\n  subscription: string\r\n}\r\nexport interface GetFeature {\r\n  featureId: string;\r\n  productID: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n}\r\n\r\nexport interface invoice {\r\n  id: string;\r\n  customer_info: string;\r\n  issued_on: string;\r\n  voided_on: string;\r\n  paid_on: string;\r\n  created_at: string;\r\n  status: string;\r\n  amount: string;\r\n}\r\n\r\nexport interface logs {\r\n  Timestamp: any;\r\n  Events: string;\r\n  Customer_Info: string;\r\n  Event_Source: string;\r\n}\r\nexport interface Plan {\r\n  planId: string;\r\n  internalName: string;\r\n  externalName: string;\r\n  type: string;\r\n  description: string;\r\n  status: string;\r\n}\r\n\r\nexport interface PlanList {\r\n  productVariantId: string;\r\n  name: string;\r\n  productID: string;\r\n  type: string;\r\n  features: [];\r\n  status: string;\r\n}\r\n\r\nexport interface ProductVariant {\r\n  productVariantId: string;\r\n  name: string,\r\n  productID: string;\r\n  type: string;\r\n  features: { featureID: string; value: string }[];\r\n  status: string;\r\n\r\n}\r\nexport const MENUITEMS = [\r\n  {\r\n    state: '/overview',\r\n    type: 'link',\r\n    name: 'Overview',\r\n    icon: 'space_dashboard',\r\n    category: 'Dashboard'\r\n  },\r\n  {\r\n    state: '/customers',\r\n    type: 'link',\r\n    name: 'Customer',\r\n    icon: 'account_box',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/subscription',\r\n    type: 'link',\r\n    name: 'Subscription',\r\n    icon: 'card_membership',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/products',\r\n    type: 'link',\r\n    name: 'Products',\r\n    icon: 'local_mall',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/features',\r\n    type: 'link',\r\n    name: 'Features',\r\n    icon: 'featured_play_list',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/plans',\r\n    type: 'link',\r\n    name: 'Plans',\r\n    icon: 'quick_reference_all',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/stepper',\r\n    type: 'link',\r\n    name: 'Add Ons',\r\n    icon: 'add_notes',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/coupons',\r\n    type: 'link',\r\n    name: 'Coupons',\r\n    icon: 'confirmation_number',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/payment/transactions',\r\n    type: 'link',\r\n    name: 'Transactions',\r\n    icon: 'compare_arrows',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/invoices',\r\n    type: 'link',\r\n    name: 'Invoices',\r\n    icon: 'receipt_long',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/logs',\r\n    type: 'link',\r\n    name: 'Logs',\r\n    icon: 'list_alt',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Menu_Headings = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Dashboard',\r\n    icon: 'settings',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Product Catalog ',\r\n    icon: 'logout',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Payment History ',\r\n    icon: 'logout',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Config_Menu = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Settings',\r\n    icon: 'settings',\r\n    category: 'Config',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'LogOut ',\r\n    icon: 'logout',\r\n    category: 'Confog',\r\n  },\r\n];\r\nexport const User_Options = [\r\n  {\r\n    path: '/user:id',\r\n    icon: 'account_circle',\r\n    name: 'My Account',\r\n    toggle: false,\r\n  },\r\n  { path: '/inbox', icon: 'inbox_outline', name: 'My Inbox', toggle: false },\r\n  { path: '', icon: 'clear_day', name: 'Dark Mode', toggle: true },\r\n  { path: '/help', icon: 'live_help', name: 'Help', toggle: false },\r\n];\r\n// Product listing\r\nexport const User_Data = [\r\n  {\r\n    id: 'random_id_1234',\r\n    product_ID: '#O365ProPlusRetail',\r\n    title: 'Microsoft Teams',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Host Online Calls', 'Unlimited Internet', 'Conference Calls'],\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_555',\r\n    product_ID: '#Or65SuperSupreme',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: [\r\n      'Unlimited Repos',\r\n      'Upto 50 Team Members',\r\n      'Host Online Calls',\r\n      'Unlimited Internet',\r\n      'Conference Calls',\r\n    ],\r\n    created_at: 'June 11th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_6969',\r\n    product_ID: '#Ow65Basic',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Conference Calls'],\r\n    created_at: 'June 18th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Features_Data = [\r\n  {\r\n    id: 'feature_id_459',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'feature_id_4591',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\n\r\nexport const Coupon_Data = [\r\n  {\r\n    id: 'coupon_id_459',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'coupon_id_460',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Plans_Data = [\r\n  {\r\n    id: 'ychvjbknk1',\r\n    plan_ID: 'As-012P',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.3',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: '1i23op1j2eo',\r\n    plan_ID: 'As-099G',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.2',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Notifications_Data = [\r\n  // {\r\n  //   user: 'John Smith' ,\r\n  //   message: 'subscriptione_created',\r\n  //   created_at: 'Aug 7th, 2023'\r\n  // }\r\n];\r\nexport const TransactionList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const InvoiceList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-003',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Payment Due',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const CustomerList = [\r\n  {\r\n    id: '#S0-001',\r\n    name: 'Alex C',\r\n    companyName: 'Greenplus Enterprises',\r\n    email: 'alex@example.com',\r\n    workPhone: '9876778865',\r\n    website: 'www.greenplus.com',\r\n    subscription: '2 subscripton (Available)',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    name: 'Zen D',\r\n    companyName: 'Zencorporation',\r\n    email: 'zen@example.com',\r\n    workPhone: '839103113',\r\n    website: 'www.zencorporation.com',\r\n    subscription: '1 subscripton (Available)',\r\n  },\r\n];\r\nexport const Logs_Data = [\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Subscription has been created for the Plan.',\r\n    Customer_Info: 'Greenplus Enterprises',\r\n    Event_Source: 'Via Portal',\r\n  },\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Active  subscription created for demo',\r\n    Customer_Info: 'Zencorporation',\r\n    Event_Source: 'Via Interface',\r\n  },\r\n];\r\nexport const feature_types = [\r\n  { value: 1, title: 'switch' },\r\n  { value: 2, title: 'range' },\r\n  { value: 3, title: 'quantity' },\r\n  { value: 4, title: 'custom' },\r\n];\r\nexport const pricingModels = [\r\n  { value: 1, title: 'Flat fee' },\r\n  { value: 2, title: 'Per unit' },\r\n  { value: 3, title: 'Tiered' },\r\n  { value: 4, title: 'Volume' },\r\n  { value: 5, title: 'Stairstep' },\r\n];\r\nexport const periodUnit = ['Daily', 'Weekly', 'Monthly', 'Yearly'];\r\nexport const StaticRoutes = {\r\n  features: ['features'],\r\n  products: ['products'],\r\n};\r\nexport const plan_add_empty_data = [\r\n  {\r\n    titleIcon:\r\n      '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n    iconAlt: 'invoice-outline-icon',\r\n    title: 'Product Details',\r\n    subtitle:\r\n      'Please click the “Add” button below to add a new product. Once you clicked the button, you will be prompted to enter the name of product, description and additional details.',\r\n    btnTitle: 'Add product',\r\n    btnPath: '/#',\r\n  },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Pricing Plans',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new pricing plans. Once you clicked the button, you will be prompted to enter pricing and additional details.',\r\n  //   btnTitle: 'Add Pricing',\r\n  //   btnPath: '/#',\r\n  // },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Add-ons Details',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new add-on. Once you have click button, you will be prompted to select add-on.',\r\n  //   btnTitle: 'Add Add-on',\r\n  //   btnPath: '/#',\r\n  // },\r\n];\r\nexport const noProducts = [\r\n  {\r\n    heading: 'Products',\r\n    imgPath: '../../../../assets/images/empty-illustrations.png',\r\n    alt: 'no proudcts available',\r\n    subtext: 'Looking for Product',\r\n    text: \"Seems like you haven't added any Product. Start adding products by click on “Create Product” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Product',\r\n    path: '/products/create',\r\n  },\r\n];\r\nexport const noFeatures = [\r\n  {\r\n    heading: 'Features',\r\n    imgPath: '../../../../assets/images/empty-illustrations-2.png',\r\n    alt: 'no features available',\r\n    subtext: 'Looking for Features',\r\n    text: \"Seems like you haven't added any feature. Start adding feature by click on “Create Feature” button \",\r\n    showButton: true,\r\n    buttonTxt: 'Create Feature',\r\n    path: '/features/create',\r\n  },\r\n];\r\nexport const noPlans = [\r\n  {\r\n    heading: 'Plans',\r\n    imgPath: '../../../../assets/images/empty-illustrations-4.png',\r\n    alt: 'no Plans available',\r\n    subtext: 'Looking for Plans',\r\n    text: \"Seems like you haven't added any Plan. Start adding plan by click on “Create Plan” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Plan',\r\n    path: '/plans/create',\r\n  },\r\n];\r\nexport const noPageFound = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/404-page.png',\r\n    alt: 'No Page Found',\r\n    subtext: \"Oops! Why you're here?\",\r\n    text: \"We are very sorry for inconvenience. It looks like you're try to access a page that either has been deleted or never existed.\",\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noCustomers = [\r\n  {\r\n    heading: 'Customers',\r\n    imgPath: '../../../../assets/images/empty-illustrations-6.png',\r\n    alt: 'no customers',\r\n    subtext: 'No customer yet',\r\n    text: 'Customers No customer yet After your first customer you will be able to view it here.',\r\n    showButton: false,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const nocoupons = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noTransactions = [\r\n  {\r\n    heading: 'Transaction',\r\n    imgPath: '../../../../assets/images/empty-illustrations-5.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'NO transaction yet',\r\n    text: 'After your first transaction you will be able to view it here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const noInvoice = [\r\n  {\r\n    heading: 'Invoice',\r\n    imgPath: '../../../../assets/images/invoice-empty.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'No invoice yet',\r\n    text: 'After your first transaction you will be able to view invoice here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const noLogs = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const Stepper = [\r\n  {\r\n    id: 1,\r\n    title: 'Step 1',\r\n    caption: 'Plan Information',\r\n    isVisible: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Step 2',\r\n    caption: 'Add Plan Pricing',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Step 3',\r\n    caption: 'Product Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Step 4',\r\n    caption: 'Add-on Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Step 5',\r\n    caption: 'Charges',\r\n    isVisible: false,\r\n  },\r\n];\r\nexport const listFilterOptions = [\r\n  'Yesterday',\r\n  'Last 7 days',\r\n  'Last Week',\r\n  'Last 30 days',\r\n  'Last 4 weeks',\r\n  'Last 12 weeks',\r\n  'Current month',\r\n  'Last calendar month',\r\n];\r\n\r\nexport interface ProductVariants {\r\n  productVariantId: string;\r\n  name: string;\r\n  productID: string;\r\n  type: string;\r\n  features: { featureID: string; value: string }[];\r\n  status: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 104
                },
                {
                    "name": "featureId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 100
                },
                {
                    "name": "modifiedOn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 102
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 103
                },
                {
                    "name": "productID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 101
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 106
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 105
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "GetProduct",
            "id": "interface-GetProduct-909fa3dce09599287106c3f3da3f0937a6e5c6871a710630a9736728d8608dd49fd2a191015bdfda04f21b892c532494e6d23ba5a32be2bd656206fc8e6b3892",
            "file": "src/app/shared/constants/consants.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n}\r\nexport interface Data_Type {\r\n  product_ID: string;\r\n  title: string;\r\n  description: string;\r\n  features: string[];\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface selectOptions {\r\n  value: number;\r\n  title: string;\r\n}\r\nexport interface features {\r\n  feature_id: string;\r\n  product_name: string;\r\n  feature_name: string;\r\n  description: string;\r\n  feature_type: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\n\r\nexport interface coupon {\r\n  coupon_id: string;\r\n  coupon_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface loginCredientials {\r\n  csrf_token:string,\r\n  method: string,\r\n  password_identifier: string,\r\n  password: string\r\n}\r\nexport interface Product {\r\n  productId: string;\r\n  imageUrl: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface GetProduct {\r\n  productId: string;\r\n  imageUrl: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface plansFields {\r\n  plan_ID: string;\r\n  external_name: string;\r\n  internal_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Feature {\r\n  featureId: string;\r\n  productId: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n  unit: string;\r\n  levels: [];\r\n}\r\nexport interface FeatureList {\r\n  featureId: number;\r\n  name: string;\r\n  productName: string;\r\n  levels: [];\r\n  description: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  type: string;\r\n  status: string;\r\n}\r\nexport interface Customer {\r\n  id: string;\r\n  name: string;\r\n  companyName: string;\r\n  email: string,\r\n  workPhone: string,\r\n  website: string,\r\n  subscription: string\r\n}\r\nexport interface GetFeature {\r\n  featureId: string;\r\n  productID: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n}\r\n\r\nexport interface invoice {\r\n  id: string;\r\n  customer_info: string;\r\n  issued_on: string;\r\n  voided_on: string;\r\n  paid_on: string;\r\n  created_at: string;\r\n  status: string;\r\n  amount: string;\r\n}\r\n\r\nexport interface logs {\r\n  Timestamp: any;\r\n  Events: string;\r\n  Customer_Info: string;\r\n  Event_Source: string;\r\n}\r\nexport interface Plan {\r\n  planId: string;\r\n  internalName: string;\r\n  externalName: string;\r\n  type: string;\r\n  description: string;\r\n  status: string;\r\n}\r\n\r\nexport interface PlanList {\r\n  productVariantId: string;\r\n  name: string;\r\n  productID: string;\r\n  type: string;\r\n  features: [];\r\n  status: string;\r\n}\r\n\r\nexport interface ProductVariant {\r\n  productVariantId: string;\r\n  name: string,\r\n  productID: string;\r\n  type: string;\r\n  features: { featureID: string; value: string }[];\r\n  status: string;\r\n\r\n}\r\nexport const MENUITEMS = [\r\n  {\r\n    state: '/overview',\r\n    type: 'link',\r\n    name: 'Overview',\r\n    icon: 'space_dashboard',\r\n    category: 'Dashboard'\r\n  },\r\n  {\r\n    state: '/customers',\r\n    type: 'link',\r\n    name: 'Customer',\r\n    icon: 'account_box',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/subscription',\r\n    type: 'link',\r\n    name: 'Subscription',\r\n    icon: 'card_membership',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/products',\r\n    type: 'link',\r\n    name: 'Products',\r\n    icon: 'local_mall',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/features',\r\n    type: 'link',\r\n    name: 'Features',\r\n    icon: 'featured_play_list',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/plans',\r\n    type: 'link',\r\n    name: 'Plans',\r\n    icon: 'quick_reference_all',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/stepper',\r\n    type: 'link',\r\n    name: 'Add Ons',\r\n    icon: 'add_notes',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/coupons',\r\n    type: 'link',\r\n    name: 'Coupons',\r\n    icon: 'confirmation_number',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/payment/transactions',\r\n    type: 'link',\r\n    name: 'Transactions',\r\n    icon: 'compare_arrows',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/invoices',\r\n    type: 'link',\r\n    name: 'Invoices',\r\n    icon: 'receipt_long',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/logs',\r\n    type: 'link',\r\n    name: 'Logs',\r\n    icon: 'list_alt',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Menu_Headings = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Dashboard',\r\n    icon: 'settings',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Product Catalog ',\r\n    icon: 'logout',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Payment History ',\r\n    icon: 'logout',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Config_Menu = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Settings',\r\n    icon: 'settings',\r\n    category: 'Config',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'LogOut ',\r\n    icon: 'logout',\r\n    category: 'Confog',\r\n  },\r\n];\r\nexport const User_Options = [\r\n  {\r\n    path: '/user:id',\r\n    icon: 'account_circle',\r\n    name: 'My Account',\r\n    toggle: false,\r\n  },\r\n  { path: '/inbox', icon: 'inbox_outline', name: 'My Inbox', toggle: false },\r\n  { path: '', icon: 'clear_day', name: 'Dark Mode', toggle: true },\r\n  { path: '/help', icon: 'live_help', name: 'Help', toggle: false },\r\n];\r\n// Product listing\r\nexport const User_Data = [\r\n  {\r\n    id: 'random_id_1234',\r\n    product_ID: '#O365ProPlusRetail',\r\n    title: 'Microsoft Teams',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Host Online Calls', 'Unlimited Internet', 'Conference Calls'],\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_555',\r\n    product_ID: '#Or65SuperSupreme',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: [\r\n      'Unlimited Repos',\r\n      'Upto 50 Team Members',\r\n      'Host Online Calls',\r\n      'Unlimited Internet',\r\n      'Conference Calls',\r\n    ],\r\n    created_at: 'June 11th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_6969',\r\n    product_ID: '#Ow65Basic',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Conference Calls'],\r\n    created_at: 'June 18th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Features_Data = [\r\n  {\r\n    id: 'feature_id_459',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'feature_id_4591',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\n\r\nexport const Coupon_Data = [\r\n  {\r\n    id: 'coupon_id_459',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'coupon_id_460',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Plans_Data = [\r\n  {\r\n    id: 'ychvjbknk1',\r\n    plan_ID: 'As-012P',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.3',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: '1i23op1j2eo',\r\n    plan_ID: 'As-099G',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.2',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Notifications_Data = [\r\n  // {\r\n  //   user: 'John Smith' ,\r\n  //   message: 'subscriptione_created',\r\n  //   created_at: 'Aug 7th, 2023'\r\n  // }\r\n];\r\nexport const TransactionList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const InvoiceList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-003',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Payment Due',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const CustomerList = [\r\n  {\r\n    id: '#S0-001',\r\n    name: 'Alex C',\r\n    companyName: 'Greenplus Enterprises',\r\n    email: 'alex@example.com',\r\n    workPhone: '9876778865',\r\n    website: 'www.greenplus.com',\r\n    subscription: '2 subscripton (Available)',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    name: 'Zen D',\r\n    companyName: 'Zencorporation',\r\n    email: 'zen@example.com',\r\n    workPhone: '839103113',\r\n    website: 'www.zencorporation.com',\r\n    subscription: '1 subscripton (Available)',\r\n  },\r\n];\r\nexport const Logs_Data = [\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Subscription has been created for the Plan.',\r\n    Customer_Info: 'Greenplus Enterprises',\r\n    Event_Source: 'Via Portal',\r\n  },\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Active  subscription created for demo',\r\n    Customer_Info: 'Zencorporation',\r\n    Event_Source: 'Via Interface',\r\n  },\r\n];\r\nexport const feature_types = [\r\n  { value: 1, title: 'switch' },\r\n  { value: 2, title: 'range' },\r\n  { value: 3, title: 'quantity' },\r\n  { value: 4, title: 'custom' },\r\n];\r\nexport const pricingModels = [\r\n  { value: 1, title: 'Flat fee' },\r\n  { value: 2, title: 'Per unit' },\r\n  { value: 3, title: 'Tiered' },\r\n  { value: 4, title: 'Volume' },\r\n  { value: 5, title: 'Stairstep' },\r\n];\r\nexport const periodUnit = ['Daily', 'Weekly', 'Monthly', 'Yearly'];\r\nexport const StaticRoutes = {\r\n  features: ['features'],\r\n  products: ['products'],\r\n};\r\nexport const plan_add_empty_data = [\r\n  {\r\n    titleIcon:\r\n      '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n    iconAlt: 'invoice-outline-icon',\r\n    title: 'Product Details',\r\n    subtitle:\r\n      'Please click the “Add” button below to add a new product. Once you clicked the button, you will be prompted to enter the name of product, description and additional details.',\r\n    btnTitle: 'Add product',\r\n    btnPath: '/#',\r\n  },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Pricing Plans',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new pricing plans. Once you clicked the button, you will be prompted to enter pricing and additional details.',\r\n  //   btnTitle: 'Add Pricing',\r\n  //   btnPath: '/#',\r\n  // },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Add-ons Details',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new add-on. Once you have click button, you will be prompted to select add-on.',\r\n  //   btnTitle: 'Add Add-on',\r\n  //   btnPath: '/#',\r\n  // },\r\n];\r\nexport const noProducts = [\r\n  {\r\n    heading: 'Products',\r\n    imgPath: '../../../../assets/images/empty-illustrations.png',\r\n    alt: 'no proudcts available',\r\n    subtext: 'Looking for Product',\r\n    text: \"Seems like you haven't added any Product. Start adding products by click on “Create Product” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Product',\r\n    path: '/products/create',\r\n  },\r\n];\r\nexport const noFeatures = [\r\n  {\r\n    heading: 'Features',\r\n    imgPath: '../../../../assets/images/empty-illustrations-2.png',\r\n    alt: 'no features available',\r\n    subtext: 'Looking for Features',\r\n    text: \"Seems like you haven't added any feature. Start adding feature by click on “Create Feature” button \",\r\n    showButton: true,\r\n    buttonTxt: 'Create Feature',\r\n    path: '/features/create',\r\n  },\r\n];\r\nexport const noPlans = [\r\n  {\r\n    heading: 'Plans',\r\n    imgPath: '../../../../assets/images/empty-illustrations-4.png',\r\n    alt: 'no Plans available',\r\n    subtext: 'Looking for Plans',\r\n    text: \"Seems like you haven't added any Plan. Start adding plan by click on “Create Plan” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Plan',\r\n    path: '/plans/create',\r\n  },\r\n];\r\nexport const noPageFound = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/404-page.png',\r\n    alt: 'No Page Found',\r\n    subtext: \"Oops! Why you're here?\",\r\n    text: \"We are very sorry for inconvenience. It looks like you're try to access a page that either has been deleted or never existed.\",\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noCustomers = [\r\n  {\r\n    heading: 'Customers',\r\n    imgPath: '../../../../assets/images/empty-illustrations-6.png',\r\n    alt: 'no customers',\r\n    subtext: 'No customer yet',\r\n    text: 'Customers No customer yet After your first customer you will be able to view it here.',\r\n    showButton: false,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const nocoupons = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noTransactions = [\r\n  {\r\n    heading: 'Transaction',\r\n    imgPath: '../../../../assets/images/empty-illustrations-5.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'NO transaction yet',\r\n    text: 'After your first transaction you will be able to view it here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const noInvoice = [\r\n  {\r\n    heading: 'Invoice',\r\n    imgPath: '../../../../assets/images/invoice-empty.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'No invoice yet',\r\n    text: 'After your first transaction you will be able to view invoice here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const noLogs = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const Stepper = [\r\n  {\r\n    id: 1,\r\n    title: 'Step 1',\r\n    caption: 'Plan Information',\r\n    isVisible: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Step 2',\r\n    caption: 'Add Plan Pricing',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Step 3',\r\n    caption: 'Product Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Step 4',\r\n    caption: 'Add-on Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Step 5',\r\n    caption: 'Charges',\r\n    isVisible: false,\r\n  },\r\n];\r\nexport const listFilterOptions = [\r\n  'Yesterday',\r\n  'Last 7 days',\r\n  'Last Week',\r\n  'Last 30 days',\r\n  'Last 4 weeks',\r\n  'Last 12 weeks',\r\n  'Current month',\r\n  'Last calendar month',\r\n];\r\n\r\nexport interface ProductVariants {\r\n  productVariantId: string;\r\n  name: string;\r\n  productID: string;\r\n  type: string;\r\n  features: { featureID: string; value: string }[];\r\n  status: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "imageUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "modifiedOn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "productId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 57
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "invoice",
            "id": "interface-invoice-909fa3dce09599287106c3f3da3f0937a6e5c6871a710630a9736728d8608dd49fd2a191015bdfda04f21b892c532494e6d23ba5a32be2bd656206fc8e6b3892",
            "file": "src/app/shared/constants/consants.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n}\r\nexport interface Data_Type {\r\n  product_ID: string;\r\n  title: string;\r\n  description: string;\r\n  features: string[];\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface selectOptions {\r\n  value: number;\r\n  title: string;\r\n}\r\nexport interface features {\r\n  feature_id: string;\r\n  product_name: string;\r\n  feature_name: string;\r\n  description: string;\r\n  feature_type: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\n\r\nexport interface coupon {\r\n  coupon_id: string;\r\n  coupon_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface loginCredientials {\r\n  csrf_token:string,\r\n  method: string,\r\n  password_identifier: string,\r\n  password: string\r\n}\r\nexport interface Product {\r\n  productId: string;\r\n  imageUrl: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface GetProduct {\r\n  productId: string;\r\n  imageUrl: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface plansFields {\r\n  plan_ID: string;\r\n  external_name: string;\r\n  internal_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Feature {\r\n  featureId: string;\r\n  productId: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n  unit: string;\r\n  levels: [];\r\n}\r\nexport interface FeatureList {\r\n  featureId: number;\r\n  name: string;\r\n  productName: string;\r\n  levels: [];\r\n  description: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  type: string;\r\n  status: string;\r\n}\r\nexport interface Customer {\r\n  id: string;\r\n  name: string;\r\n  companyName: string;\r\n  email: string,\r\n  workPhone: string,\r\n  website: string,\r\n  subscription: string\r\n}\r\nexport interface GetFeature {\r\n  featureId: string;\r\n  productID: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n}\r\n\r\nexport interface invoice {\r\n  id: string;\r\n  customer_info: string;\r\n  issued_on: string;\r\n  voided_on: string;\r\n  paid_on: string;\r\n  created_at: string;\r\n  status: string;\r\n  amount: string;\r\n}\r\n\r\nexport interface logs {\r\n  Timestamp: any;\r\n  Events: string;\r\n  Customer_Info: string;\r\n  Event_Source: string;\r\n}\r\nexport interface Plan {\r\n  planId: string;\r\n  internalName: string;\r\n  externalName: string;\r\n  type: string;\r\n  description: string;\r\n  status: string;\r\n}\r\n\r\nexport interface PlanList {\r\n  productVariantId: string;\r\n  name: string;\r\n  productID: string;\r\n  type: string;\r\n  features: [];\r\n  status: string;\r\n}\r\n\r\nexport interface ProductVariant {\r\n  productVariantId: string;\r\n  name: string,\r\n  productID: string;\r\n  type: string;\r\n  features: { featureID: string; value: string }[];\r\n  status: string;\r\n\r\n}\r\nexport const MENUITEMS = [\r\n  {\r\n    state: '/overview',\r\n    type: 'link',\r\n    name: 'Overview',\r\n    icon: 'space_dashboard',\r\n    category: 'Dashboard'\r\n  },\r\n  {\r\n    state: '/customers',\r\n    type: 'link',\r\n    name: 'Customer',\r\n    icon: 'account_box',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/subscription',\r\n    type: 'link',\r\n    name: 'Subscription',\r\n    icon: 'card_membership',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/products',\r\n    type: 'link',\r\n    name: 'Products',\r\n    icon: 'local_mall',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/features',\r\n    type: 'link',\r\n    name: 'Features',\r\n    icon: 'featured_play_list',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/plans',\r\n    type: 'link',\r\n    name: 'Plans',\r\n    icon: 'quick_reference_all',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/stepper',\r\n    type: 'link',\r\n    name: 'Add Ons',\r\n    icon: 'add_notes',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/coupons',\r\n    type: 'link',\r\n    name: 'Coupons',\r\n    icon: 'confirmation_number',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/payment/transactions',\r\n    type: 'link',\r\n    name: 'Transactions',\r\n    icon: 'compare_arrows',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/invoices',\r\n    type: 'link',\r\n    name: 'Invoices',\r\n    icon: 'receipt_long',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/logs',\r\n    type: 'link',\r\n    name: 'Logs',\r\n    icon: 'list_alt',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Menu_Headings = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Dashboard',\r\n    icon: 'settings',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Product Catalog ',\r\n    icon: 'logout',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Payment History ',\r\n    icon: 'logout',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Config_Menu = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Settings',\r\n    icon: 'settings',\r\n    category: 'Config',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'LogOut ',\r\n    icon: 'logout',\r\n    category: 'Confog',\r\n  },\r\n];\r\nexport const User_Options = [\r\n  {\r\n    path: '/user:id',\r\n    icon: 'account_circle',\r\n    name: 'My Account',\r\n    toggle: false,\r\n  },\r\n  { path: '/inbox', icon: 'inbox_outline', name: 'My Inbox', toggle: false },\r\n  { path: '', icon: 'clear_day', name: 'Dark Mode', toggle: true },\r\n  { path: '/help', icon: 'live_help', name: 'Help', toggle: false },\r\n];\r\n// Product listing\r\nexport const User_Data = [\r\n  {\r\n    id: 'random_id_1234',\r\n    product_ID: '#O365ProPlusRetail',\r\n    title: 'Microsoft Teams',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Host Online Calls', 'Unlimited Internet', 'Conference Calls'],\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_555',\r\n    product_ID: '#Or65SuperSupreme',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: [\r\n      'Unlimited Repos',\r\n      'Upto 50 Team Members',\r\n      'Host Online Calls',\r\n      'Unlimited Internet',\r\n      'Conference Calls',\r\n    ],\r\n    created_at: 'June 11th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_6969',\r\n    product_ID: '#Ow65Basic',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Conference Calls'],\r\n    created_at: 'June 18th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Features_Data = [\r\n  {\r\n    id: 'feature_id_459',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'feature_id_4591',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\n\r\nexport const Coupon_Data = [\r\n  {\r\n    id: 'coupon_id_459',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'coupon_id_460',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Plans_Data = [\r\n  {\r\n    id: 'ychvjbknk1',\r\n    plan_ID: 'As-012P',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.3',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: '1i23op1j2eo',\r\n    plan_ID: 'As-099G',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.2',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Notifications_Data = [\r\n  // {\r\n  //   user: 'John Smith' ,\r\n  //   message: 'subscriptione_created',\r\n  //   created_at: 'Aug 7th, 2023'\r\n  // }\r\n];\r\nexport const TransactionList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const InvoiceList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-003',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Payment Due',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const CustomerList = [\r\n  {\r\n    id: '#S0-001',\r\n    name: 'Alex C',\r\n    companyName: 'Greenplus Enterprises',\r\n    email: 'alex@example.com',\r\n    workPhone: '9876778865',\r\n    website: 'www.greenplus.com',\r\n    subscription: '2 subscripton (Available)',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    name: 'Zen D',\r\n    companyName: 'Zencorporation',\r\n    email: 'zen@example.com',\r\n    workPhone: '839103113',\r\n    website: 'www.zencorporation.com',\r\n    subscription: '1 subscripton (Available)',\r\n  },\r\n];\r\nexport const Logs_Data = [\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Subscription has been created for the Plan.',\r\n    Customer_Info: 'Greenplus Enterprises',\r\n    Event_Source: 'Via Portal',\r\n  },\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Active  subscription created for demo',\r\n    Customer_Info: 'Zencorporation',\r\n    Event_Source: 'Via Interface',\r\n  },\r\n];\r\nexport const feature_types = [\r\n  { value: 1, title: 'switch' },\r\n  { value: 2, title: 'range' },\r\n  { value: 3, title: 'quantity' },\r\n  { value: 4, title: 'custom' },\r\n];\r\nexport const pricingModels = [\r\n  { value: 1, title: 'Flat fee' },\r\n  { value: 2, title: 'Per unit' },\r\n  { value: 3, title: 'Tiered' },\r\n  { value: 4, title: 'Volume' },\r\n  { value: 5, title: 'Stairstep' },\r\n];\r\nexport const periodUnit = ['Daily', 'Weekly', 'Monthly', 'Yearly'];\r\nexport const StaticRoutes = {\r\n  features: ['features'],\r\n  products: ['products'],\r\n};\r\nexport const plan_add_empty_data = [\r\n  {\r\n    titleIcon:\r\n      '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n    iconAlt: 'invoice-outline-icon',\r\n    title: 'Product Details',\r\n    subtitle:\r\n      'Please click the “Add” button below to add a new product. Once you clicked the button, you will be prompted to enter the name of product, description and additional details.',\r\n    btnTitle: 'Add product',\r\n    btnPath: '/#',\r\n  },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Pricing Plans',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new pricing plans. Once you clicked the button, you will be prompted to enter pricing and additional details.',\r\n  //   btnTitle: 'Add Pricing',\r\n  //   btnPath: '/#',\r\n  // },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Add-ons Details',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new add-on. Once you have click button, you will be prompted to select add-on.',\r\n  //   btnTitle: 'Add Add-on',\r\n  //   btnPath: '/#',\r\n  // },\r\n];\r\nexport const noProducts = [\r\n  {\r\n    heading: 'Products',\r\n    imgPath: '../../../../assets/images/empty-illustrations.png',\r\n    alt: 'no proudcts available',\r\n    subtext: 'Looking for Product',\r\n    text: \"Seems like you haven't added any Product. Start adding products by click on “Create Product” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Product',\r\n    path: '/products/create',\r\n  },\r\n];\r\nexport const noFeatures = [\r\n  {\r\n    heading: 'Features',\r\n    imgPath: '../../../../assets/images/empty-illustrations-2.png',\r\n    alt: 'no features available',\r\n    subtext: 'Looking for Features',\r\n    text: \"Seems like you haven't added any feature. Start adding feature by click on “Create Feature” button \",\r\n    showButton: true,\r\n    buttonTxt: 'Create Feature',\r\n    path: '/features/create',\r\n  },\r\n];\r\nexport const noPlans = [\r\n  {\r\n    heading: 'Plans',\r\n    imgPath: '../../../../assets/images/empty-illustrations-4.png',\r\n    alt: 'no Plans available',\r\n    subtext: 'Looking for Plans',\r\n    text: \"Seems like you haven't added any Plan. Start adding plan by click on “Create Plan” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Plan',\r\n    path: '/plans/create',\r\n  },\r\n];\r\nexport const noPageFound = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/404-page.png',\r\n    alt: 'No Page Found',\r\n    subtext: \"Oops! Why you're here?\",\r\n    text: \"We are very sorry for inconvenience. It looks like you're try to access a page that either has been deleted or never existed.\",\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noCustomers = [\r\n  {\r\n    heading: 'Customers',\r\n    imgPath: '../../../../assets/images/empty-illustrations-6.png',\r\n    alt: 'no customers',\r\n    subtext: 'No customer yet',\r\n    text: 'Customers No customer yet After your first customer you will be able to view it here.',\r\n    showButton: false,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const nocoupons = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noTransactions = [\r\n  {\r\n    heading: 'Transaction',\r\n    imgPath: '../../../../assets/images/empty-illustrations-5.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'NO transaction yet',\r\n    text: 'After your first transaction you will be able to view it here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const noInvoice = [\r\n  {\r\n    heading: 'Invoice',\r\n    imgPath: '../../../../assets/images/invoice-empty.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'No invoice yet',\r\n    text: 'After your first transaction you will be able to view invoice here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const noLogs = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const Stepper = [\r\n  {\r\n    id: 1,\r\n    title: 'Step 1',\r\n    caption: 'Plan Information',\r\n    isVisible: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Step 2',\r\n    caption: 'Add Plan Pricing',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Step 3',\r\n    caption: 'Product Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Step 4',\r\n    caption: 'Add-on Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Step 5',\r\n    caption: 'Charges',\r\n    isVisible: false,\r\n  },\r\n];\r\nexport const listFilterOptions = [\r\n  'Yesterday',\r\n  'Last 7 days',\r\n  'Last Week',\r\n  'Last 30 days',\r\n  'Last 4 weeks',\r\n  'Last 12 weeks',\r\n  'Current month',\r\n  'Last calendar month',\r\n];\r\n\r\nexport interface ProductVariants {\r\n  productVariantId: string;\r\n  name: string;\r\n  productID: string;\r\n  type: string;\r\n  features: { featureID: string; value: string }[];\r\n  status: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "amount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 117
                },
                {
                    "name": "created_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 115
                },
                {
                    "name": "customer_info",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 111
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 110
                },
                {
                    "name": "issued_on",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 112
                },
                {
                    "name": "paid_on",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 114
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 116
                },
                {
                    "name": "voided_on",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 113
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "loginCredientials",
            "id": "interface-loginCredientials-909fa3dce09599287106c3f3da3f0937a6e5c6871a710630a9736728d8608dd49fd2a191015bdfda04f21b892c532494e6d23ba5a32be2bd656206fc8e6b3892",
            "file": "src/app/shared/constants/consants.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n}\r\nexport interface Data_Type {\r\n  product_ID: string;\r\n  title: string;\r\n  description: string;\r\n  features: string[];\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface selectOptions {\r\n  value: number;\r\n  title: string;\r\n}\r\nexport interface features {\r\n  feature_id: string;\r\n  product_name: string;\r\n  feature_name: string;\r\n  description: string;\r\n  feature_type: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\n\r\nexport interface coupon {\r\n  coupon_id: string;\r\n  coupon_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface loginCredientials {\r\n  csrf_token:string,\r\n  method: string,\r\n  password_identifier: string,\r\n  password: string\r\n}\r\nexport interface Product {\r\n  productId: string;\r\n  imageUrl: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface GetProduct {\r\n  productId: string;\r\n  imageUrl: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface plansFields {\r\n  plan_ID: string;\r\n  external_name: string;\r\n  internal_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Feature {\r\n  featureId: string;\r\n  productId: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n  unit: string;\r\n  levels: [];\r\n}\r\nexport interface FeatureList {\r\n  featureId: number;\r\n  name: string;\r\n  productName: string;\r\n  levels: [];\r\n  description: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  type: string;\r\n  status: string;\r\n}\r\nexport interface Customer {\r\n  id: string;\r\n  name: string;\r\n  companyName: string;\r\n  email: string,\r\n  workPhone: string,\r\n  website: string,\r\n  subscription: string\r\n}\r\nexport interface GetFeature {\r\n  featureId: string;\r\n  productID: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n}\r\n\r\nexport interface invoice {\r\n  id: string;\r\n  customer_info: string;\r\n  issued_on: string;\r\n  voided_on: string;\r\n  paid_on: string;\r\n  created_at: string;\r\n  status: string;\r\n  amount: string;\r\n}\r\n\r\nexport interface logs {\r\n  Timestamp: any;\r\n  Events: string;\r\n  Customer_Info: string;\r\n  Event_Source: string;\r\n}\r\nexport interface Plan {\r\n  planId: string;\r\n  internalName: string;\r\n  externalName: string;\r\n  type: string;\r\n  description: string;\r\n  status: string;\r\n}\r\n\r\nexport interface PlanList {\r\n  productVariantId: string;\r\n  name: string;\r\n  productID: string;\r\n  type: string;\r\n  features: [];\r\n  status: string;\r\n}\r\n\r\nexport interface ProductVariant {\r\n  productVariantId: string;\r\n  name: string,\r\n  productID: string;\r\n  type: string;\r\n  features: { featureID: string; value: string }[];\r\n  status: string;\r\n\r\n}\r\nexport const MENUITEMS = [\r\n  {\r\n    state: '/overview',\r\n    type: 'link',\r\n    name: 'Overview',\r\n    icon: 'space_dashboard',\r\n    category: 'Dashboard'\r\n  },\r\n  {\r\n    state: '/customers',\r\n    type: 'link',\r\n    name: 'Customer',\r\n    icon: 'account_box',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/subscription',\r\n    type: 'link',\r\n    name: 'Subscription',\r\n    icon: 'card_membership',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/products',\r\n    type: 'link',\r\n    name: 'Products',\r\n    icon: 'local_mall',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/features',\r\n    type: 'link',\r\n    name: 'Features',\r\n    icon: 'featured_play_list',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/plans',\r\n    type: 'link',\r\n    name: 'Plans',\r\n    icon: 'quick_reference_all',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/stepper',\r\n    type: 'link',\r\n    name: 'Add Ons',\r\n    icon: 'add_notes',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/coupons',\r\n    type: 'link',\r\n    name: 'Coupons',\r\n    icon: 'confirmation_number',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/payment/transactions',\r\n    type: 'link',\r\n    name: 'Transactions',\r\n    icon: 'compare_arrows',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/invoices',\r\n    type: 'link',\r\n    name: 'Invoices',\r\n    icon: 'receipt_long',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/logs',\r\n    type: 'link',\r\n    name: 'Logs',\r\n    icon: 'list_alt',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Menu_Headings = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Dashboard',\r\n    icon: 'settings',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Product Catalog ',\r\n    icon: 'logout',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Payment History ',\r\n    icon: 'logout',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Config_Menu = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Settings',\r\n    icon: 'settings',\r\n    category: 'Config',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'LogOut ',\r\n    icon: 'logout',\r\n    category: 'Confog',\r\n  },\r\n];\r\nexport const User_Options = [\r\n  {\r\n    path: '/user:id',\r\n    icon: 'account_circle',\r\n    name: 'My Account',\r\n    toggle: false,\r\n  },\r\n  { path: '/inbox', icon: 'inbox_outline', name: 'My Inbox', toggle: false },\r\n  { path: '', icon: 'clear_day', name: 'Dark Mode', toggle: true },\r\n  { path: '/help', icon: 'live_help', name: 'Help', toggle: false },\r\n];\r\n// Product listing\r\nexport const User_Data = [\r\n  {\r\n    id: 'random_id_1234',\r\n    product_ID: '#O365ProPlusRetail',\r\n    title: 'Microsoft Teams',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Host Online Calls', 'Unlimited Internet', 'Conference Calls'],\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_555',\r\n    product_ID: '#Or65SuperSupreme',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: [\r\n      'Unlimited Repos',\r\n      'Upto 50 Team Members',\r\n      'Host Online Calls',\r\n      'Unlimited Internet',\r\n      'Conference Calls',\r\n    ],\r\n    created_at: 'June 11th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_6969',\r\n    product_ID: '#Ow65Basic',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Conference Calls'],\r\n    created_at: 'June 18th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Features_Data = [\r\n  {\r\n    id: 'feature_id_459',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'feature_id_4591',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\n\r\nexport const Coupon_Data = [\r\n  {\r\n    id: 'coupon_id_459',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'coupon_id_460',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Plans_Data = [\r\n  {\r\n    id: 'ychvjbknk1',\r\n    plan_ID: 'As-012P',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.3',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: '1i23op1j2eo',\r\n    plan_ID: 'As-099G',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.2',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Notifications_Data = [\r\n  // {\r\n  //   user: 'John Smith' ,\r\n  //   message: 'subscriptione_created',\r\n  //   created_at: 'Aug 7th, 2023'\r\n  // }\r\n];\r\nexport const TransactionList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const InvoiceList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-003',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Payment Due',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const CustomerList = [\r\n  {\r\n    id: '#S0-001',\r\n    name: 'Alex C',\r\n    companyName: 'Greenplus Enterprises',\r\n    email: 'alex@example.com',\r\n    workPhone: '9876778865',\r\n    website: 'www.greenplus.com',\r\n    subscription: '2 subscripton (Available)',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    name: 'Zen D',\r\n    companyName: 'Zencorporation',\r\n    email: 'zen@example.com',\r\n    workPhone: '839103113',\r\n    website: 'www.zencorporation.com',\r\n    subscription: '1 subscripton (Available)',\r\n  },\r\n];\r\nexport const Logs_Data = [\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Subscription has been created for the Plan.',\r\n    Customer_Info: 'Greenplus Enterprises',\r\n    Event_Source: 'Via Portal',\r\n  },\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Active  subscription created for demo',\r\n    Customer_Info: 'Zencorporation',\r\n    Event_Source: 'Via Interface',\r\n  },\r\n];\r\nexport const feature_types = [\r\n  { value: 1, title: 'switch' },\r\n  { value: 2, title: 'range' },\r\n  { value: 3, title: 'quantity' },\r\n  { value: 4, title: 'custom' },\r\n];\r\nexport const pricingModels = [\r\n  { value: 1, title: 'Flat fee' },\r\n  { value: 2, title: 'Per unit' },\r\n  { value: 3, title: 'Tiered' },\r\n  { value: 4, title: 'Volume' },\r\n  { value: 5, title: 'Stairstep' },\r\n];\r\nexport const periodUnit = ['Daily', 'Weekly', 'Monthly', 'Yearly'];\r\nexport const StaticRoutes = {\r\n  features: ['features'],\r\n  products: ['products'],\r\n};\r\nexport const plan_add_empty_data = [\r\n  {\r\n    titleIcon:\r\n      '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n    iconAlt: 'invoice-outline-icon',\r\n    title: 'Product Details',\r\n    subtitle:\r\n      'Please click the “Add” button below to add a new product. Once you clicked the button, you will be prompted to enter the name of product, description and additional details.',\r\n    btnTitle: 'Add product',\r\n    btnPath: '/#',\r\n  },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Pricing Plans',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new pricing plans. Once you clicked the button, you will be prompted to enter pricing and additional details.',\r\n  //   btnTitle: 'Add Pricing',\r\n  //   btnPath: '/#',\r\n  // },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Add-ons Details',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new add-on. Once you have click button, you will be prompted to select add-on.',\r\n  //   btnTitle: 'Add Add-on',\r\n  //   btnPath: '/#',\r\n  // },\r\n];\r\nexport const noProducts = [\r\n  {\r\n    heading: 'Products',\r\n    imgPath: '../../../../assets/images/empty-illustrations.png',\r\n    alt: 'no proudcts available',\r\n    subtext: 'Looking for Product',\r\n    text: \"Seems like you haven't added any Product. Start adding products by click on “Create Product” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Product',\r\n    path: '/products/create',\r\n  },\r\n];\r\nexport const noFeatures = [\r\n  {\r\n    heading: 'Features',\r\n    imgPath: '../../../../assets/images/empty-illustrations-2.png',\r\n    alt: 'no features available',\r\n    subtext: 'Looking for Features',\r\n    text: \"Seems like you haven't added any feature. Start adding feature by click on “Create Feature” button \",\r\n    showButton: true,\r\n    buttonTxt: 'Create Feature',\r\n    path: '/features/create',\r\n  },\r\n];\r\nexport const noPlans = [\r\n  {\r\n    heading: 'Plans',\r\n    imgPath: '../../../../assets/images/empty-illustrations-4.png',\r\n    alt: 'no Plans available',\r\n    subtext: 'Looking for Plans',\r\n    text: \"Seems like you haven't added any Plan. Start adding plan by click on “Create Plan” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Plan',\r\n    path: '/plans/create',\r\n  },\r\n];\r\nexport const noPageFound = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/404-page.png',\r\n    alt: 'No Page Found',\r\n    subtext: \"Oops! Why you're here?\",\r\n    text: \"We are very sorry for inconvenience. It looks like you're try to access a page that either has been deleted or never existed.\",\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noCustomers = [\r\n  {\r\n    heading: 'Customers',\r\n    imgPath: '../../../../assets/images/empty-illustrations-6.png',\r\n    alt: 'no customers',\r\n    subtext: 'No customer yet',\r\n    text: 'Customers No customer yet After your first customer you will be able to view it here.',\r\n    showButton: false,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const nocoupons = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noTransactions = [\r\n  {\r\n    heading: 'Transaction',\r\n    imgPath: '../../../../assets/images/empty-illustrations-5.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'NO transaction yet',\r\n    text: 'After your first transaction you will be able to view it here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const noInvoice = [\r\n  {\r\n    heading: 'Invoice',\r\n    imgPath: '../../../../assets/images/invoice-empty.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'No invoice yet',\r\n    text: 'After your first transaction you will be able to view invoice here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const noLogs = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const Stepper = [\r\n  {\r\n    id: 1,\r\n    title: 'Step 1',\r\n    caption: 'Plan Information',\r\n    isVisible: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Step 2',\r\n    caption: 'Add Plan Pricing',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Step 3',\r\n    caption: 'Product Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Step 4',\r\n    caption: 'Add-on Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Step 5',\r\n    caption: 'Charges',\r\n    isVisible: false,\r\n  },\r\n];\r\nexport const listFilterOptions = [\r\n  'Yesterday',\r\n  'Last 7 days',\r\n  'Last Week',\r\n  'Last 30 days',\r\n  'Last 4 weeks',\r\n  'Last 12 weeks',\r\n  'Current month',\r\n  'Last calendar month',\r\n];\r\n\r\nexport interface ProductVariants {\r\n  productVariantId: string;\r\n  name: string;\r\n  productID: string;\r\n  type: string;\r\n  features: { featureID: string; value: string }[];\r\n  status: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "csrf_token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "method",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "password_identifier",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "logs",
            "id": "interface-logs-909fa3dce09599287106c3f3da3f0937a6e5c6871a710630a9736728d8608dd49fd2a191015bdfda04f21b892c532494e6d23ba5a32be2bd656206fc8e6b3892",
            "file": "src/app/shared/constants/consants.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n}\r\nexport interface Data_Type {\r\n  product_ID: string;\r\n  title: string;\r\n  description: string;\r\n  features: string[];\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface selectOptions {\r\n  value: number;\r\n  title: string;\r\n}\r\nexport interface features {\r\n  feature_id: string;\r\n  product_name: string;\r\n  feature_name: string;\r\n  description: string;\r\n  feature_type: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\n\r\nexport interface coupon {\r\n  coupon_id: string;\r\n  coupon_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface loginCredientials {\r\n  csrf_token:string,\r\n  method: string,\r\n  password_identifier: string,\r\n  password: string\r\n}\r\nexport interface Product {\r\n  productId: string;\r\n  imageUrl: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface GetProduct {\r\n  productId: string;\r\n  imageUrl: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface plansFields {\r\n  plan_ID: string;\r\n  external_name: string;\r\n  internal_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Feature {\r\n  featureId: string;\r\n  productId: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n  unit: string;\r\n  levels: [];\r\n}\r\nexport interface FeatureList {\r\n  featureId: number;\r\n  name: string;\r\n  productName: string;\r\n  levels: [];\r\n  description: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  type: string;\r\n  status: string;\r\n}\r\nexport interface Customer {\r\n  id: string;\r\n  name: string;\r\n  companyName: string;\r\n  email: string,\r\n  workPhone: string,\r\n  website: string,\r\n  subscription: string\r\n}\r\nexport interface GetFeature {\r\n  featureId: string;\r\n  productID: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n}\r\n\r\nexport interface invoice {\r\n  id: string;\r\n  customer_info: string;\r\n  issued_on: string;\r\n  voided_on: string;\r\n  paid_on: string;\r\n  created_at: string;\r\n  status: string;\r\n  amount: string;\r\n}\r\n\r\nexport interface logs {\r\n  Timestamp: any;\r\n  Events: string;\r\n  Customer_Info: string;\r\n  Event_Source: string;\r\n}\r\nexport interface Plan {\r\n  planId: string;\r\n  internalName: string;\r\n  externalName: string;\r\n  type: string;\r\n  description: string;\r\n  status: string;\r\n}\r\n\r\nexport interface PlanList {\r\n  productVariantId: string;\r\n  name: string;\r\n  productID: string;\r\n  type: string;\r\n  features: [];\r\n  status: string;\r\n}\r\n\r\nexport interface ProductVariant {\r\n  productVariantId: string;\r\n  name: string,\r\n  productID: string;\r\n  type: string;\r\n  features: { featureID: string; value: string }[];\r\n  status: string;\r\n\r\n}\r\nexport const MENUITEMS = [\r\n  {\r\n    state: '/overview',\r\n    type: 'link',\r\n    name: 'Overview',\r\n    icon: 'space_dashboard',\r\n    category: 'Dashboard'\r\n  },\r\n  {\r\n    state: '/customers',\r\n    type: 'link',\r\n    name: 'Customer',\r\n    icon: 'account_box',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/subscription',\r\n    type: 'link',\r\n    name: 'Subscription',\r\n    icon: 'card_membership',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/products',\r\n    type: 'link',\r\n    name: 'Products',\r\n    icon: 'local_mall',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/features',\r\n    type: 'link',\r\n    name: 'Features',\r\n    icon: 'featured_play_list',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/plans',\r\n    type: 'link',\r\n    name: 'Plans',\r\n    icon: 'quick_reference_all',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/stepper',\r\n    type: 'link',\r\n    name: 'Add Ons',\r\n    icon: 'add_notes',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/coupons',\r\n    type: 'link',\r\n    name: 'Coupons',\r\n    icon: 'confirmation_number',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/payment/transactions',\r\n    type: 'link',\r\n    name: 'Transactions',\r\n    icon: 'compare_arrows',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/invoices',\r\n    type: 'link',\r\n    name: 'Invoices',\r\n    icon: 'receipt_long',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/logs',\r\n    type: 'link',\r\n    name: 'Logs',\r\n    icon: 'list_alt',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Menu_Headings = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Dashboard',\r\n    icon: 'settings',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Product Catalog ',\r\n    icon: 'logout',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Payment History ',\r\n    icon: 'logout',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Config_Menu = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Settings',\r\n    icon: 'settings',\r\n    category: 'Config',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'LogOut ',\r\n    icon: 'logout',\r\n    category: 'Confog',\r\n  },\r\n];\r\nexport const User_Options = [\r\n  {\r\n    path: '/user:id',\r\n    icon: 'account_circle',\r\n    name: 'My Account',\r\n    toggle: false,\r\n  },\r\n  { path: '/inbox', icon: 'inbox_outline', name: 'My Inbox', toggle: false },\r\n  { path: '', icon: 'clear_day', name: 'Dark Mode', toggle: true },\r\n  { path: '/help', icon: 'live_help', name: 'Help', toggle: false },\r\n];\r\n// Product listing\r\nexport const User_Data = [\r\n  {\r\n    id: 'random_id_1234',\r\n    product_ID: '#O365ProPlusRetail',\r\n    title: 'Microsoft Teams',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Host Online Calls', 'Unlimited Internet', 'Conference Calls'],\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_555',\r\n    product_ID: '#Or65SuperSupreme',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: [\r\n      'Unlimited Repos',\r\n      'Upto 50 Team Members',\r\n      'Host Online Calls',\r\n      'Unlimited Internet',\r\n      'Conference Calls',\r\n    ],\r\n    created_at: 'June 11th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_6969',\r\n    product_ID: '#Ow65Basic',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Conference Calls'],\r\n    created_at: 'June 18th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Features_Data = [\r\n  {\r\n    id: 'feature_id_459',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'feature_id_4591',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\n\r\nexport const Coupon_Data = [\r\n  {\r\n    id: 'coupon_id_459',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'coupon_id_460',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Plans_Data = [\r\n  {\r\n    id: 'ychvjbknk1',\r\n    plan_ID: 'As-012P',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.3',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: '1i23op1j2eo',\r\n    plan_ID: 'As-099G',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.2',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Notifications_Data = [\r\n  // {\r\n  //   user: 'John Smith' ,\r\n  //   message: 'subscriptione_created',\r\n  //   created_at: 'Aug 7th, 2023'\r\n  // }\r\n];\r\nexport const TransactionList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const InvoiceList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-003',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Payment Due',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const CustomerList = [\r\n  {\r\n    id: '#S0-001',\r\n    name: 'Alex C',\r\n    companyName: 'Greenplus Enterprises',\r\n    email: 'alex@example.com',\r\n    workPhone: '9876778865',\r\n    website: 'www.greenplus.com',\r\n    subscription: '2 subscripton (Available)',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    name: 'Zen D',\r\n    companyName: 'Zencorporation',\r\n    email: 'zen@example.com',\r\n    workPhone: '839103113',\r\n    website: 'www.zencorporation.com',\r\n    subscription: '1 subscripton (Available)',\r\n  },\r\n];\r\nexport const Logs_Data = [\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Subscription has been created for the Plan.',\r\n    Customer_Info: 'Greenplus Enterprises',\r\n    Event_Source: 'Via Portal',\r\n  },\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Active  subscription created for demo',\r\n    Customer_Info: 'Zencorporation',\r\n    Event_Source: 'Via Interface',\r\n  },\r\n];\r\nexport const feature_types = [\r\n  { value: 1, title: 'switch' },\r\n  { value: 2, title: 'range' },\r\n  { value: 3, title: 'quantity' },\r\n  { value: 4, title: 'custom' },\r\n];\r\nexport const pricingModels = [\r\n  { value: 1, title: 'Flat fee' },\r\n  { value: 2, title: 'Per unit' },\r\n  { value: 3, title: 'Tiered' },\r\n  { value: 4, title: 'Volume' },\r\n  { value: 5, title: 'Stairstep' },\r\n];\r\nexport const periodUnit = ['Daily', 'Weekly', 'Monthly', 'Yearly'];\r\nexport const StaticRoutes = {\r\n  features: ['features'],\r\n  products: ['products'],\r\n};\r\nexport const plan_add_empty_data = [\r\n  {\r\n    titleIcon:\r\n      '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n    iconAlt: 'invoice-outline-icon',\r\n    title: 'Product Details',\r\n    subtitle:\r\n      'Please click the “Add” button below to add a new product. Once you clicked the button, you will be prompted to enter the name of product, description and additional details.',\r\n    btnTitle: 'Add product',\r\n    btnPath: '/#',\r\n  },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Pricing Plans',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new pricing plans. Once you clicked the button, you will be prompted to enter pricing and additional details.',\r\n  //   btnTitle: 'Add Pricing',\r\n  //   btnPath: '/#',\r\n  // },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Add-ons Details',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new add-on. Once you have click button, you will be prompted to select add-on.',\r\n  //   btnTitle: 'Add Add-on',\r\n  //   btnPath: '/#',\r\n  // },\r\n];\r\nexport const noProducts = [\r\n  {\r\n    heading: 'Products',\r\n    imgPath: '../../../../assets/images/empty-illustrations.png',\r\n    alt: 'no proudcts available',\r\n    subtext: 'Looking for Product',\r\n    text: \"Seems like you haven't added any Product. Start adding products by click on “Create Product” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Product',\r\n    path: '/products/create',\r\n  },\r\n];\r\nexport const noFeatures = [\r\n  {\r\n    heading: 'Features',\r\n    imgPath: '../../../../assets/images/empty-illustrations-2.png',\r\n    alt: 'no features available',\r\n    subtext: 'Looking for Features',\r\n    text: \"Seems like you haven't added any feature. Start adding feature by click on “Create Feature” button \",\r\n    showButton: true,\r\n    buttonTxt: 'Create Feature',\r\n    path: '/features/create',\r\n  },\r\n];\r\nexport const noPlans = [\r\n  {\r\n    heading: 'Plans',\r\n    imgPath: '../../../../assets/images/empty-illustrations-4.png',\r\n    alt: 'no Plans available',\r\n    subtext: 'Looking for Plans',\r\n    text: \"Seems like you haven't added any Plan. Start adding plan by click on “Create Plan” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Plan',\r\n    path: '/plans/create',\r\n  },\r\n];\r\nexport const noPageFound = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/404-page.png',\r\n    alt: 'No Page Found',\r\n    subtext: \"Oops! Why you're here?\",\r\n    text: \"We are very sorry for inconvenience. It looks like you're try to access a page that either has been deleted or never existed.\",\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noCustomers = [\r\n  {\r\n    heading: 'Customers',\r\n    imgPath: '../../../../assets/images/empty-illustrations-6.png',\r\n    alt: 'no customers',\r\n    subtext: 'No customer yet',\r\n    text: 'Customers No customer yet After your first customer you will be able to view it here.',\r\n    showButton: false,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const nocoupons = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noTransactions = [\r\n  {\r\n    heading: 'Transaction',\r\n    imgPath: '../../../../assets/images/empty-illustrations-5.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'NO transaction yet',\r\n    text: 'After your first transaction you will be able to view it here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const noInvoice = [\r\n  {\r\n    heading: 'Invoice',\r\n    imgPath: '../../../../assets/images/invoice-empty.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'No invoice yet',\r\n    text: 'After your first transaction you will be able to view invoice here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const noLogs = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const Stepper = [\r\n  {\r\n    id: 1,\r\n    title: 'Step 1',\r\n    caption: 'Plan Information',\r\n    isVisible: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Step 2',\r\n    caption: 'Add Plan Pricing',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Step 3',\r\n    caption: 'Product Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Step 4',\r\n    caption: 'Add-on Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Step 5',\r\n    caption: 'Charges',\r\n    isVisible: false,\r\n  },\r\n];\r\nexport const listFilterOptions = [\r\n  'Yesterday',\r\n  'Last 7 days',\r\n  'Last Week',\r\n  'Last 30 days',\r\n  'Last 4 weeks',\r\n  'Last 12 weeks',\r\n  'Current month',\r\n  'Last calendar month',\r\n];\r\n\r\nexport interface ProductVariants {\r\n  productVariantId: string;\r\n  name: string;\r\n  productID: string;\r\n  type: string;\r\n  features: { featureID: string; value: string }[];\r\n  status: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "Customer_Info",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 123
                },
                {
                    "name": "Event_Source",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 124
                },
                {
                    "name": "Events",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 122
                },
                {
                    "name": "Timestamp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 121
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "Menu",
            "id": "interface-Menu-909fa3dce09599287106c3f3da3f0937a6e5c6871a710630a9736728d8608dd49fd2a191015bdfda04f21b892c532494e6d23ba5a32be2bd656206fc8e6b3892",
            "file": "src/app/shared/constants/consants.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n}\r\nexport interface Data_Type {\r\n  product_ID: string;\r\n  title: string;\r\n  description: string;\r\n  features: string[];\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface selectOptions {\r\n  value: number;\r\n  title: string;\r\n}\r\nexport interface features {\r\n  feature_id: string;\r\n  product_name: string;\r\n  feature_name: string;\r\n  description: string;\r\n  feature_type: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\n\r\nexport interface coupon {\r\n  coupon_id: string;\r\n  coupon_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface loginCredientials {\r\n  csrf_token:string,\r\n  method: string,\r\n  password_identifier: string,\r\n  password: string\r\n}\r\nexport interface Product {\r\n  productId: string;\r\n  imageUrl: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface GetProduct {\r\n  productId: string;\r\n  imageUrl: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface plansFields {\r\n  plan_ID: string;\r\n  external_name: string;\r\n  internal_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Feature {\r\n  featureId: string;\r\n  productId: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n  unit: string;\r\n  levels: [];\r\n}\r\nexport interface FeatureList {\r\n  featureId: number;\r\n  name: string;\r\n  productName: string;\r\n  levels: [];\r\n  description: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  type: string;\r\n  status: string;\r\n}\r\nexport interface Customer {\r\n  id: string;\r\n  name: string;\r\n  companyName: string;\r\n  email: string,\r\n  workPhone: string,\r\n  website: string,\r\n  subscription: string\r\n}\r\nexport interface GetFeature {\r\n  featureId: string;\r\n  productID: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n}\r\n\r\nexport interface invoice {\r\n  id: string;\r\n  customer_info: string;\r\n  issued_on: string;\r\n  voided_on: string;\r\n  paid_on: string;\r\n  created_at: string;\r\n  status: string;\r\n  amount: string;\r\n}\r\n\r\nexport interface logs {\r\n  Timestamp: any;\r\n  Events: string;\r\n  Customer_Info: string;\r\n  Event_Source: string;\r\n}\r\nexport interface Plan {\r\n  planId: string;\r\n  internalName: string;\r\n  externalName: string;\r\n  type: string;\r\n  description: string;\r\n  status: string;\r\n}\r\n\r\nexport interface PlanList {\r\n  productVariantId: string;\r\n  name: string;\r\n  productID: string;\r\n  type: string;\r\n  features: [];\r\n  status: string;\r\n}\r\n\r\nexport interface ProductVariant {\r\n  productVariantId: string;\r\n  name: string,\r\n  productID: string;\r\n  type: string;\r\n  features: { featureID: string; value: string }[];\r\n  status: string;\r\n\r\n}\r\nexport const MENUITEMS = [\r\n  {\r\n    state: '/overview',\r\n    type: 'link',\r\n    name: 'Overview',\r\n    icon: 'space_dashboard',\r\n    category: 'Dashboard'\r\n  },\r\n  {\r\n    state: '/customers',\r\n    type: 'link',\r\n    name: 'Customer',\r\n    icon: 'account_box',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/subscription',\r\n    type: 'link',\r\n    name: 'Subscription',\r\n    icon: 'card_membership',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/products',\r\n    type: 'link',\r\n    name: 'Products',\r\n    icon: 'local_mall',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/features',\r\n    type: 'link',\r\n    name: 'Features',\r\n    icon: 'featured_play_list',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/plans',\r\n    type: 'link',\r\n    name: 'Plans',\r\n    icon: 'quick_reference_all',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/stepper',\r\n    type: 'link',\r\n    name: 'Add Ons',\r\n    icon: 'add_notes',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/coupons',\r\n    type: 'link',\r\n    name: 'Coupons',\r\n    icon: 'confirmation_number',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/payment/transactions',\r\n    type: 'link',\r\n    name: 'Transactions',\r\n    icon: 'compare_arrows',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/invoices',\r\n    type: 'link',\r\n    name: 'Invoices',\r\n    icon: 'receipt_long',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/logs',\r\n    type: 'link',\r\n    name: 'Logs',\r\n    icon: 'list_alt',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Menu_Headings = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Dashboard',\r\n    icon: 'settings',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Product Catalog ',\r\n    icon: 'logout',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Payment History ',\r\n    icon: 'logout',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Config_Menu = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Settings',\r\n    icon: 'settings',\r\n    category: 'Config',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'LogOut ',\r\n    icon: 'logout',\r\n    category: 'Confog',\r\n  },\r\n];\r\nexport const User_Options = [\r\n  {\r\n    path: '/user:id',\r\n    icon: 'account_circle',\r\n    name: 'My Account',\r\n    toggle: false,\r\n  },\r\n  { path: '/inbox', icon: 'inbox_outline', name: 'My Inbox', toggle: false },\r\n  { path: '', icon: 'clear_day', name: 'Dark Mode', toggle: true },\r\n  { path: '/help', icon: 'live_help', name: 'Help', toggle: false },\r\n];\r\n// Product listing\r\nexport const User_Data = [\r\n  {\r\n    id: 'random_id_1234',\r\n    product_ID: '#O365ProPlusRetail',\r\n    title: 'Microsoft Teams',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Host Online Calls', 'Unlimited Internet', 'Conference Calls'],\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_555',\r\n    product_ID: '#Or65SuperSupreme',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: [\r\n      'Unlimited Repos',\r\n      'Upto 50 Team Members',\r\n      'Host Online Calls',\r\n      'Unlimited Internet',\r\n      'Conference Calls',\r\n    ],\r\n    created_at: 'June 11th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_6969',\r\n    product_ID: '#Ow65Basic',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Conference Calls'],\r\n    created_at: 'June 18th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Features_Data = [\r\n  {\r\n    id: 'feature_id_459',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'feature_id_4591',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\n\r\nexport const Coupon_Data = [\r\n  {\r\n    id: 'coupon_id_459',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'coupon_id_460',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Plans_Data = [\r\n  {\r\n    id: 'ychvjbknk1',\r\n    plan_ID: 'As-012P',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.3',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: '1i23op1j2eo',\r\n    plan_ID: 'As-099G',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.2',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Notifications_Data = [\r\n  // {\r\n  //   user: 'John Smith' ,\r\n  //   message: 'subscriptione_created',\r\n  //   created_at: 'Aug 7th, 2023'\r\n  // }\r\n];\r\nexport const TransactionList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const InvoiceList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-003',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Payment Due',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const CustomerList = [\r\n  {\r\n    id: '#S0-001',\r\n    name: 'Alex C',\r\n    companyName: 'Greenplus Enterprises',\r\n    email: 'alex@example.com',\r\n    workPhone: '9876778865',\r\n    website: 'www.greenplus.com',\r\n    subscription: '2 subscripton (Available)',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    name: 'Zen D',\r\n    companyName: 'Zencorporation',\r\n    email: 'zen@example.com',\r\n    workPhone: '839103113',\r\n    website: 'www.zencorporation.com',\r\n    subscription: '1 subscripton (Available)',\r\n  },\r\n];\r\nexport const Logs_Data = [\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Subscription has been created for the Plan.',\r\n    Customer_Info: 'Greenplus Enterprises',\r\n    Event_Source: 'Via Portal',\r\n  },\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Active  subscription created for demo',\r\n    Customer_Info: 'Zencorporation',\r\n    Event_Source: 'Via Interface',\r\n  },\r\n];\r\nexport const feature_types = [\r\n  { value: 1, title: 'switch' },\r\n  { value: 2, title: 'range' },\r\n  { value: 3, title: 'quantity' },\r\n  { value: 4, title: 'custom' },\r\n];\r\nexport const pricingModels = [\r\n  { value: 1, title: 'Flat fee' },\r\n  { value: 2, title: 'Per unit' },\r\n  { value: 3, title: 'Tiered' },\r\n  { value: 4, title: 'Volume' },\r\n  { value: 5, title: 'Stairstep' },\r\n];\r\nexport const periodUnit = ['Daily', 'Weekly', 'Monthly', 'Yearly'];\r\nexport const StaticRoutes = {\r\n  features: ['features'],\r\n  products: ['products'],\r\n};\r\nexport const plan_add_empty_data = [\r\n  {\r\n    titleIcon:\r\n      '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n    iconAlt: 'invoice-outline-icon',\r\n    title: 'Product Details',\r\n    subtitle:\r\n      'Please click the “Add” button below to add a new product. Once you clicked the button, you will be prompted to enter the name of product, description and additional details.',\r\n    btnTitle: 'Add product',\r\n    btnPath: '/#',\r\n  },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Pricing Plans',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new pricing plans. Once you clicked the button, you will be prompted to enter pricing and additional details.',\r\n  //   btnTitle: 'Add Pricing',\r\n  //   btnPath: '/#',\r\n  // },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Add-ons Details',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new add-on. Once you have click button, you will be prompted to select add-on.',\r\n  //   btnTitle: 'Add Add-on',\r\n  //   btnPath: '/#',\r\n  // },\r\n];\r\nexport const noProducts = [\r\n  {\r\n    heading: 'Products',\r\n    imgPath: '../../../../assets/images/empty-illustrations.png',\r\n    alt: 'no proudcts available',\r\n    subtext: 'Looking for Product',\r\n    text: \"Seems like you haven't added any Product. Start adding products by click on “Create Product” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Product',\r\n    path: '/products/create',\r\n  },\r\n];\r\nexport const noFeatures = [\r\n  {\r\n    heading: 'Features',\r\n    imgPath: '../../../../assets/images/empty-illustrations-2.png',\r\n    alt: 'no features available',\r\n    subtext: 'Looking for Features',\r\n    text: \"Seems like you haven't added any feature. Start adding feature by click on “Create Feature” button \",\r\n    showButton: true,\r\n    buttonTxt: 'Create Feature',\r\n    path: '/features/create',\r\n  },\r\n];\r\nexport const noPlans = [\r\n  {\r\n    heading: 'Plans',\r\n    imgPath: '../../../../assets/images/empty-illustrations-4.png',\r\n    alt: 'no Plans available',\r\n    subtext: 'Looking for Plans',\r\n    text: \"Seems like you haven't added any Plan. Start adding plan by click on “Create Plan” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Plan',\r\n    path: '/plans/create',\r\n  },\r\n];\r\nexport const noPageFound = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/404-page.png',\r\n    alt: 'No Page Found',\r\n    subtext: \"Oops! Why you're here?\",\r\n    text: \"We are very sorry for inconvenience. It looks like you're try to access a page that either has been deleted or never existed.\",\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noCustomers = [\r\n  {\r\n    heading: 'Customers',\r\n    imgPath: '../../../../assets/images/empty-illustrations-6.png',\r\n    alt: 'no customers',\r\n    subtext: 'No customer yet',\r\n    text: 'Customers No customer yet After your first customer you will be able to view it here.',\r\n    showButton: false,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const nocoupons = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noTransactions = [\r\n  {\r\n    heading: 'Transaction',\r\n    imgPath: '../../../../assets/images/empty-illustrations-5.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'NO transaction yet',\r\n    text: 'After your first transaction you will be able to view it here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const noInvoice = [\r\n  {\r\n    heading: 'Invoice',\r\n    imgPath: '../../../../assets/images/invoice-empty.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'No invoice yet',\r\n    text: 'After your first transaction you will be able to view invoice here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const noLogs = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const Stepper = [\r\n  {\r\n    id: 1,\r\n    title: 'Step 1',\r\n    caption: 'Plan Information',\r\n    isVisible: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Step 2',\r\n    caption: 'Add Plan Pricing',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Step 3',\r\n    caption: 'Product Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Step 4',\r\n    caption: 'Add-on Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Step 5',\r\n    caption: 'Charges',\r\n    isVisible: false,\r\n  },\r\n];\r\nexport const listFilterOptions = [\r\n  'Yesterday',\r\n  'Last 7 days',\r\n  'Last Week',\r\n  'Last 30 days',\r\n  'Last 4 weeks',\r\n  'Last 12 weeks',\r\n  'Current month',\r\n  'Last calendar month',\r\n];\r\n\r\nexport interface ProductVariants {\r\n  productVariantId: string;\r\n  name: string;\r\n  productID: string;\r\n  type: string;\r\n  features: { featureID: string; value: string }[];\r\n  status: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "menuOptions",
            "id": "interface-menuOptions-81a063983d5dfa4d7b4966a0c348bfe33056e4364edab4424b2ddad26b9aae931fd09de37ffe134e42d5c5b1965ba28adc58070a3f2b3a2daad11bf85c26ac54",
            "file": "src/app/modules/features/components/create-feature/create-feature.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ChangeDetectionStrategy, Component, ViewChild } from '@angular/core';\r\nimport { CdkTextareaAutosize } from '@angular/cdk/text-field';\r\nimport {\r\n  Data_Type,\r\n  User_Data,\r\n  feature_types,\r\n} from 'src/app/shared/constants/consants';\r\nimport {\r\n  FormArray,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport getUniqueId from 'src/app/core/utils/functions/getUniqueId';\r\nimport { FeatureService } from '../../services/feature.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { ProductsService } from 'src/app/modules/products/services/products.service';\r\nimport { SuccessDialogComponent } from 'src/app/shared/components/dialog-box/success-dialog/success-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\nexport interface menuOptions {\r\n  value: number;\r\n  title: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-create-feature',\r\n  templateUrl: './create-feature.component.html',\r\n  styleUrls: ['./create-feature.component.scss'],\r\n})\r\nexport class CreateFeatureComponent {\r\n  productName: Data_Type[] = User_Data;\r\n  featureType: menuOptions[] = feature_types;\r\n  subscription: Subscription;\r\n  isUnlimited: boolean = false;\r\n  preName: string = '';\r\n  postName: string = '';\r\n  position: any;\r\n  unlimitedButtonLabel: string = 'Set Unlimited';\r\n  PageNumber: any = '';\r\n  limit: any = '';\r\n  search: string = '';\r\n  sortBy: 'name' | 'createdOn';\r\n  sortOrder: 'asc' | 'desc';\r\n  productArray = [];\r\n  id: string;\r\n  isRangeSelected: boolean = false;\r\n\r\n  public featureForm: FormGroup | null;\r\n  @ViewChild('autosize') autosize: CdkTextareaAutosize;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private featureService: FeatureService,\r\n    private routes: Router,\r\n    private productService: ProductsService,\r\n    private route: ActivatedRoute,\r\n    public dialog: MatDialog,\r\n    private snackBar: MatSnackBar\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.id = this.route.snapshot.params['id'];\r\n    this.productService\r\n      .getProducts(\r\n        this.PageNumber,\r\n        this.limit,\r\n        this.search,\r\n        this.sortBy,\r\n        this.sortOrder\r\n      )\r\n      .subscribe((data) => {\r\n        this.productArray = data.map((res) => res.productId);\r\n        this.featureForm.patchValue({ productID: this.id });\r\n      });\r\n    this.feature();\r\n    this.featureForm.controls['name'].valueChanges.subscribe((value) => {\r\n      const idValue = value?.replace(/[^\\w\\s]/gi, '').replace(/\\s+/g, '-');\r\n      this.featureForm.controls['featureId'].setValue(idValue);\r\n    });\r\n  }\r\n\r\n  feature() {\r\n    this.featureForm = this.formBuilder.group({\r\n      featureId: ['', Validators.required],\r\n      productID: ['', Validators.required],\r\n      name: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(20),\r\n          Validators.pattern(/^[a-zA-Z0-9\\s]*$/),\r\n        ],\r\n      ],\r\n      description: ['', Validators.maxLength(500)],\r\n      type: ['', Validators.required],\r\n      unit: ['', Validators.required],\r\n      status: [true],\r\n      levels: this.formBuilder.array([\r\n        this.formBuilder.group({\r\n          isUnlimited: [false],\r\n          value: ['', Validators.required],\r\n          name: ['', Validators.required],\r\n        }),\r\n        this.formBuilder.group({\r\n          isUnlimited: [false],\r\n          value: ['', Validators.required],\r\n          name: ['', Validators.required],\r\n        }),\r\n      ]),\r\n    });\r\n  }\r\n\r\n  get levels() {\r\n    return this.featureForm.controls['levels'] as FormArray;\r\n  }\r\n  getLevelList(index: number) {\r\n    const levelList = this.levels.at(index) as FormGroup;\r\n    return levelList;\r\n  }\r\n  addLevels() {\r\n    this.position = this.levels.controls.length + 1;\r\n    this.levels.insert(\r\n      this.position,\r\n      this.formBuilder.group({\r\n        isUnlimited: [false],\r\n        value: ['', Validators.required],\r\n        name: ['', Validators.required],\r\n      })\r\n    );\r\n  }\r\n\r\n  deleteLevels(levelIndex: number) {\r\n    this.levels.removeAt(levelIndex);\r\n  }\r\n  toggleUnlimited() {\r\n    this.position = this.levels.controls.length - 1;\r\n    const lastLevel = this.getLevelList(this.position);\r\n    this.postName = this.featureForm.value.unit;\r\n    if (this.isUnlimited) {\r\n      lastLevel.patchValue({\r\n        value: '',\r\n        name: '',\r\n      });\r\n      this.unlimitedButtonLabel = 'Set Unlimited';\r\n    } else {\r\n      lastLevel.patchValue({\r\n        isUnlimited: true,\r\n        value: 'unlimited',\r\n        name: 'unlimited' + ' ' + this.postName + 's',\r\n      });\r\n      this.unlimitedButtonLabel = 'Set Custom Maximum';\r\n    }\r\n    this.isUnlimited = !this.isUnlimited;\r\n  }\r\n\r\n  setName(index: number) {\r\n    this.postName = this.featureForm.value.unit;\r\n    this.preName = this.featureForm.value.levels[index].value;\r\n    const displayName = this.preName + ' ' + this.postName + 's';\r\n    const currentIndex = this.getLevelList(index);\r\n    currentIndex.patchValue({\r\n      name: displayName,\r\n    });\r\n  }\r\n  onTypeSelection(value: string) {\r\n    if (value === 'range') {\r\n      this.isRangeSelected = true;\r\n      this.featureForm.controls['unit'].reset();\r\n      while (this.levels.length > 2) {\r\n        this.levels.removeAt(2); // Remove form groups starting from index 2\r\n      }\r\n      for (let i = 0; i < this.levels.length; i++) {\r\n        const formGroup = this.levels.at(i); // Get the specific form group\r\n        formGroup.patchValue({\r\n          value: '',\r\n          name: '',\r\n        });\r\n      }\r\n    } else if (value === 'quantity') {\r\n      this.isRangeSelected = false;\r\n      this.featureForm.controls['unit'].reset();\r\n\r\n      for (let i = 0; i < this.levels.length; i++) {\r\n        const formGroup = this.levels.at(i); // Get the specific form group\r\n        formGroup.patchValue({\r\n          value: '',\r\n          name: '',\r\n        });\r\n      }\r\n    } else {\r\n      this.isRangeSelected = false;\r\n    }\r\n  }\r\n  onSubmit() {\r\n    console.log('haya', this.levels.valid)\r\n    this.levels.controls.forEach((ele, index) => {\r\n      if (!ele.get('level')) {\r\n        (<FormGroup>ele).addControl('level', new FormControl(index));\r\n      } else {\r\n        ele.get('level').setValue(index);\r\n      }\r\n    });\r\n\r\n    const status = this.featureForm.value.status ? 'active' : 'draft';\r\n    let feature: any = {\r\n      featureId: this.featureForm.value.featureId,\r\n      productID: this.featureForm.value.productID,\r\n      name: this.featureForm.value.name,\r\n      description: this.featureForm.value.description,\r\n      type: this.featureForm.value.type,\r\n      status: status,\r\n      levels: [],\r\n    };\r\n    if (this.featureForm.value.type === 'quantity') {\r\n      feature = {\r\n        ...feature,\r\n        unit: this.featureForm.value.unit,\r\n        levels: this.featureForm.value.levels,\r\n      };\r\n    } else if (this.featureForm.value.type === 'custom') {\r\n      const levels = this.featureForm.value.levels.map((level: any) => {\r\n        return {\r\n          ...level,\r\n          isUnlimited: ' ',\r\n        };\r\n      });\r\n      feature = {\r\n        ...feature,\r\n        unit: this.featureForm.value.unit,\r\n        levels: levels,\r\n      };\r\n    }\r\n\r\n    if (this.featureForm.value.type === 'range') {\r\n      feature = {\r\n        ...feature,\r\n        unit: this.featureForm.value.unit,\r\n        levels: this.featureForm.value.levels,\r\n      };\r\n    }\r\n    this.subscription = this.featureService.addFeature(feature).subscribe({\r\n      next: (res: any) => {\r\n        this.openSuccess();\r\n        this.routes.navigate([`/features/view/${res.featureId}`]);\r\n        return res;\r\n      },\r\n      error: (error: any) => {\r\n        this.snackBar.open(error.error.message, '', {\r\n          duration: 5000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        })\r\n      },\r\n    });\r\n  }\r\n\r\n  onDelete() {\r\n    this.routes.navigate(['/features']);\r\n  }\r\n\r\n  openSuccess() {\r\n    this.dialog.open(SuccessDialogComponent, {\r\n      width: '420px',\r\n      data: {\r\n        module: 'Feature',\r\n        operation: 'is created',\r\n      },\r\n    });\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "menuOptions",
            "id": "interface-menuOptions-dd11ed974bdb1949b659f532fb84a1ad4c4601ac9c9d8675400a335e343f000dd9873a2bda70d4e09ec4c70ba5399670f9c10c769c1021e25dd3f4150377c0c4-1",
            "file": "src/app/modules/features/components/edit-feature/edit-feature.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CdkTextareaAutosize } from '@angular/cdk/text-field';\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport {\r\n  FormArray,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { ProductsService } from 'src/app/modules/products/services/products.service';\r\nimport { SuccessDialogComponent } from 'src/app/shared/components/dialog-box/success-dialog/success-dialog.component';\r\nimport {\r\n  Data_Type,\r\n  feature_types,\r\n  User_Data,\r\n} from 'src/app/shared/constants/consants';\r\nimport { FeatureService } from '../../services/feature.service';\r\n\r\nexport interface menuOptions {\r\n  value: number;\r\n  title: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-edit-feature',\r\n  templateUrl: './edit-feature.component.html',\r\n  styleUrls: ['./edit-feature.component.scss'],\r\n})\r\nexport class EditFeatureComponent {\r\n  featureType: menuOptions[] = feature_types;\r\n  subscription: Subscription;\r\n  isUnlimited: boolean = false;\r\n  preName: string = '';\r\n  postName: string = '';\r\n  position: any;\r\n  isRangeSelected: boolean = false;\r\n\r\n  unlimitedButtonLabel: string = 'Set Unlimited';\r\n  PageNumber: any = '';\r\n  limit: any = '';\r\n  search: string = '';\r\n  sortBy: 'name' | 'createdOn';\r\n  sortOrder: 'asc' | 'desc';\r\n  productId = [];\r\n  status: boolean;\r\n  featureForm: FormGroup = this.formBuilder.group({\r\n    featureId: ['', Validators.required],\r\n    productID: ['', Validators.required],\r\n    name: [\r\n      '',\r\n      [\r\n        Validators.required,\r\n        Validators.maxLength(20),\r\n        Validators.pattern(/^[a-zA-Z0-9\\s]*$/),\r\n      ],\r\n    ],\r\n    description: ['', Validators.maxLength(500)],\r\n    type: ['', Validators.required],\r\n    unit: [null, Validators.required],\r\n    status: [false],\r\n    levels: this.formBuilder.array([\r\n      this.formBuilder.group({\r\n        isUnlimited: [false],\r\n        value: ['', Validators.required],\r\n        name: ['', Validators.required],\r\n      }),\r\n      this.formBuilder.group({\r\n        isUnlimited: [false],\r\n        value: ['', Validators.required],\r\n        name: ['', Validators.required],\r\n      }),\r\n    ]),\r\n  });\r\n\r\n  @ViewChild('autosize') autosize: CdkTextareaAutosize;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private featureService: FeatureService,\r\n    private routes: Router,\r\n    private route: ActivatedRoute,\r\n    private productService: ProductsService,\r\n    public dialog: MatDialog,\r\n    private snackBar: MatSnackBar\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.productService\r\n      .getProducts(\r\n        this.PageNumber,\r\n        this.limit,\r\n        this.search,\r\n        this.sortBy,\r\n        this.sortOrder\r\n      )\r\n      .subscribe((data) => {\r\n        this.productId = data.map((res) => res.productId);\r\n      });\r\n    const id = this.route.snapshot.params['id'];\r\n\r\n    this.featureService.getFeatureById(id).subscribe((data) => {\r\n      this.updateForm(data);\r\n    });\r\n  }\r\n\r\n  get levels() {\r\n    return this.featureForm.controls['levels'] as FormArray;\r\n  }\r\n  getLevelList(index: number) {\r\n    const levelList = this.levels.at(index) as FormGroup;\r\n    return levelList;\r\n  }\r\n  addLevels() {\r\n    this.position = this.levels.controls.length + 1;\r\n    this.levels.insert(\r\n      this.position,\r\n      this.formBuilder.group({\r\n        isUnlimited: [false],\r\n        value: ['', Validators.required],\r\n        name: ['', Validators.required],\r\n      })\r\n    );\r\n  }\r\n\r\n  deleteLevels(levelIndex: number) {\r\n    this.levels.removeAt(levelIndex);\r\n  }\r\n  toggleUnlimited() {\r\n    this.position = this.levels.controls.length - 1;\r\n    const lastLevel = this.getLevelList(this.position);\r\n    this.postName = this.featureForm.value.unit;\r\n    if (this.isUnlimited) {\r\n      lastLevel.patchValue({\r\n        value: '',\r\n        name: '',\r\n      });\r\n      this.unlimitedButtonLabel = 'Set Unlimited';\r\n    } else {\r\n      lastLevel.patchValue({\r\n        isUnlimited: true,\r\n        value: 'Unlimited',\r\n        name: 'Unlimited' + ' ' + this.postName,\r\n      });\r\n      this.unlimitedButtonLabel = 'Set Custom Maximum';\r\n    }\r\n    this.isUnlimited = !this.isUnlimited;\r\n  }\r\n\r\n  setName(index: number) {\r\n    this.postName = this.featureForm.value.unit;\r\n    this.preName = this.featureForm.value.levels[index].value;\r\n    const displayName = this.preName + ' ' + this.postName + 's';\r\n    const currentIndex = this.getLevelList(index);\r\n    currentIndex.patchValue({\r\n      name: displayName,\r\n    });\r\n  }\r\n\r\n  onTypeSelection(value: string) {\r\n    if (value === 'switch') {\r\n      this.featureForm.removeControl('unit');\r\n    }\r\n    if (value === 'range') {\r\n      this.featureForm.addControl(\r\n        'unit',\r\n        this.formBuilder.control(null, Validators.required)\r\n      );\r\n      this.isRangeSelected = true;\r\n      let i = 0;\r\n      if (this.levels.length == 0) {\r\n        while (i < 2) {\r\n          this.addLevels();\r\n          i++;\r\n        }\r\n      }\r\n      while (this.levels.length > 2) {\r\n        this.levels.removeAt(2);\r\n      }\r\n    }\r\n    if (value === 'quantity' || value === 'custom') {\r\n      this.isRangeSelected = false;\r\n      this.featureForm.addControl(\r\n        'unit',\r\n        this.formBuilder.control(null, Validators.required)\r\n      );\r\n\r\n      let i = 0;\r\n      if (this.levels.length == 0) {\r\n        while (i < 2) {\r\n          this.addLevels();\r\n          i++;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  updateForm(res: any) {\r\n    if (res.status === 'active') {\r\n      this.status = true;\r\n    } else if (res.status === 'draft') {\r\n      this.status = false;\r\n    }\r\n    if (res.type === 'range') {\r\n      this.isRangeSelected = true;\r\n    }\r\n    this.featureForm.patchValue({\r\n      featureId: res.featureId,\r\n      productID: res.product.productId,\r\n      name: res.name,\r\n      description: res.description,\r\n      type: res.type,\r\n      status: this.status,\r\n      unit: res.unit,\r\n      levels: res.levels,\r\n    });\r\n    if (Array.isArray(res.levels) && res.levels.length >= 0) {\r\n      const levelsControl = this.featureForm.get('levels') as FormArray;\r\n      levelsControl.clear();\r\n\r\n      res.levels.forEach((level: any) => {\r\n        const levelGroup = this.formBuilder.group({\r\n          isUnlimited: [level.isUnlimited],\r\n          level: [level.level],\r\n          name: [level.name],\r\n          value: [level.value],\r\n        });\r\n\r\n        levelsControl.push(levelGroup);\r\n      });\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    this.levels.controls.forEach((ele, index) => {\r\n      if (!ele.get('level')) {\r\n        (<FormGroup>ele).addControl('level', new FormControl(index));\r\n      } else {\r\n        ele.get('level').setValue(index);\r\n      }\r\n    });\r\n\r\n    const status = this.featureForm.value.status ? 'active' : 'draft';\r\n    let feature: any = {\r\n      featureId: this.featureForm.value.featureId,\r\n      productID: this.featureForm.value.productID,\r\n      name: this.featureForm.value.name,\r\n      description: this.featureForm.value.description,\r\n      type: this.featureForm.value.type,\r\n      status: status,\r\n      levels: [],\r\n    };\r\n    if (this.featureForm.value.type === 'quantity') {\r\n      feature = {\r\n        ...feature,\r\n        unit: this.featureForm.value.unit,\r\n        levels: this.featureForm.value.levels,\r\n      };\r\n    } else if (this.featureForm.value.type === 'custom') {\r\n      const levels = this.featureForm.value.levels.map((level: any) => {\r\n        return {\r\n          ...level,\r\n          isUnlimited: '',\r\n        };\r\n      });\r\n      feature = {\r\n        ...feature,\r\n        unit: this.featureForm.value.unit,\r\n        levels: levels,\r\n      };\r\n    }\r\n\r\n    if (this.featureForm.value.type === 'range') {\r\n      feature = {\r\n        ...feature,\r\n        unit: this.featureForm.value.unit,\r\n        levels: this.featureForm.value.levels,\r\n      };\r\n    }\r\n    this.subscription = this.featureService\r\n      .updateFeature(this.featureForm.value.featureId, feature)\r\n      .subscribe({\r\n        next: (res: any) => {\r\n          this.openSuccess();\r\n          this.routes.navigate([`/features/view/${res.featureId}`]);\r\n          return res;\r\n        },\r\n        error: (error: any) => {\r\n          this.snackBar.open(error.error.message, '', {\r\n            duration: 5000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          })\r\n        },\r\n      });\r\n  }\r\n\r\n  onDelete() {\r\n    this.routes.navigate(['/features']);\r\n  }\r\n\r\n  openSuccess() {\r\n    this.dialog.open(SuccessDialogComponent, {\r\n      width: '420px',\r\n      data: {\r\n        module: 'Feature',\r\n        operation: 'is updated',\r\n      },\r\n    });\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "menuOptions-1"
        },
        {
            "name": "PeriodicElement",
            "id": "interface-PeriodicElement-a954f7c4ecf737664cb8ffad1a680d5d30e0be32153a7a36554a0cf84b91128a3dcb71d85e7fa09bcbf24a0449484ee44a56179770eaabd9639acf00540bf3f9",
            "file": "src/app/modules/features/components/view-feature/view-feature.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FeatureService } from '../../services/feature.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  weight: number;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  { name: 'Hydrogen', weight: 1.0079 },\r\n  { name: 'Helium', weight: 4.0026 },\r\n];\r\n\r\nconst FEATURE_TYPE = 'custom';\r\n\r\n@Component({\r\n  selector: 'app-view-feature',\r\n  templateUrl: './view-feature.component.html',\r\n  styleUrls: ['./view-feature.component.scss'],\r\n})\r\nexport class ViewFeatureComponent implements OnInit {\r\n  displayedColumns: string[] = ['name', 'weight'];\r\n  dataSource = ELEMENT_DATA;\r\n  featureTypes = FEATURE_TYPE;\r\n  clickedRows = new Set<PeriodicElement>();\r\n  featureDetails: any;\r\n  productName: string;\r\n  productStatus: string;\r\n  productId: string;\r\n  featureName: string;\r\n  featureType: string;\r\n  description: string;\r\n  unit: string;\r\n  status: string;\r\n  id: string;\r\n  levelsArray: any = [];\r\n  isUnlimited: string;\r\n  displayName: string;\r\n  displayNameArray: any = [];\r\n  valueArray: any = [];\r\n  level: number;\r\n  value: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  featureId: string;\r\n  valueOne: string;\r\n  valueTwo: string;\r\n  imageUrl: string;\r\n  imagePath: string;\r\n  environment = environment;\r\n\r\n  constructor(\r\n    private featureService: FeatureService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.id = this.route.snapshot.params['id'];\r\n    this.featureService.getFeatureById(this.id).subscribe((res) => {\r\n      this.featureDetails = res;\r\n      this.featureName = this.featureDetails?.name;\r\n      this.featureId = this.featureDetails?.featureId;\r\n      this.featureType = this.featureDetails?.type;\r\n      this.status = this.featureDetails?.status;\r\n      this.description = this.featureDetails?.description;\r\n      this.unit = this.featureDetails?.unit;\r\n      this.productId = this.featureDetails?.product.productId;\r\n      this.productName = this.featureDetails?.product.name;\r\n      this.imageUrl = this.featureDetails?.product.imageUrl;\r\n      this.imagePath = this.environment.blobStorage;\r\n      this.productStatus = this.featureDetails?.product.status;\r\n      this.createdOn = this.featureDetails?.createdOn;\r\n      this.modifiedOn = this.featureDetails?.modifiedOn;\r\n      this.levelsArray = Object.values(this.featureDetails?.levels);\r\n      this.levelsArray.forEach((data: any, index: number) => {\r\n        this.isUnlimited = data.isUnlimited;\r\n        this.displayName = data.name;\r\n        this.level = data.level;\r\n        this.value = data.value;\r\n        this.valueArray[index] = this.value;\r\n        this.valueOne = this.valueArray[0];\r\n        this.valueTwo = this.valueArray[1];\r\n        this.displayNameArray[index] = this.displayName;\r\n      });\r\n    });\r\n  }\r\n\r\n  editFeature() {\r\n    this.router.navigate([`/features/edit-feature/${this.id}`]);\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "weight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "PeriodicElement",
            "id": "interface-PeriodicElement-1215067d1a8730b32651809b178a609e325ab6d5227e1ddfcc9f262f1c5ebc2c0bebc724421fff58d432d05d5ca17fcb4258b8e8e5e4216cf1cc4b2c96630ada-1",
            "file": "src/app/modules/plans/components/add-ons-details/add-ons-details.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FeatureDetailsPopupComponent } from 'src/app/shared/components/dialog-box/feature-details-popup/feature-details-popup.component';\r\nimport { plan_add_empty_data } from 'src/app/shared/constants/consants';\r\n\r\n\r\nexport interface PeriodicElement {\r\n  id: string,\r\n  name: string;\r\n  status: string;\r\n  Product: number | string;\r\n  type: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  { id:'element123456', name: 'Host online calls', status: \"Active\",Product: 'Microsoft Teams', type: 'Switch' },\r\n  {  id:'element1234', name: 'Union all information', status: \"Active\",Product: 'Microsoft Teams', type: 'Range' },\r\n  {  id:'element12', name: 'Create team sites', status: \"Active\",Product: 'Microsoft Teams', type: 'Custom' },\r\n];\r\n@Component({\r\n  selector: 'app-add-ons-details',\r\n  templateUrl: './add-ons-details.component.html',\r\n  styleUrls: ['./add-ons-details.component.scss']\r\n})\r\nexport class AddOnsDetailsComponent {\r\n  planAddEmptyData = plan_add_empty_data;\r\n  constructor(public dialog: MatDialog) {}\r\n  selected = 'option1';\r\n  displayedColumns: string[] = [\r\n    'select',\r\n    'name',\r\n    'status',     \r\n    'Product',\r\n    'type',\r\n  ];\r\n  dataSource: any =  ELEMENT_DATA;\r\n  selection = new SelectionModel<PeriodicElement>(true, []);\r\n\r\n  openPopup(){\r\n    this.dialog.open(FeatureDetailsPopupComponent, {\r\n    });\r\n  }\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  toggleAllRows() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n\r\n    this.selection.select(...this.dataSource);\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: PeriodicElement): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row `;\r\n  }\r\n\r\n  selectedRow(selectedID: string, event: any) {\r\n    const selectedRow = document.getElementById(`${selectedID}`);\r\n    if (selectedRow != null) {\r\n      selectedRow.classList.toggle('selected-row');\r\n    }\r\n    event.stopPropagation();\r\n  }\r\n  selectAll(data: any[]) {\r\n    if (this.isAllSelected()) {\r\n      data.map((element: any) => {\r\n        document.getElementById(element.id)?.classList.add('selected-row');\r\n      });\r\n    } else {\r\n      data.map((element: any) => {\r\n        document.getElementById(element.id)?.classList.remove('selected-row');\r\n      });\r\n    }\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "Product",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "PeriodicElement-1"
        },
        {
            "name": "PeriodicElement",
            "id": "interface-PeriodicElement-32b2e40212b2ffe6144456964eb067241732d4f61371c1107162ba940d7362f346ffce2c75f13256bc980ec3f97ceefc6976812de5ae01bdddc09c00b6e205ef-2",
            "file": "src/app/modules/plans/components/create-plan/create-plan.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, ViewChild, ElementRef, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription, takeUntil } from 'rxjs';\r\nimport { FeatureDetailsPopupComponent } from 'src/app/shared/components/dialog-box/feature-details-popup/feature-details-popup.component';\r\nimport { SuccessDialogComponent } from 'src/app/shared/components/dialog-box/success-dialog/success-dialog.component';\r\nimport {\r\n  Stepper,\r\n  plan_add_empty_data,\r\n} from 'src/app/shared/constants/consants';\r\nimport { PlanService } from '../../services/plan.service';\r\nimport { GlobalService } from 'src/app/core/services/global.service';\r\n\r\nexport interface PeriodicElement {\r\n  PricingCycle: string;\r\n  Price: any;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  { PricingCycle: 'Daily', Price: 'Set Price' },\r\n  { PricingCycle: 'Weekly', Price: 'Set Price' },\r\n  { PricingCycle: 'Monthly', Price: 'Set Price' },\r\n  { PricingCycle: 'Yearly', Price: 'Set Price' },\r\n];\r\n\r\n@Component({\r\n  selector: 'app-create-plan',\r\n  templateUrl: './create-plan.component.html',\r\n  styleUrls: ['./create-plan.component.scss'],\r\n})\r\nexport class CreatePlanComponent implements OnInit {\r\n  values: any;\r\n  priceColumn: string[] = [\r\n    'PricingCycle',\r\n    'PricingModel',\r\n    'BillingCycle',\r\n    'Price',\r\n    'action',\r\n  ];\r\n  priceData: any[] = [];\r\n  planAddEmptyData = plan_add_empty_data;\r\n  stepsTitle = Stepper;\r\n  displayedColumns: string[] = ['PricingCycle', 'Price'];\r\n  dataSource = ELEMENT_DATA;\r\n  clickedRows = new Set<PeriodicElement>();\r\n  testId: string;\r\n  planForm: FormGroup;\r\n  subscription: Subscription;\r\n  data$ = this.planService.plan$;\r\n  productDetails: any = [];\r\n  productID: string;\r\n  name: string;\r\n  featureId: string;\r\n  entitlement: string;\r\n  PageNumber: any = '';\r\n  limit: any = '';\r\n  planId: string;\r\n  featureLength: string;\r\n  dialogRef: any;\r\n  public stepOneCompleted: boolean = false;\r\n  editable: boolean = false;\r\n  features: { featureId: string; entitlement: string }[] = [];\r\n  @ViewChild('step1') step1: ElementRef;\r\n  @ViewChild('step2') step2: ElementRef;\r\n  @ViewChild('step3') step3: ElementRef;\r\n  @ViewChild('step4') step4: ElementRef;\r\n  @ViewChild('step5') step5: ElementRef;\r\n\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private planService: PlanService,\r\n    private global: GlobalService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.planDetails();\r\n    this.planId = this.route.snapshot.params['id'];\r\n    this.getPlanById(this.planId);\r\n    this.planService.plan$.subscribe((data) => {\r\n      if (data) {\r\n        this.productDetails = data;\r\n        for (const product of this.productDetails) {\r\n          this.productID = product.productID;\r\n          this.name = product.name;\r\n          this.featureLength = product.features.length;\r\n\r\n          for (const feature of product.features) {\r\n            this.featureId = feature.featureId;\r\n            this.entitlement = feature.value;\r\n            this.features.push({\r\n              featureId: this.featureId,\r\n              entitlement: this.entitlement,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    });\r\n    if (this.stepOneCompleted) {\r\n      const pageNumber = 1;\r\n      const limit = 100;\r\n      const search = '';\r\n      this.planService.getPrice(pageNumber, limit, search).subscribe(\r\n        (res) =>\r\n          (this.priceData = res.data.filter((item) => {\r\n            if (item.planId === this.planId) {\r\n              console.log('res.data', item);\r\n              return item;\r\n            }\r\n          }))\r\n      );\r\n    }\r\n  }\r\n  getPlanById(id: string) {\r\n    if (id) {\r\n      this.stepOneCompleted = true;\r\n      this.global.showLoader();\r\n      this.planService\r\n        .getPlanById(id)\r\n        .pipe(takeUntil(this.global.componentDestroyed(this)))\r\n        .subscribe((res) => {\r\n          this.patchValue(res.data);\r\n          this.editable = true;\r\n        });\r\n    } else {\r\n      this.stepOneCompleted = false;\r\n      this.editable = false;\r\n    }\r\n  }\r\n  patchValue(data) {\r\n    this.planForm.patchValue({\r\n      planId: data.planId,\r\n      internalName: data.internalName,\r\n      externalName: data.externalName,\r\n      type: data.type,\r\n      description: data.description,\r\n      status: data.status,\r\n    });\r\n    this.global.hideLoader();\r\n  }\r\n\r\n  planDetails() {\r\n    this.planForm = this.formBuilder.group({\r\n      planId: ['', Validators.required],\r\n      internalName: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(20),\r\n          Validators.pattern(/^[a-zA-Z0-9\\s]*$/),\r\n        ],\r\n      ],\r\n      externalName: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(20),\r\n          Validators.pattern(/^[a-zA-Z0-9\\s]*$/),\r\n        ],\r\n      ],\r\n      type: [''],\r\n      description: ['', Validators.maxLength(500)],\r\n      status: [true],\r\n    });\r\n  }\r\n\r\n  setPlanId(event: any) {\r\n    if (!this.editable) {\r\n      const idValue = event.target.value\r\n        ?.replace(/[^\\w\\s]/gi, '')\r\n        .replace(/\\s+/g, '-');\r\n      this.planForm.get('planId').setValue(idValue);\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    this.global.showLoader();\r\n    console.log('check new form');\r\n    const status = this.planForm.value.status ? 'active' : 'disabled';\r\n    const type = 'base';\r\n    const plan = {\r\n      ...this.planForm.value,\r\n      type: type,\r\n      status: status,\r\n    };\r\n    this.stepOneCompleted = true;\r\n    if (!this.editable) {\r\n      this.planService\r\n        .addPlan(plan)\r\n        .pipe(takeUntil(this.global.componentDestroyed(this)))\r\n        .subscribe({\r\n          next: (res: any) => {\r\n            this.openSuccess(plan.planId);\r\n            this.global.hideLoader();\r\n            return res;\r\n          },\r\n          error: (err: any) => {\r\n            console.log('something wrong occured', err);\r\n          },\r\n        });\r\n    } else if (this.editable) {\r\n      this.planService\r\n        .updatePlan(plan, this.planId)\r\n        .pipe(takeUntil(this.global.componentDestroyed(this)))\r\n        .subscribe((res) => {\r\n          this.openSuccess(plan.planId);\r\n          this.global.hideLoader();\r\n        });\r\n    }\r\n  }\r\n  onDelete(id: string) {\r\n    this.planService.deleteProductVariant(id).subscribe(() => {\r\n      this.data$.subscribe((res) => {\r\n        return res;\r\n      });\r\n    });\r\n  }\r\n\r\n  openPopup(feature: any) {\r\n    this.dialog.open(FeatureDetailsPopupComponent, {\r\n      data: {\r\n        featureId: feature,\r\n      },\r\n    });\r\n  }\r\n  // editPrice(id){\r\n  //   this.planService.setEditPrice(true);\r\n  //   this.router.navigate([`/plans/create/set-price/${id}`])\r\n  // }\r\n  editProductVariant(id: string) {\r\n    this.router.navigate([`/plans/create/edit-product-detail/${id}`]);\r\n  }\r\n  switchStepper(step: any) {\r\n    const stepId = step.id;\r\n    if (stepId === 1) {\r\n      this.step1.nativeElement.scrollIntoView({ behavior: 'smooth' });\r\n    } else if (stepId === 2) {\r\n      this.step2.nativeElement.scrollIntoView({ behavior: 'smooth' });\r\n    } else if (stepId === 3) {\r\n      this.step3.nativeElement.scrollIntoView({ behavior: 'smooth' });\r\n    } else if (stepId === 4) {\r\n      this.step4.nativeElement.scrollIntoView({ behavior: 'smooth' });\r\n    } else if (stepId === 5) {\r\n      this.step5.nativeElement.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n    // const element = this.step3.nativeElement;\r\n    // window.scrollTo({\r\n    //   top: element.offsetTop,\r\n    //   behavior: 'smooth'\r\n    // })\r\n  }\r\n  arr = [\r\n    {\r\n      step: 'step1',\r\n      id: 'cdk-step-label-0-0',\r\n      attributeValue: 'false',\r\n    },\r\n    {\r\n      step: 'step2',\r\n      id: 'cdk-step-label-0-1',\r\n      attributeValue: 'false',\r\n    },\r\n    {\r\n      step: 'step3',\r\n      id: 'cdk-step-label-0-2',\r\n      attributeValue: 'false',\r\n    },\r\n    {\r\n      step: 'step4',\r\n      id: 'cdk-step-label-0-3',\r\n      attributeValue: 'false',\r\n    },\r\n    {\r\n      step: 'step5',\r\n      id: 'cdk-step-label-0-4',\r\n      attributeValue: 'false',\r\n    },\r\n  ];\r\n  ngAfterViewInit() {\r\n    // Initialize Intersection Observer\r\n    const observer = new IntersectionObserver((entries, observer) => {\r\n      let findCurrent = entries.find((ele) => ele.isIntersecting == true);\r\n      if (findCurrent) {\r\n        this.testId = String(findCurrent.target.id);\r\n        this.arr.forEach((ele) => {\r\n          if (ele.step == this.testId) {\r\n            document\r\n              .getElementById(ele.id)\r\n              ?.setAttribute('aria-selected', 'true');\r\n          } else {\r\n            document\r\n              .getElementById(ele.id)\r\n              ?.setAttribute('aria-selected', ele.attributeValue);\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    // Start observing the element\r\n    const testArr = [\r\n      this.step1,\r\n      this.step2,\r\n      this.step3,\r\n      this.step4,\r\n      this.step5,\r\n    ];\r\n    testArr.forEach((element: any) => {\r\n      observer.observe(element.nativeElement);\r\n    });\r\n  }\r\n\r\n  openSuccess(id) {\r\n    this.dialogRef = this.dialog.open(SuccessDialogComponent, {\r\n      width: '420px',\r\n      data: {\r\n        module: 'Plan',\r\n        operation: 'is created',\r\n      },\r\n    });\r\n    this.dialogRef.afterClosed().subscribe((res: any) => {\r\n      if (res) {\r\n        this.router.navigate([`/plans/create/${id}`]);\r\n      }\r\n    });\r\n  }\r\n  removeType(index: any) {\r\n    this.planService.priceModelArr.splice(index, 1);\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "Price",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "PricingCycle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "PeriodicElement-2"
        },
        {
            "name": "PeriodicElement",
            "id": "interface-PeriodicElement-6a67ce28e2c91c37ca926bb779e3c57c9420476da99af638ad327cd9f17d05058719d775d3c5479d4f9697fe33174096dc0f7676fcdebe86877cb8a1f14f6458-3",
            "file": "src/app/modules/plans/components/edit-product-details/edit-product-details.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ProductsService } from 'src/app/modules/products/services/products.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { PlanService } from '../../services/plan.service';\r\nimport { SuccessDialogComponent } from 'src/app/shared/components/dialog-box/success-dialog/success-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\nexport interface PeriodicElement {\r\n  featureId: string;\r\n  value: string;\r\n  type?: string;\r\n  levels: { featureID: string; value: string }[];\r\n  name: string;\r\n  position: number | string;\r\n  status: string;\r\n  symbol: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-edit-product-details',\r\n  templateUrl: './edit-product-details.component.html',\r\n  styleUrls: ['./edit-product-details.component.scss'],\r\n})\r\nexport class EditProductDetailsComponent implements OnInit {\r\n  selected = 'option1';\r\n  displayedColumns: string[] = [\r\n    'select',\r\n    'position',\r\n    'name',\r\n    'status',\r\n    'symbol',\r\n  ];\r\n  selection = new SelectionModel<PeriodicElement>(true, []);\r\n\r\n  PageNumber: any = '';\r\n  limit: any = '';\r\n  search: string = '';\r\n  sortBy: 'name' | 'createdOn';\r\n  sortOrder: 'asc' | 'desc';\r\n  productData: any = [];\r\n  id: string;\r\n  selectProductId: string = '';\r\n  featureDetails: any = [];\r\n  subscription: Subscription;\r\n  isProductIdSelected: boolean = true;\r\n  selectedProduct: any;\r\n  selectedFeatures: PeriodicElement[] = [];\r\n  isAvailable: boolean = true;\r\n\r\n  productForm: FormGroup = this.formBuilder.group({\r\n    productID: ['', Validators.required],\r\n    productName: ['', Validators.required],\r\n    description: [''],\r\n  });\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private routes: Router,\r\n    private productService: ProductsService,\r\n    private route: ActivatedRoute,\r\n    private planService: PlanService,\r\n    public dialog: MatDialog\r\n  ) {}\r\n  ngOnInit(): void {\r\n    this.id = this.route.snapshot.params['id'];\r\n    this.planService.getProductVariantById(this.id).subscribe((data) => {\r\n      console.log('a', data);\r\n      this.selectProductId = data.productID;\r\n      this.featureDetails = data.features;\r\n\r\n      this.productService\r\n        .getProducts(\r\n          this.PageNumber,\r\n          this.limit,\r\n          this.search,\r\n          this.sortBy,\r\n          this.sortOrder\r\n        )\r\n        .subscribe((data) => {\r\n          this.productData = data;\r\n\r\n          const selectedProduct = this.productData.find(\r\n            (product) => product.productId === this.selectProductId\r\n          );\r\n          if (selectedProduct) {\r\n            this.selectProduct(selectedProduct.productId);\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  selectProduct(productId: string) {\r\n    this.selectedProduct = this.productData.find(\r\n      (product) => product.productId === productId\r\n    );\r\n    if (this.selectedProduct) {\r\n      this.productForm.patchValue({\r\n        productName: this.selectedProduct.name,\r\n        description: this.selectedProduct.description,\r\n      });\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    const productVariant = {\r\n      type: 'base',\r\n      status: 'active',\r\n      features: this.selectedFeatures.map((features) => {\r\n        if (features.type === 'quantity') {\r\n          return {\r\n            featureID: features.featureId,\r\n            value: features.value,\r\n          };\r\n        } else {\r\n          return {\r\n            featureID: features.featureId,\r\n            value: this.isAvailable ? true : false,\r\n          };\r\n        }\r\n      }),\r\n    };\r\n\r\n    this.subscription = this.planService\r\n      .updateProductVariant(this.id, productVariant)\r\n      .subscribe({\r\n        next: (res: any) => {\r\n          this.openSuccess();\r\n          this.routes.navigate(['/plans/create']);\r\n          return res;\r\n        },\r\n        error: (err: any) => {\r\n          console.log('something wrong occured', err);\r\n        },\r\n      });\r\n  }\r\n\r\n  onDelete() {\r\n    this.routes.navigate(['/plans/create']);\r\n  }\r\n\r\n  openSuccess() {\r\n    this.dialog.open(SuccessDialogComponent, {\r\n      width: '420px',\r\n      data: {\r\n        module: 'Product-variant',\r\n        operation: 'is updated',\r\n      },\r\n    });\r\n  }\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.productData.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  toggleAllRows() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n\r\n    this.selection.select(...this.productData);\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: PeriodicElement): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row `;\r\n  }\r\n\r\n  toggleCheckbox(row: PeriodicElement) {\r\n    this.selection.toggle(row);\r\n    if (this.selection.isSelected(row)) {\r\n      this.selectedFeatures.push(row);\r\n    } else {\r\n      const index = this.selectedFeatures.findIndex(\r\n        (feature) => feature.featureId === row.featureId\r\n      );\r\n      if (index !== -1) {\r\n        this.selectedFeatures.splice(index, 1);\r\n      }\r\n    }\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "featureId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "levels",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "symbol",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 3,
            "duplicateName": "PeriodicElement-3"
        },
        {
            "name": "PeriodicElement",
            "id": "interface-PeriodicElement-4481b6496a2db52dbca5afe379b172f962dcfe062ac98788b10e948aecd0732db799da83fb0fae5ece6fb3fab7520db29c1f6463f6751c33bd5adb71d7c820d1-4",
            "file": "src/app/modules/plans/components/product-details/product-details.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { ProductsService } from 'src/app/modules/products/services/products.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { ProductDetailsService } from '../../services/product-details.service';\r\nimport { SuccessDialogComponent } from 'src/app/shared/components/dialog-box/success-dialog/success-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatCheckboxChange } from '@angular/material/checkbox';\r\nimport { Router } from '@angular/router';\r\n\r\nexport interface PeriodicElement {\r\n  featureId: string;\r\n  value: string;\r\n  name: string;\r\n  type?: string;\r\n  position: number | string;\r\n  status: string;\r\n  symbol: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-product-details',\r\n  templateUrl: './product-details.component.html',\r\n  styleUrls: ['./product-details.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductDetailsComponent implements OnInit {\r\n  subscription: Subscription;\r\n  PageNumber: any = '';\r\n  limit: any = '';\r\n  search: string = '';\r\n  sortBy: 'name' | 'createdOn';\r\n  sortOrder: 'asc' | 'desc';\r\n  productData = [];\r\n  filteredFeatures = [];\r\n  selectedFeatures: PeriodicElement[] = [];\r\n  productId: string = '';\r\n  isProductSelected: boolean = false;\r\n  isButtonDisabled: boolean = true;\r\n  selectedOption: boolean;\r\n  disabled: boolean;\r\n  isCheckboxChecked: boolean = false;\r\n  selectedLevelFromDropdown: { [key: string]: any } = {};\r\n  clicked = false;\r\n  rangeForm: FormGroup;\r\n  loading = false;\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private formBuilder: FormBuilder,\r\n    private productService: ProductsService,\r\n    private productDetailsService: ProductDetailsService,\r\n    private routes: Router\r\n  ) {}\r\n\r\n  displayedColumns: string[] = [\r\n    'select',\r\n    'position',\r\n    'name',\r\n    'status',\r\n    'symbol',\r\n  ];\r\n  selection = new SelectionModel<PeriodicElement>(true, []);\r\n\r\n  formGroup = this.formBuilder.group({\r\n    productID: [''],\r\n    productName: [''],\r\n    description: [''],\r\n  });\r\n\r\n  ngOnInit() {\r\n    this.getProduct(this.PageNumber, this.limit, this.search);\r\n    this.productService.product$.subscribe((data) => {\r\n      if (data) {\r\n        this.productData = data;\r\n      }\r\n    });\r\n  }\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.productData.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  toggleAllRows() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n\r\n    this.selection.select(...this.productData);\r\n  }\r\n\r\n  checkboxLabel(row?: PeriodicElement): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row `;\r\n  }\r\n  selectedOptions: { [key: string]: boolean } = {};\r\n\r\n  toggleCheckbox(event: MatCheckboxChange, row: PeriodicElement) {\r\n    if (event.checked) {\r\n      this.isButtonDisabled = false;\r\n      this.selection.select(row);\r\n      this.selectedFeatures.push(row);\r\n    } else {\r\n      this.selection.deselect(row);\r\n      const index = this.selectedFeatures.findIndex(\r\n        (feature) => feature.featureId === row.featureId\r\n      );\r\n      if (index !== -1) {\r\n        this.selectedFeatures.splice(index, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  onSelectedLevelChange(featureId: string, level: any) {\r\n    this.selectedLevelFromDropdown[featureId] = level;\r\n  }\r\n\r\n  getProduct(PageNumber: number, limit: number, search: string) {\r\n    this.productService\r\n      .getProducts(\r\n        this.PageNumber,\r\n        this.limit,\r\n        this.search,\r\n        this.sortBy,\r\n        this.sortOrder\r\n      )\r\n      .subscribe(() => {});\r\n  }\r\n\r\n  selectProduct(product) {\r\n    this.productId = product.productId;\r\n    this.isProductSelected = true;\r\n    this.formGroup.controls.productName.patchValue(product.name);\r\n    this.formGroup.controls.description.patchValue(product.description);\r\n    this.filteredFeatures = product.feature;\r\n    const rangeFormControls = {};\r\n    this.filteredFeatures.forEach((feature) => {\r\n      const minValue = feature.levels[0]?.value;\r\n      const maxValue = feature.levels[1]?.value;\r\n      if (feature.type === 'range') {\r\n        const rangeValue = [\r\n          '',\r\n          [\r\n            Validators.required,\r\n            Validators.min(Math.min(minValue, maxValue)),\r\n            Validators.max(Math.max(minValue, maxValue)),\r\n          ],\r\n        ];\r\n        rangeFormControls[feature.featureId] = rangeValue;\r\n        feature.minValue = Math.min(minValue, maxValue);\r\n        feature.maxValue = Math.max(minValue, maxValue);\r\n      }\r\n    });\r\n\r\n    this.rangeForm = this.formBuilder.group(rangeFormControls);\r\n  }\r\n  openSuccess() {\r\n    this.dialog.open(SuccessDialogComponent, {\r\n      width: '420px',\r\n      data: {\r\n        module: 'Product-variant',\r\n        operation: 'Created',\r\n      },\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.loading = true;\r\n    const formData = this.formGroup.value;\r\n    const productVariantName = formData.productName + ' product Variant';\r\n    const productVariantId = productVariantName\r\n      .replace(/\\s+/g, '-')\r\n      .toLowerCase();\r\n\r\n    const features = this.selectedFeatures.map((productVariantFeature) => {\r\n      switch (productVariantFeature.type) {\r\n        case 'quantity':\r\n        case 'custom':\r\n          const values =\r\n            this.selectedLevelFromDropdown[productVariantFeature.featureId];\r\n          return {\r\n            featureID: productVariantFeature.featureId,\r\n            value: values,\r\n          };\r\n        case 'switch':\r\n          return {\r\n            featureID: productVariantFeature.featureId,\r\n            value: this.selectedOptions[productVariantFeature.featureId],\r\n          };\r\n        case 'range':\r\n          return {\r\n            featureID: productVariantFeature.featureId,\r\n            value: this.rangeForm.get(productVariantFeature.featureId).value,\r\n          };\r\n        default:\r\n          return null;\r\n      }\r\n    });\r\n    const payload = {\r\n      productVariantId: productVariantId,\r\n      name: productVariantName,\r\n      productID: this.productId,\r\n      type: 'base',\r\n      features: features,\r\n      status: 'active',\r\n    };\r\n    this.clicked = false;\r\n    this.subscription = this.productDetailsService\r\n      .createProductVariant(payload)\r\n      .subscribe({\r\n        next: (res) => {\r\n          this.loading = false;\r\n          this.isButtonDisabled = true;\r\n          this.openSuccess();\r\n          this.routes.navigate([`/plans/create`]);\r\n          this.formGroup.reset();\r\n          this.rangeForm.reset();\r\n          this.selectedFeatures = [];\r\n          return res;\r\n        },\r\n        error: (err: any) => {\r\n          this.loading = false;\r\n          this.formGroup.reset();\r\n          this.rangeForm.reset();\r\n          this.routes.navigate([`/plans/create`]);\r\n          this.selectedFeatures = [];\r\n          console.log('something wrong occured', err.error.message);\r\n        },\r\n      });\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "featureId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "symbol",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 4,
            "duplicateName": "PeriodicElement-4"
        },
        {
            "name": "PeriodicElement",
            "id": "interface-PeriodicElement-e2b854e73187fbc5e90d430a7df8000997f191d8aaf88750a4c212dfff3fe16d5a172afd1854a36c1026b4f716df17c2d05362674e33e1c0311b7b2b1604fd11-5",
            "file": "src/app/modules/plans/components/view-plans/view-plans.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\nexport interface PeriodicElement {\r\n  PricingCycle: string;\r\n  Price: any;\r\n  Currency: any;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  { Currency: '', PricingCycle: 'Daily', Price: '$100/Unit' },\r\n  { Currency: '', PricingCycle: 'Weekly', Price: '$100/Unit' },\r\n  { Currency: '', PricingCycle: 'Monthly', Price: '$100/Unit' },\r\n  { Currency: '', PricingCycle: 'Yearly', Price: '$100/Unit' },\r\n];\r\n\r\n@Component({\r\n  selector: 'app-view-plans',\r\n  templateUrl: './view-plans.component.html',\r\n  styleUrls: ['./view-plans.component.scss'],\r\n})\r\nexport class ViewPlansComponent {\r\n  displayedColumns: string[] = ['Currency', 'PricingCycle', 'Price'];\r\n  dataSource = ELEMENT_DATA;\r\n  clickedRows = new Set<PeriodicElement>();\r\n  panelOpenState = false;\r\n  toggle() {\r\n    this.panelOpenState = !this.panelOpenState;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "Currency",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "Price",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "PricingCycle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 5,
            "duplicateName": "PeriodicElement-5"
        },
        {
            "name": "Plan",
            "id": "interface-Plan-909fa3dce09599287106c3f3da3f0937a6e5c6871a710630a9736728d8608dd49fd2a191015bdfda04f21b892c532494e6d23ba5a32be2bd656206fc8e6b3892",
            "file": "src/app/shared/constants/consants.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n}\r\nexport interface Data_Type {\r\n  product_ID: string;\r\n  title: string;\r\n  description: string;\r\n  features: string[];\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface selectOptions {\r\n  value: number;\r\n  title: string;\r\n}\r\nexport interface features {\r\n  feature_id: string;\r\n  product_name: string;\r\n  feature_name: string;\r\n  description: string;\r\n  feature_type: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\n\r\nexport interface coupon {\r\n  coupon_id: string;\r\n  coupon_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface loginCredientials {\r\n  csrf_token:string,\r\n  method: string,\r\n  password_identifier: string,\r\n  password: string\r\n}\r\nexport interface Product {\r\n  productId: string;\r\n  imageUrl: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface GetProduct {\r\n  productId: string;\r\n  imageUrl: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface plansFields {\r\n  plan_ID: string;\r\n  external_name: string;\r\n  internal_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Feature {\r\n  featureId: string;\r\n  productId: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n  unit: string;\r\n  levels: [];\r\n}\r\nexport interface FeatureList {\r\n  featureId: number;\r\n  name: string;\r\n  productName: string;\r\n  levels: [];\r\n  description: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  type: string;\r\n  status: string;\r\n}\r\nexport interface Customer {\r\n  id: string;\r\n  name: string;\r\n  companyName: string;\r\n  email: string,\r\n  workPhone: string,\r\n  website: string,\r\n  subscription: string\r\n}\r\nexport interface GetFeature {\r\n  featureId: string;\r\n  productID: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n}\r\n\r\nexport interface invoice {\r\n  id: string;\r\n  customer_info: string;\r\n  issued_on: string;\r\n  voided_on: string;\r\n  paid_on: string;\r\n  created_at: string;\r\n  status: string;\r\n  amount: string;\r\n}\r\n\r\nexport interface logs {\r\n  Timestamp: any;\r\n  Events: string;\r\n  Customer_Info: string;\r\n  Event_Source: string;\r\n}\r\nexport interface Plan {\r\n  planId: string;\r\n  internalName: string;\r\n  externalName: string;\r\n  type: string;\r\n  description: string;\r\n  status: string;\r\n}\r\n\r\nexport interface PlanList {\r\n  productVariantId: string;\r\n  name: string;\r\n  productID: string;\r\n  type: string;\r\n  features: [];\r\n  status: string;\r\n}\r\n\r\nexport interface ProductVariant {\r\n  productVariantId: string;\r\n  name: string,\r\n  productID: string;\r\n  type: string;\r\n  features: { featureID: string; value: string }[];\r\n  status: string;\r\n\r\n}\r\nexport const MENUITEMS = [\r\n  {\r\n    state: '/overview',\r\n    type: 'link',\r\n    name: 'Overview',\r\n    icon: 'space_dashboard',\r\n    category: 'Dashboard'\r\n  },\r\n  {\r\n    state: '/customers',\r\n    type: 'link',\r\n    name: 'Customer',\r\n    icon: 'account_box',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/subscription',\r\n    type: 'link',\r\n    name: 'Subscription',\r\n    icon: 'card_membership',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/products',\r\n    type: 'link',\r\n    name: 'Products',\r\n    icon: 'local_mall',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/features',\r\n    type: 'link',\r\n    name: 'Features',\r\n    icon: 'featured_play_list',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/plans',\r\n    type: 'link',\r\n    name: 'Plans',\r\n    icon: 'quick_reference_all',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/stepper',\r\n    type: 'link',\r\n    name: 'Add Ons',\r\n    icon: 'add_notes',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/coupons',\r\n    type: 'link',\r\n    name: 'Coupons',\r\n    icon: 'confirmation_number',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/payment/transactions',\r\n    type: 'link',\r\n    name: 'Transactions',\r\n    icon: 'compare_arrows',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/invoices',\r\n    type: 'link',\r\n    name: 'Invoices',\r\n    icon: 'receipt_long',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/logs',\r\n    type: 'link',\r\n    name: 'Logs',\r\n    icon: 'list_alt',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Menu_Headings = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Dashboard',\r\n    icon: 'settings',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Product Catalog ',\r\n    icon: 'logout',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Payment History ',\r\n    icon: 'logout',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Config_Menu = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Settings',\r\n    icon: 'settings',\r\n    category: 'Config',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'LogOut ',\r\n    icon: 'logout',\r\n    category: 'Confog',\r\n  },\r\n];\r\nexport const User_Options = [\r\n  {\r\n    path: '/user:id',\r\n    icon: 'account_circle',\r\n    name: 'My Account',\r\n    toggle: false,\r\n  },\r\n  { path: '/inbox', icon: 'inbox_outline', name: 'My Inbox', toggle: false },\r\n  { path: '', icon: 'clear_day', name: 'Dark Mode', toggle: true },\r\n  { path: '/help', icon: 'live_help', name: 'Help', toggle: false },\r\n];\r\n// Product listing\r\nexport const User_Data = [\r\n  {\r\n    id: 'random_id_1234',\r\n    product_ID: '#O365ProPlusRetail',\r\n    title: 'Microsoft Teams',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Host Online Calls', 'Unlimited Internet', 'Conference Calls'],\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_555',\r\n    product_ID: '#Or65SuperSupreme',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: [\r\n      'Unlimited Repos',\r\n      'Upto 50 Team Members',\r\n      'Host Online Calls',\r\n      'Unlimited Internet',\r\n      'Conference Calls',\r\n    ],\r\n    created_at: 'June 11th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_6969',\r\n    product_ID: '#Ow65Basic',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Conference Calls'],\r\n    created_at: 'June 18th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Features_Data = [\r\n  {\r\n    id: 'feature_id_459',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'feature_id_4591',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\n\r\nexport const Coupon_Data = [\r\n  {\r\n    id: 'coupon_id_459',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'coupon_id_460',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Plans_Data = [\r\n  {\r\n    id: 'ychvjbknk1',\r\n    plan_ID: 'As-012P',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.3',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: '1i23op1j2eo',\r\n    plan_ID: 'As-099G',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.2',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Notifications_Data = [\r\n  // {\r\n  //   user: 'John Smith' ,\r\n  //   message: 'subscriptione_created',\r\n  //   created_at: 'Aug 7th, 2023'\r\n  // }\r\n];\r\nexport const TransactionList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const InvoiceList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-003',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Payment Due',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const CustomerList = [\r\n  {\r\n    id: '#S0-001',\r\n    name: 'Alex C',\r\n    companyName: 'Greenplus Enterprises',\r\n    email: 'alex@example.com',\r\n    workPhone: '9876778865',\r\n    website: 'www.greenplus.com',\r\n    subscription: '2 subscripton (Available)',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    name: 'Zen D',\r\n    companyName: 'Zencorporation',\r\n    email: 'zen@example.com',\r\n    workPhone: '839103113',\r\n    website: 'www.zencorporation.com',\r\n    subscription: '1 subscripton (Available)',\r\n  },\r\n];\r\nexport const Logs_Data = [\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Subscription has been created for the Plan.',\r\n    Customer_Info: 'Greenplus Enterprises',\r\n    Event_Source: 'Via Portal',\r\n  },\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Active  subscription created for demo',\r\n    Customer_Info: 'Zencorporation',\r\n    Event_Source: 'Via Interface',\r\n  },\r\n];\r\nexport const feature_types = [\r\n  { value: 1, title: 'switch' },\r\n  { value: 2, title: 'range' },\r\n  { value: 3, title: 'quantity' },\r\n  { value: 4, title: 'custom' },\r\n];\r\nexport const pricingModels = [\r\n  { value: 1, title: 'Flat fee' },\r\n  { value: 2, title: 'Per unit' },\r\n  { value: 3, title: 'Tiered' },\r\n  { value: 4, title: 'Volume' },\r\n  { value: 5, title: 'Stairstep' },\r\n];\r\nexport const periodUnit = ['Daily', 'Weekly', 'Monthly', 'Yearly'];\r\nexport const StaticRoutes = {\r\n  features: ['features'],\r\n  products: ['products'],\r\n};\r\nexport const plan_add_empty_data = [\r\n  {\r\n    titleIcon:\r\n      '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n    iconAlt: 'invoice-outline-icon',\r\n    title: 'Product Details',\r\n    subtitle:\r\n      'Please click the “Add” button below to add a new product. Once you clicked the button, you will be prompted to enter the name of product, description and additional details.',\r\n    btnTitle: 'Add product',\r\n    btnPath: '/#',\r\n  },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Pricing Plans',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new pricing plans. Once you clicked the button, you will be prompted to enter pricing and additional details.',\r\n  //   btnTitle: 'Add Pricing',\r\n  //   btnPath: '/#',\r\n  // },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Add-ons Details',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new add-on. Once you have click button, you will be prompted to select add-on.',\r\n  //   btnTitle: 'Add Add-on',\r\n  //   btnPath: '/#',\r\n  // },\r\n];\r\nexport const noProducts = [\r\n  {\r\n    heading: 'Products',\r\n    imgPath: '../../../../assets/images/empty-illustrations.png',\r\n    alt: 'no proudcts available',\r\n    subtext: 'Looking for Product',\r\n    text: \"Seems like you haven't added any Product. Start adding products by click on “Create Product” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Product',\r\n    path: '/products/create',\r\n  },\r\n];\r\nexport const noFeatures = [\r\n  {\r\n    heading: 'Features',\r\n    imgPath: '../../../../assets/images/empty-illustrations-2.png',\r\n    alt: 'no features available',\r\n    subtext: 'Looking for Features',\r\n    text: \"Seems like you haven't added any feature. Start adding feature by click on “Create Feature” button \",\r\n    showButton: true,\r\n    buttonTxt: 'Create Feature',\r\n    path: '/features/create',\r\n  },\r\n];\r\nexport const noPlans = [\r\n  {\r\n    heading: 'Plans',\r\n    imgPath: '../../../../assets/images/empty-illustrations-4.png',\r\n    alt: 'no Plans available',\r\n    subtext: 'Looking for Plans',\r\n    text: \"Seems like you haven't added any Plan. Start adding plan by click on “Create Plan” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Plan',\r\n    path: '/plans/create',\r\n  },\r\n];\r\nexport const noPageFound = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/404-page.png',\r\n    alt: 'No Page Found',\r\n    subtext: \"Oops! Why you're here?\",\r\n    text: \"We are very sorry for inconvenience. It looks like you're try to access a page that either has been deleted or never existed.\",\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noCustomers = [\r\n  {\r\n    heading: 'Customers',\r\n    imgPath: '../../../../assets/images/empty-illustrations-6.png',\r\n    alt: 'no customers',\r\n    subtext: 'No customer yet',\r\n    text: 'Customers No customer yet After your first customer you will be able to view it here.',\r\n    showButton: false,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const nocoupons = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noTransactions = [\r\n  {\r\n    heading: 'Transaction',\r\n    imgPath: '../../../../assets/images/empty-illustrations-5.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'NO transaction yet',\r\n    text: 'After your first transaction you will be able to view it here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const noInvoice = [\r\n  {\r\n    heading: 'Invoice',\r\n    imgPath: '../../../../assets/images/invoice-empty.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'No invoice yet',\r\n    text: 'After your first transaction you will be able to view invoice here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const noLogs = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const Stepper = [\r\n  {\r\n    id: 1,\r\n    title: 'Step 1',\r\n    caption: 'Plan Information',\r\n    isVisible: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Step 2',\r\n    caption: 'Add Plan Pricing',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Step 3',\r\n    caption: 'Product Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Step 4',\r\n    caption: 'Add-on Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Step 5',\r\n    caption: 'Charges',\r\n    isVisible: false,\r\n  },\r\n];\r\nexport const listFilterOptions = [\r\n  'Yesterday',\r\n  'Last 7 days',\r\n  'Last Week',\r\n  'Last 30 days',\r\n  'Last 4 weeks',\r\n  'Last 12 weeks',\r\n  'Current month',\r\n  'Last calendar month',\r\n];\r\n\r\nexport interface ProductVariants {\r\n  productVariantId: string;\r\n  name: string;\r\n  productID: string;\r\n  type: string;\r\n  features: { featureID: string; value: string }[];\r\n  status: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 131
                },
                {
                    "name": "externalName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 129
                },
                {
                    "name": "internalName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 128
                },
                {
                    "name": "planId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 127
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 132
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 130
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "PlanList",
            "id": "interface-PlanList-909fa3dce09599287106c3f3da3f0937a6e5c6871a710630a9736728d8608dd49fd2a191015bdfda04f21b892c532494e6d23ba5a32be2bd656206fc8e6b3892",
            "file": "src/app/shared/constants/consants.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n}\r\nexport interface Data_Type {\r\n  product_ID: string;\r\n  title: string;\r\n  description: string;\r\n  features: string[];\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface selectOptions {\r\n  value: number;\r\n  title: string;\r\n}\r\nexport interface features {\r\n  feature_id: string;\r\n  product_name: string;\r\n  feature_name: string;\r\n  description: string;\r\n  feature_type: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\n\r\nexport interface coupon {\r\n  coupon_id: string;\r\n  coupon_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface loginCredientials {\r\n  csrf_token:string,\r\n  method: string,\r\n  password_identifier: string,\r\n  password: string\r\n}\r\nexport interface Product {\r\n  productId: string;\r\n  imageUrl: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface GetProduct {\r\n  productId: string;\r\n  imageUrl: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface plansFields {\r\n  plan_ID: string;\r\n  external_name: string;\r\n  internal_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Feature {\r\n  featureId: string;\r\n  productId: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n  unit: string;\r\n  levels: [];\r\n}\r\nexport interface FeatureList {\r\n  featureId: number;\r\n  name: string;\r\n  productName: string;\r\n  levels: [];\r\n  description: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  type: string;\r\n  status: string;\r\n}\r\nexport interface Customer {\r\n  id: string;\r\n  name: string;\r\n  companyName: string;\r\n  email: string,\r\n  workPhone: string,\r\n  website: string,\r\n  subscription: string\r\n}\r\nexport interface GetFeature {\r\n  featureId: string;\r\n  productID: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n}\r\n\r\nexport interface invoice {\r\n  id: string;\r\n  customer_info: string;\r\n  issued_on: string;\r\n  voided_on: string;\r\n  paid_on: string;\r\n  created_at: string;\r\n  status: string;\r\n  amount: string;\r\n}\r\n\r\nexport interface logs {\r\n  Timestamp: any;\r\n  Events: string;\r\n  Customer_Info: string;\r\n  Event_Source: string;\r\n}\r\nexport interface Plan {\r\n  planId: string;\r\n  internalName: string;\r\n  externalName: string;\r\n  type: string;\r\n  description: string;\r\n  status: string;\r\n}\r\n\r\nexport interface PlanList {\r\n  productVariantId: string;\r\n  name: string;\r\n  productID: string;\r\n  type: string;\r\n  features: [];\r\n  status: string;\r\n}\r\n\r\nexport interface ProductVariant {\r\n  productVariantId: string;\r\n  name: string,\r\n  productID: string;\r\n  type: string;\r\n  features: { featureID: string; value: string }[];\r\n  status: string;\r\n\r\n}\r\nexport const MENUITEMS = [\r\n  {\r\n    state: '/overview',\r\n    type: 'link',\r\n    name: 'Overview',\r\n    icon: 'space_dashboard',\r\n    category: 'Dashboard'\r\n  },\r\n  {\r\n    state: '/customers',\r\n    type: 'link',\r\n    name: 'Customer',\r\n    icon: 'account_box',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/subscription',\r\n    type: 'link',\r\n    name: 'Subscription',\r\n    icon: 'card_membership',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/products',\r\n    type: 'link',\r\n    name: 'Products',\r\n    icon: 'local_mall',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/features',\r\n    type: 'link',\r\n    name: 'Features',\r\n    icon: 'featured_play_list',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/plans',\r\n    type: 'link',\r\n    name: 'Plans',\r\n    icon: 'quick_reference_all',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/stepper',\r\n    type: 'link',\r\n    name: 'Add Ons',\r\n    icon: 'add_notes',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/coupons',\r\n    type: 'link',\r\n    name: 'Coupons',\r\n    icon: 'confirmation_number',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/payment/transactions',\r\n    type: 'link',\r\n    name: 'Transactions',\r\n    icon: 'compare_arrows',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/invoices',\r\n    type: 'link',\r\n    name: 'Invoices',\r\n    icon: 'receipt_long',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/logs',\r\n    type: 'link',\r\n    name: 'Logs',\r\n    icon: 'list_alt',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Menu_Headings = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Dashboard',\r\n    icon: 'settings',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Product Catalog ',\r\n    icon: 'logout',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Payment History ',\r\n    icon: 'logout',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Config_Menu = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Settings',\r\n    icon: 'settings',\r\n    category: 'Config',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'LogOut ',\r\n    icon: 'logout',\r\n    category: 'Confog',\r\n  },\r\n];\r\nexport const User_Options = [\r\n  {\r\n    path: '/user:id',\r\n    icon: 'account_circle',\r\n    name: 'My Account',\r\n    toggle: false,\r\n  },\r\n  { path: '/inbox', icon: 'inbox_outline', name: 'My Inbox', toggle: false },\r\n  { path: '', icon: 'clear_day', name: 'Dark Mode', toggle: true },\r\n  { path: '/help', icon: 'live_help', name: 'Help', toggle: false },\r\n];\r\n// Product listing\r\nexport const User_Data = [\r\n  {\r\n    id: 'random_id_1234',\r\n    product_ID: '#O365ProPlusRetail',\r\n    title: 'Microsoft Teams',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Host Online Calls', 'Unlimited Internet', 'Conference Calls'],\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_555',\r\n    product_ID: '#Or65SuperSupreme',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: [\r\n      'Unlimited Repos',\r\n      'Upto 50 Team Members',\r\n      'Host Online Calls',\r\n      'Unlimited Internet',\r\n      'Conference Calls',\r\n    ],\r\n    created_at: 'June 11th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_6969',\r\n    product_ID: '#Ow65Basic',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Conference Calls'],\r\n    created_at: 'June 18th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Features_Data = [\r\n  {\r\n    id: 'feature_id_459',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'feature_id_4591',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\n\r\nexport const Coupon_Data = [\r\n  {\r\n    id: 'coupon_id_459',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'coupon_id_460',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Plans_Data = [\r\n  {\r\n    id: 'ychvjbknk1',\r\n    plan_ID: 'As-012P',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.3',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: '1i23op1j2eo',\r\n    plan_ID: 'As-099G',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.2',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Notifications_Data = [\r\n  // {\r\n  //   user: 'John Smith' ,\r\n  //   message: 'subscriptione_created',\r\n  //   created_at: 'Aug 7th, 2023'\r\n  // }\r\n];\r\nexport const TransactionList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const InvoiceList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-003',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Payment Due',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const CustomerList = [\r\n  {\r\n    id: '#S0-001',\r\n    name: 'Alex C',\r\n    companyName: 'Greenplus Enterprises',\r\n    email: 'alex@example.com',\r\n    workPhone: '9876778865',\r\n    website: 'www.greenplus.com',\r\n    subscription: '2 subscripton (Available)',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    name: 'Zen D',\r\n    companyName: 'Zencorporation',\r\n    email: 'zen@example.com',\r\n    workPhone: '839103113',\r\n    website: 'www.zencorporation.com',\r\n    subscription: '1 subscripton (Available)',\r\n  },\r\n];\r\nexport const Logs_Data = [\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Subscription has been created for the Plan.',\r\n    Customer_Info: 'Greenplus Enterprises',\r\n    Event_Source: 'Via Portal',\r\n  },\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Active  subscription created for demo',\r\n    Customer_Info: 'Zencorporation',\r\n    Event_Source: 'Via Interface',\r\n  },\r\n];\r\nexport const feature_types = [\r\n  { value: 1, title: 'switch' },\r\n  { value: 2, title: 'range' },\r\n  { value: 3, title: 'quantity' },\r\n  { value: 4, title: 'custom' },\r\n];\r\nexport const pricingModels = [\r\n  { value: 1, title: 'Flat fee' },\r\n  { value: 2, title: 'Per unit' },\r\n  { value: 3, title: 'Tiered' },\r\n  { value: 4, title: 'Volume' },\r\n  { value: 5, title: 'Stairstep' },\r\n];\r\nexport const periodUnit = ['Daily', 'Weekly', 'Monthly', 'Yearly'];\r\nexport const StaticRoutes = {\r\n  features: ['features'],\r\n  products: ['products'],\r\n};\r\nexport const plan_add_empty_data = [\r\n  {\r\n    titleIcon:\r\n      '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n    iconAlt: 'invoice-outline-icon',\r\n    title: 'Product Details',\r\n    subtitle:\r\n      'Please click the “Add” button below to add a new product. Once you clicked the button, you will be prompted to enter the name of product, description and additional details.',\r\n    btnTitle: 'Add product',\r\n    btnPath: '/#',\r\n  },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Pricing Plans',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new pricing plans. Once you clicked the button, you will be prompted to enter pricing and additional details.',\r\n  //   btnTitle: 'Add Pricing',\r\n  //   btnPath: '/#',\r\n  // },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Add-ons Details',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new add-on. Once you have click button, you will be prompted to select add-on.',\r\n  //   btnTitle: 'Add Add-on',\r\n  //   btnPath: '/#',\r\n  // },\r\n];\r\nexport const noProducts = [\r\n  {\r\n    heading: 'Products',\r\n    imgPath: '../../../../assets/images/empty-illustrations.png',\r\n    alt: 'no proudcts available',\r\n    subtext: 'Looking for Product',\r\n    text: \"Seems like you haven't added any Product. Start adding products by click on “Create Product” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Product',\r\n    path: '/products/create',\r\n  },\r\n];\r\nexport const noFeatures = [\r\n  {\r\n    heading: 'Features',\r\n    imgPath: '../../../../assets/images/empty-illustrations-2.png',\r\n    alt: 'no features available',\r\n    subtext: 'Looking for Features',\r\n    text: \"Seems like you haven't added any feature. Start adding feature by click on “Create Feature” button \",\r\n    showButton: true,\r\n    buttonTxt: 'Create Feature',\r\n    path: '/features/create',\r\n  },\r\n];\r\nexport const noPlans = [\r\n  {\r\n    heading: 'Plans',\r\n    imgPath: '../../../../assets/images/empty-illustrations-4.png',\r\n    alt: 'no Plans available',\r\n    subtext: 'Looking for Plans',\r\n    text: \"Seems like you haven't added any Plan. Start adding plan by click on “Create Plan” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Plan',\r\n    path: '/plans/create',\r\n  },\r\n];\r\nexport const noPageFound = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/404-page.png',\r\n    alt: 'No Page Found',\r\n    subtext: \"Oops! Why you're here?\",\r\n    text: \"We are very sorry for inconvenience. It looks like you're try to access a page that either has been deleted or never existed.\",\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noCustomers = [\r\n  {\r\n    heading: 'Customers',\r\n    imgPath: '../../../../assets/images/empty-illustrations-6.png',\r\n    alt: 'no customers',\r\n    subtext: 'No customer yet',\r\n    text: 'Customers No customer yet After your first customer you will be able to view it here.',\r\n    showButton: false,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const nocoupons = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noTransactions = [\r\n  {\r\n    heading: 'Transaction',\r\n    imgPath: '../../../../assets/images/empty-illustrations-5.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'NO transaction yet',\r\n    text: 'After your first transaction you will be able to view it here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const noInvoice = [\r\n  {\r\n    heading: 'Invoice',\r\n    imgPath: '../../../../assets/images/invoice-empty.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'No invoice yet',\r\n    text: 'After your first transaction you will be able to view invoice here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const noLogs = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const Stepper = [\r\n  {\r\n    id: 1,\r\n    title: 'Step 1',\r\n    caption: 'Plan Information',\r\n    isVisible: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Step 2',\r\n    caption: 'Add Plan Pricing',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Step 3',\r\n    caption: 'Product Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Step 4',\r\n    caption: 'Add-on Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Step 5',\r\n    caption: 'Charges',\r\n    isVisible: false,\r\n  },\r\n];\r\nexport const listFilterOptions = [\r\n  'Yesterday',\r\n  'Last 7 days',\r\n  'Last Week',\r\n  'Last 30 days',\r\n  'Last 4 weeks',\r\n  'Last 12 weeks',\r\n  'Current month',\r\n  'Last calendar month',\r\n];\r\n\r\nexport interface ProductVariants {\r\n  productVariantId: string;\r\n  name: string;\r\n  productID: string;\r\n  type: string;\r\n  features: { featureID: string; value: string }[];\r\n  status: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "features",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 140
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 137
                },
                {
                    "name": "productID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 138
                },
                {
                    "name": "productVariantId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 136
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 141
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 139
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "plansFields",
            "id": "interface-plansFields-909fa3dce09599287106c3f3da3f0937a6e5c6871a710630a9736728d8608dd49fd2a191015bdfda04f21b892c532494e6d23ba5a32be2bd656206fc8e6b3892",
            "file": "src/app/shared/constants/consants.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n}\r\nexport interface Data_Type {\r\n  product_ID: string;\r\n  title: string;\r\n  description: string;\r\n  features: string[];\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface selectOptions {\r\n  value: number;\r\n  title: string;\r\n}\r\nexport interface features {\r\n  feature_id: string;\r\n  product_name: string;\r\n  feature_name: string;\r\n  description: string;\r\n  feature_type: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\n\r\nexport interface coupon {\r\n  coupon_id: string;\r\n  coupon_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface loginCredientials {\r\n  csrf_token:string,\r\n  method: string,\r\n  password_identifier: string,\r\n  password: string\r\n}\r\nexport interface Product {\r\n  productId: string;\r\n  imageUrl: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface GetProduct {\r\n  productId: string;\r\n  imageUrl: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface plansFields {\r\n  plan_ID: string;\r\n  external_name: string;\r\n  internal_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Feature {\r\n  featureId: string;\r\n  productId: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n  unit: string;\r\n  levels: [];\r\n}\r\nexport interface FeatureList {\r\n  featureId: number;\r\n  name: string;\r\n  productName: string;\r\n  levels: [];\r\n  description: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  type: string;\r\n  status: string;\r\n}\r\nexport interface Customer {\r\n  id: string;\r\n  name: string;\r\n  companyName: string;\r\n  email: string,\r\n  workPhone: string,\r\n  website: string,\r\n  subscription: string\r\n}\r\nexport interface GetFeature {\r\n  featureId: string;\r\n  productID: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n}\r\n\r\nexport interface invoice {\r\n  id: string;\r\n  customer_info: string;\r\n  issued_on: string;\r\n  voided_on: string;\r\n  paid_on: string;\r\n  created_at: string;\r\n  status: string;\r\n  amount: string;\r\n}\r\n\r\nexport interface logs {\r\n  Timestamp: any;\r\n  Events: string;\r\n  Customer_Info: string;\r\n  Event_Source: string;\r\n}\r\nexport interface Plan {\r\n  planId: string;\r\n  internalName: string;\r\n  externalName: string;\r\n  type: string;\r\n  description: string;\r\n  status: string;\r\n}\r\n\r\nexport interface PlanList {\r\n  productVariantId: string;\r\n  name: string;\r\n  productID: string;\r\n  type: string;\r\n  features: [];\r\n  status: string;\r\n}\r\n\r\nexport interface ProductVariant {\r\n  productVariantId: string;\r\n  name: string,\r\n  productID: string;\r\n  type: string;\r\n  features: { featureID: string; value: string }[];\r\n  status: string;\r\n\r\n}\r\nexport const MENUITEMS = [\r\n  {\r\n    state: '/overview',\r\n    type: 'link',\r\n    name: 'Overview',\r\n    icon: 'space_dashboard',\r\n    category: 'Dashboard'\r\n  },\r\n  {\r\n    state: '/customers',\r\n    type: 'link',\r\n    name: 'Customer',\r\n    icon: 'account_box',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/subscription',\r\n    type: 'link',\r\n    name: 'Subscription',\r\n    icon: 'card_membership',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/products',\r\n    type: 'link',\r\n    name: 'Products',\r\n    icon: 'local_mall',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/features',\r\n    type: 'link',\r\n    name: 'Features',\r\n    icon: 'featured_play_list',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/plans',\r\n    type: 'link',\r\n    name: 'Plans',\r\n    icon: 'quick_reference_all',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/stepper',\r\n    type: 'link',\r\n    name: 'Add Ons',\r\n    icon: 'add_notes',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/coupons',\r\n    type: 'link',\r\n    name: 'Coupons',\r\n    icon: 'confirmation_number',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/payment/transactions',\r\n    type: 'link',\r\n    name: 'Transactions',\r\n    icon: 'compare_arrows',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/invoices',\r\n    type: 'link',\r\n    name: 'Invoices',\r\n    icon: 'receipt_long',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/logs',\r\n    type: 'link',\r\n    name: 'Logs',\r\n    icon: 'list_alt',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Menu_Headings = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Dashboard',\r\n    icon: 'settings',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Product Catalog ',\r\n    icon: 'logout',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Payment History ',\r\n    icon: 'logout',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Config_Menu = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Settings',\r\n    icon: 'settings',\r\n    category: 'Config',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'LogOut ',\r\n    icon: 'logout',\r\n    category: 'Confog',\r\n  },\r\n];\r\nexport const User_Options = [\r\n  {\r\n    path: '/user:id',\r\n    icon: 'account_circle',\r\n    name: 'My Account',\r\n    toggle: false,\r\n  },\r\n  { path: '/inbox', icon: 'inbox_outline', name: 'My Inbox', toggle: false },\r\n  { path: '', icon: 'clear_day', name: 'Dark Mode', toggle: true },\r\n  { path: '/help', icon: 'live_help', name: 'Help', toggle: false },\r\n];\r\n// Product listing\r\nexport const User_Data = [\r\n  {\r\n    id: 'random_id_1234',\r\n    product_ID: '#O365ProPlusRetail',\r\n    title: 'Microsoft Teams',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Host Online Calls', 'Unlimited Internet', 'Conference Calls'],\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_555',\r\n    product_ID: '#Or65SuperSupreme',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: [\r\n      'Unlimited Repos',\r\n      'Upto 50 Team Members',\r\n      'Host Online Calls',\r\n      'Unlimited Internet',\r\n      'Conference Calls',\r\n    ],\r\n    created_at: 'June 11th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_6969',\r\n    product_ID: '#Ow65Basic',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Conference Calls'],\r\n    created_at: 'June 18th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Features_Data = [\r\n  {\r\n    id: 'feature_id_459',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'feature_id_4591',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\n\r\nexport const Coupon_Data = [\r\n  {\r\n    id: 'coupon_id_459',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'coupon_id_460',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Plans_Data = [\r\n  {\r\n    id: 'ychvjbknk1',\r\n    plan_ID: 'As-012P',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.3',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: '1i23op1j2eo',\r\n    plan_ID: 'As-099G',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.2',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Notifications_Data = [\r\n  // {\r\n  //   user: 'John Smith' ,\r\n  //   message: 'subscriptione_created',\r\n  //   created_at: 'Aug 7th, 2023'\r\n  // }\r\n];\r\nexport const TransactionList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const InvoiceList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-003',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Payment Due',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const CustomerList = [\r\n  {\r\n    id: '#S0-001',\r\n    name: 'Alex C',\r\n    companyName: 'Greenplus Enterprises',\r\n    email: 'alex@example.com',\r\n    workPhone: '9876778865',\r\n    website: 'www.greenplus.com',\r\n    subscription: '2 subscripton (Available)',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    name: 'Zen D',\r\n    companyName: 'Zencorporation',\r\n    email: 'zen@example.com',\r\n    workPhone: '839103113',\r\n    website: 'www.zencorporation.com',\r\n    subscription: '1 subscripton (Available)',\r\n  },\r\n];\r\nexport const Logs_Data = [\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Subscription has been created for the Plan.',\r\n    Customer_Info: 'Greenplus Enterprises',\r\n    Event_Source: 'Via Portal',\r\n  },\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Active  subscription created for demo',\r\n    Customer_Info: 'Zencorporation',\r\n    Event_Source: 'Via Interface',\r\n  },\r\n];\r\nexport const feature_types = [\r\n  { value: 1, title: 'switch' },\r\n  { value: 2, title: 'range' },\r\n  { value: 3, title: 'quantity' },\r\n  { value: 4, title: 'custom' },\r\n];\r\nexport const pricingModels = [\r\n  { value: 1, title: 'Flat fee' },\r\n  { value: 2, title: 'Per unit' },\r\n  { value: 3, title: 'Tiered' },\r\n  { value: 4, title: 'Volume' },\r\n  { value: 5, title: 'Stairstep' },\r\n];\r\nexport const periodUnit = ['Daily', 'Weekly', 'Monthly', 'Yearly'];\r\nexport const StaticRoutes = {\r\n  features: ['features'],\r\n  products: ['products'],\r\n};\r\nexport const plan_add_empty_data = [\r\n  {\r\n    titleIcon:\r\n      '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n    iconAlt: 'invoice-outline-icon',\r\n    title: 'Product Details',\r\n    subtitle:\r\n      'Please click the “Add” button below to add a new product. Once you clicked the button, you will be prompted to enter the name of product, description and additional details.',\r\n    btnTitle: 'Add product',\r\n    btnPath: '/#',\r\n  },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Pricing Plans',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new pricing plans. Once you clicked the button, you will be prompted to enter pricing and additional details.',\r\n  //   btnTitle: 'Add Pricing',\r\n  //   btnPath: '/#',\r\n  // },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Add-ons Details',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new add-on. Once you have click button, you will be prompted to select add-on.',\r\n  //   btnTitle: 'Add Add-on',\r\n  //   btnPath: '/#',\r\n  // },\r\n];\r\nexport const noProducts = [\r\n  {\r\n    heading: 'Products',\r\n    imgPath: '../../../../assets/images/empty-illustrations.png',\r\n    alt: 'no proudcts available',\r\n    subtext: 'Looking for Product',\r\n    text: \"Seems like you haven't added any Product. Start adding products by click on “Create Product” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Product',\r\n    path: '/products/create',\r\n  },\r\n];\r\nexport const noFeatures = [\r\n  {\r\n    heading: 'Features',\r\n    imgPath: '../../../../assets/images/empty-illustrations-2.png',\r\n    alt: 'no features available',\r\n    subtext: 'Looking for Features',\r\n    text: \"Seems like you haven't added any feature. Start adding feature by click on “Create Feature” button \",\r\n    showButton: true,\r\n    buttonTxt: 'Create Feature',\r\n    path: '/features/create',\r\n  },\r\n];\r\nexport const noPlans = [\r\n  {\r\n    heading: 'Plans',\r\n    imgPath: '../../../../assets/images/empty-illustrations-4.png',\r\n    alt: 'no Plans available',\r\n    subtext: 'Looking for Plans',\r\n    text: \"Seems like you haven't added any Plan. Start adding plan by click on “Create Plan” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Plan',\r\n    path: '/plans/create',\r\n  },\r\n];\r\nexport const noPageFound = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/404-page.png',\r\n    alt: 'No Page Found',\r\n    subtext: \"Oops! Why you're here?\",\r\n    text: \"We are very sorry for inconvenience. It looks like you're try to access a page that either has been deleted or never existed.\",\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noCustomers = [\r\n  {\r\n    heading: 'Customers',\r\n    imgPath: '../../../../assets/images/empty-illustrations-6.png',\r\n    alt: 'no customers',\r\n    subtext: 'No customer yet',\r\n    text: 'Customers No customer yet After your first customer you will be able to view it here.',\r\n    showButton: false,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const nocoupons = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noTransactions = [\r\n  {\r\n    heading: 'Transaction',\r\n    imgPath: '../../../../assets/images/empty-illustrations-5.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'NO transaction yet',\r\n    text: 'After your first transaction you will be able to view it here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const noInvoice = [\r\n  {\r\n    heading: 'Invoice',\r\n    imgPath: '../../../../assets/images/invoice-empty.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'No invoice yet',\r\n    text: 'After your first transaction you will be able to view invoice here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const noLogs = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const Stepper = [\r\n  {\r\n    id: 1,\r\n    title: 'Step 1',\r\n    caption: 'Plan Information',\r\n    isVisible: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Step 2',\r\n    caption: 'Add Plan Pricing',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Step 3',\r\n    caption: 'Product Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Step 4',\r\n    caption: 'Add-on Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Step 5',\r\n    caption: 'Charges',\r\n    isVisible: false,\r\n  },\r\n];\r\nexport const listFilterOptions = [\r\n  'Yesterday',\r\n  'Last 7 days',\r\n  'Last Week',\r\n  'Last 30 days',\r\n  'Last 4 weeks',\r\n  'Last 12 weeks',\r\n  'Current month',\r\n  'Last calendar month',\r\n];\r\n\r\nexport interface ProductVariants {\r\n  productVariantId: string;\r\n  name: string;\r\n  productID: string;\r\n  type: string;\r\n  features: { featureID: string; value: string }[];\r\n  status: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "created_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "external_name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "internal_name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "plan_ID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 65
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "Product",
            "id": "interface-Product-909fa3dce09599287106c3f3da3f0937a6e5c6871a710630a9736728d8608dd49fd2a191015bdfda04f21b892c532494e6d23ba5a32be2bd656206fc8e6b3892",
            "file": "src/app/shared/constants/consants.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n}\r\nexport interface Data_Type {\r\n  product_ID: string;\r\n  title: string;\r\n  description: string;\r\n  features: string[];\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface selectOptions {\r\n  value: number;\r\n  title: string;\r\n}\r\nexport interface features {\r\n  feature_id: string;\r\n  product_name: string;\r\n  feature_name: string;\r\n  description: string;\r\n  feature_type: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\n\r\nexport interface coupon {\r\n  coupon_id: string;\r\n  coupon_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface loginCredientials {\r\n  csrf_token:string,\r\n  method: string,\r\n  password_identifier: string,\r\n  password: string\r\n}\r\nexport interface Product {\r\n  productId: string;\r\n  imageUrl: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface GetProduct {\r\n  productId: string;\r\n  imageUrl: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface plansFields {\r\n  plan_ID: string;\r\n  external_name: string;\r\n  internal_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Feature {\r\n  featureId: string;\r\n  productId: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n  unit: string;\r\n  levels: [];\r\n}\r\nexport interface FeatureList {\r\n  featureId: number;\r\n  name: string;\r\n  productName: string;\r\n  levels: [];\r\n  description: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  type: string;\r\n  status: string;\r\n}\r\nexport interface Customer {\r\n  id: string;\r\n  name: string;\r\n  companyName: string;\r\n  email: string,\r\n  workPhone: string,\r\n  website: string,\r\n  subscription: string\r\n}\r\nexport interface GetFeature {\r\n  featureId: string;\r\n  productID: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n}\r\n\r\nexport interface invoice {\r\n  id: string;\r\n  customer_info: string;\r\n  issued_on: string;\r\n  voided_on: string;\r\n  paid_on: string;\r\n  created_at: string;\r\n  status: string;\r\n  amount: string;\r\n}\r\n\r\nexport interface logs {\r\n  Timestamp: any;\r\n  Events: string;\r\n  Customer_Info: string;\r\n  Event_Source: string;\r\n}\r\nexport interface Plan {\r\n  planId: string;\r\n  internalName: string;\r\n  externalName: string;\r\n  type: string;\r\n  description: string;\r\n  status: string;\r\n}\r\n\r\nexport interface PlanList {\r\n  productVariantId: string;\r\n  name: string;\r\n  productID: string;\r\n  type: string;\r\n  features: [];\r\n  status: string;\r\n}\r\n\r\nexport interface ProductVariant {\r\n  productVariantId: string;\r\n  name: string,\r\n  productID: string;\r\n  type: string;\r\n  features: { featureID: string; value: string }[];\r\n  status: string;\r\n\r\n}\r\nexport const MENUITEMS = [\r\n  {\r\n    state: '/overview',\r\n    type: 'link',\r\n    name: 'Overview',\r\n    icon: 'space_dashboard',\r\n    category: 'Dashboard'\r\n  },\r\n  {\r\n    state: '/customers',\r\n    type: 'link',\r\n    name: 'Customer',\r\n    icon: 'account_box',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/subscription',\r\n    type: 'link',\r\n    name: 'Subscription',\r\n    icon: 'card_membership',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/products',\r\n    type: 'link',\r\n    name: 'Products',\r\n    icon: 'local_mall',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/features',\r\n    type: 'link',\r\n    name: 'Features',\r\n    icon: 'featured_play_list',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/plans',\r\n    type: 'link',\r\n    name: 'Plans',\r\n    icon: 'quick_reference_all',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/stepper',\r\n    type: 'link',\r\n    name: 'Add Ons',\r\n    icon: 'add_notes',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/coupons',\r\n    type: 'link',\r\n    name: 'Coupons',\r\n    icon: 'confirmation_number',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/payment/transactions',\r\n    type: 'link',\r\n    name: 'Transactions',\r\n    icon: 'compare_arrows',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/invoices',\r\n    type: 'link',\r\n    name: 'Invoices',\r\n    icon: 'receipt_long',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/logs',\r\n    type: 'link',\r\n    name: 'Logs',\r\n    icon: 'list_alt',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Menu_Headings = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Dashboard',\r\n    icon: 'settings',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Product Catalog ',\r\n    icon: 'logout',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Payment History ',\r\n    icon: 'logout',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Config_Menu = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Settings',\r\n    icon: 'settings',\r\n    category: 'Config',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'LogOut ',\r\n    icon: 'logout',\r\n    category: 'Confog',\r\n  },\r\n];\r\nexport const User_Options = [\r\n  {\r\n    path: '/user:id',\r\n    icon: 'account_circle',\r\n    name: 'My Account',\r\n    toggle: false,\r\n  },\r\n  { path: '/inbox', icon: 'inbox_outline', name: 'My Inbox', toggle: false },\r\n  { path: '', icon: 'clear_day', name: 'Dark Mode', toggle: true },\r\n  { path: '/help', icon: 'live_help', name: 'Help', toggle: false },\r\n];\r\n// Product listing\r\nexport const User_Data = [\r\n  {\r\n    id: 'random_id_1234',\r\n    product_ID: '#O365ProPlusRetail',\r\n    title: 'Microsoft Teams',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Host Online Calls', 'Unlimited Internet', 'Conference Calls'],\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_555',\r\n    product_ID: '#Or65SuperSupreme',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: [\r\n      'Unlimited Repos',\r\n      'Upto 50 Team Members',\r\n      'Host Online Calls',\r\n      'Unlimited Internet',\r\n      'Conference Calls',\r\n    ],\r\n    created_at: 'June 11th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_6969',\r\n    product_ID: '#Ow65Basic',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Conference Calls'],\r\n    created_at: 'June 18th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Features_Data = [\r\n  {\r\n    id: 'feature_id_459',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'feature_id_4591',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\n\r\nexport const Coupon_Data = [\r\n  {\r\n    id: 'coupon_id_459',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'coupon_id_460',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Plans_Data = [\r\n  {\r\n    id: 'ychvjbknk1',\r\n    plan_ID: 'As-012P',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.3',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: '1i23op1j2eo',\r\n    plan_ID: 'As-099G',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.2',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Notifications_Data = [\r\n  // {\r\n  //   user: 'John Smith' ,\r\n  //   message: 'subscriptione_created',\r\n  //   created_at: 'Aug 7th, 2023'\r\n  // }\r\n];\r\nexport const TransactionList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const InvoiceList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-003',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Payment Due',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const CustomerList = [\r\n  {\r\n    id: '#S0-001',\r\n    name: 'Alex C',\r\n    companyName: 'Greenplus Enterprises',\r\n    email: 'alex@example.com',\r\n    workPhone: '9876778865',\r\n    website: 'www.greenplus.com',\r\n    subscription: '2 subscripton (Available)',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    name: 'Zen D',\r\n    companyName: 'Zencorporation',\r\n    email: 'zen@example.com',\r\n    workPhone: '839103113',\r\n    website: 'www.zencorporation.com',\r\n    subscription: '1 subscripton (Available)',\r\n  },\r\n];\r\nexport const Logs_Data = [\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Subscription has been created for the Plan.',\r\n    Customer_Info: 'Greenplus Enterprises',\r\n    Event_Source: 'Via Portal',\r\n  },\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Active  subscription created for demo',\r\n    Customer_Info: 'Zencorporation',\r\n    Event_Source: 'Via Interface',\r\n  },\r\n];\r\nexport const feature_types = [\r\n  { value: 1, title: 'switch' },\r\n  { value: 2, title: 'range' },\r\n  { value: 3, title: 'quantity' },\r\n  { value: 4, title: 'custom' },\r\n];\r\nexport const pricingModels = [\r\n  { value: 1, title: 'Flat fee' },\r\n  { value: 2, title: 'Per unit' },\r\n  { value: 3, title: 'Tiered' },\r\n  { value: 4, title: 'Volume' },\r\n  { value: 5, title: 'Stairstep' },\r\n];\r\nexport const periodUnit = ['Daily', 'Weekly', 'Monthly', 'Yearly'];\r\nexport const StaticRoutes = {\r\n  features: ['features'],\r\n  products: ['products'],\r\n};\r\nexport const plan_add_empty_data = [\r\n  {\r\n    titleIcon:\r\n      '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n    iconAlt: 'invoice-outline-icon',\r\n    title: 'Product Details',\r\n    subtitle:\r\n      'Please click the “Add” button below to add a new product. Once you clicked the button, you will be prompted to enter the name of product, description and additional details.',\r\n    btnTitle: 'Add product',\r\n    btnPath: '/#',\r\n  },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Pricing Plans',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new pricing plans. Once you clicked the button, you will be prompted to enter pricing and additional details.',\r\n  //   btnTitle: 'Add Pricing',\r\n  //   btnPath: '/#',\r\n  // },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Add-ons Details',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new add-on. Once you have click button, you will be prompted to select add-on.',\r\n  //   btnTitle: 'Add Add-on',\r\n  //   btnPath: '/#',\r\n  // },\r\n];\r\nexport const noProducts = [\r\n  {\r\n    heading: 'Products',\r\n    imgPath: '../../../../assets/images/empty-illustrations.png',\r\n    alt: 'no proudcts available',\r\n    subtext: 'Looking for Product',\r\n    text: \"Seems like you haven't added any Product. Start adding products by click on “Create Product” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Product',\r\n    path: '/products/create',\r\n  },\r\n];\r\nexport const noFeatures = [\r\n  {\r\n    heading: 'Features',\r\n    imgPath: '../../../../assets/images/empty-illustrations-2.png',\r\n    alt: 'no features available',\r\n    subtext: 'Looking for Features',\r\n    text: \"Seems like you haven't added any feature. Start adding feature by click on “Create Feature” button \",\r\n    showButton: true,\r\n    buttonTxt: 'Create Feature',\r\n    path: '/features/create',\r\n  },\r\n];\r\nexport const noPlans = [\r\n  {\r\n    heading: 'Plans',\r\n    imgPath: '../../../../assets/images/empty-illustrations-4.png',\r\n    alt: 'no Plans available',\r\n    subtext: 'Looking for Plans',\r\n    text: \"Seems like you haven't added any Plan. Start adding plan by click on “Create Plan” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Plan',\r\n    path: '/plans/create',\r\n  },\r\n];\r\nexport const noPageFound = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/404-page.png',\r\n    alt: 'No Page Found',\r\n    subtext: \"Oops! Why you're here?\",\r\n    text: \"We are very sorry for inconvenience. It looks like you're try to access a page that either has been deleted or never existed.\",\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noCustomers = [\r\n  {\r\n    heading: 'Customers',\r\n    imgPath: '../../../../assets/images/empty-illustrations-6.png',\r\n    alt: 'no customers',\r\n    subtext: 'No customer yet',\r\n    text: 'Customers No customer yet After your first customer you will be able to view it here.',\r\n    showButton: false,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const nocoupons = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noTransactions = [\r\n  {\r\n    heading: 'Transaction',\r\n    imgPath: '../../../../assets/images/empty-illustrations-5.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'NO transaction yet',\r\n    text: 'After your first transaction you will be able to view it here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const noInvoice = [\r\n  {\r\n    heading: 'Invoice',\r\n    imgPath: '../../../../assets/images/invoice-empty.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'No invoice yet',\r\n    text: 'After your first transaction you will be able to view invoice here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const noLogs = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const Stepper = [\r\n  {\r\n    id: 1,\r\n    title: 'Step 1',\r\n    caption: 'Plan Information',\r\n    isVisible: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Step 2',\r\n    caption: 'Add Plan Pricing',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Step 3',\r\n    caption: 'Product Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Step 4',\r\n    caption: 'Add-on Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Step 5',\r\n    caption: 'Charges',\r\n    isVisible: false,\r\n  },\r\n];\r\nexport const listFilterOptions = [\r\n  'Yesterday',\r\n  'Last 7 days',\r\n  'Last Week',\r\n  'Last 30 days',\r\n  'Last 4 weeks',\r\n  'Last 12 weeks',\r\n  'Current month',\r\n  'Last calendar month',\r\n];\r\n\r\nexport interface ProductVariants {\r\n  productVariantId: string;\r\n  name: string;\r\n  productID: string;\r\n  type: string;\r\n  features: { featureID: string; value: string }[];\r\n  status: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "createdOn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "imageUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "modifiedOn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "productId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 49
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "ProductVariant",
            "id": "interface-ProductVariant-909fa3dce09599287106c3f3da3f0937a6e5c6871a710630a9736728d8608dd49fd2a191015bdfda04f21b892c532494e6d23ba5a32be2bd656206fc8e6b3892",
            "file": "src/app/shared/constants/consants.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n}\r\nexport interface Data_Type {\r\n  product_ID: string;\r\n  title: string;\r\n  description: string;\r\n  features: string[];\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface selectOptions {\r\n  value: number;\r\n  title: string;\r\n}\r\nexport interface features {\r\n  feature_id: string;\r\n  product_name: string;\r\n  feature_name: string;\r\n  description: string;\r\n  feature_type: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\n\r\nexport interface coupon {\r\n  coupon_id: string;\r\n  coupon_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface loginCredientials {\r\n  csrf_token:string,\r\n  method: string,\r\n  password_identifier: string,\r\n  password: string\r\n}\r\nexport interface Product {\r\n  productId: string;\r\n  imageUrl: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface GetProduct {\r\n  productId: string;\r\n  imageUrl: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface plansFields {\r\n  plan_ID: string;\r\n  external_name: string;\r\n  internal_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Feature {\r\n  featureId: string;\r\n  productId: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n  unit: string;\r\n  levels: [];\r\n}\r\nexport interface FeatureList {\r\n  featureId: number;\r\n  name: string;\r\n  productName: string;\r\n  levels: [];\r\n  description: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  type: string;\r\n  status: string;\r\n}\r\nexport interface Customer {\r\n  id: string;\r\n  name: string;\r\n  companyName: string;\r\n  email: string,\r\n  workPhone: string,\r\n  website: string,\r\n  subscription: string\r\n}\r\nexport interface GetFeature {\r\n  featureId: string;\r\n  productID: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n}\r\n\r\nexport interface invoice {\r\n  id: string;\r\n  customer_info: string;\r\n  issued_on: string;\r\n  voided_on: string;\r\n  paid_on: string;\r\n  created_at: string;\r\n  status: string;\r\n  amount: string;\r\n}\r\n\r\nexport interface logs {\r\n  Timestamp: any;\r\n  Events: string;\r\n  Customer_Info: string;\r\n  Event_Source: string;\r\n}\r\nexport interface Plan {\r\n  planId: string;\r\n  internalName: string;\r\n  externalName: string;\r\n  type: string;\r\n  description: string;\r\n  status: string;\r\n}\r\n\r\nexport interface PlanList {\r\n  productVariantId: string;\r\n  name: string;\r\n  productID: string;\r\n  type: string;\r\n  features: [];\r\n  status: string;\r\n}\r\n\r\nexport interface ProductVariant {\r\n  productVariantId: string;\r\n  name: string,\r\n  productID: string;\r\n  type: string;\r\n  features: { featureID: string; value: string }[];\r\n  status: string;\r\n\r\n}\r\nexport const MENUITEMS = [\r\n  {\r\n    state: '/overview',\r\n    type: 'link',\r\n    name: 'Overview',\r\n    icon: 'space_dashboard',\r\n    category: 'Dashboard'\r\n  },\r\n  {\r\n    state: '/customers',\r\n    type: 'link',\r\n    name: 'Customer',\r\n    icon: 'account_box',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/subscription',\r\n    type: 'link',\r\n    name: 'Subscription',\r\n    icon: 'card_membership',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/products',\r\n    type: 'link',\r\n    name: 'Products',\r\n    icon: 'local_mall',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/features',\r\n    type: 'link',\r\n    name: 'Features',\r\n    icon: 'featured_play_list',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/plans',\r\n    type: 'link',\r\n    name: 'Plans',\r\n    icon: 'quick_reference_all',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/stepper',\r\n    type: 'link',\r\n    name: 'Add Ons',\r\n    icon: 'add_notes',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/coupons',\r\n    type: 'link',\r\n    name: 'Coupons',\r\n    icon: 'confirmation_number',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/payment/transactions',\r\n    type: 'link',\r\n    name: 'Transactions',\r\n    icon: 'compare_arrows',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/invoices',\r\n    type: 'link',\r\n    name: 'Invoices',\r\n    icon: 'receipt_long',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/logs',\r\n    type: 'link',\r\n    name: 'Logs',\r\n    icon: 'list_alt',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Menu_Headings = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Dashboard',\r\n    icon: 'settings',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Product Catalog ',\r\n    icon: 'logout',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Payment History ',\r\n    icon: 'logout',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Config_Menu = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Settings',\r\n    icon: 'settings',\r\n    category: 'Config',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'LogOut ',\r\n    icon: 'logout',\r\n    category: 'Confog',\r\n  },\r\n];\r\nexport const User_Options = [\r\n  {\r\n    path: '/user:id',\r\n    icon: 'account_circle',\r\n    name: 'My Account',\r\n    toggle: false,\r\n  },\r\n  { path: '/inbox', icon: 'inbox_outline', name: 'My Inbox', toggle: false },\r\n  { path: '', icon: 'clear_day', name: 'Dark Mode', toggle: true },\r\n  { path: '/help', icon: 'live_help', name: 'Help', toggle: false },\r\n];\r\n// Product listing\r\nexport const User_Data = [\r\n  {\r\n    id: 'random_id_1234',\r\n    product_ID: '#O365ProPlusRetail',\r\n    title: 'Microsoft Teams',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Host Online Calls', 'Unlimited Internet', 'Conference Calls'],\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_555',\r\n    product_ID: '#Or65SuperSupreme',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: [\r\n      'Unlimited Repos',\r\n      'Upto 50 Team Members',\r\n      'Host Online Calls',\r\n      'Unlimited Internet',\r\n      'Conference Calls',\r\n    ],\r\n    created_at: 'June 11th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_6969',\r\n    product_ID: '#Ow65Basic',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Conference Calls'],\r\n    created_at: 'June 18th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Features_Data = [\r\n  {\r\n    id: 'feature_id_459',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'feature_id_4591',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\n\r\nexport const Coupon_Data = [\r\n  {\r\n    id: 'coupon_id_459',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'coupon_id_460',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Plans_Data = [\r\n  {\r\n    id: 'ychvjbknk1',\r\n    plan_ID: 'As-012P',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.3',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: '1i23op1j2eo',\r\n    plan_ID: 'As-099G',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.2',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Notifications_Data = [\r\n  // {\r\n  //   user: 'John Smith' ,\r\n  //   message: 'subscriptione_created',\r\n  //   created_at: 'Aug 7th, 2023'\r\n  // }\r\n];\r\nexport const TransactionList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const InvoiceList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-003',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Payment Due',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const CustomerList = [\r\n  {\r\n    id: '#S0-001',\r\n    name: 'Alex C',\r\n    companyName: 'Greenplus Enterprises',\r\n    email: 'alex@example.com',\r\n    workPhone: '9876778865',\r\n    website: 'www.greenplus.com',\r\n    subscription: '2 subscripton (Available)',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    name: 'Zen D',\r\n    companyName: 'Zencorporation',\r\n    email: 'zen@example.com',\r\n    workPhone: '839103113',\r\n    website: 'www.zencorporation.com',\r\n    subscription: '1 subscripton (Available)',\r\n  },\r\n];\r\nexport const Logs_Data = [\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Subscription has been created for the Plan.',\r\n    Customer_Info: 'Greenplus Enterprises',\r\n    Event_Source: 'Via Portal',\r\n  },\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Active  subscription created for demo',\r\n    Customer_Info: 'Zencorporation',\r\n    Event_Source: 'Via Interface',\r\n  },\r\n];\r\nexport const feature_types = [\r\n  { value: 1, title: 'switch' },\r\n  { value: 2, title: 'range' },\r\n  { value: 3, title: 'quantity' },\r\n  { value: 4, title: 'custom' },\r\n];\r\nexport const pricingModels = [\r\n  { value: 1, title: 'Flat fee' },\r\n  { value: 2, title: 'Per unit' },\r\n  { value: 3, title: 'Tiered' },\r\n  { value: 4, title: 'Volume' },\r\n  { value: 5, title: 'Stairstep' },\r\n];\r\nexport const periodUnit = ['Daily', 'Weekly', 'Monthly', 'Yearly'];\r\nexport const StaticRoutes = {\r\n  features: ['features'],\r\n  products: ['products'],\r\n};\r\nexport const plan_add_empty_data = [\r\n  {\r\n    titleIcon:\r\n      '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n    iconAlt: 'invoice-outline-icon',\r\n    title: 'Product Details',\r\n    subtitle:\r\n      'Please click the “Add” button below to add a new product. Once you clicked the button, you will be prompted to enter the name of product, description and additional details.',\r\n    btnTitle: 'Add product',\r\n    btnPath: '/#',\r\n  },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Pricing Plans',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new pricing plans. Once you clicked the button, you will be prompted to enter pricing and additional details.',\r\n  //   btnTitle: 'Add Pricing',\r\n  //   btnPath: '/#',\r\n  // },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Add-ons Details',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new add-on. Once you have click button, you will be prompted to select add-on.',\r\n  //   btnTitle: 'Add Add-on',\r\n  //   btnPath: '/#',\r\n  // },\r\n];\r\nexport const noProducts = [\r\n  {\r\n    heading: 'Products',\r\n    imgPath: '../../../../assets/images/empty-illustrations.png',\r\n    alt: 'no proudcts available',\r\n    subtext: 'Looking for Product',\r\n    text: \"Seems like you haven't added any Product. Start adding products by click on “Create Product” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Product',\r\n    path: '/products/create',\r\n  },\r\n];\r\nexport const noFeatures = [\r\n  {\r\n    heading: 'Features',\r\n    imgPath: '../../../../assets/images/empty-illustrations-2.png',\r\n    alt: 'no features available',\r\n    subtext: 'Looking for Features',\r\n    text: \"Seems like you haven't added any feature. Start adding feature by click on “Create Feature” button \",\r\n    showButton: true,\r\n    buttonTxt: 'Create Feature',\r\n    path: '/features/create',\r\n  },\r\n];\r\nexport const noPlans = [\r\n  {\r\n    heading: 'Plans',\r\n    imgPath: '../../../../assets/images/empty-illustrations-4.png',\r\n    alt: 'no Plans available',\r\n    subtext: 'Looking for Plans',\r\n    text: \"Seems like you haven't added any Plan. Start adding plan by click on “Create Plan” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Plan',\r\n    path: '/plans/create',\r\n  },\r\n];\r\nexport const noPageFound = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/404-page.png',\r\n    alt: 'No Page Found',\r\n    subtext: \"Oops! Why you're here?\",\r\n    text: \"We are very sorry for inconvenience. It looks like you're try to access a page that either has been deleted or never existed.\",\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noCustomers = [\r\n  {\r\n    heading: 'Customers',\r\n    imgPath: '../../../../assets/images/empty-illustrations-6.png',\r\n    alt: 'no customers',\r\n    subtext: 'No customer yet',\r\n    text: 'Customers No customer yet After your first customer you will be able to view it here.',\r\n    showButton: false,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const nocoupons = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noTransactions = [\r\n  {\r\n    heading: 'Transaction',\r\n    imgPath: '../../../../assets/images/empty-illustrations-5.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'NO transaction yet',\r\n    text: 'After your first transaction you will be able to view it here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const noInvoice = [\r\n  {\r\n    heading: 'Invoice',\r\n    imgPath: '../../../../assets/images/invoice-empty.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'No invoice yet',\r\n    text: 'After your first transaction you will be able to view invoice here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const noLogs = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const Stepper = [\r\n  {\r\n    id: 1,\r\n    title: 'Step 1',\r\n    caption: 'Plan Information',\r\n    isVisible: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Step 2',\r\n    caption: 'Add Plan Pricing',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Step 3',\r\n    caption: 'Product Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Step 4',\r\n    caption: 'Add-on Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Step 5',\r\n    caption: 'Charges',\r\n    isVisible: false,\r\n  },\r\n];\r\nexport const listFilterOptions = [\r\n  'Yesterday',\r\n  'Last 7 days',\r\n  'Last Week',\r\n  'Last 30 days',\r\n  'Last 4 weeks',\r\n  'Last 12 weeks',\r\n  'Current month',\r\n  'Last calendar month',\r\n];\r\n\r\nexport interface ProductVariants {\r\n  productVariantId: string;\r\n  name: string;\r\n  productID: string;\r\n  type: string;\r\n  features: { featureID: string; value: string }[];\r\n  status: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "features",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 149
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 146
                },
                {
                    "name": "productID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 147
                },
                {
                    "name": "productVariantId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 145
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 150
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 148
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "ProductVariants",
            "id": "interface-ProductVariants-909fa3dce09599287106c3f3da3f0937a6e5c6871a710630a9736728d8608dd49fd2a191015bdfda04f21b892c532494e6d23ba5a32be2bd656206fc8e6b3892",
            "file": "src/app/shared/constants/consants.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n}\r\nexport interface Data_Type {\r\n  product_ID: string;\r\n  title: string;\r\n  description: string;\r\n  features: string[];\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface selectOptions {\r\n  value: number;\r\n  title: string;\r\n}\r\nexport interface features {\r\n  feature_id: string;\r\n  product_name: string;\r\n  feature_name: string;\r\n  description: string;\r\n  feature_type: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\n\r\nexport interface coupon {\r\n  coupon_id: string;\r\n  coupon_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface loginCredientials {\r\n  csrf_token:string,\r\n  method: string,\r\n  password_identifier: string,\r\n  password: string\r\n}\r\nexport interface Product {\r\n  productId: string;\r\n  imageUrl: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface GetProduct {\r\n  productId: string;\r\n  imageUrl: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface plansFields {\r\n  plan_ID: string;\r\n  external_name: string;\r\n  internal_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Feature {\r\n  featureId: string;\r\n  productId: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n  unit: string;\r\n  levels: [];\r\n}\r\nexport interface FeatureList {\r\n  featureId: number;\r\n  name: string;\r\n  productName: string;\r\n  levels: [];\r\n  description: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  type: string;\r\n  status: string;\r\n}\r\nexport interface Customer {\r\n  id: string;\r\n  name: string;\r\n  companyName: string;\r\n  email: string,\r\n  workPhone: string,\r\n  website: string,\r\n  subscription: string\r\n}\r\nexport interface GetFeature {\r\n  featureId: string;\r\n  productID: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n}\r\n\r\nexport interface invoice {\r\n  id: string;\r\n  customer_info: string;\r\n  issued_on: string;\r\n  voided_on: string;\r\n  paid_on: string;\r\n  created_at: string;\r\n  status: string;\r\n  amount: string;\r\n}\r\n\r\nexport interface logs {\r\n  Timestamp: any;\r\n  Events: string;\r\n  Customer_Info: string;\r\n  Event_Source: string;\r\n}\r\nexport interface Plan {\r\n  planId: string;\r\n  internalName: string;\r\n  externalName: string;\r\n  type: string;\r\n  description: string;\r\n  status: string;\r\n}\r\n\r\nexport interface PlanList {\r\n  productVariantId: string;\r\n  name: string;\r\n  productID: string;\r\n  type: string;\r\n  features: [];\r\n  status: string;\r\n}\r\n\r\nexport interface ProductVariant {\r\n  productVariantId: string;\r\n  name: string,\r\n  productID: string;\r\n  type: string;\r\n  features: { featureID: string; value: string }[];\r\n  status: string;\r\n\r\n}\r\nexport const MENUITEMS = [\r\n  {\r\n    state: '/overview',\r\n    type: 'link',\r\n    name: 'Overview',\r\n    icon: 'space_dashboard',\r\n    category: 'Dashboard'\r\n  },\r\n  {\r\n    state: '/customers',\r\n    type: 'link',\r\n    name: 'Customer',\r\n    icon: 'account_box',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/subscription',\r\n    type: 'link',\r\n    name: 'Subscription',\r\n    icon: 'card_membership',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/products',\r\n    type: 'link',\r\n    name: 'Products',\r\n    icon: 'local_mall',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/features',\r\n    type: 'link',\r\n    name: 'Features',\r\n    icon: 'featured_play_list',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/plans',\r\n    type: 'link',\r\n    name: 'Plans',\r\n    icon: 'quick_reference_all',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/stepper',\r\n    type: 'link',\r\n    name: 'Add Ons',\r\n    icon: 'add_notes',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/coupons',\r\n    type: 'link',\r\n    name: 'Coupons',\r\n    icon: 'confirmation_number',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/payment/transactions',\r\n    type: 'link',\r\n    name: 'Transactions',\r\n    icon: 'compare_arrows',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/invoices',\r\n    type: 'link',\r\n    name: 'Invoices',\r\n    icon: 'receipt_long',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/logs',\r\n    type: 'link',\r\n    name: 'Logs',\r\n    icon: 'list_alt',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Menu_Headings = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Dashboard',\r\n    icon: 'settings',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Product Catalog ',\r\n    icon: 'logout',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Payment History ',\r\n    icon: 'logout',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Config_Menu = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Settings',\r\n    icon: 'settings',\r\n    category: 'Config',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'LogOut ',\r\n    icon: 'logout',\r\n    category: 'Confog',\r\n  },\r\n];\r\nexport const User_Options = [\r\n  {\r\n    path: '/user:id',\r\n    icon: 'account_circle',\r\n    name: 'My Account',\r\n    toggle: false,\r\n  },\r\n  { path: '/inbox', icon: 'inbox_outline', name: 'My Inbox', toggle: false },\r\n  { path: '', icon: 'clear_day', name: 'Dark Mode', toggle: true },\r\n  { path: '/help', icon: 'live_help', name: 'Help', toggle: false },\r\n];\r\n// Product listing\r\nexport const User_Data = [\r\n  {\r\n    id: 'random_id_1234',\r\n    product_ID: '#O365ProPlusRetail',\r\n    title: 'Microsoft Teams',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Host Online Calls', 'Unlimited Internet', 'Conference Calls'],\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_555',\r\n    product_ID: '#Or65SuperSupreme',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: [\r\n      'Unlimited Repos',\r\n      'Upto 50 Team Members',\r\n      'Host Online Calls',\r\n      'Unlimited Internet',\r\n      'Conference Calls',\r\n    ],\r\n    created_at: 'June 11th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_6969',\r\n    product_ID: '#Ow65Basic',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Conference Calls'],\r\n    created_at: 'June 18th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Features_Data = [\r\n  {\r\n    id: 'feature_id_459',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'feature_id_4591',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\n\r\nexport const Coupon_Data = [\r\n  {\r\n    id: 'coupon_id_459',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'coupon_id_460',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Plans_Data = [\r\n  {\r\n    id: 'ychvjbknk1',\r\n    plan_ID: 'As-012P',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.3',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: '1i23op1j2eo',\r\n    plan_ID: 'As-099G',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.2',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Notifications_Data = [\r\n  // {\r\n  //   user: 'John Smith' ,\r\n  //   message: 'subscriptione_created',\r\n  //   created_at: 'Aug 7th, 2023'\r\n  // }\r\n];\r\nexport const TransactionList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const InvoiceList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-003',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Payment Due',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const CustomerList = [\r\n  {\r\n    id: '#S0-001',\r\n    name: 'Alex C',\r\n    companyName: 'Greenplus Enterprises',\r\n    email: 'alex@example.com',\r\n    workPhone: '9876778865',\r\n    website: 'www.greenplus.com',\r\n    subscription: '2 subscripton (Available)',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    name: 'Zen D',\r\n    companyName: 'Zencorporation',\r\n    email: 'zen@example.com',\r\n    workPhone: '839103113',\r\n    website: 'www.zencorporation.com',\r\n    subscription: '1 subscripton (Available)',\r\n  },\r\n];\r\nexport const Logs_Data = [\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Subscription has been created for the Plan.',\r\n    Customer_Info: 'Greenplus Enterprises',\r\n    Event_Source: 'Via Portal',\r\n  },\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Active  subscription created for demo',\r\n    Customer_Info: 'Zencorporation',\r\n    Event_Source: 'Via Interface',\r\n  },\r\n];\r\nexport const feature_types = [\r\n  { value: 1, title: 'switch' },\r\n  { value: 2, title: 'range' },\r\n  { value: 3, title: 'quantity' },\r\n  { value: 4, title: 'custom' },\r\n];\r\nexport const pricingModels = [\r\n  { value: 1, title: 'Flat fee' },\r\n  { value: 2, title: 'Per unit' },\r\n  { value: 3, title: 'Tiered' },\r\n  { value: 4, title: 'Volume' },\r\n  { value: 5, title: 'Stairstep' },\r\n];\r\nexport const periodUnit = ['Daily', 'Weekly', 'Monthly', 'Yearly'];\r\nexport const StaticRoutes = {\r\n  features: ['features'],\r\n  products: ['products'],\r\n};\r\nexport const plan_add_empty_data = [\r\n  {\r\n    titleIcon:\r\n      '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n    iconAlt: 'invoice-outline-icon',\r\n    title: 'Product Details',\r\n    subtitle:\r\n      'Please click the “Add” button below to add a new product. Once you clicked the button, you will be prompted to enter the name of product, description and additional details.',\r\n    btnTitle: 'Add product',\r\n    btnPath: '/#',\r\n  },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Pricing Plans',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new pricing plans. Once you clicked the button, you will be prompted to enter pricing and additional details.',\r\n  //   btnTitle: 'Add Pricing',\r\n  //   btnPath: '/#',\r\n  // },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Add-ons Details',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new add-on. Once you have click button, you will be prompted to select add-on.',\r\n  //   btnTitle: 'Add Add-on',\r\n  //   btnPath: '/#',\r\n  // },\r\n];\r\nexport const noProducts = [\r\n  {\r\n    heading: 'Products',\r\n    imgPath: '../../../../assets/images/empty-illustrations.png',\r\n    alt: 'no proudcts available',\r\n    subtext: 'Looking for Product',\r\n    text: \"Seems like you haven't added any Product. Start adding products by click on “Create Product” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Product',\r\n    path: '/products/create',\r\n  },\r\n];\r\nexport const noFeatures = [\r\n  {\r\n    heading: 'Features',\r\n    imgPath: '../../../../assets/images/empty-illustrations-2.png',\r\n    alt: 'no features available',\r\n    subtext: 'Looking for Features',\r\n    text: \"Seems like you haven't added any feature. Start adding feature by click on “Create Feature” button \",\r\n    showButton: true,\r\n    buttonTxt: 'Create Feature',\r\n    path: '/features/create',\r\n  },\r\n];\r\nexport const noPlans = [\r\n  {\r\n    heading: 'Plans',\r\n    imgPath: '../../../../assets/images/empty-illustrations-4.png',\r\n    alt: 'no Plans available',\r\n    subtext: 'Looking for Plans',\r\n    text: \"Seems like you haven't added any Plan. Start adding plan by click on “Create Plan” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Plan',\r\n    path: '/plans/create',\r\n  },\r\n];\r\nexport const noPageFound = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/404-page.png',\r\n    alt: 'No Page Found',\r\n    subtext: \"Oops! Why you're here?\",\r\n    text: \"We are very sorry for inconvenience. It looks like you're try to access a page that either has been deleted or never existed.\",\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noCustomers = [\r\n  {\r\n    heading: 'Customers',\r\n    imgPath: '../../../../assets/images/empty-illustrations-6.png',\r\n    alt: 'no customers',\r\n    subtext: 'No customer yet',\r\n    text: 'Customers No customer yet After your first customer you will be able to view it here.',\r\n    showButton: false,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const nocoupons = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noTransactions = [\r\n  {\r\n    heading: 'Transaction',\r\n    imgPath: '../../../../assets/images/empty-illustrations-5.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'NO transaction yet',\r\n    text: 'After your first transaction you will be able to view it here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const noInvoice = [\r\n  {\r\n    heading: 'Invoice',\r\n    imgPath: '../../../../assets/images/invoice-empty.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'No invoice yet',\r\n    text: 'After your first transaction you will be able to view invoice here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const noLogs = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const Stepper = [\r\n  {\r\n    id: 1,\r\n    title: 'Step 1',\r\n    caption: 'Plan Information',\r\n    isVisible: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Step 2',\r\n    caption: 'Add Plan Pricing',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Step 3',\r\n    caption: 'Product Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Step 4',\r\n    caption: 'Add-on Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Step 5',\r\n    caption: 'Charges',\r\n    isVisible: false,\r\n  },\r\n];\r\nexport const listFilterOptions = [\r\n  'Yesterday',\r\n  'Last 7 days',\r\n  'Last Week',\r\n  'Last 30 days',\r\n  'Last 4 weeks',\r\n  'Last 12 weeks',\r\n  'Current month',\r\n  'Last calendar month',\r\n];\r\n\r\nexport interface ProductVariants {\r\n  productVariantId: string;\r\n  name: string;\r\n  productID: string;\r\n  type: string;\r\n  features: { featureID: string; value: string }[];\r\n  status: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "features",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 676
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 673
                },
                {
                    "name": "productID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 674
                },
                {
                    "name": "productVariantId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 672
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 677
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 675
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "selectOptions",
            "id": "interface-selectOptions-909fa3dce09599287106c3f3da3f0937a6e5c6871a710630a9736728d8608dd49fd2a191015bdfda04f21b892c532494e6d23ba5a32be2bd656206fc8e6b3892",
            "file": "src/app/shared/constants/consants.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n}\r\nexport interface Data_Type {\r\n  product_ID: string;\r\n  title: string;\r\n  description: string;\r\n  features: string[];\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface selectOptions {\r\n  value: number;\r\n  title: string;\r\n}\r\nexport interface features {\r\n  feature_id: string;\r\n  product_name: string;\r\n  feature_name: string;\r\n  description: string;\r\n  feature_type: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\n\r\nexport interface coupon {\r\n  coupon_id: string;\r\n  coupon_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface loginCredientials {\r\n  csrf_token:string,\r\n  method: string,\r\n  password_identifier: string,\r\n  password: string\r\n}\r\nexport interface Product {\r\n  productId: string;\r\n  imageUrl: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface GetProduct {\r\n  productId: string;\r\n  imageUrl: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface plansFields {\r\n  plan_ID: string;\r\n  external_name: string;\r\n  internal_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Feature {\r\n  featureId: string;\r\n  productId: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n  unit: string;\r\n  levels: [];\r\n}\r\nexport interface FeatureList {\r\n  featureId: number;\r\n  name: string;\r\n  productName: string;\r\n  levels: [];\r\n  description: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  type: string;\r\n  status: string;\r\n}\r\nexport interface Customer {\r\n  id: string;\r\n  name: string;\r\n  companyName: string;\r\n  email: string,\r\n  workPhone: string,\r\n  website: string,\r\n  subscription: string\r\n}\r\nexport interface GetFeature {\r\n  featureId: string;\r\n  productID: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n}\r\n\r\nexport interface invoice {\r\n  id: string;\r\n  customer_info: string;\r\n  issued_on: string;\r\n  voided_on: string;\r\n  paid_on: string;\r\n  created_at: string;\r\n  status: string;\r\n  amount: string;\r\n}\r\n\r\nexport interface logs {\r\n  Timestamp: any;\r\n  Events: string;\r\n  Customer_Info: string;\r\n  Event_Source: string;\r\n}\r\nexport interface Plan {\r\n  planId: string;\r\n  internalName: string;\r\n  externalName: string;\r\n  type: string;\r\n  description: string;\r\n  status: string;\r\n}\r\n\r\nexport interface PlanList {\r\n  productVariantId: string;\r\n  name: string;\r\n  productID: string;\r\n  type: string;\r\n  features: [];\r\n  status: string;\r\n}\r\n\r\nexport interface ProductVariant {\r\n  productVariantId: string;\r\n  name: string,\r\n  productID: string;\r\n  type: string;\r\n  features: { featureID: string; value: string }[];\r\n  status: string;\r\n\r\n}\r\nexport const MENUITEMS = [\r\n  {\r\n    state: '/overview',\r\n    type: 'link',\r\n    name: 'Overview',\r\n    icon: 'space_dashboard',\r\n    category: 'Dashboard'\r\n  },\r\n  {\r\n    state: '/customers',\r\n    type: 'link',\r\n    name: 'Customer',\r\n    icon: 'account_box',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/subscription',\r\n    type: 'link',\r\n    name: 'Subscription',\r\n    icon: 'card_membership',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/products',\r\n    type: 'link',\r\n    name: 'Products',\r\n    icon: 'local_mall',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/features',\r\n    type: 'link',\r\n    name: 'Features',\r\n    icon: 'featured_play_list',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/plans',\r\n    type: 'link',\r\n    name: 'Plans',\r\n    icon: 'quick_reference_all',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/stepper',\r\n    type: 'link',\r\n    name: 'Add Ons',\r\n    icon: 'add_notes',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/coupons',\r\n    type: 'link',\r\n    name: 'Coupons',\r\n    icon: 'confirmation_number',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/payment/transactions',\r\n    type: 'link',\r\n    name: 'Transactions',\r\n    icon: 'compare_arrows',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/invoices',\r\n    type: 'link',\r\n    name: 'Invoices',\r\n    icon: 'receipt_long',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/logs',\r\n    type: 'link',\r\n    name: 'Logs',\r\n    icon: 'list_alt',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Menu_Headings = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Dashboard',\r\n    icon: 'settings',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Product Catalog ',\r\n    icon: 'logout',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Payment History ',\r\n    icon: 'logout',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Config_Menu = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Settings',\r\n    icon: 'settings',\r\n    category: 'Config',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'LogOut ',\r\n    icon: 'logout',\r\n    category: 'Confog',\r\n  },\r\n];\r\nexport const User_Options = [\r\n  {\r\n    path: '/user:id',\r\n    icon: 'account_circle',\r\n    name: 'My Account',\r\n    toggle: false,\r\n  },\r\n  { path: '/inbox', icon: 'inbox_outline', name: 'My Inbox', toggle: false },\r\n  { path: '', icon: 'clear_day', name: 'Dark Mode', toggle: true },\r\n  { path: '/help', icon: 'live_help', name: 'Help', toggle: false },\r\n];\r\n// Product listing\r\nexport const User_Data = [\r\n  {\r\n    id: 'random_id_1234',\r\n    product_ID: '#O365ProPlusRetail',\r\n    title: 'Microsoft Teams',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Host Online Calls', 'Unlimited Internet', 'Conference Calls'],\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_555',\r\n    product_ID: '#Or65SuperSupreme',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: [\r\n      'Unlimited Repos',\r\n      'Upto 50 Team Members',\r\n      'Host Online Calls',\r\n      'Unlimited Internet',\r\n      'Conference Calls',\r\n    ],\r\n    created_at: 'June 11th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_6969',\r\n    product_ID: '#Ow65Basic',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Conference Calls'],\r\n    created_at: 'June 18th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Features_Data = [\r\n  {\r\n    id: 'feature_id_459',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'feature_id_4591',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\n\r\nexport const Coupon_Data = [\r\n  {\r\n    id: 'coupon_id_459',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'coupon_id_460',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Plans_Data = [\r\n  {\r\n    id: 'ychvjbknk1',\r\n    plan_ID: 'As-012P',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.3',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: '1i23op1j2eo',\r\n    plan_ID: 'As-099G',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.2',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Notifications_Data = [\r\n  // {\r\n  //   user: 'John Smith' ,\r\n  //   message: 'subscriptione_created',\r\n  //   created_at: 'Aug 7th, 2023'\r\n  // }\r\n];\r\nexport const TransactionList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const InvoiceList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-003',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Payment Due',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const CustomerList = [\r\n  {\r\n    id: '#S0-001',\r\n    name: 'Alex C',\r\n    companyName: 'Greenplus Enterprises',\r\n    email: 'alex@example.com',\r\n    workPhone: '9876778865',\r\n    website: 'www.greenplus.com',\r\n    subscription: '2 subscripton (Available)',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    name: 'Zen D',\r\n    companyName: 'Zencorporation',\r\n    email: 'zen@example.com',\r\n    workPhone: '839103113',\r\n    website: 'www.zencorporation.com',\r\n    subscription: '1 subscripton (Available)',\r\n  },\r\n];\r\nexport const Logs_Data = [\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Subscription has been created for the Plan.',\r\n    Customer_Info: 'Greenplus Enterprises',\r\n    Event_Source: 'Via Portal',\r\n  },\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Active  subscription created for demo',\r\n    Customer_Info: 'Zencorporation',\r\n    Event_Source: 'Via Interface',\r\n  },\r\n];\r\nexport const feature_types = [\r\n  { value: 1, title: 'switch' },\r\n  { value: 2, title: 'range' },\r\n  { value: 3, title: 'quantity' },\r\n  { value: 4, title: 'custom' },\r\n];\r\nexport const pricingModels = [\r\n  { value: 1, title: 'Flat fee' },\r\n  { value: 2, title: 'Per unit' },\r\n  { value: 3, title: 'Tiered' },\r\n  { value: 4, title: 'Volume' },\r\n  { value: 5, title: 'Stairstep' },\r\n];\r\nexport const periodUnit = ['Daily', 'Weekly', 'Monthly', 'Yearly'];\r\nexport const StaticRoutes = {\r\n  features: ['features'],\r\n  products: ['products'],\r\n};\r\nexport const plan_add_empty_data = [\r\n  {\r\n    titleIcon:\r\n      '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n    iconAlt: 'invoice-outline-icon',\r\n    title: 'Product Details',\r\n    subtitle:\r\n      'Please click the “Add” button below to add a new product. Once you clicked the button, you will be prompted to enter the name of product, description and additional details.',\r\n    btnTitle: 'Add product',\r\n    btnPath: '/#',\r\n  },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Pricing Plans',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new pricing plans. Once you clicked the button, you will be prompted to enter pricing and additional details.',\r\n  //   btnTitle: 'Add Pricing',\r\n  //   btnPath: '/#',\r\n  // },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Add-ons Details',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new add-on. Once you have click button, you will be prompted to select add-on.',\r\n  //   btnTitle: 'Add Add-on',\r\n  //   btnPath: '/#',\r\n  // },\r\n];\r\nexport const noProducts = [\r\n  {\r\n    heading: 'Products',\r\n    imgPath: '../../../../assets/images/empty-illustrations.png',\r\n    alt: 'no proudcts available',\r\n    subtext: 'Looking for Product',\r\n    text: \"Seems like you haven't added any Product. Start adding products by click on “Create Product” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Product',\r\n    path: '/products/create',\r\n  },\r\n];\r\nexport const noFeatures = [\r\n  {\r\n    heading: 'Features',\r\n    imgPath: '../../../../assets/images/empty-illustrations-2.png',\r\n    alt: 'no features available',\r\n    subtext: 'Looking for Features',\r\n    text: \"Seems like you haven't added any feature. Start adding feature by click on “Create Feature” button \",\r\n    showButton: true,\r\n    buttonTxt: 'Create Feature',\r\n    path: '/features/create',\r\n  },\r\n];\r\nexport const noPlans = [\r\n  {\r\n    heading: 'Plans',\r\n    imgPath: '../../../../assets/images/empty-illustrations-4.png',\r\n    alt: 'no Plans available',\r\n    subtext: 'Looking for Plans',\r\n    text: \"Seems like you haven't added any Plan. Start adding plan by click on “Create Plan” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Plan',\r\n    path: '/plans/create',\r\n  },\r\n];\r\nexport const noPageFound = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/404-page.png',\r\n    alt: 'No Page Found',\r\n    subtext: \"Oops! Why you're here?\",\r\n    text: \"We are very sorry for inconvenience. It looks like you're try to access a page that either has been deleted or never existed.\",\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noCustomers = [\r\n  {\r\n    heading: 'Customers',\r\n    imgPath: '../../../../assets/images/empty-illustrations-6.png',\r\n    alt: 'no customers',\r\n    subtext: 'No customer yet',\r\n    text: 'Customers No customer yet After your first customer you will be able to view it here.',\r\n    showButton: false,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const nocoupons = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noTransactions = [\r\n  {\r\n    heading: 'Transaction',\r\n    imgPath: '../../../../assets/images/empty-illustrations-5.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'NO transaction yet',\r\n    text: 'After your first transaction you will be able to view it here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const noInvoice = [\r\n  {\r\n    heading: 'Invoice',\r\n    imgPath: '../../../../assets/images/invoice-empty.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'No invoice yet',\r\n    text: 'After your first transaction you will be able to view invoice here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const noLogs = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const Stepper = [\r\n  {\r\n    id: 1,\r\n    title: 'Step 1',\r\n    caption: 'Plan Information',\r\n    isVisible: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Step 2',\r\n    caption: 'Add Plan Pricing',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Step 3',\r\n    caption: 'Product Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Step 4',\r\n    caption: 'Add-on Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Step 5',\r\n    caption: 'Charges',\r\n    isVisible: false,\r\n  },\r\n];\r\nexport const listFilterOptions = [\r\n  'Yesterday',\r\n  'Last 7 days',\r\n  'Last Week',\r\n  'Last 30 days',\r\n  'Last 4 weeks',\r\n  'Last 12 weeks',\r\n  'Current month',\r\n  'Last calendar month',\r\n];\r\n\r\nexport interface ProductVariants {\r\n  productVariantId: string;\r\n  name: string;\r\n  productID: string;\r\n  type: string;\r\n  features: { featureID: string; value: string }[];\r\n  status: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "Task",
            "id": "interface-Task-f7ac941ae6bfa47d2ef8849da3665b21871fcd4e0a24af87aa1397bd42213da937cedc1571c2aff880b96efe936ed23ff87b832e8a9f9dc05c364f86d252704b",
            "file": "src/stories/softobiz-ui/Checkbox/checkbox.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, ViewEncapsulation, Input } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material/core';\r\n\r\nexport interface Task {\r\n  name: string;\r\n  completed: boolean;\r\n  color: ThemePalette;\r\n  subtasks?: Task[];\r\n}\r\n\r\n@Component({\r\n  selector: 'sft-check-box',\r\n  templateUrl: './checkbox.component.html',\r\n  styleUrls: ['./checkbox.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class CheckboxComponent {\r\n\r\n  @Input() task: string = '';\r\n\r\n  //Checkbox label\r\n  @Input() label: string = '';\r\n\r\n  //Whether the checkbox is disabled.\r\n  @Input() disable = false;\r\n\r\n  //Whether the checkbox is checked.\r\n  @Input() checked: boolean = false;\r\n  \r\n  //Theme color palette for the component\r\n  @Input() color: ThemePalette;\r\n\r\n  //Whether ripples are disabled\r\n  @Input() disableRipple: boolean = false;\r\n\r\n  //Whether the checkbox is indeterminate\r\n  @Input() indeterminate: boolean = false;\r\n\r\n  // Whether the label should appear after or before the checkbox. Defaults to 'after'\r\n  @Input() labelPosition: 'before' | 'after' = 'after';\r\n\r\n}\r\n",
            "properties": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ThemePalette",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "completed",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "subtasks",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Task[]",
                    "optional": true,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        },
        {
            "name": "ValidityElement",
            "id": "interface-ValidityElement-bdc75da5c4e4173faa05551b7c9da2fa80314d84e76516573caeb6af31fdc11fddec013becd54ef4f2346726c3f138684f1c3c94ef1e04a8aadd8c54d132337b",
            "file": "src/app/modules/coupons/components/view-coupons/view-coupons.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\nexport interface DiscountElement {\r\n  Discount : string;\r\n  Amount: any;\r\n}\r\nexport interface DurationElement {\r\n  Duration : string;\r\n  time: any;\r\n}\r\n\r\nexport interface ValidityElement {\r\n  Validity : string;\r\n  time: any;\r\n}\r\n\r\nconst ELEMENT_DATA: DiscountElement[] = [\r\n  {  Discount : 'Discount Type', Amount: 'Fixed Amount' },\r\n  { Discount : 'Applied on', Amount: 'Fixed Amount' },\r\n  {  Discount : 'Discount Type', Amount: 'Invoice Amount' },\r\n];\r\n\r\nconst Duration_DATA: DurationElement[] = [\r\n  {  Duration : 'Discount Type', time: 'Forever' },\r\n  { Duration : 'Applied on', time: 'All Plans' },\r\n  {  Duration : 'Discount Type', time: 'All Addons' },\r\n];\r\n\r\nconst Validity_DATA: ValidityElement[] = [\r\n  {  Validity : 'Valid Till', time: 'Forever' },\r\n  { Validity : 'Maximum Redemptions', time: '0 to unlimited' },\r\n];\r\n@Component({\r\n  selector: 'app-view-coupons',\r\n  templateUrl: './view-coupons.component.html',\r\n  styleUrls: ['./view-coupons.component.scss']\r\n})\r\nexport class ViewCouponsComponent {\r\n  displayedColumns: string[] = ['Discount', 'Amount'];\r\n  displayedColumns2: string[] = ['Duration','time'];\r\n  displayedColumns3: string[] = ['Validity','time'];\r\n  dataSource = ELEMENT_DATA;\r\n  dataDuration = Duration_DATA;\r\n  dataValidity = Validity_DATA;\r\n  clickedRows = new Set<DiscountElement>();\r\n}\r\n",
            "properties": [
                {
                    "name": "time",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "Validity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "ApiService",
            "id": "injectable-ApiService-48dfd761e339c088de2b82dbf96fa93f4d8df710194b24e14c9bbeafd729957401d71d253ff1a1055898797a94c7a981d287203cf1c4ceb67d7d71907c263c14",
            "file": "src/app/core/services/api.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formatErrors",
                    "args": [
                        {
                            "name": "err",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "err",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "HttpParams",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "new HttpParams()"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "HttpParams",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "new HttpParams()",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "body",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "body",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "put",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "body",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "body",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setHeaders",
                    "args": [],
                    "optional": false,
                    "returnType": "HttpHeaders",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, catchError, map, throwError } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ApiService {\r\n  constructor(private http: HttpClient) {}\r\n  private setHeaders(): HttpHeaders {\r\n    const headersConfig = {\r\n      'Content-Type': 'application/json',\r\n      Accept: 'application/json',\r\n      observe: 'response',\r\n      Authorization: '',\r\n    };\r\n    return new HttpHeaders(headersConfig);\r\n  }\r\n\r\n\r\n  private formatErrors(err: any) {\r\n    console.log('api call error:: ', err);\r\n    return throwError(err?.error);\r\n  }\r\n\r\n  // Get Method\r\n  public get(\r\n    path: string,\r\n    params: HttpParams = new HttpParams()\r\n  ): Observable<any> {\r\n    return this.http\r\n      .get(`${path}`, { headers: this.setHeaders(), params: params })\r\n      .pipe(catchError(this.formatErrors))\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  // Post Method\r\n  public post(path: string, body: any): Observable<any> {\r\n    return this.http.post(`${path}`, body, { headers: this.setHeaders() }).pipe(\r\n      catchError(this.formatErrors),\r\n      map((res: Response) => res)\r\n    );\r\n  }\r\n\r\n  // Put Method\r\n  public put(path: string, body: any): Observable<any> {\r\n    return this.http\r\n      .put(`${path}`, body, { headers: this.setHeaders() })\r\n      .pipe(catchError(this.formatErrors))\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n\r\n  // Delete Method\r\n  public delete(path: string): Observable<any> {\r\n    return this.http\r\n      .delete(`${path}`, { headers: this.setHeaders() })\r\n      .pipe(catchError(this.formatErrors))\r\n      .pipe(map((res: Response) => res));\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "AuthGuard",
            "id": "injectable-AuthGuard-e4d0ee75771cdb589efa9d43f0a5800e50c3a8fbd6047f1ed521e9d4a5ad3cf943f0fb85eec7d151eec13dda6a5babed0b3e4c4db2d527f4b3ce37654fc11fae",
            "file": "src/app/modules/sign-in/auth.guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [
                        {
                            "name": "next",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "next",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard {\r\n  constructor(private router: Router) { }\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    // Check if the session is valid\r\n    const session = window.localStorage.getItem('session');\r\n    if (session !== null) {\r\n      return true;\r\n    } else {\r\n      // Redirect the user to the sign-in page \r\n      this.router.navigate(['/sign-in']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "CouponsService",
            "id": "injectable-CouponsService-5560d97d40a463895c02867b78f3dfed93590b08a36a608e278d70e3e8db651c3ddb2c90bce5f40771a47b4515101941a57d80638c4985d439b953714b3b23ab",
            "file": "src/app/modules/coupons/services/coupons.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CouponsService {\r\n\r\n  constructor() { }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        },
        {
            "name": "FeatureService",
            "id": "injectable-FeatureService-6b7806358f79d8f745193361569fc712c92d808437f2fe4fd57f69ed256a3c1b8a4b96bf3be05ea4ee476826a3e39546591a44cdcc7411abc37817ffc5bf9d51",
            "file": "src/app/modules/features/services/feature.service.ts",
            "properties": [
                {
                    "name": "error$",
                    "defaultValue": "new Subject<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "feature$",
                    "defaultValue": "this.featureSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "features",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FeatureList[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "featureSubject",
                    "defaultValue": "new BehaviorSubject<any>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "addFeature",
                    "args": [
                        {
                            "name": "feature",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Feature>",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "feature",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteFeature",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getFeatureById",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<GetFeature>",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getFeatures",
                    "args": [
                        {
                            "name": "PageNumber",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "search",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "sortBy",
                            "type": "\"name\" | \"createdOn\"",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "sortOrder",
                            "type": "\"asc\" | \"desc\"",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<FeatureList[]>",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "PageNumber",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "search",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "sortBy",
                            "type": "\"name\" | \"createdOn\"",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "sortOrder",
                            "type": "\"asc\" | \"desc\"",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateFeature",
                    "args": [
                        {
                            "name": "featureId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "updatedFeature",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Feature>",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "featureId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "updatedFeature",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, catchError, map, Observable, Subject } from 'rxjs';\r\nimport {\r\n  Feature,\r\n  FeatureList,\r\n  GetFeature,\r\n} from 'src/app/shared/constants/consants';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FeatureService {\r\n  private featureSubject = new BehaviorSubject<any>(null);\r\n  public feature$ = this.featureSubject.asObservable();\r\n  features: FeatureList[] = [];\r\n  error$ = new Subject<string>();\r\n  constructor(private http: HttpClient) {}\r\n\r\n  addFeature(feature: any): Observable<Feature> {\r\n    return this.http.post(`${environment.apiUrl}/feature`, feature).pipe(\r\n      map((res: any) => {\r\n        this.featureSubject.next(res.data);\r\n        return res.data;\r\n      }),\r\n      catchError((err) => {\r\n        this.error$.next(err.message);\r\n        throw err;\r\n      })\r\n    );\r\n  }\r\n\r\n  getFeatures(\r\n    PageNumber: number,\r\n    limit: number,\r\n    search: string,\r\n    sortBy: 'name' | 'createdOn',\r\n    sortOrder: 'asc' | 'desc'\r\n  ): Observable<FeatureList[]> {\r\n    return this.http\r\n      .get<any>(\r\n        `${environment.apiUrl}/feature?page=${PageNumber}&limit=${limit}&search=${search}&sortBy=${sortBy}&sortOrder=${sortOrder}`\r\n      )\r\n      .pipe(\r\n        map((res) => {\r\n          this.featureSubject.next(res.data);\r\n          this.features = res.data;          \r\n          return res.data;\r\n        }),\r\n        catchError((err) => {\r\n          console.log(err);\r\n          throw err;\r\n        })\r\n      );\r\n  }\r\n\r\n  deleteFeature(id: number) {\r\n    const url = `${environment.apiUrl}/feature/{featureId}?featureId=${id}`;\r\n    return this.http.delete(url).pipe(\r\n      map((res) => {\r\n        this.features = this.features.filter(\r\n          (feature) => feature.featureId !== id\r\n        );\r\n        this.featureSubject.next(this.features);\r\n        return res;\r\n      }),\r\n      catchError((err) => {\r\n        console.log(err);\r\n        throw err;\r\n      })\r\n    );\r\n  }\r\n  getFeatureById(id: string): Observable<GetFeature> {\r\n    return this.http\r\n      .get<any>(`${environment.apiUrl}/feature/{featureId}?featureId=${id}`)\r\n      .pipe(\r\n        map((res) => {\r\n          this.featureSubject.next(res);\r\n          return res.data;\r\n        }),\r\n        catchError((err) => {\r\n          this.error$.next(err.message);\r\n          throw err;\r\n        })\r\n      );\r\n  }\r\n\r\n  updateFeature(featureId: string, updatedFeature: any): Observable<Feature> {\r\n    const url = `${environment.apiUrl}/feature?featureId=${featureId}`;\r\n    return this.http.put(url, updatedFeature).pipe(\r\n      map((res: any) => {\r\n        this.featureSubject.next(res.data);\r\n        return res.data;\r\n      }),\r\n      catchError((err) => {\r\n        this.error$.next(err.message);\r\n        throw err;\r\n      })\r\n    );\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "GlobalService",
            "id": "injectable-GlobalService-b95b5e7c36ecc7586d1aef1c47774159ba7fcc41ac2e21984f2f6ba9117ac9ac00e0d71cebe2cf222deab28f85e59e183cf37ec62afcc7a1f7df3e9a314ae360",
            "file": "src/app/core/services/global.service.ts",
            "properties": [
                {
                    "name": "isLoading",
                    "defaultValue": "new BehaviorSubject<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "staticRoutes",
                    "defaultValue": "StaticRoutes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methods": [
                {
                    "name": "componentDestroyed",
                    "args": [
                        {
                            "name": "component",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "component",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hideLoader",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isRouteActive",
                    "args": [
                        {
                            "name": "routeSteps",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "routeSteps",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loaderStatus",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showLoader",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, OnDestroy } from '@angular/core';\r\nimport { BehaviorSubject, ReplaySubject } from 'rxjs';\r\nimport { StaticRoutes } from 'src/app/shared/constants/consants';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class GlobalService {\r\n  staticRoutes: any = StaticRoutes;\r\n  public isLoading = new BehaviorSubject<boolean>(false);\r\n  constructor() {}\r\n\r\n  showLoader() {\r\n    this.isLoading.next(true);\r\n  }\r\n  hideLoader() {\r\n    this.isLoading.next(false);\r\n  }\r\n  loaderStatus() {\r\n    return this.isLoading.asObservable();\r\n  }\r\n  isRouteActive(routeSteps: any) {\r\n    if (routeSteps.length >= 4) {\r\n      for (let obj in this.staticRoutes) {\r\n        if (this.staticRoutes[obj].indexOf(routeSteps[3]) >= 0) {\r\n          return obj;\r\n        }\r\n\r\n        if (this.staticRoutes[obj].indexOf(routeSteps[4]) >= 0) {\r\n          return obj;\r\n        }\r\n      }\r\n      return '';\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  componentDestroyed(component: any) {\r\n    const oldNgOnDestroy = component.ngOnDestroy;\r\n    const destroyed$ = new ReplaySubject<void>(1);\r\n    component.ngOnDestroy = () => {\r\n      oldNgOnDestroy.apply(component);\r\n      destroyed$.next(undefined);\r\n      destroyed$.complete();\r\n    };\r\n    return destroyed$;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "type": "injectable"
        },
        {
            "name": "InvoicesService",
            "id": "injectable-InvoicesService-63c3c9240a15f36938894b4e4e5c2bbca915c34273f94cf6a656ceca3d2caafc7351deacfeb7859012790df8982f962b1e3d9a4fc2e327995cf54c0e87d44548",
            "file": "src/app/modules/payment-history/invoices/service/invoices.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InvoicesService {\r\n\r\n  constructor() { }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        },
        {
            "name": "kratosService",
            "id": "injectable-kratosService-e56d464c1f71904565c593efb1b7ee199eb4698e431d244781b4b971b716ddefa909e410ab74ac7ddf600b12dcd5de33a3b42cce50126c5628152cc370b2b321",
            "file": "src/app/modules/sign-in/services/kratos.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "loginIdentity",
                    "args": [
                        {
                            "name": "payload",
                            "type": "loginCredientials",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "payload",
                            "type": "loginCredientials",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, catchError, map, switchMap } from 'rxjs';\r\nimport { loginCredientials } from 'src/app/shared/constants/consants';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class kratosService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n  loginIdentity(payload: loginCredientials): Observable<any> {\r\n    return this.http.get(`${environment.kratosUrl}/login/browser`, {\r\n      withCredentials: true\r\n    }).pipe(\r\n      map((loginFlowResponse: any) => {\r\n        const flowId = loginFlowResponse.id\r\n        const csrf_token =loginFlowResponse.ui?.nodes[0].attributes.value;\r\n        const modifiedPayload = { ...payload, csrf_token: csrf_token };\r\n\r\n        return { flowId, modifiedPayload };\r\n      }),\r\n      catchError((error: any) => {\r\n        console.error('error while getting login flowId:', error);\r\n        throw error;\r\n      }),\r\n      switchMap(({ flowId, modifiedPayload }) => {\r\n        return this.http.post(`${environment.kratosUrl}/login?flow=${flowId}`, modifiedPayload, {\r\n          withCredentials: true,\r\n           headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }).pipe(\r\n          map((loginResponse: any) => {\r\n            return loginResponse;\r\n          }),\r\n          catchError((error: any) => {\r\n            console.error('error while login:', error);\r\n            throw error;\r\n          })\r\n        );\r\n      })\r\n    );\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "LogsService",
            "id": "injectable-LogsService-526ec9ec3986144c19904ad1f79f494717eabbcc7df0a3dd9485fac11a453aa374289cb8874ee70b84d79f4e6e551322a6ff2d5fbc14e92a68654a261d8d9397",
            "file": "src/app/modules/payment-history/logs/service/logs.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LogsService {\r\n\r\n  constructor() { }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        },
        {
            "name": "PlanService",
            "id": "injectable-PlanService-b5bcca1567a5ab92ee4da1a1159bfab9c97a6b92dde0119fdeeff1727089f0335abc71e3f3f9ff193488e860ba6d4550c0e4a0959561cc13312a25454d3b9d33",
            "file": "src/app/modules/plans/services/plan.service.ts",
            "properties": [
                {
                    "name": "baseUrl",
                    "defaultValue": "environment.apiUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "editPrice",
                    "defaultValue": "new BehaviorSubject<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "error$",
                    "defaultValue": "new Subject<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "plan$",
                    "defaultValue": "this.planSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "planData",
                    "defaultValue": "{\r\n    planInfo: new BehaviorSubject<any>({}),\r\n    priceInfo: new BehaviorSubject<any[]>([]),\r\n    productDetails: new BehaviorSubject<any>({}),\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "dataTypes | any",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "plans",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PlanList[]",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "planSubject",
                    "defaultValue": "new BehaviorSubject<any>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "price$",
                    "defaultValue": "this.priceSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "priceModelArr",
                    "defaultValue": "this.planData.priceInfo.getValue()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "priceSubject",
                    "defaultValue": "new BehaviorSubject<any>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "addPlan",
                    "args": [
                        {
                            "name": "plan",
                            "type": "Plan",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Plan>",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "plan",
                            "type": "Plan",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createPrice",
                    "args": [
                        {
                            "name": "price",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 128,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "price",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deletePlan",
                    "args": [
                        {
                            "name": "planId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "planId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteProductVariant",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getData",
                    "args": [
                        {
                            "name": "formType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "formType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getEditPrice",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getPlanById",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPlans",
                    "args": [
                        {
                            "name": "PageNumber",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "search",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "PageNumber",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "search",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPrice",
                    "args": [
                        {
                            "name": "PageNumber",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "search",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "PageNumber",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "search",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPriceById",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getProductVariantById",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ProductVariants>",
                    "typeParameters": [],
                    "line": 153,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setData",
                    "args": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "formType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "formType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setEditPrice",
                    "args": [
                        {
                            "name": "state",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updatePlan",
                    "args": [
                        {
                            "name": "plan",
                            "type": "Plan",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "planId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "plan",
                            "type": "Plan",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "planId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updatePrice",
                    "args": [
                        {
                            "name": "price",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "priceId",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "price",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "priceId",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateProductVariant",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "updatedProductVariant",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ProductVariants>",
                    "typeParameters": [],
                    "line": 136,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "updatedProductVariant",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  BehaviorSubject,\r\n  catchError,\r\n  map,\r\n  Observable,\r\n  Subject,\r\n  takeUntil,\r\n} from 'rxjs';\r\nimport { ApiService } from 'src/app/core/services/api.service';\r\nimport { GlobalService } from 'src/app/core/services/global.service';\r\nimport {\r\n  Plan,\r\n  PlanList,\r\n  ProductVariants,\r\n} from 'src/app/shared/constants/consants';\r\nimport { environment } from 'src/environments/environment';\r\nexport class PlanValue {\r\n  planId: string;\r\n  internalName: string;\r\n  externalName: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n}\r\nexport class dataTypes {\r\n  planInfo: {};\r\n  priceInfo: [];\r\n  productDetails: {};\r\n}\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PlanService {\r\n  private planSubject = new BehaviorSubject<any>(null);\r\n  public editPrice = new BehaviorSubject<boolean>(false);\r\n  public plan$ = this.planSubject.asObservable();\r\n  private priceSubject = new BehaviorSubject<any>(null);\r\n  public price$ = this.priceSubject.asObservable();\r\n  public planData: dataTypes | any = {\r\n    planInfo: new BehaviorSubject<any>({}),\r\n    priceInfo: new BehaviorSubject<any[]>([]),\r\n    productDetails: new BehaviorSubject<any>({}),\r\n  };\r\n\r\n  plans: PlanList[] = [];\r\n  error$ = new Subject<string>();\r\n  baseUrl = environment.apiUrl;\r\n  priceModelArr = this.planData.priceInfo.getValue();\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private apiService: ApiService  \r\n  ) {}\r\n\r\n  setEditPrice(state){\r\n    this.editPrice.next(state);\r\n  }\r\n  getEditPrice(){\r\n    return this.editPrice.asObservable();\r\n  }\r\n\r\n  // Passing data from step to other steps\r\n  setData(data: any, formType: string) {\r\n    if (formType === 'planInfo') {\r\n      this.planData.planInfo.next(data);\r\n    } else if (formType === 'priceInfo') {\r\n      this.priceModelArr.push(data)\r\n      this.planData.priceInfo.next(this.priceModelArr);\r\n    } else if (formType === 'productDetails') {\r\n      this.planData.productDetails.next(data);\r\n    }\r\n  }\r\n\r\n  getData(formType: string) {\r\n    if (formType === 'planInfo') {\r\n      return this.planData.planInfo.asObservable();\r\n    } else if (formType === 'priceInfo') {\r\n      return this.planData.priceInfo.asObservable();\r\n    } else if (formType === 'productDetails') {\r\n      return this.planData.productDetails.asObservable();\r\n    }\r\n  }\r\n\r\n  addPlan(plan: Plan): Observable<Plan> {\r\n    let path = `${this.baseUrl}/plans`;\r\n    return this.apiService.post(path, plan);\r\n  }\r\n\r\n  updatePlan(plan: Plan, planId: string){\r\n    let path = `${this.baseUrl}/plans/${planId}?planId=${planId}`;\r\n    return this.apiService.put(path, plan)\r\n  }\r\n\r\n  getPlans(PageNumber: number, limit: number, search: string): Observable<any> {\r\n    const path = `${this.baseUrl}/plans/?page=${PageNumber}&limit=${limit}&search=${search}`\r\n    return this.apiService.get(path);\r\n  }\r\n\r\n  getPlanById(id: string){\r\n    const path = `${this.baseUrl}/plans/${id}?planId=${id}`\r\n    return this.apiService.get(path);\r\n  }\r\n\r\n  getPrice(PageNumber: number, limit: number, search: string): Observable<any> {\r\n    const path = `${this.baseUrl}/pricing/?page=${PageNumber}&limit=${limit}&search=${search}`\r\n    return this.apiService.get(path);\r\n  } \r\n\r\n  getPriceById(id: string){\r\n    const path = `${this.baseUrl}/pricing/${id}?priceId=${id}`\r\n    return this.apiService.get(path);\r\n  }\r\n\r\n  deleteProductVariant(id: string) {\r\n    const url = `${this.baseUrl}/productVariant/${id}?productVariantId=${id}`;\r\n    return this.apiService.delete(url).pipe(\r\n      map((res) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n  deletePlan(planId: string) {\r\n    const url = `${this.baseUrl}/plans/${planId}?planId=${planId}`;\r\n    return this.apiService.delete(url);\r\n  }\r\n  createPrice(price): Observable<any> {\r\n    let path = `${this.baseUrl}/pricing`;\r\n    return this.apiService.post(path, price);\r\n  }\r\n  updatePrice(price, priceId): Observable<any> {\r\n    let path = `${this.baseUrl}/pricing/${priceId}?priceId=${priceId}`;\r\n    return this.apiService.put(path, price);\r\n  }\r\n  updateProductVariant(\r\n    id: string,\r\n    updatedProductVariant: any\r\n  ): Observable<ProductVariants> {\r\n    const url = `${this.baseUrl}/productVariant/?productVariantId=${id}`;\r\n    return this.http.put(url, updatedProductVariant).pipe(\r\n      map((res: any) => {\r\n        this.planSubject.next(res.data);\r\n        return res.data;\r\n      }),\r\n      catchError((err) => {\r\n        this.error$.next(err.message);\r\n        throw err;\r\n      })\r\n    );\r\n  }\r\n\r\n  getProductVariantById(id: string): Observable<ProductVariants> {\r\n    return this.http\r\n      .get<any>(\r\n        `${this.baseUrl}/productVariant/{productVariantId}?productVariantId=${id}`\r\n      )\r\n      .pipe(\r\n        map((res) => {\r\n          this.planSubject.next(res.data);\r\n          return res.data;\r\n        }),\r\n        catchError((err) => {\r\n          this.error$.next(err.message);\r\n          throw err;\r\n        })\r\n      );\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "apiService",
                        "type": "ApiService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 50,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "apiService",
                        "type": "ApiService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ProductDetailsService",
            "id": "injectable-ProductDetailsService-e1502ebd015bfa1da761c80763a72a80b7228b7f5ca26fd88df64985aaef8fb38b13cda97917a5cdac69b6845e46e8b2e95bbbec9ad073f46155e417b4fc70a5",
            "file": "src/app/modules/plans/services/product-details.service.ts",
            "properties": [
                {
                    "name": "error$",
                    "defaultValue": "new Subject<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "productVariant$",
                    "defaultValue": "this.productVariantSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "productVariantSubject",
                    "defaultValue": "new BehaviorSubject<any>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "createProductVariant",
                    "args": [
                        {
                            "name": "productVariant",
                            "type": "ProductVariant",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ProductVariant>",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "productVariant",
                            "type": "ProductVariant",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, Subject, catchError, map } from 'rxjs';\r\nimport { ProductVariant } from 'src/app/shared/constants/consants';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProductDetailsService {\r\n  private productVariantSubject = new BehaviorSubject<any>(null);\r\n  public productVariant$ = this.productVariantSubject.asObservable();\r\n  error$ = new Subject<string>();\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  createProductVariant(productVariant: ProductVariant): Observable<ProductVariant> {\r\n    return this.http.post(`${environment.apiUrl}/productVariant`, productVariant).pipe(\r\n      map((res: any) => {\r\n        this.productVariantSubject.next(res.data);\r\n        return res.data;\r\n      }),\r\n\r\n      catchError((err) => {\r\n        console.log(err);\r\n        this.error$.next(err.message);\r\n        throw err;\r\n      })\r\n    );\r\n  }\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ProductsService",
            "id": "injectable-ProductsService-681885f5f9ba8f4b08ae118f33a042fdb51266e81b961ebafcfe327340218d63263da3e043a75b34e14f806cc01415d2470bf633bac01e073ec6f130d7706313",
            "file": "src/app/modules/products/services/products.service.ts",
            "properties": [
                {
                    "name": "error$",
                    "defaultValue": "new Subject<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "product$",
                    "defaultValue": "this.productSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "products",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "productSubject",
                    "defaultValue": "new BehaviorSubject<any>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "uploadImageSubject",
                    "defaultValue": "new BehaviorSubject<any>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "createProduct",
                    "args": [
                        {
                            "name": "product",
                            "type": "Product",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Product>",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "product",
                            "type": "Product",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteProduct",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "editProduct",
                    "args": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "updatedProduct",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Product>",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "updatedProduct",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getProductById",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<GetProduct>",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getProducts",
                    "args": [
                        {
                            "name": "PageNumber",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "search",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "sortBy",
                            "type": "\"name\" | \"createdOn\"",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "sortOrder",
                            "type": "\"asc\" | \"desc\"",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Product[]>",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "PageNumber",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "search",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "sortBy",
                            "type": "\"name\" | \"createdOn\"",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "sortOrder",
                            "type": "\"asc\" | \"desc\"",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "uploadImage",
                    "args": [
                        {
                            "name": "image",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "image",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, Subject, catchError, map } from 'rxjs';\r\nimport { GetProduct, Product } from 'src/app/shared/constants/consants';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProductsService {\r\n  private productSubject = new BehaviorSubject<any>(null);\r\n  private uploadImageSubject = new BehaviorSubject<any>(null);\r\n  public product$ = this.productSubject.asObservable();\r\n  products: Product[] = [];\r\n  error$ = new Subject<string>();\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  createProduct(product: Product): Observable<Product> {\r\n    return this.http.post(`${environment.apiUrl}/products`, product).pipe(\r\n      map((res: any) => {\r\n        this.productSubject.next(res.data);\r\n        return res.data;\r\n      }),\r\n\r\n      catchError((err) => {\r\n        console.log(err);\r\n        this.error$.next(err.message);\r\n        throw err;\r\n      })\r\n    );\r\n  }\r\n  uploadImage(image: any): Observable<any> {\r\n    return this.http.post(`${environment.apiUrl}/blob/upload`, image).pipe(\r\n      map((data: any) => {\r\n        this.uploadImageSubject.next(data);\r\n        return data;\r\n      }),\r\n\r\n      catchError((err) => {\r\n        console.log(err);\r\n        this.error$.next(err.message);\r\n        throw err;\r\n      })\r\n    );\r\n  }\r\n\r\n  getProducts(\r\n    PageNumber: number,\r\n    limit: number,\r\n    search: string,\r\n    sortBy: 'name' | 'createdOn',\r\n    sortOrder: 'asc' | 'desc'\r\n  ): Observable<Product[]> {\r\n    return this.http\r\n      .get<any>(\r\n        `${environment.apiUrl}/products?page=${PageNumber}&limit=${limit}&search=${search}&sortBy=${sortBy}&sortOrder=${sortOrder}`\r\n      )\r\n      .pipe(\r\n        map((res) => {\r\n          this.productSubject.next(res.data);\r\n          this.products = res.data;\r\n          return res.data;\r\n        }),\r\n        catchError((err) => {\r\n          console.log(err);\r\n          throw err;\r\n        })\r\n      );\r\n  }\r\n  getProductById(id: string): Observable<GetProduct> {\r\n    return this.http.get<any>(`${environment.apiUrl}/products/${id}`).pipe(\r\n      map((res) => {\r\n        return res.data;\r\n      }),\r\n\r\n      catchError((err) => {\r\n        console.log(err);\r\n        throw err;\r\n      })\r\n    );\r\n  }\r\n  editProduct(productId: string, updatedProduct: any): Observable<Product> {\r\n    const url = `${environment.apiUrl}/products/{productId}?productId=${productId}`;\r\n    return this.http.put(url, updatedProduct).pipe(\r\n      map((res: any) => {\r\n        this.productSubject.next(res.data);\r\n        return res.data;\r\n      }),\r\n      catchError((err) => {\r\n        this.error$.next(err.message);\r\n        throw err;\r\n      })\r\n    );\r\n  }\r\n  deleteProduct(id: string) {\r\n    const url = `${environment.apiUrl}/products/${id}?productId=${id}`;\r\n    return this.http.delete(url).pipe(\r\n      map((res) => {\r\n        this.products = this.products.filter(\r\n          (product) => product.productId !== id\r\n        );\r\n        this.productSubject.next(this.products);\r\n        return res;\r\n      }),\r\n      catchError((err) => {\r\n        console.log(err);\r\n        throw err;\r\n      })\r\n    );\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "TransactionsService",
            "id": "injectable-TransactionsService-8b1fc55fb97d7a613f36fe01131e62da8ef86c115941b5375e5c816493f515f7753d71185f15b7566b0a988a38f56ecd19b15a612ca4e25d6e0968ab163bd589",
            "file": "src/app/modules/payment-history/transactions/service/transactions.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TransactionsService {\r\n\r\n  constructor() { }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "CustomDateAdapter",
            "id": "class-CustomDateAdapter-c0f8170a2bedc95589740c1796efbdb2d9728c9e39eb26f60d122c30f7e5bf06fa2bbccbd3a0ac86037deec4c02735638eddc07ea6929afb8d21a40060be8ab8",
            "file": "src/stories/softobiz-ui/table/table.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { Component, ViewChild, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { MatTabChangeEvent } from '@angular/material/tabs';\nimport { MATERIAL_DATEPICKER_FORMATS } from 'src/app/modules/coupons/components/create-coupons/create-coupons.component';\nimport { CustomDateHeaderComponent } from 'src/app/shared/components/custom-date-header/custom-date-header.component';\nimport { DeleteConfirmationComponent } from 'src/app/shared/components/dialog-box/delete-confirmation/delete-confirmation.component';\nimport {\n  Coupon_Data,\n  Logs_Data,\n  coupon,\n  listFilterOptions,\n  logs,\n  noLogs,\n  nocoupons,\n} from 'src/app/shared/constants/consants';\n// import * as moment from 'moment';\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\nimport {\n  DateAdapter,\n  MAT_DATE_FORMATS,\n  MAT_DATE_LOCALE,\n} from '@angular/material/core';\nclass CustomDateAdapter extends MomentDateAdapter {\n  override getDayOfWeekNames(style: 'long' | 'short' | 'narrow') {\n    return ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  }\n  override getFirstDayOfWeek(): number {\n    return 1;\n  }\n}\n\n@Component({\n  selector: 'sft-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss'],\n  providers: [\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\n    // application's root module. We provide it at the component level here, due to limitations of\n    // our example generation script.\n    {\n      provide: DateAdapter,\n      useClass: CustomDateAdapter,\n      deps: [MAT_DATE_LOCALE],\n    },\n\n    { provide: MAT_DATE_FORMATS, useValue: MATERIAL_DATEPICKER_FORMATS },\n  ],\n})\nexport class TableComponent {\n  // variant input\n  @Input() variant: string = 'primary';\n\n  // for checked table\n  displayedColumns: string[] = [\n    'select',\n    'coupon_id',\n    'coupon_name',\n    'description',\n    'created_at',\n    'status',\n    'action',\n  ];\n  couponsData: coupon[] = Coupon_Data;\n  selection = new SelectionModel<coupon>(true, []);\n  emptyCoupons = nocoupons;\n  @ViewChild(MatSort) sort: MatSort;\n  dialogRef: any;\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.couponsData.length;\n    return numSelected === numRows;\n  }\n  constructor(\n    private _liveAnnouncer: LiveAnnouncer,\n    public dialog: MatDialog\n  ) {}\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  toggleAllRows() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n    // console.log(this.selection.select)\n    this.selection.select(...this.couponsData);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: coupon): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${\n      row.coupon_id + 1\n    }`;\n  }\n\n  /** Announce the change in sort state for assistive technology. */\n  announceSortChange(sortState: Sort) {\n    // This example uses English messages. If your application supports\n    // multiple language, you would internationalize these strings.\n    // Furthermore, you can customize the message to add additional\n    // details about the values being sorted.\n    if (sortState.direction) {\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\n    } else {\n      this._liveAnnouncer.announce('Sorting cleared');\n    }\n  }\n  selectedRow(selectedID: string, event: any) {\n    const selectedRow = document.getElementById(`${selectedID}`);\n    if (selectedRow != null) {\n      selectedRow.classList.toggle('selected-row');\n    }\n    event.stopPropagation();\n  }\n  selectAll(data: any[]) {\n    if (this.isAllSelected()) {\n      data.map((element: any) => {\n        document.getElementById(element.id)?.classList.add('selected-row');\n      });\n    } else {\n      data.map((element: any) => {\n        document.getElementById(element.id)?.classList.remove('selected-row');\n      });\n    }\n  }\n  sendElementId(elementId: string) {\n    console.log(elementId);\n  }\n  openDelete(id: any) {\n    this.dialogRef = this.dialog.open(DeleteConfirmationComponent, {\n      width: '422px',\n      panelClass: 'dialog-curved',\n    });\n\n    this.dialogRef.afterClosed().subscribe((res: any) => {\n      if (res) {\n        console.log(res);\n\n        this.sendElementId(id);\n      } else {\n        console.log('Delete canceled');\n      }\n    });\n  }\n\n  // for simple table\n\n  isOpened: boolean = false;\n  displayedColumns1: string[] = [\n    'Timestamp',\n    'Events',\n    'Customer_Info',\n    'Event_Source',\n  ];\n  LogsData: logs[] = Logs_Data;\n  // emptyCoupons = noLogs;\n  filterOptions: string[] = listFilterOptions;\n  customHeader = CustomDateHeaderComponent;\n  startDate: Date;\n  endDate: Date;\n  preventClose(event: any) {\n    event.stopPropagation();\n  }\n  setFilter(selectedOption: string) {\n    console.log(selectedOption, 'this is the selected option');\n  }\n  openDatePicker(event: MatTabChangeEvent): void {\n    const selectedTab = event.index;\n    console.log(selectedTab, 'check');\n    if (selectedTab === 1) {\n      this.isOpened = true;\n    }\n  }\n  handleDateRangeSelection(): void {\n    console.log(this.selectedDates, 'test date');\n    if (this.selectedDates.length === 2) {\n      this.startDate = this.selectedDates[0];\n      this.endDate = this.selectedDates[1];\n      console.log(this.startDate, 'start date');\n      console.log(this.endDate, 'end date');\n    }\n  }\n  get selectedDates(): Date[] {\n    return [this.startDate, this.endDate];\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getDayOfWeekNames",
                    "args": [
                        {
                            "name": "style",
                            "type": "\"long\" | \"short\" | \"narrow\"",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        161
                    ],
                    "jsdoctags": [
                        {
                            "name": "style",
                            "type": "\"long\" | \"short\" | \"narrow\"",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getFirstDayOfWeek",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        161
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": "MomentDateAdapter",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CustomDateAdapter",
            "id": "class-CustomDateAdapter-f6050ed9bc6573635b27124eec6c012617cc63473b8cc8c669f54c31c808c38ef99d47ea6eb927f18737ef4931de40b03e987da5bce802636c4e5a7a0bab8d0d-1",
            "file": "src/app/modules/coupons/components/create-coupons/create-coupons.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Component } from '@angular/core';\r\n// import * as moment from 'moment';\r\nimport { CustomDateHeaderComponent } from 'src/app/shared/components/custom-date-header/custom-date-header.component';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport {\r\n  DateAdapter,\r\n  MAT_DATE_FORMATS,\r\n  MAT_DATE_LOCALE,\r\n} from '@angular/material/core';\r\nclass CustomDateAdapter extends MomentDateAdapter {\r\n  override getDayOfWeekNames(style: 'long' | 'short' | 'narrow') {\r\n    return ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n  }\r\n  override getFirstDayOfWeek(): number {\r\n    return 1;\r\n  }\r\n}\r\n\r\nexport const MATERIAL_DATEPICKER_FORMATS = {\r\n  parse: {\r\n    dateInput: 'DD/MMM/YYYY',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MMM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'DD/MMM/YYYY',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n@Component({\r\n  selector: 'app-create-coupons',\r\n  templateUrl: './create-coupons.component.html',\r\n  styleUrls: ['./create-coupons.component.scss'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: CustomDateAdapter,\r\n      deps: [MAT_DATE_LOCALE],\r\n    },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MATERIAL_DATEPICKER_FORMATS },\r\n  ],\r\n})\r\nexport class CreateCouponsComponent {\r\n  customHeader = CustomDateHeaderComponent;\r\n}\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "getDayOfWeekNames",
                    "args": [
                        {
                            "name": "style",
                            "type": "\"long\" | \"short\" | \"narrow\"",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        161
                    ],
                    "jsdoctags": [
                        {
                            "name": "style",
                            "type": "\"long\" | \"short\" | \"narrow\"",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getFirstDayOfWeek",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        161
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": "MomentDateAdapter",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "CustomDateAdapter-1"
        },
        {
            "name": "CustomDateAdapter",
            "id": "class-CustomDateAdapter-e333cf90916fdbeeeac4641bed28f5c6515efe19823c14f032caf516c949b66a585ed71d36c3b7a4c58dd43cfb4bd35e8cf4b17ec536cc89e74f4b9cdd72b720-2",
            "file": "src/app/modules/payment-history/logs/components/logs-list/logs-list.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Component, ViewChild } from '@angular/core';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\nimport { CustomDateHeaderComponent } from 'src/app/shared/components/custom-date-header/custom-date-header.component';\r\n\r\nimport {\r\n  Logs_Data,\r\n  listFilterOptions,\r\n  logs,\r\n  noLogs,\r\n} from 'src/app/shared/constants/consants';\r\n// import * as moment from 'moment';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport {\r\n  DateAdapter,\r\n  MAT_DATE_FORMATS,\r\n  MAT_DATE_LOCALE,\r\n} from '@angular/material/core';\r\nclass CustomDateAdapter extends MomentDateAdapter {\r\n  override getDayOfWeekNames(style: 'long' | 'short' | 'narrow') {\r\n    return ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n  }\r\n  override getFirstDayOfWeek(): number {\r\n    return 1;\r\n  }\r\n}\r\n\r\nexport const MATERIAL_DATEPICKER_FORMATS = {\r\n  parse: {\r\n    dateInput: 'DD/MMM/YYYY',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MMM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'DD/MMM/YYYY',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n\r\n@Component({\r\n  selector: 'app-logs-list',\r\n  templateUrl: './logs-list.component.html',\r\n  styleUrls: ['./logs-list.component.scss'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: CustomDateAdapter,\r\n      deps: [MAT_DATE_LOCALE],\r\n    },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MATERIAL_DATEPICKER_FORMATS },\r\n  ],\r\n})\r\nexport class LogsListComponent {\r\n  isOpened: boolean = false;\r\n  displayedColumns: string[] = [\r\n    'Timestamp',\r\n    'Events',\r\n    'Customer_Info',\r\n    'Event_Source',\r\n  ];\r\n  LogsData: logs[] = Logs_Data;\r\n  emptyCoupons = noLogs;\r\n  filterOptions: string[] = listFilterOptions;\r\n  customHeader = CustomDateHeaderComponent;\r\n  startDate: Date;\r\n  endDate: Date;\r\n  preventClose(event: any) {\r\n    event.stopPropagation();\r\n  }\r\n  setFilter(selectedOption: string) {\r\n    console.log(selectedOption, 'this is the selected option');\r\n  }\r\n  openDatePicker(event: MatTabChangeEvent): void {\r\n    const selectedTab = event.index;\r\n    console.log(selectedTab, 'check');\r\n    if (selectedTab === 1) {\r\n      this.isOpened = true;\r\n    }\r\n  }\r\n  handleDateRangeSelection(): void {\r\n    console.log(this.selectedDates, 'test date');\r\n    if (this.selectedDates.length === 2) {\r\n      this.startDate = this.selectedDates[0];\r\n      this.endDate = this.selectedDates[1];\r\n      console.log(this.startDate, 'start date');\r\n      console.log(this.endDate, 'end date');\r\n    }\r\n  }\r\n  get selectedDates(): Date[] {\r\n    return [this.startDate, this.endDate];\r\n  }\r\n}\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "getDayOfWeekNames",
                    "args": [
                        {
                            "name": "style",
                            "type": "\"long\" | \"short\" | \"narrow\"",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        161
                    ],
                    "jsdoctags": [
                        {
                            "name": "style",
                            "type": "\"long\" | \"short\" | \"narrow\"",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getFirstDayOfWeek",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        161
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": "MomentDateAdapter",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "CustomDateAdapter-2"
        },
        {
            "name": "dataTypes",
            "id": "class-dataTypes-b5bcca1567a5ab92ee4da1a1159bfab9c97a6b92dde0119fdeeff1727089f0335abc71e3f3f9ff193488e860ba6d4550c0e4a0959561cc13312a25454d3b9d33",
            "file": "src/app/modules/plans/services/plan.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  BehaviorSubject,\r\n  catchError,\r\n  map,\r\n  Observable,\r\n  Subject,\r\n  takeUntil,\r\n} from 'rxjs';\r\nimport { ApiService } from 'src/app/core/services/api.service';\r\nimport { GlobalService } from 'src/app/core/services/global.service';\r\nimport {\r\n  Plan,\r\n  PlanList,\r\n  ProductVariants,\r\n} from 'src/app/shared/constants/consants';\r\nimport { environment } from 'src/environments/environment';\r\nexport class PlanValue {\r\n  planId: string;\r\n  internalName: string;\r\n  externalName: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n}\r\nexport class dataTypes {\r\n  planInfo: {};\r\n  priceInfo: [];\r\n  productDetails: {};\r\n}\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PlanService {\r\n  private planSubject = new BehaviorSubject<any>(null);\r\n  public editPrice = new BehaviorSubject<boolean>(false);\r\n  public plan$ = this.planSubject.asObservable();\r\n  private priceSubject = new BehaviorSubject<any>(null);\r\n  public price$ = this.priceSubject.asObservable();\r\n  public planData: dataTypes | any = {\r\n    planInfo: new BehaviorSubject<any>({}),\r\n    priceInfo: new BehaviorSubject<any[]>([]),\r\n    productDetails: new BehaviorSubject<any>({}),\r\n  };\r\n\r\n  plans: PlanList[] = [];\r\n  error$ = new Subject<string>();\r\n  baseUrl = environment.apiUrl;\r\n  priceModelArr = this.planData.priceInfo.getValue();\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private apiService: ApiService  \r\n  ) {}\r\n\r\n  setEditPrice(state){\r\n    this.editPrice.next(state);\r\n  }\r\n  getEditPrice(){\r\n    return this.editPrice.asObservable();\r\n  }\r\n\r\n  // Passing data from step to other steps\r\n  setData(data: any, formType: string) {\r\n    if (formType === 'planInfo') {\r\n      this.planData.planInfo.next(data);\r\n    } else if (formType === 'priceInfo') {\r\n      this.priceModelArr.push(data)\r\n      this.planData.priceInfo.next(this.priceModelArr);\r\n    } else if (formType === 'productDetails') {\r\n      this.planData.productDetails.next(data);\r\n    }\r\n  }\r\n\r\n  getData(formType: string) {\r\n    if (formType === 'planInfo') {\r\n      return this.planData.planInfo.asObservable();\r\n    } else if (formType === 'priceInfo') {\r\n      return this.planData.priceInfo.asObservable();\r\n    } else if (formType === 'productDetails') {\r\n      return this.planData.productDetails.asObservable();\r\n    }\r\n  }\r\n\r\n  addPlan(plan: Plan): Observable<Plan> {\r\n    let path = `${this.baseUrl}/plans`;\r\n    return this.apiService.post(path, plan);\r\n  }\r\n\r\n  updatePlan(plan: Plan, planId: string){\r\n    let path = `${this.baseUrl}/plans/${planId}?planId=${planId}`;\r\n    return this.apiService.put(path, plan)\r\n  }\r\n\r\n  getPlans(PageNumber: number, limit: number, search: string): Observable<any> {\r\n    const path = `${this.baseUrl}/plans/?page=${PageNumber}&limit=${limit}&search=${search}`\r\n    return this.apiService.get(path);\r\n  }\r\n\r\n  getPlanById(id: string){\r\n    const path = `${this.baseUrl}/plans/${id}?planId=${id}`\r\n    return this.apiService.get(path);\r\n  }\r\n\r\n  getPrice(PageNumber: number, limit: number, search: string): Observable<any> {\r\n    const path = `${this.baseUrl}/pricing/?page=${PageNumber}&limit=${limit}&search=${search}`\r\n    return this.apiService.get(path);\r\n  } \r\n\r\n  getPriceById(id: string){\r\n    const path = `${this.baseUrl}/pricing/${id}?priceId=${id}`\r\n    return this.apiService.get(path);\r\n  }\r\n\r\n  deleteProductVariant(id: string) {\r\n    const url = `${this.baseUrl}/productVariant/${id}?productVariantId=${id}`;\r\n    return this.apiService.delete(url).pipe(\r\n      map((res) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n  deletePlan(planId: string) {\r\n    const url = `${this.baseUrl}/plans/${planId}?planId=${planId}`;\r\n    return this.apiService.delete(url);\r\n  }\r\n  createPrice(price): Observable<any> {\r\n    let path = `${this.baseUrl}/pricing`;\r\n    return this.apiService.post(path, price);\r\n  }\r\n  updatePrice(price, priceId): Observable<any> {\r\n    let path = `${this.baseUrl}/pricing/${priceId}?priceId=${priceId}`;\r\n    return this.apiService.put(path, price);\r\n  }\r\n  updateProductVariant(\r\n    id: string,\r\n    updatedProductVariant: any\r\n  ): Observable<ProductVariants> {\r\n    const url = `${this.baseUrl}/productVariant/?productVariantId=${id}`;\r\n    return this.http.put(url, updatedProductVariant).pipe(\r\n      map((res: any) => {\r\n        this.planSubject.next(res.data);\r\n        return res.data;\r\n      }),\r\n      catchError((err) => {\r\n        this.error$.next(err.message);\r\n        throw err;\r\n      })\r\n    );\r\n  }\r\n\r\n  getProductVariantById(id: string): Observable<ProductVariants> {\r\n    return this.http\r\n      .get<any>(\r\n        `${this.baseUrl}/productVariant/{productVariantId}?productVariantId=${id}`\r\n      )\r\n      .pipe(\r\n        map((res) => {\r\n          this.planSubject.next(res.data);\r\n          return res.data;\r\n        }),\r\n        catchError((err) => {\r\n          this.error$.next(err.message);\r\n          throw err;\r\n        })\r\n      );\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "planInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "priceInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "productDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "PlanValue",
            "id": "class-PlanValue-b5bcca1567a5ab92ee4da1a1159bfab9c97a6b92dde0119fdeeff1727089f0335abc71e3f3f9ff193488e860ba6d4550c0e4a0959561cc13312a25454d3b9d33",
            "file": "src/app/modules/plans/services/plan.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  BehaviorSubject,\r\n  catchError,\r\n  map,\r\n  Observable,\r\n  Subject,\r\n  takeUntil,\r\n} from 'rxjs';\r\nimport { ApiService } from 'src/app/core/services/api.service';\r\nimport { GlobalService } from 'src/app/core/services/global.service';\r\nimport {\r\n  Plan,\r\n  PlanList,\r\n  ProductVariants,\r\n} from 'src/app/shared/constants/consants';\r\nimport { environment } from 'src/environments/environment';\r\nexport class PlanValue {\r\n  planId: string;\r\n  internalName: string;\r\n  externalName: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n}\r\nexport class dataTypes {\r\n  planInfo: {};\r\n  priceInfo: [];\r\n  productDetails: {};\r\n}\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PlanService {\r\n  private planSubject = new BehaviorSubject<any>(null);\r\n  public editPrice = new BehaviorSubject<boolean>(false);\r\n  public plan$ = this.planSubject.asObservable();\r\n  private priceSubject = new BehaviorSubject<any>(null);\r\n  public price$ = this.priceSubject.asObservable();\r\n  public planData: dataTypes | any = {\r\n    planInfo: new BehaviorSubject<any>({}),\r\n    priceInfo: new BehaviorSubject<any[]>([]),\r\n    productDetails: new BehaviorSubject<any>({}),\r\n  };\r\n\r\n  plans: PlanList[] = [];\r\n  error$ = new Subject<string>();\r\n  baseUrl = environment.apiUrl;\r\n  priceModelArr = this.planData.priceInfo.getValue();\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private apiService: ApiService  \r\n  ) {}\r\n\r\n  setEditPrice(state){\r\n    this.editPrice.next(state);\r\n  }\r\n  getEditPrice(){\r\n    return this.editPrice.asObservable();\r\n  }\r\n\r\n  // Passing data from step to other steps\r\n  setData(data: any, formType: string) {\r\n    if (formType === 'planInfo') {\r\n      this.planData.planInfo.next(data);\r\n    } else if (formType === 'priceInfo') {\r\n      this.priceModelArr.push(data)\r\n      this.planData.priceInfo.next(this.priceModelArr);\r\n    } else if (formType === 'productDetails') {\r\n      this.planData.productDetails.next(data);\r\n    }\r\n  }\r\n\r\n  getData(formType: string) {\r\n    if (formType === 'planInfo') {\r\n      return this.planData.planInfo.asObservable();\r\n    } else if (formType === 'priceInfo') {\r\n      return this.planData.priceInfo.asObservable();\r\n    } else if (formType === 'productDetails') {\r\n      return this.planData.productDetails.asObservable();\r\n    }\r\n  }\r\n\r\n  addPlan(plan: Plan): Observable<Plan> {\r\n    let path = `${this.baseUrl}/plans`;\r\n    return this.apiService.post(path, plan);\r\n  }\r\n\r\n  updatePlan(plan: Plan, planId: string){\r\n    let path = `${this.baseUrl}/plans/${planId}?planId=${planId}`;\r\n    return this.apiService.put(path, plan)\r\n  }\r\n\r\n  getPlans(PageNumber: number, limit: number, search: string): Observable<any> {\r\n    const path = `${this.baseUrl}/plans/?page=${PageNumber}&limit=${limit}&search=${search}`\r\n    return this.apiService.get(path);\r\n  }\r\n\r\n  getPlanById(id: string){\r\n    const path = `${this.baseUrl}/plans/${id}?planId=${id}`\r\n    return this.apiService.get(path);\r\n  }\r\n\r\n  getPrice(PageNumber: number, limit: number, search: string): Observable<any> {\r\n    const path = `${this.baseUrl}/pricing/?page=${PageNumber}&limit=${limit}&search=${search}`\r\n    return this.apiService.get(path);\r\n  } \r\n\r\n  getPriceById(id: string){\r\n    const path = `${this.baseUrl}/pricing/${id}?priceId=${id}`\r\n    return this.apiService.get(path);\r\n  }\r\n\r\n  deleteProductVariant(id: string) {\r\n    const url = `${this.baseUrl}/productVariant/${id}?productVariantId=${id}`;\r\n    return this.apiService.delete(url).pipe(\r\n      map((res) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n  deletePlan(planId: string) {\r\n    const url = `${this.baseUrl}/plans/${planId}?planId=${planId}`;\r\n    return this.apiService.delete(url);\r\n  }\r\n  createPrice(price): Observable<any> {\r\n    let path = `${this.baseUrl}/pricing`;\r\n    return this.apiService.post(path, price);\r\n  }\r\n  updatePrice(price, priceId): Observable<any> {\r\n    let path = `${this.baseUrl}/pricing/${priceId}?priceId=${priceId}`;\r\n    return this.apiService.put(path, price);\r\n  }\r\n  updateProductVariant(\r\n    id: string,\r\n    updatedProductVariant: any\r\n  ): Observable<ProductVariants> {\r\n    const url = `${this.baseUrl}/productVariant/?productVariantId=${id}`;\r\n    return this.http.put(url, updatedProductVariant).pipe(\r\n      map((res: any) => {\r\n        this.planSubject.next(res.data);\r\n        return res.data;\r\n      }),\r\n      catchError((err) => {\r\n        this.error$.next(err.message);\r\n        throw err;\r\n      })\r\n    );\r\n  }\r\n\r\n  getProductVariantById(id: string): Observable<ProductVariants> {\r\n    return this.http\r\n      .get<any>(\r\n        `${this.baseUrl}/productVariant/{productVariantId}?productVariantId=${id}`\r\n      )\r\n      .pipe(\r\n        map((res) => {\r\n          this.planSubject.next(res.data);\r\n          return res.data;\r\n        }),\r\n        catchError((err) => {\r\n          this.error$.next(err.message);\r\n          throw err;\r\n        })\r\n      );\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "externalName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "internalName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "planId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "PlanValue",
            "id": "class-PlanValue-3ebcd6a11d6dde6eb674ac60bc06ac18afd2b7f38ad0052c86668f86afe738ab19379899ec47b52204ba6e92ff1fc7556043c6b4cd04e0ac3b9c5743cef06d9b-1",
            "file": "src/app/modules/plans/components/set-price/set-price.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport {\r\n  pricingModels,\r\n  selectOptions,\r\n  periodUnit,\r\n} from 'src/app/shared/constants/consants';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\nimport { Subscription, takeUntil } from 'rxjs';\r\nimport { SuccessDialogComponent } from 'src/app/shared/components/dialog-box/success-dialog/success-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PlanService } from '../../services/plan.service';\r\nimport { GlobalService } from 'src/app/core/services/global.service';\r\n\r\nexport class PlanValue {\r\n  planId: string;\r\n  internalName: string;\r\n}\r\n@Component({\r\n  selector: 'app-set-price',\r\n  templateUrl: './set-price.component.html',\r\n  styleUrls: ['./set-price.component.scss'],\r\n})\r\nexport class SetPriceComponent {\r\n  subscription: Subscription;\r\n  pricingModelTypes: selectOptions[] = pricingModels;\r\n  periodUnit: string[] = periodUnit;\r\n  selectedTab: number = 0;\r\n  previePrice: number;\r\n  tiredTotal: number;\r\n  volumeTotal: number;\r\n  stairTotal: number;\r\n  price: any;\r\n  planValue: any = {};\r\n  monthlyBilling = ['3', '4', '5'];\r\n  readOnly: boolean = false;\r\n  start = 0;\r\n  check: string;\r\n  dropKey: number;\r\n  planId: string;\r\n  editPriceStatus: boolean;\r\n  public setPriceForm: FormGroup;\r\n\r\n  constructor(\r\n    private form: FormBuilder,\r\n    private global: GlobalService,\r\n    private planService: PlanService,\r\n    public dialog: MatDialog,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.planId = this.route.snapshot.params['id'];\r\n    this.formData();\r\n    // this.getPriceVal();\r\n    this.getCurrPLan();\r\n  }\r\n\r\n  // getPriceVal() {\r\n  //   this.planService\r\n  //     .getEditPrice()\r\n  //     .pipe(takeUntil(this.global.componentDestroyed(this)))\r\n  //     .subscribe((res) => {\r\n  //       this.editPriceStatus = res;\r\n  //       if (this.editPriceStatus) {\r\n  //         this.planService\r\n  //           .getPriceById(this.planId)\r\n  //           .subscribe((res) => console.log('price', res));\r\n  //       } else {\r\n  //         this.getCurrPLan();\r\n  //       }\r\n  //     });\r\n  // }\r\n\r\n  getCurrPLan() {\r\n    this.planService\r\n      .getPlanById(this.planId)\r\n      .pipe(takeUntil(this.global.componentDestroyed(this)))\r\n      .subscribe((res) => {\r\n        this.planValue = res.data;\r\n      });\r\n  }\r\n\r\n  patchValue() {\r\n    this.setPriceForm.patchValue({\r\n      planId: this.planValue.planId,\r\n      name: this.planValue.internalName,\r\n    });\r\n  }\r\n\r\n  formData() {\r\n    this.setPriceForm = this.form.group({\r\n      priceId: ['', Validators.required],\r\n      planId: ['', Validators.required],\r\n      name: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n      invoiceNotes: ['', Validators.required],\r\n      currencyCode: ['USD', Validators.required],\r\n      pricingModel: ['', Validators.required],\r\n      price: ['', Validators.required],\r\n      periodUnit: ['daily', Validators.required],\r\n      period: ['1', Validators.required],\r\n      isExpirable: [true],\r\n      noOfCycle: ['', Validators.required],\r\n      status: 'active',\r\n      multiPricing: this.form.array([\r\n        this.form.group({\r\n          startingUnit: { value: '1', disabled: true },\r\n          endingUnit: { value: '&above', disabled: true },\r\n          price: [''],\r\n        }),\r\n      ]),\r\n    });\r\n  }\r\n\r\n  getLevelList(index: number) {\r\n    const tierList = this.multiPricing.at(index) as FormGroup;\r\n    return tierList;\r\n  }\r\n\r\n  setPeriod(periodSelected: string) {\r\n    this.setPriceForm.patchValue({\r\n      periodUnit: periodSelected,\r\n    });\r\n  }\r\n\r\n  get multiPricing() {\r\n    return this.setPriceForm.controls['multiPricing'] as FormArray;\r\n  }\r\n\r\n  lastObj() {\r\n    const checkCurrent = this.multiPricing.length - 1;\r\n    return this.getLevelList(checkCurrent);\r\n  }\r\n\r\n  secondLastObj() {\r\n    const checkPrev = this.multiPricing.length - 2;\r\n    return this.getLevelList(checkPrev);\r\n  }\r\n\r\n  addMultiPricing() {\r\n    this.multiPricing.push(\r\n      this.form.group({\r\n        startingUnit: { value: '', disabled: true },\r\n        endingUnit: ['&above'],\r\n        price: [''],\r\n      })\r\n    );\r\n\r\n    const lastIdx = this.lastObj();\r\n    const prevIdx = this.secondLastObj();\r\n    lastIdx.patchValue({\r\n      endingUnit: '&above',\r\n    });\r\n    lastIdx.get('endingUnit')?.disable();\r\n    prevIdx.patchValue({\r\n      endingUnit: '',\r\n    });\r\n    prevIdx.get('endingUnit')?.enable();\r\n  }\r\n\r\n  onTabChange(event: MatTabChangeEvent): void {\r\n    this.formData();\r\n    this.selectedTab = event.index;\r\n    if (this.selectedTab == 0) {\r\n      this.setPeriod('daily');\r\n    } else if (this.selectedTab == 1) {\r\n      this.setPeriod('weekly');\r\n    } else if (this.selectedTab == 2) {\r\n      this.setPeriod('monthly');\r\n    } else if (this.selectedTab == 3) {\r\n      this.setPeriod('yearly');\r\n    }\r\n  }\r\n\r\n  onDropdownKey(event: number): void {\r\n    this.dropKey = event;\r\n  }\r\n\r\n  deleteTier(tierIndex: number) {\r\n    this.multiPricing.removeAt(tierIndex);\r\n    const lastIdx = this.lastObj();\r\n    lastIdx.get('endingUnit')?.setValue('&above');\r\n    lastIdx.get('endingUnit')?.disable();\r\n  }\r\n  selectedOption: string;\r\n  inputValue: string;\r\n  cycleValue(event: any) {\r\n    this.selectedOption = event.value;\r\n    if (this.selectedOption === '1') {\r\n      this.setPriceForm.patchValue({\r\n        noOfCycle: '',\r\n        isExpirable: true,\r\n      });\r\n    } else if (this.selectedOption === '2') {\r\n      this.setPriceForm.patchValue({\r\n        noOfCycle: '',\r\n        isExpirable: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  pricingModelSetEndingUnitEmpty(price: any) {\r\n    for (let i = 0; i < price.multiPricing.length; i++) {\r\n      if (price.multiPricing[i].endingUnit == '&above') {\r\n        price.multiPricing[i].endingUnit = '';\r\n      }\r\n    }\r\n  }\r\n\r\n  pricingModelValueToName(price: any) {\r\n    if (price) {\r\n      price.priceId =\r\n        price.planId + '-' + price.currencyCode + '-' + price.periodUnit;\r\n      price.name =\r\n        price.name + '-' + price.currencyCode + '-' + price.periodUnit;\r\n    }\r\n    if (price.pricingModel == 1) {\r\n      price.pricingModel = 'flat_fee';\r\n      price.multiPricing = [];\r\n    }\r\n    if (price.pricingModel == 2) {\r\n      price.pricingModel = 'per_unit';\r\n      price.multiPricing = [];\r\n    }\r\n    if (price.pricingModel == 3) {\r\n      price.pricingModel = 'tiered';\r\n      this.pricingModelSetEndingUnitEmpty(price);\r\n    }\r\n    if (price.pricingModel == 4) {\r\n      price.pricingModel = 'volume';\r\n      this.pricingModelSetEndingUnitEmpty(price);\r\n    }\r\n    if (price.pricingModel == 5) {\r\n      price.pricingModel = 'stairStep';\r\n      this.pricingModelSetEndingUnitEmpty(price);\r\n    }\r\n  }\r\n\r\n  submitValues() {\r\n    this.patchValue();\r\n    this.global.showLoader();\r\n    this.price = this.setPriceForm.getRawValue();\r\n    this.pricingModelValueToName(this.price);\r\n    this.subscription = this.planService\r\n      .createPrice(this.price)\r\n      .subscribe((res) => {\r\n        this.openSuccess();\r\n        this.planService.setData(this.price, 'priceInfo');\r\n        this.router.navigate([`/plans/create/${this.planValue.planId}`]);\r\n        this.global.hideLoader();\r\n      });\r\n    this.global.hideLoader();\r\n  }\r\n\r\n  openSuccess() {\r\n    this.dialog.open(SuccessDialogComponent, {\r\n      width: '420px',\r\n      data: {\r\n        module: 'Pricing',\r\n        operation: 'is created',\r\n      },\r\n    });\r\n  }\r\n\r\n  checkIndex(index: number) {\r\n    const position = this.multiPricing.length - 1;\r\n    if (index > 0 && index !== position) {\r\n      return (this.readOnly = true);\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  setStartingValue(event: any, index: number) {\r\n    const setStarting = Number(event.target.value);\r\n    if (this.start < setStarting) {\r\n      this.start = Number(event.target.value) + 1;\r\n      const getNext = index + 1;\r\n      const NextObject = this.getLevelList(getNext);\r\n      NextObject.patchValue({\r\n        startingUnit: setStarting + 1,\r\n      });\r\n    } else {\r\n      this.check = 'plz put above value from startingunit';\r\n    }\r\n  }\r\n\r\n  getPreviewPrice(event: any) {\r\n    let input = parseInt(event.target.value);\r\n    const arr = this.setPriceForm.value.multiPricing;\r\n    let i = 0;\r\n    let total1 = 0;\r\n    let startUnit = 1;\r\n    while (i < arr.length && input > 0) {\r\n      if (i == arr.length - 1) {\r\n        total1 += input * arr[i].price;\r\n        input = 0;\r\n      }\r\n      let gap = 0;\r\n      if (i == 0) {\r\n        gap = arr[0].endingUnit;\r\n      } else {\r\n        gap = arr[i].endingUnit - arr[i - 1].endingUnit;\r\n        break;\r\n      }\r\n\r\n      if (input >= gap) {\r\n        total1 += arr[i].price * gap;\r\n        input -= gap;\r\n      } else {\r\n        total1 += arr[i].price * input;\r\n        input = 0;\r\n        break;\r\n      }\r\n\r\n      i++;\r\n      break;\r\n    }\r\n\r\n    this.tiredTotal = total1;\r\n    this.previePrice = event.target.value * this.setPriceForm.value.price;\r\n    let inputval = parseInt(event.target.value);\r\n    let voltotal = 0;\r\n    let stTotal = 0;\r\n    let j = 0;\r\n    while (j < arr.length && inputval > 0) {\r\n      if (\r\n        (startUnit <= inputval && inputval <= arr[j].endingUnit) ||\r\n        arr[j].endingUnit === undefined\r\n      ) {\r\n        stTotal = arr[j].price;\r\n        this.stairTotal = stTotal;\r\n        voltotal = inputval * arr[j].price;\r\n        this.volumeTotal = voltotal;\r\n        startUnit = parseInt(arr[j].endingUnit) + 1;\r\n        break;\r\n      }\r\n      j++;\r\n    }\r\n    this.stairTotal = stTotal;\r\n    this.volumeTotal = voltotal;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "internalName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "planId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "PlanValue-1"
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AddOnsDetailsComponent",
            "id": "component-AddOnsDetailsComponent-1215067d1a8730b32651809b178a609e325ab6d5227e1ddfcc9f262f1c5ebc2c0bebc724421fff58d432d05d5ca17fcb4258b8e8e5e4216cf1cc4b2c96630ada",
            "file": "src/app/modules/plans/components/add-ons-details/add-ons-details.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-add-ons-details",
            "styleUrls": [
                "./add-ons-details.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./add-ons-details.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "defaultValue": "ELEMENT_DATA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "[\r\n    'select',\r\n    'name',\r\n    'status',     \r\n    'Product',\r\n    'type',\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "planAddEmptyData",
                    "defaultValue": "plan_add_empty_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "selected",
                    "defaultValue": "'option1'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "selection",
                    "defaultValue": "new SelectionModel<PeriodicElement>(true, [])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "methodsClass": [
                {
                    "name": "checkboxLabel",
                    "args": [
                        {
                            "name": "row",
                            "type": "PeriodicElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nThe label for the checkbox on the passed row",
                    "description": "<p>The label for the checkbox on the passed row</p>\n",
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "PeriodicElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isAllSelected",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhether the number of selected elements matches the total number of rows.",
                    "description": "<p>Whether the number of selected elements matches the total number of rows.</p>\n"
                },
                {
                    "name": "openPopup",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectAll",
                    "args": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectedRow",
                    "args": [
                        {
                            "name": "selectedID",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "selectedID",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleAllRows",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSelects all rows if they are not all selected; otherwise clear selection.",
                    "description": "<p>Selects all rows if they are not all selected; otherwise clear selection.</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FeatureDetailsPopupComponent } from 'src/app/shared/components/dialog-box/feature-details-popup/feature-details-popup.component';\r\nimport { plan_add_empty_data } from 'src/app/shared/constants/consants';\r\n\r\n\r\nexport interface PeriodicElement {\r\n  id: string,\r\n  name: string;\r\n  status: string;\r\n  Product: number | string;\r\n  type: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  { id:'element123456', name: 'Host online calls', status: \"Active\",Product: 'Microsoft Teams', type: 'Switch' },\r\n  {  id:'element1234', name: 'Union all information', status: \"Active\",Product: 'Microsoft Teams', type: 'Range' },\r\n  {  id:'element12', name: 'Create team sites', status: \"Active\",Product: 'Microsoft Teams', type: 'Custom' },\r\n];\r\n@Component({\r\n  selector: 'app-add-ons-details',\r\n  templateUrl: './add-ons-details.component.html',\r\n  styleUrls: ['./add-ons-details.component.scss']\r\n})\r\nexport class AddOnsDetailsComponent {\r\n  planAddEmptyData = plan_add_empty_data;\r\n  constructor(public dialog: MatDialog) {}\r\n  selected = 'option1';\r\n  displayedColumns: string[] = [\r\n    'select',\r\n    'name',\r\n    'status',     \r\n    'Product',\r\n    'type',\r\n  ];\r\n  dataSource: any =  ELEMENT_DATA;\r\n  selection = new SelectionModel<PeriodicElement>(true, []);\r\n\r\n  openPopup(){\r\n    this.dialog.open(FeatureDetailsPopupComponent, {\r\n    });\r\n  }\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  toggleAllRows() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n\r\n    this.selection.select(...this.dataSource);\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: PeriodicElement): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row `;\r\n  }\r\n\r\n  selectedRow(selectedID: string, event: any) {\r\n    const selectedRow = document.getElementById(`${selectedID}`);\r\n    if (selectedRow != null) {\r\n      selectedRow.classList.toggle('selected-row');\r\n    }\r\n    event.stopPropagation();\r\n  }\r\n  selectAll(data: any[]) {\r\n    if (this.isAllSelected()) {\r\n      data.map((element: any) => {\r\n        document.getElementById(element.id)?.classList.add('selected-row');\r\n      });\r\n    } else {\r\n      data.map((element: any) => {\r\n        document.getElementById(element.id)?.classList.remove('selected-row');\r\n      });\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./add-ons-details.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"add-ons-details-outer  main-bg w-full h-full overflow-auto border-2 py-8 pl-11 pr-10\">\r\n    <div class=\"flex align-center justify-between mb-5\">\r\n      <div class=\"flex align-center\">\r\n        <mat-icon\r\n          class=\"material-symbols-outlined pointer\"\r\n          color=\"primary\"\r\n          [routerLink]=\"'/features'\"  \r\n          >keyboard_backspace</mat-icon\r\n        >\r\n        <span class=\"mat-h1 primary-text text-main ml-2\">Create Plan</span>\r\n      </div>\r\n      <div class=\"flex\">\r\n          <button mat-stroked-button color=\"primary\" class=\"mr-2 large\">\r\n            Dismiss\r\n          </button>\r\n          <button\r\n            mat-flat-button\r\n            color=\"primary\"\r\n            class=\"large\"\r\n            type=\"submit\"\r\n            [routerLink]=\"'/features/view'\"\r\n          >\r\n          Add\r\n          </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"flex align-center\">\r\n      <span class=\"pl-8 grey-text text-lighten-9\"> Create plan </span>\r\n      <mat-icon class=\"material-symbols-outlined mx-2 small-icon\">\r\n        chevron_right\r\n      </mat-icon>\r\n      <span class=\"shades-text text-black fw-500\">Add Add-ons</span>\r\n    </div>\r\n    <div class=\"mt-7\">\r\n      <div class=\"py-2\">\r\n        <div class=\"input-wrapper border-2\">\r\n          <div class=\"details-wrapper p-3 primary-light-bg\">\r\n            <div class=\"details-inner \">\r\n              <div class=\"flex\">\r\n                <div class=\"product-img p-2 mr-4 main-bg\">\r\n                  <img src=\"../.././../../assets/images/teams.png\" alt=\"product-img\" />\r\n              </div>\r\n              <div class=\"mt-2\">\r\n                <h6 class=\"mat-subtitle-2 font-weight-500 text-dark mb-1\">MS Team</h6>\r\n                <span class=\"mat-body-1 font-weight-500 text-dark\">3 Features included</span>\r\n                <div class=\"flex-center mt-5\">\r\n                  <mat-chip class=\"primary-light-chip white-bg mr-2 pointer\" (click)=\"openPopup()\"><span class=\"mat-body-1 text-grey-darken-7 font-weight-500  pointer\">Whiteboard  (ON)</span> </mat-chip>\r\n                  <mat-chip class=\"primary-light-chip white-bg mr-2 pointer\"><span class=\"mat-body-1 text-grey-darken-7 font-weight-500  pointer\">Email support   (All Week)</span> </mat-chip>\r\n                  <mat-chip class=\"primary-light-chip white-bg pointer\"><span class=\"mat-body-1 text-grey-darken-7 font-weight-500  pointer\">User License  (10 License)</span> </mat-chip>\r\n                </div>\r\n              </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"add-product-table pt-3 pb-3 px-3\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 text-headline-light py-2 mb-8 table-heading text-uppercase\">\r\n              Assign Addons to product\r\n            </p>\r\n            <div class=\"mb-10\">\r\n              <div class=\"flex mb-4\">\r\n                <mat-checkbox class=\"outer-checkbox\" [disableRipple]=\"true\">\r\n              </mat-checkbox>\r\n              <div class=\"ml-2\">\r\n                <h5 class=\"mb-2 text-dark mat-subtitle-2 font-weight-500\">Teamwork and communication</h5>\r\n                <p class=\"text-grey-darken-6\">It is a long established fact that a reader will be distracted by the readable content of a page.</p>\r\n              </div>\r\n              </div>\r\n              <div class=\"relative main-bg table-wrapper\">\r\n                <div class=\"table-title mb-3\">\r\n                  <h6 class=\"mb-2 text-dark mat-subtitle-2 font-weight-500\">Included Feature</h6>\r\n                </div>\r\n                <div class=\"primary-table checked-stripe-table\">\r\n                  <table mat-table [dataSource]=\"dataSource\">\r\n                    <!-- Checkbox Column -->\r\n                    <ng-container matColumnDef=\"select\">\r\n                      <th mat-header-cell *matHeaderCellDef>\r\n                        <mat-checkbox\r\n                          (click)=\"selectAll(dataSource)\"\r\n                          (change)=\"$event ? toggleAllRows() : null\"\r\n                          [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                          [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                          [aria-label]=\"checkboxLabel()\"\r\n                          [disableRipple]=\"true\"\r\n                        >\r\n                        </mat-checkbox>\r\n                      </th>\r\n                      <td mat-cell *matCellDef=\"let row\">\r\n                        <mat-checkbox\r\n                          (click)=\"$event.stopPropagation()\"\r\n                          (change)=\"$event ? selection.toggle(row) : null\"\r\n                          [checked]=\"selection.isSelected(row)\"\r\n                          [aria-label]=\"checkboxLabel(row)\"\r\n                          (click)=\"selectedRow(row.id, $event)\"\r\n                          [disableRipple]=\"true\"\r\n                        >\r\n                        </mat-checkbox>\r\n                      </td>\r\n                    </ng-container>\r\n    \r\n                    <!-- Name Column -->\r\n                    <ng-container matColumnDef=\"name\">\r\n                      <th mat-header-cell *matHeaderCellDef class=\"font-weight-500\">\r\n                        Name\r\n                      </th>\r\n                      <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\r\n                    </ng-container>\r\n    \r\n                    <!-- Weight Column -->\r\n                    <ng-container matColumnDef=\"status\">\r\n                      <th mat-header-cell *matHeaderCellDef class=\"font-weight-500\">\r\n                        Status\r\n                      </th>\r\n                      <td\r\n                        mat-cell\r\n                        *matCellDef=\"let element\"\r\n                        [ngClass]=\"element.status\"\r\n                      >\r\n                        {{ element.status }}\r\n                      </td>\r\n                    </ng-container>\r\n  \r\n                    <!-- Product Column -->\r\n                    <ng-container matColumnDef=\"Product\">\r\n                      <th mat-header-cell *matHeaderCellDef class=\"font-weight-500\">\r\n                        Product\r\n                      </th>\r\n                      <td mat-cell *matCellDef=\"let element\">\r\n                        {{ element.Product }}\r\n                      </td>\r\n                    </ng-container>\r\n    \r\n                    <!-- Symbol Column -->\r\n                    <ng-container matColumnDef=\"type\">\r\n                      <th mat-header-cell *matHeaderCellDef class=\"font-weight-500\">\r\n                        Type\r\n                      </th>\r\n                      <td mat-cell *matCellDef=\"let element\">\r\n                        {{ element.type }}\r\n                      </td>\r\n                    </ng-container>\r\n    \r\n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                    <tr\r\n                      mat-row\r\n                      *matRowDef=\"let row; columns: displayedColumns\"\r\n                      [id]=\"row.id\"\r\n                    ></tr>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"mb-10\">\r\n              <div class=\"flex mb-4\">\r\n                <mat-checkbox class=\"outer-checkbox\" [disableRipple]=\"true\">\r\n              </mat-checkbox>\r\n              <div class=\"ml-2\">\r\n                <h5 class=\"mb-2 text-dark mat-subtitle-2 font-weight-500\">Security and compliance</h5>\r\n                <p class=\"text-grey-darken-6\">It is a long established fact that a reader will be distracted by the readable content of a page.</p>\r\n              </div>\r\n              </div>\r\n              <div class=\"relative main-bg table-wrapper\">\r\n                <div class=\"table-title mb-3\">\r\n                  <h6 class=\"mb-2 text-dark mat-subtitle-2 font-weight-500\">Included Feature</h6>\r\n                </div>\r\n                <div class=\"primary-table checked-stripe-table\">\r\n                  <table mat-table [dataSource]=\"dataSource\">\r\n                    <!-- Checkbox Column -->\r\n                    <ng-container matColumnDef=\"select\">\r\n                      <th mat-header-cell *matHeaderCellDef>\r\n                        <mat-checkbox\r\n                          (click)=\"selectAll(dataSource)\"\r\n                          (change)=\"$event ? toggleAllRows() : null\"\r\n                          [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                          [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                          [aria-label]=\"checkboxLabel()\"\r\n                          [disableRipple]=\"true\"\r\n                        >\r\n                        </mat-checkbox>\r\n                      </th>\r\n                      <td mat-cell *matCellDef=\"let row\">\r\n                        <mat-checkbox\r\n                          (click)=\"$event.stopPropagation()\"\r\n                          (change)=\"$event ? selection.toggle(row) : null\"\r\n                          [checked]=\"selection.isSelected(row)\"\r\n                          [aria-label]=\"checkboxLabel(row)\"\r\n                          (click)=\"selectedRow(row.id, $event)\"\r\n                          [disableRipple]=\"true\"\r\n                        >\r\n                        </mat-checkbox>\r\n                      </td>\r\n                    </ng-container>\r\n    \r\n                    <!-- Name Column -->\r\n                    <ng-container matColumnDef=\"name\">\r\n                      <th mat-header-cell *matHeaderCellDef class=\"font-weight-500\">\r\n                        Name\r\n                      </th>\r\n                      <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\r\n                    </ng-container>\r\n    \r\n                    <!-- Weight Column -->\r\n                    <ng-container matColumnDef=\"status\">\r\n                      <th mat-header-cell *matHeaderCellDef class=\"font-weight-500\">\r\n                        Status\r\n                      </th>\r\n                      <td\r\n                        mat-cell\r\n                        *matCellDef=\"let element\"\r\n                        [ngClass]=\"element.status\"\r\n                      >\r\n                        {{ element.status }}\r\n                      </td>\r\n                    </ng-container>\r\n  \r\n                    <!-- Product Column -->\r\n                    <ng-container matColumnDef=\"Product\">\r\n                      <th mat-header-cell *matHeaderCellDef class=\"font-weight-500\">\r\n                        Product\r\n                      </th>\r\n                      <td mat-cell *matCellDef=\"let element\">\r\n                        {{ element.Product }}\r\n                      </td>\r\n                    </ng-container>\r\n    \r\n                    <!-- Symbol Column -->\r\n                    <ng-container matColumnDef=\"type\">\r\n                      <th mat-header-cell *matHeaderCellDef class=\"font-weight-500\">\r\n                        Type\r\n                      </th>\r\n                      <td mat-cell *matCellDef=\"let element\">\r\n                        {{ element.type }}\r\n                      </td>\r\n                    </ng-container>\r\n    \r\n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                    <tr\r\n                      mat-row\r\n                      *matRowDef=\"let row; columns: displayedColumns\"\r\n                      (click)=\"selection.toggle(row)\"\r\n                      [id]=\"row.id\"\r\n                    ></tr>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  "
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-56e48b47a33f2c05c3d937553185b8bdf0618132359aba52ee6872cac8fb2fab83dfd250b1874643374bde9146c5c5189046304c01135a4a0be98cad4eb15247",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'tenant-portal'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'tenant-portal';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<router-outlet></router-outlet>"
        },
        {
            "name": "Breadcrumb",
            "id": "component-Breadcrumb-aef77d9b89ccf7b31532e0192af64038ddb0790ae19495762f7adf3aeff6aff7895aff60810f9228f120c98dba5114017581bec8f057038a0d27b0698417d71e",
            "file": "src/stories/softobiz-ui/breadcrumb/breadcrumb.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sft-breadcrumb",
            "styleUrls": [
                "./breadcrumb.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./breadcrumb.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "BreadcrumbItem[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation, Input } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\n\r\n// import { ButtonVariant } from './types';\r\n\r\n@Component({\r\n  selector: 'sft-breadcrumb',\r\n  templateUrl: './breadcrumb.component.html',\r\n  styleUrls: ['./breadcrumb.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class Breadcrumb {\r\n  @Input() class: string = '';\r\n\r\n  @Input() id: string = '';\r\n\r\n  @Input() items: BreadcrumbItem[];\r\n}\r\n\r\nexport interface BreadcrumbItem {\r\n  label: string;\r\n  link?: string;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./breadcrumb.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<nav>\r\n  <ul [class]=\"'breadcrumb' + ' ' + class\">\r\n    <li *ngFor=\"let item of items; let last = last\">\r\n      <a *ngIf=\"item.link\">{{ item.label }}</a>\r\n      <span *ngIf=\"!item.link\">{{ item.label }}</span>\r\n      <mat-icon *ngIf=\"!last\" class=\"material-symbols-outlined small-icon\">\r\n        chevron_right\r\n      </mat-icon>\r\n    </li>\r\n  </ul>\r\n</nav>"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-e6197710f82595d25c1bdeac4299535c6cd6e8f5db34346f6c31d5e9d96c21fc005ad206902dd4e8eef8a25ad769d4a2b407eb183946c39170708ab9b7e33522",
            "file": "src/stories/softobiz-ui/button/button.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sft-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "ariaLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHTML Aria label.\n",
                    "description": "<p>HTML Aria label.</p>\n",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHTML Aria labbeled by.\n",
                    "description": "<p>HTML Aria labbeled by.</p>\n",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "ThemePalette",
                    "decorators": []
                },
                {
                    "name": "disable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disableRipple",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "onClick",
                    "defaultValue": "'clickfuntion()'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nclickfuntion().\n",
                    "description": "<p>clickfuntion().</p>\n",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation, Input } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material/core';\r\n\r\n@Component({\r\n  selector: 'sft-button',\r\n  templateUrl: './button.component.html',\r\n  styleUrls: ['./button.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ButtonComponent {\r\n\r\n  /**\r\n   * HTML Aria label.\r\n   */\r\n  @Input() ariaLabel?: string;\r\n\r\n  /**\r\n   * HTML Aria labbeled by.\r\n   */\r\n  @Input() ariaLabelledBy?: string;\r\n\r\n  @Input() label: string = 'button';\r\n\r\n  @Input() color: ThemePalette = 'primary';\r\n\r\n  @Input() variant: any = 'default';\r\n\r\n  @Input() disable = false;\r\n\r\n  @Input() disableRipple = false;\r\n\r\n  @Input() size: string ='medium';\r\n\r\n  @Input() type: string ='';\r\n\r\n  @Input() class: string ='';\r\n  \r\n  @Input() id: string ='';\r\n  \r\n  /**\r\n   * clickfuntion().\r\n   */\r\n  @Input() onClick: string ='clickfuntion()';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button\r\n  *ngIf=\"variant === 'default'\"\r\n  [disabled]=\"disable\"\r\n  [color]=\"color\"\r\n  [disableRipple]=\"disableRipple\"\r\n  [disabled]=\"disable\"\r\n  [class]=\"size + ' ' + class\"\r\n  [id]=\"id\"\r\n  mat-button\r\n  [type]=\"type\"\r\n  (click)=\"(onClick)\"\r\n>\r\n  {{ label }}\r\n</button>\r\n<button\r\n  *ngIf=\"variant === 'raised'\"\r\n  [disabled]=\"disable\"\r\n  [color]=\"color\"\r\n  [disableRipple]=\"disableRipple\"\r\n  mat-raised-button\r\n  [class]=\"size + ' ' + class\"\r\n  [id]=\"id\"\r\n  [type]=\"type\"\r\n>\r\n  {{ label }}\r\n</button>\r\n<button\r\n  *ngIf=\"variant === 'flat'\"\r\n  mat-flat-button\r\n  [color]=\"color\"\r\n  [disableRipple]=\"disableRipple\"\r\n  [disabled]=\"disable\"\r\n  [class]=\"size + ' ' + class\"\r\n  [id]=\"id\"\r\n  [type]=\"type\"\r\n>\r\n  {{ label }}\r\n</button>\r\n<button\r\n  *ngIf=\"variant === 'stroked'\"\r\n  [disabled]=\"disable\"\r\n  [color]=\"color\"\r\n  [disableRipple]=\"disableRipple\"\r\n  [class]=\"size + ' ' + class\"\r\n  [id]=\"id\"\r\n  mat-stroked-button\r\n  [type]=\"type\"\r\n>\r\n  {{ label }}\r\n</button>\r\n<button\r\n  *ngIf=\"variant === 'icon'\"\r\n  [disabled]=\"disable\"\r\n  [color]=\"color\"\r\n  [disableRipple]=\"disableRipple\"\r\n  [class]=\"size + ' ' + class\"\r\n  [id]=\"id\"\r\n  mat-icon-button\r\n  disabled\r\n  aria-label=\"Example icon button with a open in new tab icon\"\r\n  [type]=\"type\"\r\n>\r\n  <mat-icon>open_in_new</mat-icon>\r\n</button>\r\n<button\r\n  *ngIf=\"variant === 'fab'\"\r\n  [disabled]=\"disable\"\r\n  [color]=\"color\"\r\n  [disableRipple]=\"disableRipple\"\r\n  [class]=\"size + ' ' + class\"\r\n  [id]=\"id\"\r\n  mat-fab\r\n  aria-label=\"Example icon button with a bookmark icon\"\r\n  [type]=\"type\"\r\n>\r\n  <mat-icon>bookmark</mat-icon>\r\n</button>\r\n<button\r\n  *ngIf=\"variant === 'mini-fab'\"\r\n  [disabled]=\"disable\"\r\n  [color]=\"color\"\r\n  [disableRipple]=\"disableRipple\"\r\n  [class]=\"size + ' ' + class\"\r\n  [id]=\"id\"\r\n  aria-label=\"Example icon button with a home icon\"\r\n  mat-mini-fab\r\n  [type]=\"type\"\r\n>\r\n  <mat-icon fontIcon=\"home\"></mat-icon>\r\n</button>\r\n"
        },
        {
            "name": "CalendarComponent",
            "id": "component-CalendarComponent-c8a12457a7225e293e6d940456db995fe79e50688bd2682900f6cf9c09302635b346837b908e2b69bd71cab8baf6ef3f71d31c8d425a379375cdef480fa952c4",
            "file": "src/stories/softobiz-ui/calendar/calendar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-calendar",
            "styleUrls": [
                "./calendar.component.scss",
                "../../../themes/dark.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./calendar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "customHeader",
                    "defaultValue": "CustomDateHeaderComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date | null",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewChild } from '@angular/core';\r\nimport { CustomDateHeaderComponent } from 'src/app/shared/components/custom-date-header/custom-date-header.component';\r\n\r\n@Component({\r\n  selector: 'app-calendar',\r\n  templateUrl: './calendar.component.html',\r\n  styleUrls: ['./calendar.component.scss', '../../../themes/dark.scss'],\r\n})\r\nexport class CalendarComponent {\r\n  customHeader = CustomDateHeaderComponent;\r\n\r\n  selected: Date | null;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-calendar{\r\n  .mat-mdc-tab-group{\r\n    width: 100%;\r\n    max-width: 340px;\r\n  }\r\n}\r\n\r\n",
                    "styleUrl": "./calendar.component.scss"
                },
                {
                    "data": "@use \"sass:map\";\r\n@use \"@angular/material\" as mat;\r\n@include mat.core();\r\n\r\n$dark-primary-text: rgba(black, 0.87);\r\n$light-primary-text: white;\r\n$light-focused: rgba(white, 0.12);\r\n$light-dividers: rgba(white, 0.12);\r\n$light-disabled-text: rgba(white, 0.5);\r\n$light-secondary-text: rgba(white, 0.7);\r\n// Define a light theme\r\n$grey-palette: (\r\n  50: #fafafa,\r\n  100: #f5f5f5,\r\n  200: #eeeeee,\r\n  300: #e0e0e0,\r\n  400: #bdbdbd,\r\n  500: #9e9e9e,\r\n  600: #757575,\r\n  700: #616161,\r\n  800: #424242,\r\n  900: #212121,\r\n  A100: #ffffff,\r\n  A200: #eeeeee,\r\n  A400: #bdbdbd,\r\n  A700: #616161,\r\n  contrast: (\r\n    50: $dark-primary-text,\r\n    100: $dark-primary-text,\r\n    200: $dark-primary-text,\r\n    300: $dark-primary-text,\r\n    400: $dark-primary-text,\r\n    500: $dark-primary-text,\r\n    600: $light-primary-text,\r\n    700: $light-primary-text,\r\n    800: $light-primary-text,\r\n    900: $light-primary-text,\r\n    A100: $dark-primary-text,\r\n    A200: $dark-primary-text,\r\n    A400: $dark-primary-text,\r\n    A700: $light-primary-text,\r\n  ),\r\n);\r\n\r\n$custom-dark-theme-background-palette: (\r\n  status-bar: black,\r\n  app-bar: map.get($grey-palette, 900),\r\n  background: #303030,\r\n  hover: rgba(white, 0.04),\r\n  // TODO(kara): check style with Material Design UX\r\n  card: map.get($grey-palette, 800),\r\n  dialog: #303030,\r\n  disabled-button: rgba(white, 0.12),\r\n  raised-button: map.get($grey-palette, 800),\r\n  focused-button: $light-focused,\r\n  selected-button: map.get($grey-palette, 900),\r\n  selected-disabled-button: map.get($grey-palette, 800),\r\n  disabled-button-toggle: black,\r\n  unselected-chip: map.get($grey-palette, 700),\r\n  disabled-list-option: rgba(white, 0.12),\r\n  tooltip: map.get($grey-palette, 700),\r\n);\r\n$custom-dark-theme-foreground-palette: (\r\n  base: white,\r\n  divider: $light-dividers,\r\n  dividers: $light-dividers,\r\n  disabled: $light-disabled-text,\r\n  disabled-button: rgba(white, 0.3),\r\n  disabled-text: $light-disabled-text,\r\n  elevation: black,\r\n  hint-text: $light-disabled-text,\r\n  secondary-text: $light-secondary-text,\r\n  icon: white,\r\n  icons: white,\r\n  text: white,\r\n  slider-min: white,\r\n  slider-off: rgba(white, 0.3),\r\n  slider-off-active: rgba(white, 0.3),\r\n);\r\n@function custom-dark-theme($primary, $accent) {\r\n  @return (\r\n    primary: $primary,\r\n    accent: $accent,\r\n    warn: $primary,\r\n    is-dark: true,\r\n    foreground: $custom-dark-theme-foreground-palette,\r\n    background: $custom-dark-theme-background-palette\r\n  );\r\n}\r\n\r\n$light-primary: mat.define-palette(mat.$indigo-palette, A700);\r\n$light-accent: mat.define-palette(mat.$pink-palette);\r\n$light-theme: mat.define-light-theme(\r\n  (\r\n    color: (\r\n      primary: $light-primary,\r\n      accent: $light-accent,\r\n    ),\r\n  )\r\n);\r\n\r\n// Define a dark theme\r\n$dark-primary: mat.define-palette(mat.$pink-palette);\r\n$dark-accent: mat.define-palette(mat.$purple-palette, 900);\r\n$custom-dark-theme: custom-dark-theme($dark-primary, $dark-accent);\r\n// $dark-theme: mat.define-dark-theme(\r\n//   (\r\n//     color: (\r\n//       primary: $dark-primary,\r\n//       accent: $dark-accent,\r\n//       background: $dark-primary\r\n//     ),\r\n//   )\r\n// );\r\n\r\n[data-app-theme=\"dark\"] {\r\n  .mat-app-background,\r\n  .outer-layout {\r\n    background: #303030;\r\n  }\r\n  @include mat.all-component-themes($custom-dark-theme);\r\n  // @include mat.sidenav-theme\r\n  // @include mat.color($dark-theme);\r\n  // @include mat.core-theme($dark-theme);\r\n  // @include mat.button-theme($dark-theme);\r\n  // @include mat.card-theme($dark-theme);\r\n  // @include mat.progress-bar-theme($dark-theme);\r\n  // @include mat.chips-theme($dark-theme);\r\n  // @include mat.badge-theme($dark-theme);\r\n  // @include mat.button-toggle-theme($dark-theme);\r\n  // @include mat.checkbox-theme($dark-theme);\r\n  // @include mat.list-theme($dark-theme);\r\n  // @include mat.form-field-theme($dark-theme);\r\n  // @include mat.icon-theme($dark-theme);\r\n  // @include mat.select-theme($dark-theme);\r\n  // @include mat.dialog-theme($dark-theme);\r\n}\r\n\r\n// Apply the dark theme by default\r\n\r\n[data-app-theme=\"light\"] {\r\n  @include mat.core-color($light-theme);\r\n  @include mat.button-color($light-theme);\r\n  @include mat.card-theme($light-theme);\r\n  @include mat.progress-bar-theme($light-theme);\r\n  @include mat.chips-theme($light-theme);\r\n  @include mat.badge-theme($light-theme);\r\n  @include mat.button-toggle-theme($light-theme);\r\n  @include mat.checkbox-theme($light-theme);\r\n  // @include mat.sidenav-theme($light-theme);\r\n  @include mat.list-theme($light-theme);\r\n  // @include mat.form-field-theme($light-theme);\r\n  @include mat.icon-theme($light-theme);\r\n  @include mat.select-theme($light-theme);\r\n}\r\n\r\n// style for dark theme\r\n\r\n[data-app-theme=\"dark\"] {\r\n  textarea {\r\n    color: #ffffff;\r\n  }\r\n}\r\n",
                    "styleUrl": "../../../themes/dark.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"flex align-center\">\r\n  <mat-tab-group mat-stretch-tabs=\"false\" mat-align-tabs=\"start\">\r\n    <mat-tab label=\"Present\">\r\n      <mat-list role=\"list\" class=\"filter-list\">\r\n        <mat-list-item\r\n          role=\"listitem\"\r\n          *ngFor=\"let option of filterOptions\"\r\n          (click)=\"setFilter(option)\"\r\n          >{{ option }}</mat-list-item\r\n        >\r\n      </mat-list>\r\n    </mat-tab>\r\n    <mat-tab label=\"Custom\">\r\n      <div class=\"py-2 px-6\">\r\n        <div class=\"flex align-center input-wrapper px-2\">\r\n          <div class=\"block filter-input mr-4\">\r\n            <span class=\"block mat-body-1 pl-2 mb-1\"> Start </span>\r\n            <mat-form-field>\r\n              <input\r\n                matInput\r\n                placeholder=\"Start Date\"\r\n                [(ngModel)]=\"startDate\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"block filter-input\">\r\n            <span class=\"block mat-body-1 pl-2 mb-1\"> End </span>\r\n            <mat-form-field>\r\n              <input matInput type=\"text\" placeholder=\"end Date\" />\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n        <mat-calendar></mat-calendar>\r\n        <div class=\"w-full flex justify-end align-center\">\r\n          <button mat-stroked-button color=\"primary\" class=\"mr-3\">\r\n            Cancel\r\n          </button>\r\n          <button mat-flat-button color=\"primary\">Apply</button>\r\n        </div>\r\n      </div>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n\r\n  <mat-form-field appearance=\"outline\">\r\n    <input matInput placeholder=\"select date\" [matDatepicker]=\"picker\" />\r\n    <div class=\"input-suffix\" (click)=\"picker.open()\" panelClass=\"my-custom\">\r\n      <img src=\"/icons/primary-calendar-icon.svg\" alt=\"calendar-icon\" />\r\n    </div>\r\n    <mat-datepicker #picker [calendarHeaderComponent]=\"customHeader\">\r\n      <!-- <app-custom-header iconUrl=\"/icons/primary-calendar-icon.svg\"></app-custom-header> -->\r\n    </mat-datepicker>\r\n  </mat-form-field>\r\n</div>\r\n\r\n<!-- <mat-calendar></mat-calendar> -->"
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-f7ac941ae6bfa47d2ef8849da3665b21871fcd4e0a24af87aa1397bd42213da937cedc1571c2aff880b96efe936ed23ff87b832e8a9f9dc05c364f86d252704b",
            "file": "src/stories/softobiz-ui/Checkbox/checkbox.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sft-check-box",
            "styleUrls": [
                "./checkbox.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "ThemePalette",
                    "decorators": []
                },
                {
                    "name": "disable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disableRipple",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "indeterminate",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "labelPosition",
                    "defaultValue": "'after'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "\"before\" | \"after\"",
                    "decorators": []
                },
                {
                    "name": "task",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation, Input } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material/core';\r\n\r\nexport interface Task {\r\n  name: string;\r\n  completed: boolean;\r\n  color: ThemePalette;\r\n  subtasks?: Task[];\r\n}\r\n\r\n@Component({\r\n  selector: 'sft-check-box',\r\n  templateUrl: './checkbox.component.html',\r\n  styleUrls: ['./checkbox.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class CheckboxComponent {\r\n\r\n  @Input() task: string = '';\r\n\r\n  //Checkbox label\r\n  @Input() label: string = '';\r\n\r\n  //Whether the checkbox is disabled.\r\n  @Input() disable = false;\r\n\r\n  //Whether the checkbox is checked.\r\n  @Input() checked: boolean = false;\r\n  \r\n  //Theme color palette for the component\r\n  @Input() color: ThemePalette;\r\n\r\n  //Whether ripples are disabled\r\n  @Input() disableRipple: boolean = false;\r\n\r\n  //Whether the checkbox is indeterminate\r\n  @Input() indeterminate: boolean = false;\r\n\r\n  // Whether the label should appear after or before the checkbox. Defaults to 'after'\r\n  @Input() labelPosition: 'before' | 'after' = 'after';\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./checkbox.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<section class=\"example-section\">\r\n  <mat-checkbox\r\n    class=\"example-margin\"\r\n    [disabled]=\"disable\"\r\n    [checked]=\"checked\"\r\n    [disableRipple]=\"disableRipple\"\r\n    [color]=\"color\"\r\n    [label]=\"label\" \r\n    [labelPosition]=\"labelPosition\"\r\n    >{{label}}</mat-checkbox>\r\n</section>\r\n"
        },
        {
            "name": "ChipComponent",
            "id": "component-ChipComponent-76c30571627ea8c3ade484f97c966754fef3cd2926fc9bff93f3215454570503613069e16e4cf41d8abbb04d874ed6efae690f3c43092cc9eb28b8d61916e5cb",
            "file": "src/stories/softobiz-ui/Chip/chip.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sft-chip",
            "styleUrls": [
                "./chip.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./chip.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "ariaDescription",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string | null",
                    "decorators": []
                },
                {
                    "name": "ariaLabel",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string | null",
                    "decorators": []
                },
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disableRipple",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "highlighted",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Chip'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "withIcon",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation, Input } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material/core';\r\n\r\n@Component({\r\n  selector: 'sft-chip',\r\n  templateUrl: './chip.component.html',\r\n  styleUrls: ['./chip.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ChipComponent {\r\n  @Input() label: string = 'Chip';\r\n\r\n  @Input() ariaDescription: string | null = '';\r\n\r\n  @Input() ariaLabel: string | null = '';\r\n\r\n  @Input() disableRipple: boolean = false;\r\n\r\n  @Input() disabled: boolean = false;\r\n\r\n  @Input() highlighted: boolean = true;\r\n\r\n  @Input() class: string = '';\r\n\r\n  @Input() id: string = '';\r\n\r\n  @Input() withIcon: boolean = false;\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./chip.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<!-- <mat-chip-listbox [ariaLabel]=\"ariaLabel\">\r\n  <mat-chip-option\r\n    [color]=\"color\"\r\n    [selected]=\"selected\"\r\n    [ariaDescription]=\"ariaDescription\"\r\n    [ariaLabel]=\"ariaLabel\"\r\n    [disableRipple]=\"disableRipple\"\r\n    [disabled]=\"disabled\"\r\n    [highlighted]=\"highlighted\"\r\n    [removable]=\"removable\"\r\n    [id]=\"id\"\r\n    >{{ label }}</mat-chip-option\r\n  >\r\n</mat-chip-listbox> -->\r\n<!-- <mat-chip-set class=\"example-chip\">\r\n  <mat-chip-option\r\n    [color]=\"color\"\r\n    [selected]=\"selected\"\r\n    [ariaDescription]=\"ariaDescription\"\r\n    [ariaLabel]=\"ariaLabel\"\r\n    [disableRipple]=\"disableRipple\"\r\n    [disabled]=\"disabled\"\r\n    [highlighted]=\"highlighted\"\r\n    [removable]=\"removable\"\r\n    [id]=\"id\"\r\n    [class]=\"class\"\r\n  >\r\n    {{ label }}\r\n  </mat-chip-option>\r\n</mat-chip-set> -->\r\n\r\n<mat-chip\r\n  [ariaDescription]=\"ariaDescription\"\r\n  [ariaLabel]=\"ariaLabel\"\r\n  [disableRipple]=\"disableRipple\"\r\n  [disabled]=\"disabled\"\r\n  [highlighted]=\"highlighted\"\r\n  [id]=\"id\"\r\n  [class]=\"'white-bg' + ' ' + class\"\r\n>\r\n  <mat-icon\r\n    *ngIf=\"withIcon\"\r\n    color=\"primary\"\r\n    class=\"material-symbols-outlined mr-2\"\r\n    >check</mat-icon\r\n  >\r\n  {{ label }}\r\n  <mat-icon\r\n    *ngIf=\"withIcon\"\r\n    class=\"material-symbols-outlined pointer ml-2 grey-text text-darken-8\"\r\n    >close</mat-icon\r\n  >\r\n</mat-chip>"
        },
        {
            "name": "ColorComponent",
            "id": "component-ColorComponent-5872e03cebc4183cf543f81a346a965a5c67f26931d933ad8dbc990598769cec8c13e86afe1e9bc78a6679c24072b3d554f3da59b83f3f56c859aac24622bd42",
            "file": "src/stories/softobiz-ui/color/color.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-color",
            "styleUrls": [
                "./color.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./color.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-color',\r\n  templateUrl: './color.component.html',\r\n  styleUrls: ['./color.component.scss'],\r\n})\r\nexport class ColorComponent {\r\n  /**\r\n   * Just put the classes inside tag and you will get the variant of typography.\r\n   */\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./color.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"mb-3\">\r\n    <p class=\"mat-headline-5 mb-3\">Primary</p>\r\n    <div class=\"flex\">\r\n        <div class=\"color-box large-box primary-bg mr-2\"></div>\r\n        <div class=\"color-box medium primary-light-bg mr-2\"></div>\r\n        <div class=\"color-box medium primary-dark-1-bg\"></div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"mb-3\">\r\n    <p class=\"mat-headline-5 mb-3\">Neutral</p>\r\n    <div class=\"flex\">\r\n        <div class=\"color-box small neutral-black-bg mr-2\"></div>\r\n        <div class=\"color-box small neutral-dark-gray-bg mr-2\"></div>\r\n        <div class=\"color-box small neutral-gray-bg mr-2\"></div>\r\n        <div class=\"color-box small neutral-gray-Outline-bg mr-2\"></div>\r\n        <div class=\"color-box small neutral-gray-light-bg mr-2\"></div>\r\n        <div class=\"color-box small neutral-gray-off-bg mr-2\"></div>\r\n        <div class=\"color-box small neutral-gray-stroke-bg mr-2\"></div>\r\n        <div class=\"color-box small neutral-gray-off-white-bg mr-2\"></div>\r\n        <div class=\"color-box small main-bg mr-2 border-outline\"></div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"mb-3\">\r\n    <p class=\"mat-headline-5 mb-3\">Utility</p>\r\n    <div class=\"flex mb-3\">\r\n        <div class=\"color-box small green-success-bg mr-2\"></div>\r\n        <div class=\"color-box small green-lighten-100-bg mr-2\"></div>\r\n        <div class=\"color-box small green-lighten-200-bg mr-2\"></div>\r\n        <div class=\"color-box small green-lighten-300-bg mr-2\"></div>\r\n        <div class=\"color-box small green-lighten-400-bg mr-2\"></div>\r\n        <div class=\"color-box small green-lighten-500-bg mr-2\"></div>\r\n        <div class=\"color-box small green-lighten-600-bg mr-2\"></div>\r\n        <div class=\"color-box small green-lighten-700-bg mr-2\"></div>\r\n        <div class=\"color-box small extent green-success-bg mr-2\"></div>\r\n        <div class=\"color-box small green-lighten-900-bg mr-2\"></div>\r\n        <div class=\"color-box small green-lighten-1000-bg mr-2\"></div>\r\n    </div>\r\n    <div class=\"flex mb-3\">\r\n        <div class=\"color-box small blue-bg mr-2\"></div>\r\n        <div class=\"color-box small blue-lighten-100-bg mr-2\"></div>\r\n        <div class=\"color-box small blue-lighten-200-bg mr-2\"></div>\r\n        <div class=\"color-box small blue-lighten-300-bg mr-2\"></div>\r\n        <div class=\"color-box small blue-lighten-400-bg mr-2\"></div>\r\n        <div class=\"color-box small blue-lighten-500-bg mr-2\"></div>\r\n        <div class=\"color-box small blue-lighten-600-bg mr-2\"></div>\r\n        <div class=\"color-box small extent blue-bg mr-2\"></div>\r\n        <div class=\"color-box small blue-lighten-800-bg mr-2\"></div>\r\n        <div class=\"color-box small blue-lighten-900-bg mr-2\"></div>\r\n        <div class=\"color-box small blue-lighten-1000-bg mr-2\"></div>\r\n    </div>\r\n    <div class=\"flex mb-3\">\r\n        <div class=\"color-box small orange-bg mr-2\"></div>\r\n        <div class=\"color-box small orange-lighten-100-bg mr-2\"></div>\r\n        <div class=\"color-box small orange-lighten-200-bg mr-2\"></div>\r\n        <div class=\"color-box small orange-lighten-300-bg mr-2\"></div>\r\n        <div class=\"color-box small orange-lighten-400-bg mr-2\"></div>\r\n        <div class=\"color-box small orange-lighten-500-bg mr-2\"></div>\r\n        <div class=\"color-box small extent orange-lighten-600-bg mr-2\"></div>\r\n        <div class=\"color-box small orange-lighten-700-bg mr-2\"></div>\r\n        <div class=\"color-box small orange-lighten-800-bg mr-2\"></div>\r\n        <div class=\"color-box small orange-lighten-900-bg mr-2\"></div>\r\n        <div class=\"color-box small orange-lighten-1000-bg mr-2\"></div>\r\n    </div>\r\n    <div class=\"flex\">\r\n        <div class=\"color-box small red-bg mr-2\"></div>\r\n        <div class=\"color-box small red-lighten-100-bg mr-2\"></div>\r\n        <div class=\"color-box small red-lighten-200-bg mr-2\"></div>\r\n        <div class=\"color-box small red-lighten-300-bg mr-2\"></div>\r\n        <div class=\"color-box small red-lighten-400-bg mr-2\"></div>\r\n        <div class=\"color-box small red-lighten-500-bg mr-2\"></div>\r\n        <div class=\"color-box small red-lighten-600-bg mr-2\"></div>\r\n        <div class=\"color-box small red-lighten-700-bg mr-2\"></div>\r\n        <div class=\"color-box small extent red-lighten-800-bg mr-2\"></div>\r\n        <div class=\"color-box small red-lighten-900-bg mr-2\"></div>\r\n        <div class=\"color-box small red-lighten-1000-bg mr-2\"></div>\r\n    </div>\r\n</div>"
        },
        {
            "name": "CouponsDeleteSuccessComponent",
            "id": "component-CouponsDeleteSuccessComponent-9c36cf54c36b49b7689ca15ccf9ed1dd9ecd3468e63fab5f9173ddd112911b2a924c029a1e4fc5ac602b878297644d10f5d5c20df92464743c426f3f823888a3",
            "file": "src/app/shared/components/dialog-box/coupons-delete-success/coupons-delete-success.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-coupons-delete-success",
            "styleUrls": [
                "./coupons-delete-success.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./coupons-delete-success.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "confirmed",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogData",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        167,
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialogRef<CouponsDeleteSuccessComponent>",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onCancelClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Inject, Output } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\nexport interface DialogData {\r\n  module: string;\r\n  deleteId: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-coupons-delete-success',\r\n  templateUrl: './coupons-delete-success.component.html',\r\n  styleUrls: ['./coupons-delete-success.component.scss']\r\n})\r\nexport class CouponsDeleteSuccessComponent {\r\n  @Output() confirmed: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  constructor(public dialogRef: MatDialogRef<CouponsDeleteSuccessComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\r\n\r\n  onCancelClick(): void {\r\n    this.dialogRef.close(false);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./coupons-delete-success.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<CouponsDeleteSuccessComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "data",
                        "type": "DialogData",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<CouponsDeleteSuccessComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "data",
                        "type": "DialogData",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"border-2 text-center coupons-dialog\">\r\n    <div class=\"close-dialog-icon\">\r\n        <mat-icon (click)=\"onCancelClick()\" class=\"material-symbols-outlined\">close</mat-icon>\r\n    </div>\r\n    <div class=\"mb-6\">\r\n        <img src=\"../../../../../assets/images/coupons-delete-success.png\" alt=\"coupons-delete-success\">\r\n    </div>\r\n    <h1 class=\"mb-4\">Success</h1>\r\n    <span class=\"mat-body-1 mb-8 block\">{{data.module}} {{data.deleteId}} deleted successfully</span\r\n    >\r\n    <div class=\"flex-center\">\r\n      <button mat-flat-button color=\"primary\" class=\"medium ml-2\" [mat-dialog-close]=\"true\" >Okay</button>\r\n    </div>\r\n  </div>\r\n  \r\n"
        },
        {
            "name": "CouponsListingComponent",
            "id": "component-CouponsListingComponent-8b86c07dd9409e1e30786230061459bf2f2b46a93c89ab45bd23e5476ac1843b21f7848601f3da22a54f26036d77a4db89e031937f6229197776436d88c21ceb",
            "file": "src/app/modules/coupons/components/coupons-listing/coupons-listing.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-coupons-listing",
            "styleUrls": [
                "./coupons-listing.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./coupons-listing.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "couponsData",
                    "defaultValue": "Coupon_Data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "coupon[]",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "[\r\n    'select',\r\n    'coupon_id',\r\n    'coupon_name',\r\n    'description',\r\n    'created_at',\r\n    'status',\r\n    'action',\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "emptyCoupons",
                    "defaultValue": "nocoupons",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "selection",
                    "defaultValue": "new SelectionModel<coupon>(true, [])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "announceSortChange",
                    "args": [
                        {
                            "name": "sortState",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nAnnounce the change in sort state for assistive technology.",
                    "description": "<p>Announce the change in sort state for assistive technology.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "sortState",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "checkboxLabel",
                    "args": [
                        {
                            "name": "row",
                            "type": "coupon",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nThe label for the checkbox on the passed row",
                    "description": "<p>The label for the checkbox on the passed row</p>\n",
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "coupon",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isAllSelected",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhether the number of selected elements matches the total number of rows.",
                    "description": "<p>Whether the number of selected elements matches the total number of rows.</p>\n"
                },
                {
                    "name": "openDelete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectAll",
                    "args": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectedRow",
                    "args": [
                        {
                            "name": "selectedID",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "selectedID",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sendElementId",
                    "args": [
                        {
                            "name": "elementId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "elementId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleAllRows",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSelects all rows if they are not all selected; otherwise clear selection.",
                    "description": "<p>Selects all rows if they are not all selected; otherwise clear selection.</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { DeleteConfirmationComponent } from 'src/app/shared/components/dialog-box/delete-confirmation/delete-confirmation.component';\r\n\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport {\r\n  Data_Type,\r\n  Coupon_Data,\r\n  coupon,\r\n  nocoupons,\r\n} from 'src/app/shared/constants/consants';\r\n\r\n@Component({\r\n  selector: 'app-coupons-listing',\r\n  templateUrl: './coupons-listing.component.html',\r\n  styleUrls: ['./coupons-listing.component.scss'],\r\n})\r\nexport class CouponsListingComponent {\r\n  displayedColumns: string[] = [\r\n    'select',\r\n    'coupon_id',\r\n    'coupon_name',\r\n    'description',\r\n    'created_at',\r\n    'status',\r\n    'action',\r\n  ];\r\n  couponsData: coupon[] = Coupon_Data;\r\n  selection = new SelectionModel<coupon>(true, []);\r\n  emptyCoupons = nocoupons;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  dialogRef: any;\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.couponsData.length;\r\n    return numSelected === numRows;\r\n  }\r\n  constructor(\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    public dialog: MatDialog\r\n  ) {}\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  toggleAllRows() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n    // console.log(this.selection.select)\r\n    this.selection.select(...this.couponsData);\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?:coupon): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${\r\n      row.coupon_id + 1\r\n    }`;\r\n  }\r\n\r\n  // ngAfterViewInit() {\r\n  //   this.featuresData.sort = this.sort;\r\n  // }\r\n\r\n  /** Announce the change in sort state for assistive technology. */\r\n  announceSortChange(sortState: Sort) {\r\n    // This example uses English messages. If your application supports\r\n    // multiple language, you would internationalize these strings.\r\n    // Furthermore, you can customize the message to add additional\r\n    // details about the values being sorted.\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n  selectedRow(selectedID: string, event: any) {\r\n    const selectedRow = document.getElementById(`${selectedID}`);\r\n    if (selectedRow != null) {\r\n      selectedRow.classList.toggle('selected-row');\r\n    }\r\n    event.stopPropagation();\r\n  }\r\n  selectAll(data: any[]) {\r\n    if (this.isAllSelected()) {\r\n      data.map((element: any) => {\r\n        document.getElementById(element.id)?.classList.add('selected-row');\r\n      });\r\n    } else {\r\n      data.map((element: any) => {\r\n        document.getElementById(element.id)?.classList.remove('selected-row');\r\n      });\r\n    }\r\n  }\r\n  sendElementId(elementId: string) {\r\n    console.log(elementId);\r\n  }\r\n  openDelete(id: any) {\r\n    this.dialogRef = this.dialog.open(DeleteConfirmationComponent, {\r\n      width: '422px',\r\n      panelClass: 'dialog-curved',\r\n    });\r\n\r\n    this.dialogRef.afterClosed().subscribe((res: any) => {\r\n      if (res) {\r\n        console.log(res);\r\n\r\n        this.sendElementId(id);\r\n      } else {\r\n        console.log('Delete canceled');\r\n      }\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./coupons-listing.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_liveAnnouncer",
                        "type": "LiveAnnouncer",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 41,
                "jsdoctags": [
                    {
                        "name": "_liveAnnouncer",
                        "type": "LiveAnnouncer",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div\r\n  *ngIf=\"couponsData.length == 0\"\r\n  class=\"relative main-bg border-2 w-full h-full p-7 overflow-scroll\"\r\n>\r\n  <app-empty-listing [items]=\"emptyCoupons\"></app-empty-listing>\r\n</div>\r\n<div\r\n  *ngIf=\"couponsData.length > 0\"\r\n  class=\"relative main-bg border-2 w-full h-full py-6 pl-5 pr-6 overflow-scroll\"\r\n>\r\n  <div class=\"flex justify-between align-center px-1\">\r\n    <div class=\"flex align-center\">\r\n      <h1 class=\"text-text text-dark\">Coupons</h1>\r\n      <mat-chip class=\"chip-dark ml-3\">\r\n        {{ couponsData.length }}\r\n      </mat-chip>\r\n    </div>\r\n    <div class=\"flex align-center\">\r\n      <div class=\"global-search light mr-2 border-1\">\r\n        <span class=\"search-icon pointer\">\r\n          <img\r\n            src=\"../../../../assets/images/icons/search.svg\"\r\n            alt=\"search-icon\"\r\n          />\r\n        </span>\r\n        <input type=\"text\" placeholder=\"Search anything...\" />\r\n      </div>\r\n      <button mat-flat-button color=\"primary\" class=\"create-btn\" [routerLink]=\"'/coupons/create'\">\r\n        <mat-icon class=\"material-symbols-outlined m-0 white-text\"\r\n          >add_circle</mat-icon\r\n        >\r\n        <span class=\"text-nowrap block ml-2 letter-spacing-0\"\r\n          >Create Coupon</span\r\n        >\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"primary-table overflow-visible mt-8 px-1 pb-2\">\r\n    <table\r\n      mat-table\r\n      [dataSource]=\"couponsData\"\r\n      matSort\r\n      (matSortChange)=\"announceSortChange($event)\"\r\n    >\r\n      <!--- Note that these columns can be defined in any order.\r\n                The actual rendered columns are set as a property on the row definition\" -->\r\n      <ng-container matColumnDef=\"select\">\r\n        <th mat-header-cell *matHeaderCellDef>\r\n          <mat-checkbox\r\n            color=\"primary\"\r\n            (click)=\"selectAll(couponsData)\"\r\n            (change)=\"$event ? toggleAllRows() : null\"\r\n            [checked]=\"selection.hasValue() && isAllSelected()\"\r\n            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n            [aria-label]=\"checkboxLabel()\"\r\n          >\r\n          </mat-checkbox>\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let row\">\r\n          <mat-checkbox\r\n            color=\"primary\"\r\n            (click)=\"selectedRow(row.id, $event)\"\r\n            (change)=\"$event ? selection.toggle(row) : null\"\r\n            [checked]=\"selection.isSelected(row)\"\r\n            [aria-label]=\"checkboxLabel(row)\"\r\n          >\r\n          </mat-checkbox>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- ID Column -->\r\n      <ng-container matColumnDef=\"coupon_id\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>#Coupon ID</th>\r\n        <td mat-cell *matCellDef=\"let element\">{{ element.coupon_id }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Product Name Column -->\r\n      <ng-container matColumnDef=\"coupon_name\">\r\n        <th\r\n          mat-header-cell\r\n          *matHeaderCellDef\r\n          mat-sort-header\r\n          sortActionDescription=\"Sort by title\"\r\n        >\r\n        Coupon Name\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let element\">{{ element.coupon_name }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Description Column -->\r\n      <ng-container matColumnDef=\"description\">\r\n        <th mat-header-cell *matHeaderCellDef>Description</th>\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element\"\r\n          class=\"description-col td-ellipsis\"\r\n          [ngxTippy]=\"fullDescription\"\r\n          [tippyProps]=\"{ placement: 'right', interactive: true }\"\r\n          tippyName=\"content2\"\r\n        >\r\n          <p>{{ element.description }}</p>\r\n          <ng-template #fullDescription let-name class=\"t-template\">\r\n            <div class=\"help-info-tooltip\">\r\n              <div class=\"heading-with-background\">Description</div>\r\n              <p class=\"py-3 black-text\">{{ element.description }}</p>\r\n              <button mat-button color=\"primary\" class=\"px-0\">\r\n                Learn more\r\n              </button>\r\n            </div>\r\n          </ng-template>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Created Date Column -->\r\n      <ng-container matColumnDef=\"created_at\">\r\n        <th mat-header-cell *matHeaderCellDef>Created On</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          {{ element.created_at }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Created Date Column -->\r\n      <ng-container matColumnDef=\"status\">\r\n        <th mat-header-cell *matHeaderCellDef>Status</th>\r\n        <td mat-cell *matCellDef=\"let element\" [ngClass]=\"element.status\">\r\n          {{ element.status }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Created Date Column -->\r\n      <ng-container matColumnDef=\"action\">\r\n        <th mat-header-cell *matHeaderCellDef class=\"text-right\">Action</th>\r\n        <td mat-cell *matCellDef=\"let element\" class=\"text-right\">\r\n          <mat-icon\r\n            class=\"material-symbols-outlined\"\r\n            [matMenuTriggerFor]=\"actionsMenu\"\r\n          >\r\n            more_vert\r\n          </mat-icon>\r\n          <mat-menu\r\n            #actionsMenu=\"matMenu\"\r\n            class=\"actions-menu\"\r\n            backdropClass=\"edit-menu\"\r\n          >\r\n            <button mat-menu-item disableRipple>Edit</button>\r\n            <button\r\n              mat-menu-item\r\n              disableRipple\r\n              (click)=\"openDelete(element.productId)\"\r\n            >\r\n              Delete\r\n            </button>\r\n          </mat-menu>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr\r\n        mat-row\r\n        *matRowDef=\"let row; columns: displayedColumns\"\r\n        [id]=\"row.id\"\r\n      ></tr>\r\n    </table>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "CreateCouponsComponent",
            "id": "component-CreateCouponsComponent-f6050ed9bc6573635b27124eec6c012617cc63473b8cc8c669f54c31c808c38ef99d47ea6eb927f18737ef4931de40b03e987da5bce802636c4e5a7a0bab8d0d",
            "file": "src/app/modules/coupons/components/create-coupons/create-coupons.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: DateAdapter, useClass: CustomDateAdapter, deps: [MAT_DATE_LOCALE],\n}"
                },
                {
                    "name": "{ provide: MAT_DATE_FORMATS, useValue: MATERIAL_DATEPICKER_FORMATS }"
                }
            ],
            "selector": "app-create-coupons",
            "styleUrls": [
                "./create-coupons.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./create-coupons.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "customHeader",
                    "defaultValue": "CustomDateHeaderComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n// import * as moment from 'moment';\r\nimport { CustomDateHeaderComponent } from 'src/app/shared/components/custom-date-header/custom-date-header.component';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport {\r\n  DateAdapter,\r\n  MAT_DATE_FORMATS,\r\n  MAT_DATE_LOCALE,\r\n} from '@angular/material/core';\r\nclass CustomDateAdapter extends MomentDateAdapter {\r\n  override getDayOfWeekNames(style: 'long' | 'short' | 'narrow') {\r\n    return ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n  }\r\n  override getFirstDayOfWeek(): number {\r\n    return 1;\r\n  }\r\n}\r\n\r\nexport const MATERIAL_DATEPICKER_FORMATS = {\r\n  parse: {\r\n    dateInput: 'DD/MMM/YYYY',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MMM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'DD/MMM/YYYY',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n@Component({\r\n  selector: 'app-create-coupons',\r\n  templateUrl: './create-coupons.component.html',\r\n  styleUrls: ['./create-coupons.component.scss'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: CustomDateAdapter,\r\n      deps: [MAT_DATE_LOCALE],\r\n    },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MATERIAL_DATEPICKER_FORMATS },\r\n  ],\r\n})\r\nexport class CreateCouponsComponent {\r\n  customHeader = CustomDateHeaderComponent;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./create-coupons.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"create-product-wrapper\">\r\n  <div class=\"header-section pt-6 pb-6\">\r\n    <div class=\"flex align-center\">\r\n      <mat-icon\r\n        class=\"material-symbols-outlined pointer\"\r\n        color=\"primary\"\r\n        [routerLink]=\"'/coupons'\"\r\n        >keyboard_backspace</mat-icon\r\n      >\r\n      <p class=\"mat-h1 primary-text text-main\">Create Coupon</p>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-block pt-6\">\r\n    <div class=\"input-wrapper\">\r\n      <form>\r\n        <div class=\"input-wrapper no-sub mb-8\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">Coupon Id</p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"productnameinfo\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              tippyName=\"content\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #productnameinfo let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Coupon id</div>\r\n                <div class=\"details\">\r\n                  Enter a Customized Id. If user do not enter this field, the\r\n                  system will generate a 'Customized Human-Readable-id' based on\r\n                  the Name field.\r\n                </div>\r\n                <button mat-button color=\"primary\" class=\"px-0\">\r\n                  Learn more\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <input matInput placeholder=\"Enter here...\" />\r\n          </mat-form-field>\r\n          <span class=\"block mat-body-1 grey-text text-form-caption\">\r\n            This will be the reference used by SAAS Framework to identify this\r\n            coupon.\r\n          </span>\r\n        </div>\r\n        <div class=\"input-wrapper mb-2\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Coupon Name\r\n            </p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"couponName\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #couponName let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Coupon name</div>\r\n                <div class=\"details\">\r\n                  A descriptive name for this coupon. Please note that this will\r\n                  be displayed to customer, in case “invoice Name” field is not\r\n                  provided.\r\n                </div>\r\n                <button mat-button color=\"primary\" class=\"px-0\">\r\n                  Learn more\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <input matInput placeholder=\"Enter here...\" />\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"input-wrapper no-sub mb-8\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Invoice Name\r\n            </p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"InvoiceName\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #InvoiceName let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">invoice Name</div>\r\n                <div class=\"details\">\r\n                  Name displayed to your customers on the invoices and hosted\r\n                  payment pages.\r\n                </div>\r\n                <button mat-button color=\"primary\" class=\"px-0\">\r\n                  Learn more\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <input matInput placeholder=\"Enter here...\" />\r\n          </mat-form-field>\r\n          <span class=\"block mat-body-1 grey-text text-form-caption\">\r\n            Name displayed to your customers on the invoices and hosted payment\r\n            pages.\r\n          </span>\r\n        </div>\r\n        <h4 class=\"mat-body-1 text-text text-primary fw-500 mb-8\">DISCOUNT</h4>\r\n        <div class=\"input-wrapper no-sub mb-2\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Discount Type\r\n            </p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"discountType\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #discountType let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Discount type</div>\r\n                <div class=\"details\">\r\n                  FIxed Amount<br />\r\n                  The mentioned amount will be deducted.\r\n                </div>\r\n                <div class=\"details\">\r\n                  Percentage<br />\r\n                  The mentioned percentage will be deducted\r\n                </div>\r\n                <button mat-button color=\"primary\" class=\"px-0\">\r\n                  Learn more\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-select>\r\n              <mat-option>Percentage</mat-option>\r\n              <mat-option>Fixed Amount</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"input-wrapper mb-2\">\r\n          <mat-form-field appearance=\"outline\">\r\n            <input type=\"text\" matInput placeholder=\"Enter here \" />\r\n          </mat-form-field>\r\n        </div>\r\n        <h3 class=\"mat-subtitle-2 font-weight-500 input-label mb-8\">\r\n          Type: Invoice Amount\r\n        </h3>\r\n        <h4 class=\"mat-body-1 text-text text-primary fw-500 mb-8\">DURATION</h4>\r\n        <div class=\"input-wrapper mb-2\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Duration Type\r\n            </p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"durationType\"\r\n              panelClass=\"foo-bar\"\r\n              [tippyProps]=\"{ placement: 'right', interactive: true }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #durationType let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Duration type</div>\r\n                <div class=\"details\">\r\n                  Specify for how long should this coupon be applied to the\r\n                  subscription?\r\n                </div>\r\n                <button mat-button color=\"primary\" class=\"px-0\">\r\n                  Learn more\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-select>\r\n              <mat-option>One Time</mat-option>\r\n              <mat-option>Forever</mat-option>\r\n              <mat-option>Limited Period</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"input-wrapper mb-2\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Associate Plans\r\n            </p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"associatePlans\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #associatePlans let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Associate Plans</div>\r\n                <div class=\"details\">\r\n                  Choose the plans to which you would like to apply these\r\n                  coupons\r\n                </div>\r\n                <button mat-button color=\"primary\" class=\"px-0\">\r\n                  Learn more\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-select>\r\n              <mat-option value=\"All plans\">All Plans</mat-option>\r\n              <mat-option value=\"Selected Plans\">Selected Plans</mat-option>\r\n              <mat-option value=\"None\">None</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"input-wrapper mb-2\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Select Plans\r\n            </p>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-select multiple>\r\n              <div class=\"global-search full m-0 basic border-2\">\r\n                <span class=\"search-icon pointer\">\r\n                  <img\r\n                    src=\"../../../../../assets/images/icons/search.svg\"\r\n                    alt=\"search-icon\"\r\n                  />\r\n                </span>\r\n                <input type=\"text\" placeholder=\"Search...\" />\r\n              </div>\r\n              <mat-option value=\"All plans\">All Plans</mat-option>\r\n              <mat-option value=\"Selected Plans\">Selected Plans</mat-option>\r\n              <mat-option value=\"None\">None</mat-option>\r\n              <div class=\"pt-1 border-top mt-8\">\r\n                <div\r\n                  class=\"select-done flex align-center justify-center w-full primary light purple-text text-lighten-1 py-2 pointer\"\r\n                >\r\n                  <img\r\n                    src=\"../../../../../assets/images/icons/primary-check-circle.svg\"\r\n                    alt=\"check-circle\"\r\n                  />\r\n                  <span class=\"mat-caption block ml-1\">Done</span>\r\n                </div>\r\n              </div>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"input-wrapper mb-2\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Associate Addons\r\n            </p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"associateAddons\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #associateAddons let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Associate Addons</div>\r\n                <div class=\"details\">\r\n                  Choose the addons to which you would like to apply these\r\n                  coupons\r\n                </div>\r\n                <button mat-button color=\"primary\" class=\"px-0\">\r\n                  Learn more\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-select>\r\n              <mat-option value=\"All Addons\">All Addons</mat-option>\r\n              <mat-option value=\"Selected Addons\">Selected Addons</mat-option>\r\n              <mat-option value=\"None\">None</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"input-wrapper mb-2\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Select Addons\r\n            </p>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-select multiple>\r\n              <div class=\"global-search full m-0 basic border-2\">\r\n                <span class=\"search-icon pointer\">\r\n                  <img\r\n                    src=\"../../../../../assets/images/icons/search.svg\"\r\n                    alt=\"search-icon\"\r\n                  />\r\n                </span>\r\n                <input type=\"text\" placeholder=\"Search...\" />\r\n              </div>\r\n              <mat-option value=\"Addon 1\">Addon 1</mat-option>\r\n              <mat-option value=\"Addon 2\">Addon 2</mat-option>\r\n              <mat-option value=\"Addon 3\">Addon 3</mat-option>\r\n              <div class=\"pt-1 border-top mt-8\">\r\n                <div\r\n                  class=\"select-done flex align-center justify-center w-full primary light purple-text text-lighten-1 py-2 pointer\"\r\n                >\r\n                  <img\r\n                    src=\"../../../../../assets/images/icons/primary-check-circle.svg\"\r\n                    alt=\"check-circle\"\r\n                  />\r\n                  <span class=\"mat-caption block ml-1\">Done</span>\r\n                </div>\r\n              </div>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <h4 class=\"mat-body-1 text-text text-primary fw-500 mb-8\">VALIDITY</h4>\r\n        <div class=\"input-wrapper mb-2\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">Valid Till</p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"validTill\"\r\n              panelClass=\"foo-bar\"\r\n              [tippyProps]=\"{ placement: 'right', interactive: true }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #validTill let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Validity</div>\r\n                <div class=\"details\">\r\n                  Select the Validity date of the coupon\r\n                </div>\r\n                <button mat-button color=\"primary\" class=\"px-0\">\r\n                  Learn more\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <input matInput placeholder=\"select date\" [matDatepicker]=\"picker\" />\r\n            <div class=\"input-suffix\" (click)=\"picker.open()\" panelClass=\"my-custom\">\r\n              <img\r\n                src=\"../../../../../assets/images/icons/primary-calendar-icon.svg\"\r\n                alt=\"calendar-icon\"\r\n              />\r\n            </div>\r\n            <mat-datepicker #picker [calendarHeaderComponent]=\"customHeader\" ></mat-datepicker>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"input-wrapper mb-2\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Maximum Recommendations\r\n            </p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"validTill\"\r\n              panelClass=\"foo-bar\"\r\n              [tippyProps]=\"{ placement: 'right', interactive: true }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #validTill let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">\r\n                  Maximum Recommendations\r\n                </div>\r\n                <div class=\"details\">\r\n                  Maximum number of times this coupon can be redeemed.\r\n                </div>\r\n                <div class=\"details\">\r\n                  Note : If not mentioned this coupon will be redeemed\r\n                  indefinite number of times\r\n                </div>\r\n                <button mat-button color=\"primary\" class=\"px-0\">\r\n                  Learn more\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <input type=\"text\" matInput placeholder=\"Enter here\" />\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"action-btns flex align-center justify-between\">\r\n          <mat-checkbox\r\n            color=\"primary\"\r\n            formControlName=\"status\"\r\n            class=\"font-weight-500 checkbox ml-n-3\"\r\n            >Active</mat-checkbox\r\n          >\r\n          <div>\r\n            <button mat-stroked-button color=\"primary\" class=\"mr-2 large\">\r\n              Dismiss\r\n            </button>\r\n            <button mat-flat-button color=\"primary\" class=\"large\" type=\"button\">\r\n              Create\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "CreateFeatureComponent",
            "id": "component-CreateFeatureComponent-81a063983d5dfa4d7b4966a0c348bfe33056e4364edab4424b2ddad26b9aae931fd09de37ffe134e42d5c5b1965ba28adc58070a3f2b3a2daad11bf85c26ac54",
            "file": "src/app/modules/features/components/create-feature/create-feature.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-create-feature",
            "styleUrls": [
                "./create-feature.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./create-feature.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "autosize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CdkTextareaAutosize",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'autosize'"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "featureForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup | null",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "featureType",
                    "defaultValue": "feature_types",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "menuOptions[]",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "isRangeSelected",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "isUnlimited",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "limit",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "PageNumber",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "postName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "preName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "productArray",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "productName",
                    "defaultValue": "User_Data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Data_Type[]",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "search",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "sortBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"name\" | \"createdOn\"",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "sortOrder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"asc\" | \"desc\"",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "unlimitedButtonLabel",
                    "defaultValue": "'Set Unlimited'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                }
            ],
            "methodsClass": [
                {
                    "name": "addLevels",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "deleteLevels",
                    "args": [
                        {
                            "name": "levelIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 136,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "levelIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "feature",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getLevelList",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDelete",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 261,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 198,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onTypeSelection",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 169,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openSuccess",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 265,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setName",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 160,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleUnlimited",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 139,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, ViewChild } from '@angular/core';\r\nimport { CdkTextareaAutosize } from '@angular/cdk/text-field';\r\nimport {\r\n  Data_Type,\r\n  User_Data,\r\n  feature_types,\r\n} from 'src/app/shared/constants/consants';\r\nimport {\r\n  FormArray,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport getUniqueId from 'src/app/core/utils/functions/getUniqueId';\r\nimport { FeatureService } from '../../services/feature.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { ProductsService } from 'src/app/modules/products/services/products.service';\r\nimport { SuccessDialogComponent } from 'src/app/shared/components/dialog-box/success-dialog/success-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\nexport interface menuOptions {\r\n  value: number;\r\n  title: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-create-feature',\r\n  templateUrl: './create-feature.component.html',\r\n  styleUrls: ['./create-feature.component.scss'],\r\n})\r\nexport class CreateFeatureComponent {\r\n  productName: Data_Type[] = User_Data;\r\n  featureType: menuOptions[] = feature_types;\r\n  subscription: Subscription;\r\n  isUnlimited: boolean = false;\r\n  preName: string = '';\r\n  postName: string = '';\r\n  position: any;\r\n  unlimitedButtonLabel: string = 'Set Unlimited';\r\n  PageNumber: any = '';\r\n  limit: any = '';\r\n  search: string = '';\r\n  sortBy: 'name' | 'createdOn';\r\n  sortOrder: 'asc' | 'desc';\r\n  productArray = [];\r\n  id: string;\r\n  isRangeSelected: boolean = false;\r\n\r\n  public featureForm: FormGroup | null;\r\n  @ViewChild('autosize') autosize: CdkTextareaAutosize;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private featureService: FeatureService,\r\n    private routes: Router,\r\n    private productService: ProductsService,\r\n    private route: ActivatedRoute,\r\n    public dialog: MatDialog,\r\n    private snackBar: MatSnackBar\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.id = this.route.snapshot.params['id'];\r\n    this.productService\r\n      .getProducts(\r\n        this.PageNumber,\r\n        this.limit,\r\n        this.search,\r\n        this.sortBy,\r\n        this.sortOrder\r\n      )\r\n      .subscribe((data) => {\r\n        this.productArray = data.map((res) => res.productId);\r\n        this.featureForm.patchValue({ productID: this.id });\r\n      });\r\n    this.feature();\r\n    this.featureForm.controls['name'].valueChanges.subscribe((value) => {\r\n      const idValue = value?.replace(/[^\\w\\s]/gi, '').replace(/\\s+/g, '-');\r\n      this.featureForm.controls['featureId'].setValue(idValue);\r\n    });\r\n  }\r\n\r\n  feature() {\r\n    this.featureForm = this.formBuilder.group({\r\n      featureId: ['', Validators.required],\r\n      productID: ['', Validators.required],\r\n      name: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(20),\r\n          Validators.pattern(/^[a-zA-Z0-9\\s]*$/),\r\n        ],\r\n      ],\r\n      description: ['', Validators.maxLength(500)],\r\n      type: ['', Validators.required],\r\n      unit: ['', Validators.required],\r\n      status: [true],\r\n      levels: this.formBuilder.array([\r\n        this.formBuilder.group({\r\n          isUnlimited: [false],\r\n          value: ['', Validators.required],\r\n          name: ['', Validators.required],\r\n        }),\r\n        this.formBuilder.group({\r\n          isUnlimited: [false],\r\n          value: ['', Validators.required],\r\n          name: ['', Validators.required],\r\n        }),\r\n      ]),\r\n    });\r\n  }\r\n\r\n  get levels() {\r\n    return this.featureForm.controls['levels'] as FormArray;\r\n  }\r\n  getLevelList(index: number) {\r\n    const levelList = this.levels.at(index) as FormGroup;\r\n    return levelList;\r\n  }\r\n  addLevels() {\r\n    this.position = this.levels.controls.length + 1;\r\n    this.levels.insert(\r\n      this.position,\r\n      this.formBuilder.group({\r\n        isUnlimited: [false],\r\n        value: ['', Validators.required],\r\n        name: ['', Validators.required],\r\n      })\r\n    );\r\n  }\r\n\r\n  deleteLevels(levelIndex: number) {\r\n    this.levels.removeAt(levelIndex);\r\n  }\r\n  toggleUnlimited() {\r\n    this.position = this.levels.controls.length - 1;\r\n    const lastLevel = this.getLevelList(this.position);\r\n    this.postName = this.featureForm.value.unit;\r\n    if (this.isUnlimited) {\r\n      lastLevel.patchValue({\r\n        value: '',\r\n        name: '',\r\n      });\r\n      this.unlimitedButtonLabel = 'Set Unlimited';\r\n    } else {\r\n      lastLevel.patchValue({\r\n        isUnlimited: true,\r\n        value: 'unlimited',\r\n        name: 'unlimited' + ' ' + this.postName + 's',\r\n      });\r\n      this.unlimitedButtonLabel = 'Set Custom Maximum';\r\n    }\r\n    this.isUnlimited = !this.isUnlimited;\r\n  }\r\n\r\n  setName(index: number) {\r\n    this.postName = this.featureForm.value.unit;\r\n    this.preName = this.featureForm.value.levels[index].value;\r\n    const displayName = this.preName + ' ' + this.postName + 's';\r\n    const currentIndex = this.getLevelList(index);\r\n    currentIndex.patchValue({\r\n      name: displayName,\r\n    });\r\n  }\r\n  onTypeSelection(value: string) {\r\n    if (value === 'range') {\r\n      this.isRangeSelected = true;\r\n      this.featureForm.controls['unit'].reset();\r\n      while (this.levels.length > 2) {\r\n        this.levels.removeAt(2); // Remove form groups starting from index 2\r\n      }\r\n      for (let i = 0; i < this.levels.length; i++) {\r\n        const formGroup = this.levels.at(i); // Get the specific form group\r\n        formGroup.patchValue({\r\n          value: '',\r\n          name: '',\r\n        });\r\n      }\r\n    } else if (value === 'quantity') {\r\n      this.isRangeSelected = false;\r\n      this.featureForm.controls['unit'].reset();\r\n\r\n      for (let i = 0; i < this.levels.length; i++) {\r\n        const formGroup = this.levels.at(i); // Get the specific form group\r\n        formGroup.patchValue({\r\n          value: '',\r\n          name: '',\r\n        });\r\n      }\r\n    } else {\r\n      this.isRangeSelected = false;\r\n    }\r\n  }\r\n  onSubmit() {\r\n    console.log('haya', this.levels.valid)\r\n    this.levels.controls.forEach((ele, index) => {\r\n      if (!ele.get('level')) {\r\n        (<FormGroup>ele).addControl('level', new FormControl(index));\r\n      } else {\r\n        ele.get('level').setValue(index);\r\n      }\r\n    });\r\n\r\n    const status = this.featureForm.value.status ? 'active' : 'draft';\r\n    let feature: any = {\r\n      featureId: this.featureForm.value.featureId,\r\n      productID: this.featureForm.value.productID,\r\n      name: this.featureForm.value.name,\r\n      description: this.featureForm.value.description,\r\n      type: this.featureForm.value.type,\r\n      status: status,\r\n      levels: [],\r\n    };\r\n    if (this.featureForm.value.type === 'quantity') {\r\n      feature = {\r\n        ...feature,\r\n        unit: this.featureForm.value.unit,\r\n        levels: this.featureForm.value.levels,\r\n      };\r\n    } else if (this.featureForm.value.type === 'custom') {\r\n      const levels = this.featureForm.value.levels.map((level: any) => {\r\n        return {\r\n          ...level,\r\n          isUnlimited: ' ',\r\n        };\r\n      });\r\n      feature = {\r\n        ...feature,\r\n        unit: this.featureForm.value.unit,\r\n        levels: levels,\r\n      };\r\n    }\r\n\r\n    if (this.featureForm.value.type === 'range') {\r\n      feature = {\r\n        ...feature,\r\n        unit: this.featureForm.value.unit,\r\n        levels: this.featureForm.value.levels,\r\n      };\r\n    }\r\n    this.subscription = this.featureService.addFeature(feature).subscribe({\r\n      next: (res: any) => {\r\n        this.openSuccess();\r\n        this.routes.navigate([`/features/view/${res.featureId}`]);\r\n        return res;\r\n      },\r\n      error: (error: any) => {\r\n        this.snackBar.open(error.error.message, '', {\r\n          duration: 5000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        })\r\n      },\r\n    });\r\n  }\r\n\r\n  onDelete() {\r\n    this.routes.navigate(['/features']);\r\n  }\r\n\r\n  openSuccess() {\r\n    this.dialog.open(SuccessDialogComponent, {\r\n      width: '420px',\r\n      data: {\r\n        module: 'Feature',\r\n        operation: 'is created',\r\n      },\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./create-feature.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "featureService",
                        "type": "FeatureService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "routes",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 53,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "featureService",
                        "type": "FeatureService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "routes",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "levels": {
                    "name": "levels",
                    "getSignature": {
                        "name": "levels",
                        "type": "",
                        "returnType": "",
                        "line": 117
                    }
                }
            },
            "templateData": "<div\r\n  class=\"form-with-sample flex main-bg border-2 w-full h-full overflow-scroll pt-2 pb- 5 px-6\"\r\n>\r\n  <div class=\"form-left\">\r\n    <div class=\"header-section\">\r\n      <div class=\"pt-10 pb-5 pl-6\">\r\n        <div class=\"flex align-center mb-2\">\r\n          <mat-icon\r\n            class=\"material-symbols-outlined pointer\"\r\n            color=\"primary\"\r\n            [routerLink]=\"'/features'\"\r\n            >keyboard_backspace</mat-icon\r\n          >\r\n          <span class=\"mat-h1 primary-text text-main ml-2\">Create Feature</span>\r\n        </div>\r\n        <span class=\"pl-8 grey-text text-lighten-9 fs-lg\">\r\n          Fill in the details to create a new item\r\n        </span>\r\n      </div>\r\n    </div>\r\n    <form [formGroup]=\"featureForm\">\r\n      <div class=\"form-container pl-6 pr-10\">\r\n        <div class=\"input-wrapper\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Feature Name\r\n            </p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"featureName\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #featureName let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Feature name</div>\r\n                <div class=\"details\">\r\n                  Enter a name that helps you identify this Feature.\r\n                </div>\r\n                <button mat-button color=\"primary\" class=\"px-0\">\r\n                  Learn more\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n            <input\r\n              required\r\n              matInput\r\n              placeholder=\"Enter here\"\r\n              formControlName=\"name\"\r\n            />\r\n            <mat-error\r\n              *ngIf=\"\r\n                featureForm.controls['name'].invalid &&\r\n                featureForm.controls['name'].touched\r\n              \"\r\n            >\r\n              <ng-container\r\n                *ngIf=\"featureForm.controls['name'].errors['required']\"\r\n              >\r\n                Name is required and cannot be left empty.\r\n              </ng-container>\r\n              <ng-container\r\n                *ngIf=\"featureForm.controls['name'].errors['maxlength']\"\r\n              >\r\n                Name cannot exceed 20 characters.\r\n              </ng-container>\r\n              <ng-container\r\n                *ngIf=\"featureForm.controls['name'].errors['pattern']\"\r\n              >\r\n                Name cannot contain special characters.\r\n              </ng-container>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"input-wrapper\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Select Product\r\n            </p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"selectProduct\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #selectProduct let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Product</div>\r\n                <div class=\"details\">\r\n                  Please select a product to create a feature to it.\r\n                </div>\r\n                <button mat-button color=\"primary\" class=\"px-0\">\r\n                  Learn more\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n            <!-- <mat-label> Select </mat-label> -->\r\n            <mat-select\r\n              required\r\n              formControlName=\"productID\"\r\n              placeholder=\"select\"\r\n            >\r\n              <mat-option\r\n                *ngFor=\"let product of productArray\"\r\n                [value]=\"product\"\r\n              >\r\n                {{ product }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"input-wrapper\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">Feature ID</p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"helpinfotooltip\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #helpinfotooltip let-name>\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Feature id</div>\r\n                <div class=\"details\">\r\n                  Please enter a Customized Id.If user do not enter this field,\r\n                  the system will generate a 'Customized Human-Readable-id'\r\n                  based on the Name field.\r\n                  <div>\r\n                    e.g. Feature Name: \"Analytics Reporting\" FeatureId:\r\n                    \"analytics-reporting-01\".\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n            <input\r\n              required\r\n              matInput\r\n              placeholder=\"Enter here\"\r\n              formControlName=\"featureId\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"input-wrapper\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Feature Type\r\n            </p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"type\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #type let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Feature Type</div>\r\n                <div class=\"details\">\r\n                  Select how entitlements to this feature can be set in plans,\r\n                  addons, and charges.\r\n                </div>\r\n                <button mat-button color=\"primary\" class=\"px-0\">\r\n                  Learn more\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n            <mat-select required formControlName=\"type\" placeholder=\"select\">\r\n              <mat-option\r\n                *ngFor=\"let type of featureType\"\r\n                value=\"{{ type.title }}\"\r\n                (click)=\"onTypeSelection(type.title)\"\r\n              >\r\n                {{ type.title }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"input-wrapper\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Description\r\n            </p>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <textarea\r\n              rows=\"4\"\r\n              matInput\r\n              placeholder=\"Enter here...\"\r\n              formControlName=\"description\"\r\n            ></textarea>\r\n            <mat-error\r\n              *ngIf=\"\r\n                featureForm.controls['description'].invalid &&\r\n                featureForm.controls['description'].touched\r\n              \"\r\n            >\r\n              <ng-container\r\n                *ngIf=\"featureForm.controls['description'].errors['maxlength']\"\r\n              >\r\n                Description cannot exceed 500 characters.\r\n              </ng-container>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div\r\n          class=\"input-wrapper\"\r\n          *ngIf=\"\r\n            this.featureForm.value.type &&\r\n            this.featureForm.value.type != 1 &&\r\n            this.featureForm.value.type !== 'switch'\r\n            || this.isRangeSelected\r\n\r\n          \"\r\n        >\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Entitlement Units\r\n            </p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"selectProduct\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #selectProduct let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Entitlement Units</div>\r\n                <div class=\"details\">\r\n                  Please select a product to create a feature to it.\r\n                </div>\r\n                <button mat-button color=\"primary\" class=\"px-0\">\r\n                  Learn more\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n            <input\r\n              required\r\n              matInput\r\n              placeholder=\"Enter here\"\r\n              formControlName=\"unit\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n        <div *ngIf=\"this.featureForm.value.unit\">\r\n          <ng-container formArrayName=\"levels\">\r\n            <ng-container\r\n              *ngFor=\"let element of levels.controls; let i = index\"\r\n            >\r\n              <div class=\"flex align-center wrap mb-3\" [formGroupName]=\"i\">\r\n                <div class=\"flex align-center wrap w-88\">\r\n                  <div class=\"input-wrapper pr-2\">\r\n                    <div class=\"flex align-center mb-2\">\r\n                      <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n                        Entitlement\r\n                      </p>\r\n                    </div>\r\n                    <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n                      <input\r\n                        (input)=\"setName(i)\"\r\n                        required\r\n                        matInput\r\n                        placeholder=\"Enter here\"\r\n                        formControlName=\"value\"\r\n                      />\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"input-wrapper\">\r\n                    <div class=\"flex align-center mb-2\">\r\n                      <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n                        Display Name\r\n                      </p>\r\n                    </div>\r\n                    <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n                      <input\r\n                        matInput\r\n                        placeholder=\"Enter here\"\r\n                        formControlName=\"name\"\r\n                      />\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n                <button\r\n                  *ngIf=\"i == 0\"\r\n                  mat-stroked-button\r\n                  disableRipple\r\n                  class=\"upper-case primary light medium px-1 ml-2\"\r\n                >\r\n                  Default\r\n                </button>\r\n                <button\r\n                  *ngIf=\"\r\n                    levels.controls.length > 1 &&\r\n                    i < levels.controls.length - 1 &&\r\n                    i != 0\r\n                  \"\r\n                  mat-stroked-button\r\n                  disableRipple\r\n                  class=\"upper-case primary light medium px-1 ml-2\"\r\n                  (click)=\"deleteLevels(i)\"\r\n                >\r\n                  Remove\r\n                </button>\r\n                <button\r\n                  *ngIf=\"i == levels.controls.length - 1\"\r\n                  mat-stroked-button\r\n                  disableRipple\r\n                  class=\"upper-case primary light medium px-1 ml-2\"\r\n                >\r\n                  Maximum\r\n                </button>\r\n              </div>\r\n            </ng-container>\r\n          </ng-container>\r\n          <div>\r\n            <button mat-stroked-button (click)=\"toggleUnlimited()\">\r\n              <mat-icon class=\"add-course-btn\"></mat-icon\r\n              >{{ unlimitedButtonLabel }}\r\n            </button>\r\n          </div>\r\n          <button\r\n            mat-stroked-button\r\n            (click)=\"addLevels()\"\r\n            *ngIf=\"!isRangeSelected\"\r\n          >\r\n            <mat-icon class=\"add-course-btn\"></mat-icon>Add Entitlement\r\n          </button>\r\n        </div>\r\n        <div class=\"action-btns flex align-center justify-between\">\r\n          <mat-checkbox\r\n            color=\"primary\"\r\n            formControlName=\"status\"\r\n            class=\"font-weight-500 checkbox ml-n-3\"\r\n            >Active</mat-checkbox\r\n          >\r\n          <div>\r\n            <button\r\n              mat-stroked-button\r\n              color=\"primary\"\r\n              class=\"mr-2 large\"\r\n              (click)=\"onDelete()\"\r\n            >\r\n              Dismiss\r\n            </button>\r\n            <button\r\n              mat-flat-button\r\n              color=\"primary\"\r\n              class=\"large\"\r\n              type=\"button\"\r\n              (click)=\"onSubmit()\"\r\n              [disabled]=\"\r\n                featureForm.invalid && this.featureForm.value.type !== 'switch'\r\n              \"\r\n            >\r\n              Create\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"sample-right h-auto\">\r\n    <div class=\"py-5 pr-4 pl-8\">\r\n      <div class=\"heading-with-background mb-2\">Sample Feature</div>\r\n      <div class=\"text-text text-primary mb-2\">\r\n        <h3 class=\"fw-500 m-0\">Switch Feature</h3>\r\n        <p class=\"mat-h4\">\r\n          This feature type has 2 entitlement levels- \"available\" and \"not\r\n          available\".\r\n        </p>\r\n        <button mat-button color=\"primary\" class=\"medium px-1\">\r\n          Try a Sample\r\n        </button>\r\n      </div>\r\n      <div class=\"text-text text-primary mb-2\">\r\n        <h3 class=\"fw-500 m-0\">Range Feature</h3>\r\n        <p class=\"mat-h4\">\r\n          This feature supports range based entitlements. For eg : Customer’s\r\n          access can be between 100 and 300 API / minute.\r\n        </p>\r\n        <button mat-button color=\"primary\" class=\"medium px-1\">\r\n          Try a Sample\r\n        </button>\r\n      </div>\r\n      <div class=\"text-text text-primary mb-2\">\r\n        <h3 class=\"fw-500 m-0\">Quantity Feature</h3>\r\n        <p class=\"mat-h4\">\r\n          This feature type has numbered entitlement levels- For eg : 2,3,4 or\r\n          10 user licenses.\r\n        </p>\r\n        <button mat-button color=\"primary\" class=\"medium px-1\">\r\n          Try a Sample\r\n        </button>\r\n      </div>\r\n      <div class=\"text-text text-primary\">\r\n        <h3 class=\"fw-500 m-0\">Custom Feature</h3>\r\n        <p class=\"mat-h4\">\r\n          This feature supports range based entitlements. For eg : Customer’s\r\n          access can be between 100 and 300 API / minute.\r\n        </p>\r\n        <button mat-button color=\"primary\" class=\"medium px-1\">\r\n          Try a Sample\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "CreatePlanComponent",
            "id": "component-CreatePlanComponent-32b2e40212b2ffe6144456964eb067241732d4f61371c1107162ba940d7362f346ffce2c75f13256bc980ec3f97ceefc6976812de5ae01bdddc09c00b6e205ef",
            "file": "src/app/modules/plans/components/create-plan/create-plan.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-create-plan",
            "styleUrls": [
                "./create-plan.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./create-plan.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "arr",
                    "defaultValue": "[\r\n    {\r\n      step: 'step1',\r\n      id: 'cdk-step-label-0-0',\r\n      attributeValue: 'false',\r\n    },\r\n    {\r\n      step: 'step2',\r\n      id: 'cdk-step-label-0-1',\r\n      attributeValue: 'false',\r\n    },\r\n    {\r\n      step: 'step3',\r\n      id: 'cdk-step-label-0-2',\r\n      attributeValue: 'false',\r\n    },\r\n    {\r\n      step: 'step4',\r\n      id: 'cdk-step-label-0-3',\r\n      attributeValue: 'false',\r\n    },\r\n    {\r\n      step: 'step5',\r\n      id: 'cdk-step-label-0-4',\r\n      attributeValue: 'false',\r\n    },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 255
                },
                {
                    "name": "clickedRows",
                    "defaultValue": "new Set<PeriodicElement>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "data$",
                    "defaultValue": "this.planService.plan$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "dataSource",
                    "defaultValue": "ELEMENT_DATA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 71,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['PricingCycle', 'Price']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "editable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "entitlement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "featureId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "featureLength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "features",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "limit",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "PageNumber",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "planAddEmptyData",
                    "defaultValue": "plan_add_empty_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "planForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "planId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "priceColumn",
                    "defaultValue": "[\r\n    'PricingCycle',\r\n    'PricingModel',\r\n    'BillingCycle',\r\n    'Price',\r\n    'action',\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "priceData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "productDetails",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "productID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "step1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'step1'"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "step2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'step2'"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "step3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 66,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'step3'"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "step4",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 67,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'step4'"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "step5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 68,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'step5'"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "stepOneCompleted",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "stepsTitle",
                    "defaultValue": "Stepper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "testId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "values",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 33
                }
            ],
            "methodsClass": [
                {
                    "name": "editProductVariant",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 233,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPlanById",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 282,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDelete",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 214,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 179,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openPopup",
                    "args": [
                        {
                            "name": "feature",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 222,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "feature",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openSuccess",
                    "args": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 315,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "patchValue",
                    "args": [
                        {
                            "name": "data",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 133,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "planDetails",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removeType",
                    "args": [
                        {
                            "name": "index",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 329,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setPlanId",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 170,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "switchStepper",
                    "args": [
                        {
                            "name": "step",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 236,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "step",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewChild, ElementRef, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription, takeUntil } from 'rxjs';\r\nimport { FeatureDetailsPopupComponent } from 'src/app/shared/components/dialog-box/feature-details-popup/feature-details-popup.component';\r\nimport { SuccessDialogComponent } from 'src/app/shared/components/dialog-box/success-dialog/success-dialog.component';\r\nimport {\r\n  Stepper,\r\n  plan_add_empty_data,\r\n} from 'src/app/shared/constants/consants';\r\nimport { PlanService } from '../../services/plan.service';\r\nimport { GlobalService } from 'src/app/core/services/global.service';\r\n\r\nexport interface PeriodicElement {\r\n  PricingCycle: string;\r\n  Price: any;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  { PricingCycle: 'Daily', Price: 'Set Price' },\r\n  { PricingCycle: 'Weekly', Price: 'Set Price' },\r\n  { PricingCycle: 'Monthly', Price: 'Set Price' },\r\n  { PricingCycle: 'Yearly', Price: 'Set Price' },\r\n];\r\n\r\n@Component({\r\n  selector: 'app-create-plan',\r\n  templateUrl: './create-plan.component.html',\r\n  styleUrls: ['./create-plan.component.scss'],\r\n})\r\nexport class CreatePlanComponent implements OnInit {\r\n  values: any;\r\n  priceColumn: string[] = [\r\n    'PricingCycle',\r\n    'PricingModel',\r\n    'BillingCycle',\r\n    'Price',\r\n    'action',\r\n  ];\r\n  priceData: any[] = [];\r\n  planAddEmptyData = plan_add_empty_data;\r\n  stepsTitle = Stepper;\r\n  displayedColumns: string[] = ['PricingCycle', 'Price'];\r\n  dataSource = ELEMENT_DATA;\r\n  clickedRows = new Set<PeriodicElement>();\r\n  testId: string;\r\n  planForm: FormGroup;\r\n  subscription: Subscription;\r\n  data$ = this.planService.plan$;\r\n  productDetails: any = [];\r\n  productID: string;\r\n  name: string;\r\n  featureId: string;\r\n  entitlement: string;\r\n  PageNumber: any = '';\r\n  limit: any = '';\r\n  planId: string;\r\n  featureLength: string;\r\n  dialogRef: any;\r\n  public stepOneCompleted: boolean = false;\r\n  editable: boolean = false;\r\n  features: { featureId: string; entitlement: string }[] = [];\r\n  @ViewChild('step1') step1: ElementRef;\r\n  @ViewChild('step2') step2: ElementRef;\r\n  @ViewChild('step3') step3: ElementRef;\r\n  @ViewChild('step4') step4: ElementRef;\r\n  @ViewChild('step5') step5: ElementRef;\r\n\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private planService: PlanService,\r\n    private global: GlobalService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.planDetails();\r\n    this.planId = this.route.snapshot.params['id'];\r\n    this.getPlanById(this.planId);\r\n    this.planService.plan$.subscribe((data) => {\r\n      if (data) {\r\n        this.productDetails = data;\r\n        for (const product of this.productDetails) {\r\n          this.productID = product.productID;\r\n          this.name = product.name;\r\n          this.featureLength = product.features.length;\r\n\r\n          for (const feature of product.features) {\r\n            this.featureId = feature.featureId;\r\n            this.entitlement = feature.value;\r\n            this.features.push({\r\n              featureId: this.featureId,\r\n              entitlement: this.entitlement,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    });\r\n    if (this.stepOneCompleted) {\r\n      const pageNumber = 1;\r\n      const limit = 100;\r\n      const search = '';\r\n      this.planService.getPrice(pageNumber, limit, search).subscribe(\r\n        (res) =>\r\n          (this.priceData = res.data.filter((item) => {\r\n            if (item.planId === this.planId) {\r\n              console.log('res.data', item);\r\n              return item;\r\n            }\r\n          }))\r\n      );\r\n    }\r\n  }\r\n  getPlanById(id: string) {\r\n    if (id) {\r\n      this.stepOneCompleted = true;\r\n      this.global.showLoader();\r\n      this.planService\r\n        .getPlanById(id)\r\n        .pipe(takeUntil(this.global.componentDestroyed(this)))\r\n        .subscribe((res) => {\r\n          this.patchValue(res.data);\r\n          this.editable = true;\r\n        });\r\n    } else {\r\n      this.stepOneCompleted = false;\r\n      this.editable = false;\r\n    }\r\n  }\r\n  patchValue(data) {\r\n    this.planForm.patchValue({\r\n      planId: data.planId,\r\n      internalName: data.internalName,\r\n      externalName: data.externalName,\r\n      type: data.type,\r\n      description: data.description,\r\n      status: data.status,\r\n    });\r\n    this.global.hideLoader();\r\n  }\r\n\r\n  planDetails() {\r\n    this.planForm = this.formBuilder.group({\r\n      planId: ['', Validators.required],\r\n      internalName: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(20),\r\n          Validators.pattern(/^[a-zA-Z0-9\\s]*$/),\r\n        ],\r\n      ],\r\n      externalName: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(20),\r\n          Validators.pattern(/^[a-zA-Z0-9\\s]*$/),\r\n        ],\r\n      ],\r\n      type: [''],\r\n      description: ['', Validators.maxLength(500)],\r\n      status: [true],\r\n    });\r\n  }\r\n\r\n  setPlanId(event: any) {\r\n    if (!this.editable) {\r\n      const idValue = event.target.value\r\n        ?.replace(/[^\\w\\s]/gi, '')\r\n        .replace(/\\s+/g, '-');\r\n      this.planForm.get('planId').setValue(idValue);\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    this.global.showLoader();\r\n    console.log('check new form');\r\n    const status = this.planForm.value.status ? 'active' : 'disabled';\r\n    const type = 'base';\r\n    const plan = {\r\n      ...this.planForm.value,\r\n      type: type,\r\n      status: status,\r\n    };\r\n    this.stepOneCompleted = true;\r\n    if (!this.editable) {\r\n      this.planService\r\n        .addPlan(plan)\r\n        .pipe(takeUntil(this.global.componentDestroyed(this)))\r\n        .subscribe({\r\n          next: (res: any) => {\r\n            this.openSuccess(plan.planId);\r\n            this.global.hideLoader();\r\n            return res;\r\n          },\r\n          error: (err: any) => {\r\n            console.log('something wrong occured', err);\r\n          },\r\n        });\r\n    } else if (this.editable) {\r\n      this.planService\r\n        .updatePlan(plan, this.planId)\r\n        .pipe(takeUntil(this.global.componentDestroyed(this)))\r\n        .subscribe((res) => {\r\n          this.openSuccess(plan.planId);\r\n          this.global.hideLoader();\r\n        });\r\n    }\r\n  }\r\n  onDelete(id: string) {\r\n    this.planService.deleteProductVariant(id).subscribe(() => {\r\n      this.data$.subscribe((res) => {\r\n        return res;\r\n      });\r\n    });\r\n  }\r\n\r\n  openPopup(feature: any) {\r\n    this.dialog.open(FeatureDetailsPopupComponent, {\r\n      data: {\r\n        featureId: feature,\r\n      },\r\n    });\r\n  }\r\n  // editPrice(id){\r\n  //   this.planService.setEditPrice(true);\r\n  //   this.router.navigate([`/plans/create/set-price/${id}`])\r\n  // }\r\n  editProductVariant(id: string) {\r\n    this.router.navigate([`/plans/create/edit-product-detail/${id}`]);\r\n  }\r\n  switchStepper(step: any) {\r\n    const stepId = step.id;\r\n    if (stepId === 1) {\r\n      this.step1.nativeElement.scrollIntoView({ behavior: 'smooth' });\r\n    } else if (stepId === 2) {\r\n      this.step2.nativeElement.scrollIntoView({ behavior: 'smooth' });\r\n    } else if (stepId === 3) {\r\n      this.step3.nativeElement.scrollIntoView({ behavior: 'smooth' });\r\n    } else if (stepId === 4) {\r\n      this.step4.nativeElement.scrollIntoView({ behavior: 'smooth' });\r\n    } else if (stepId === 5) {\r\n      this.step5.nativeElement.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n    // const element = this.step3.nativeElement;\r\n    // window.scrollTo({\r\n    //   top: element.offsetTop,\r\n    //   behavior: 'smooth'\r\n    // })\r\n  }\r\n  arr = [\r\n    {\r\n      step: 'step1',\r\n      id: 'cdk-step-label-0-0',\r\n      attributeValue: 'false',\r\n    },\r\n    {\r\n      step: 'step2',\r\n      id: 'cdk-step-label-0-1',\r\n      attributeValue: 'false',\r\n    },\r\n    {\r\n      step: 'step3',\r\n      id: 'cdk-step-label-0-2',\r\n      attributeValue: 'false',\r\n    },\r\n    {\r\n      step: 'step4',\r\n      id: 'cdk-step-label-0-3',\r\n      attributeValue: 'false',\r\n    },\r\n    {\r\n      step: 'step5',\r\n      id: 'cdk-step-label-0-4',\r\n      attributeValue: 'false',\r\n    },\r\n  ];\r\n  ngAfterViewInit() {\r\n    // Initialize Intersection Observer\r\n    const observer = new IntersectionObserver((entries, observer) => {\r\n      let findCurrent = entries.find((ele) => ele.isIntersecting == true);\r\n      if (findCurrent) {\r\n        this.testId = String(findCurrent.target.id);\r\n        this.arr.forEach((ele) => {\r\n          if (ele.step == this.testId) {\r\n            document\r\n              .getElementById(ele.id)\r\n              ?.setAttribute('aria-selected', 'true');\r\n          } else {\r\n            document\r\n              .getElementById(ele.id)\r\n              ?.setAttribute('aria-selected', ele.attributeValue);\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    // Start observing the element\r\n    const testArr = [\r\n      this.step1,\r\n      this.step2,\r\n      this.step3,\r\n      this.step4,\r\n      this.step5,\r\n    ];\r\n    testArr.forEach((element: any) => {\r\n      observer.observe(element.nativeElement);\r\n    });\r\n  }\r\n\r\n  openSuccess(id) {\r\n    this.dialogRef = this.dialog.open(SuccessDialogComponent, {\r\n      width: '420px',\r\n      data: {\r\n        module: 'Plan',\r\n        operation: 'is created',\r\n      },\r\n    });\r\n    this.dialogRef.afterClosed().subscribe((res: any) => {\r\n      if (res) {\r\n        this.router.navigate([`/plans/create/${id}`]);\r\n      }\r\n    });\r\n  }\r\n  removeType(index: any) {\r\n    this.planService.priceModelArr.splice(index, 1);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".disabled-step {\r\n  opacity: 0.5;\r\n  pointer-events: none;\r\n}\r\n",
                    "styleUrl": "./create-plan.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "planService",
                        "type": "PlanService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "global",
                        "type": "GlobalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 68,
                "jsdoctags": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "planService",
                        "type": "PlanService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "global",
                        "type": "GlobalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"flex w-full h-full\">\r\n  <div class=\"stepper-wrapper\">\r\n    <mat-stepper orientation=\"vertical\" #stepper [disableRipple]=\"true\">\r\n      <ng-container *ngFor=\"let step of stepsTitle; let i = index\">\r\n        <mat-step id=\"foo-bar\" [editable]=\"i === 0 || stepOneCompleted\">\r\n          <ng-template matStepLabel>\r\n            <div\r\n              (click)=\"switchStepper(step)\"\r\n              [ngClass]=\"{ 'disabled-step': i !== 0 && !stepOneCompleted }\"\r\n            >\r\n              <span\r\n                id=\"{{ step.id }}\"\r\n                class=\"block text-dark font-weight-500\"\r\n                >{{ step.title }}</span\r\n              >\r\n              <span\r\n                class=\"block font-weight-600 mat-subtitle-2 text-headline-light\"\r\n                >{{ step.caption }}</span\r\n              >\r\n            </div>\r\n          </ng-template>\r\n        </mat-step>\r\n      </ng-container>\r\n    </mat-stepper>\r\n  </div>\r\n  <div\r\n    #contentSection\r\n    class=\"create-plan-main-wrapper h-full overflow-auto relative\"\r\n  >\r\n    <div #step1 id=\"step1\" class=\"plan-section-block flex-center p-11 mb-4\">\r\n      <div class=\"plan-info-block inner-wrapper\">\r\n        <div class=\"heading flex align-center\">\r\n          <img\r\n            src=\"../../../../../../assets/images/icons/carbon_document-multiple-02.svg\"\r\n            alt=\"carbon_document-multiple-icon\"\r\n          />\r\n          <abbr class=\"mat-headline-5 text-dark\">Plan Information</abbr>\r\n        </div>\r\n        <form [formGroup]=\"planForm\">\r\n          <div class=\"info-form\">\r\n            <div class=\"input-wrapper mt-8\">\r\n              <div>\r\n                <div class=\"flex align-center mb-2\">\r\n                  <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n                    Plan Name (Internal)\r\n                  </p>\r\n                  <mat-icon\r\n                    class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n                    [ngxTippy]=\"productnameinfo\"\r\n                    [tippyProps]=\"{ placement: 'right' }\"\r\n                    tippyName=\"content\"\r\n                    >help</mat-icon\r\n                  >\r\n                  <ng-template #productnameinfo let-name class=\"t-template\">\r\n                    <div class=\"help-info-tooltip\">\r\n                      <div class=\"heading-with-background\">\r\n                        Plan name (Internal)\r\n                      </div>\r\n                      <div class=\"details\">\r\n                        This is help you identify the Plan Internally\r\n                      </div>\r\n                      <button mat-button color=\"primary\" class=\"px-0\">\r\n                        Learn more\r\n                      </button>\r\n                    </div>\r\n                  </ng-template>\r\n                </div>\r\n                <mat-form-field appearance=\"outline\">\r\n                  <input\r\n                    required\r\n                    matInput\r\n                    placeholder=\"Enter here...\"\r\n                    formControlName=\"internalName\"\r\n                    (input)=\"setPlanId($event)\"\r\n                  />\r\n                  <mat-error\r\n                    *ngIf=\"\r\n                      planForm.controls['internalName'].invalid &&\r\n                      planForm.controls['internalName'].touched\r\n                    \"\r\n                  >\r\n                    <ng-container\r\n                      *ngIf=\"\r\n                        planForm.controls['internalName'].errors['required']\r\n                      \"\r\n                    >\r\n                      InternalName is required and cannot be left empty.\r\n                    </ng-container>\r\n                    <ng-container\r\n                      *ngIf=\"\r\n                        planForm.controls['internalName'].errors['maxlength']\r\n                      \"\r\n                    >\r\n                      InternalName cannot exceed 20 characters.\r\n                    </ng-container>\r\n                    <ng-container\r\n                      *ngIf=\"\r\n                        planForm.controls['internalName'].errors['pattern']\r\n                      \"\r\n                    >\r\n                      InternalName cannot contain special characters.\r\n                    </ng-container>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div>\r\n                <div class=\"flex align-center mb-2\">\r\n                  <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n                    Plan Name (External)\r\n                  </p>\r\n                  <mat-icon\r\n                    class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n                    [ngxTippy]=\"productnameinfo\"\r\n                    [tippyProps]=\"{ placement: 'right' }\"\r\n                    >help</mat-icon\r\n                  >\r\n                  <ng-template #productnameinfo let-name class=\"t-template\">\r\n                    <div class=\"help-info-tooltip\">\r\n                      <div class=\"heading-with-background\">\r\n                        Plan name (External)\r\n                      </div>\r\n                      <div class=\"details\">\r\n                        This name will be shown on the customer portal.\r\n                      </div>\r\n                      <button mat-button color=\"primary\" class=\"px-0\">\r\n                        Learn more\r\n                      </button>\r\n                    </div>\r\n                  </ng-template>\r\n                </div>\r\n                <mat-form-field appearance=\"outline\">\r\n                  <input\r\n                    required\r\n                    matInput\r\n                    placeholder=\"Enter here...\"\r\n                    formControlName=\"externalName\"\r\n                  />\r\n                  <mat-error\r\n                    *ngIf=\"\r\n                      planForm.controls['externalName'].invalid &&\r\n                      planForm.controls['externalName'].touched\r\n                    \"\r\n                  >\r\n                    <ng-container\r\n                      *ngIf=\"\r\n                        planForm.controls['externalName'].errors['required']\r\n                      \"\r\n                    >\r\n                      ExternalName is required and cannot be left empty.\r\n                    </ng-container>\r\n                    <ng-container\r\n                      *ngIf=\"\r\n                        planForm.controls['externalName'].errors['maxlength']\r\n                      \"\r\n                    >\r\n                      ExternalName cannot exceed 20 characters.\r\n                    </ng-container>\r\n                    <ng-container\r\n                      *ngIf=\"\r\n                        planForm.controls['externalName'].errors['pattern']\r\n                      \"\r\n                    >\r\n                      ExternalName cannot contain special characters.\r\n                    </ng-container>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div>\r\n                <div class=\"flex align-center mb-2\">\r\n                  <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n                    Plan Id\r\n                  </p>\r\n                  <mat-icon\r\n                    class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n                    [ngxTippy]=\"helpinfotooltip\"\r\n                    [tippyProps]=\"{ placement: 'right' }\"\r\n                    >help</mat-icon\r\n                  >\r\n                  <ng-template #helpinfotooltip let-name>\r\n                    <div class=\"help-info-tooltip\">\r\n                      <div class=\"heading-with-background\">Plan id</div>\r\n                      <div class=\"details\">\r\n                        Enter a Customized Id. If user do not enter this field,\r\n                        the system will generate a 'Customized\r\n                        Human-Readable-id' based on the Name fielde.g. Plan id\r\n                        Name: “Karisch plus Enterprise”Plan Id:\r\n                        “karish-plus-enteprise-01”\r\n                      </div>\r\n                      <button mat-button color=\"primary\" class=\"px-0\">\r\n                        Learn more\r\n                      </button>\r\n                    </div>\r\n                  </ng-template>\r\n                </div>\r\n                <mat-form-field appearance=\"outline\">\r\n                  <input\r\n                    *ngIf=\"!editable\"\r\n                    required\r\n                    matInput\r\n                    placeholder=\"Enter here...\"\r\n                    formControlName=\"planId\"\r\n                  />\r\n                  <input\r\n                    *ngIf=\"editable\"\r\n                    readonly\r\n                    required\r\n                    matInput\r\n                    placeholder=\"Enter here...\"\r\n                    formControlName=\"planId\"\r\n                  />\r\n                </mat-form-field>\r\n              </div>\r\n              <div>\r\n                <div class=\"flex align-center mb-2\">\r\n                  <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n                    Description\r\n                  </p>\r\n                </div>\r\n                <mat-form-field appearance=\"outline\">\r\n                  <textarea\r\n                    matInput\r\n                    placeholder=\"Enter here...\"\r\n                    formControlName=\"description\"\r\n                  ></textarea>\r\n                  <mat-error\r\n                    *ngIf=\"\r\n                      planForm.controls['description'].invalid &&\r\n                      planForm.controls['description'].touched\r\n                    \"\r\n                  >\r\n                    <ng-container\r\n                      *ngIf=\"\r\n                        planForm.controls['description'].errors['maxlength']\r\n                      \"\r\n                    >\r\n                      Description cannot exceed 500 characters.\r\n                    </ng-container>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"action-btns flex align-center justify-between\">\r\n                <mat-checkbox\r\n                  color=\"primary\"\r\n                  formControlName=\"status\"\r\n                  class=\"font-weight-500 checkbox ml-n-3\"\r\n                  >Active</mat-checkbox\r\n                >\r\n                <div>\r\n                  <button\r\n                    mat-stroked-button\r\n                    color=\"primary\"\r\n                    class=\"mr-2 large\"\r\n                    [routerLink]=\"'/plans'\"\r\n                  >\r\n                    Dismiss\r\n                  </button>\r\n                  <button\r\n                    *ngIf=\"!editable\"\r\n                    mat-flat-button\r\n                    color=\"primary\"\r\n                    class=\"large\"\r\n                    type=\"button\"\r\n                    (click)=\"onSubmit()\"\r\n                    [disabled]=\"planForm.invalid\"\r\n                  >\r\n                    Create\r\n                  </button>\r\n                  <button\r\n                    *ngIf=\"editable\"\r\n                    mat-flat-button\r\n                    color=\"primary\"\r\n                    class=\"large\"\r\n                    type=\"button\"\r\n                    (click)=\"onSubmit()\"\r\n                  >\r\n                    Update\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- pricing plan -->\r\n    <div\r\n      #step2\r\n      id=\"step2\"\r\n      class=\"plan-section-block flex-center border-2 p-11 mb-4\"\r\n    >\r\n      <div class=\"plan-info-block inner-wrapper\">\r\n        <div class=\"heading flex align-center\">\r\n          <img\r\n            src=\"../../../../../../assets/images/icons/basil_invoice-outline.svg\"\r\n            alt=\"icon\"\r\n          />\r\n          <h5 class=\"mat-headline-5 text-dark\">Pricing Plan</h5>\r\n        </div>\r\n        <div\r\n          *ngIf=\"this.priceData.length == 0\"\r\n          class=\"empty-add-section mt-6 border-1\"\r\n        >\r\n          <div class=\"text-center\">\r\n            <p class=\"mat-body-1 text-dark-1\">\r\n              Please click the “Add” button below to add a new pricing plans.\r\n              Once you clicked the button, you will be prompted to enter pricing\r\n              and additional details.\r\n            </p>\r\n            <button\r\n              mat-flat-button\r\n              color=\"primary\"\r\n              class=\"mt-11 large\"\r\n              [routerLink]=\"['/plans/create/set-price/'] + planId\"\r\n              [disabled]=\"!stepOneCompleted\"\r\n            >\r\n              Add Pricing\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div *ngIf=\"this.priceData.length > 0\" class=\"info-form\">\r\n          <div class=\"flag-wrapper flex align-center pt-8 pb-2\">\r\n            <img\r\n              src=\"../../../../../../assets/images/flags.png\"\r\n              alt=\"flags\"\r\n              class=\"mr-3\"\r\n            />\r\n            <span class=\"mat-subtitle-2 text-headline-dark\">USD</span>\r\n          </div>\r\n          <div class=\"table-wrapper mt-3\">\r\n            <table mat-table [dataSource]=\"priceData\" class=\"\">\r\n              <ng-container matColumnDef=\"PricingCycle\">\r\n                <th\r\n                  mat-header-cell\r\n                  *matHeaderCellDef\r\n                  class=\"mat-subtitle-2 text-headline-dark\"\r\n                >\r\n                  Pricing Cycle\r\n                </th>\r\n                <td\r\n                  mat-cell\r\n                  *matCellDef=\"let element\"\r\n                  class=\"mat-subtitle-2 text-headline-light\"\r\n                >\r\n                  {{ element.periodUnit }}\r\n                </td>\r\n              </ng-container>\r\n\r\n              <ng-container matColumnDef=\"PricingModel\">\r\n                <th\r\n                  mat-header-cell\r\n                  *matHeaderCellDef\r\n                  class=\"mat-subtitle-2 text-headline-dark\"\r\n                >\r\n                  Pricing Model\r\n                </th>\r\n                <td\r\n                  mat-cell\r\n                  *matCellDef=\"let element\"\r\n                  class=\"mat-subtitle-2 text-headline-light\"\r\n                >\r\n                  {{ element.pricingModel }}\r\n                </td>\r\n              </ng-container>\r\n\r\n              <ng-container matColumnDef=\"BillingCycle\">\r\n                <th\r\n                  mat-header-cell\r\n                  *matHeaderCellDef\r\n                  class=\"mat-subtitle-2 text-headline-dark\"\r\n                >\r\n                  Billing Cycle\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let element\">\r\n                  <span\r\n                    *ngIf=\"element.isExpirable\"\r\n                    class=\"mat-subtitle-2 text-headline-light billing-fixed px-2 py-1 border-1\"\r\n                    >Fixed</span\r\n                  >\r\n                  <span\r\n                    *ngIf=\"!element.isExpirable\"\r\n                    class=\"mat-subtitle-2 text-headline-light billing-fixed px-2 py-1 border-1\"\r\n                    >Forever</span\r\n                  >\r\n                </td>\r\n              </ng-container>\r\n\r\n              <ng-container matColumnDef=\"Price\">\r\n                <th\r\n                  mat-header-cell\r\n                  *matHeaderCellDef\r\n                  class=\"mat-subtitle-2 text-headline-dark\"\r\n                >\r\n                  Price\r\n                </th>\r\n                <td\r\n                  mat-cell\r\n                  *matCellDef=\"let element\"\r\n                  class=\"mat-subtitle-2 text-headline-light price-cell\"\r\n                >\r\n                  <div\r\n                    *ngIf=\"\r\n                      element.multiPricing && element.multiPricing.length == 0\r\n                    \"\r\n                    class=\"flex align-center\"\r\n                  >\r\n                    {{ element.price }}\r\n                  </div>\r\n                  <div\r\n                    *ngIf=\"\r\n                      element.multiPricing && element.multiPricing.length > 0\r\n                    \"\r\n                    class=\"flex align-center\"\r\n                    [ngxTippy]=\"fullDescription\"\r\n                    [tippyProps]=\"{ placement: 'right' }\"\r\n                  >\r\n                    {{ element.multiPricing[0].price }}\r\n                    <ng-template #fullDescription let-name class=\"t-template\">\r\n                      <table class=\"black-text\">\r\n                        <thead>\r\n                          <th class=\"pr-4\">Starting Unit</th>\r\n                          <th class=\"pr-4\">Ending Unit</th>\r\n                          <th class=\"pr-4\">Price</th>\r\n                        </thead>\r\n                        <tbody>\r\n                          <tr\r\n                            class=\"p-3\"\r\n                            *ngFor=\"let item of element.multiPricing\"\r\n                          >\r\n                            <td>{{ item.startingUnit }}</td>\r\n                            <td>{{ item.endingUnit }}</td>\r\n                            <td>{{ item.price }}</td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </ng-template>\r\n                  </div>\r\n                </td>\r\n              </ng-container>\r\n\r\n              <ng-container matColumnDef=\"action\">\r\n                <th\r\n                  mat-header-cell\r\n                  *matHeaderCellDef\r\n                  class=\"mat-subtitle-2 text-headline-dark action-header\"\r\n                >\r\n                  Action\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let element; let i = index\">\r\n                  <div class=\"flex justify-end\">\r\n                    <button\r\n                      class=\"flex edit-btn mat-caption mr-1\"\r\n                      mat-button\r\n                      color=\"primary\"\r\n                      [routerLink]=\"['/plans/create/set-price/'] + planId\"\r\n                    >\r\n                      <mat-icon\r\n                        class=\"material-symbols-outlined mr-1\"\r\n                        color=\"primary\"\r\n                        >edit</mat-icon\r\n                      >Edit\r\n                    </button>\r\n                    <button\r\n                      mat-icon-button\r\n                      color=\"warn\"\r\n                      class=\"light-bg small rounded-1\"\r\n                      (click)=\"removeType(i)\"\r\n                    >\r\n                      <mat-icon\r\n                        class=\"material-symbols-outlined mr-0\"\r\n                        color=\"warn\"\r\n                        >close</mat-icon\r\n                      >\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n              </ng-container>\r\n              <tr mat-header-row *matHeaderRowDef=\"priceColumn\"></tr>\r\n              <tr\r\n                mat-row\r\n                (click)=\"clickedRows.add(row)\"\r\n                [class.demo-row-is-clicked]=\"clickedRows.has(row)\"\r\n                *matRowDef=\"let row; columns: priceColumn\"\r\n              ></tr>\r\n            </table>\r\n          </div>\r\n          <button\r\n            mat-flat-button\r\n            color=\"primary\"\r\n            class=\"mt-11 large ml-auto\"\r\n            [routerLink]=\"['/plans/create/set-price/'] + planId\"\r\n          >\r\n            Add Pricing\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div\r\n      #step3\r\n      id=\"step3\"\r\n      class=\"plan-section-block flex-center border-2 p-11 mb-4\"\r\n    >\r\n      <div class=\"plan-info-block inner-wrapper\">\r\n        <div class=\"heading flex align-center\">\r\n          <img\r\n            src=\"../../../../../../assets/images/icons/basil_invoice-outline.svg\"\r\n            alt=\"icon\"\r\n          />\r\n          <h5 class=\"mat-headline-5 text-dark\">Product Details</h5>\r\n        </div>\r\n        <div class=\"empty-add-section mt-6 border-1\">\r\n          <div class=\"text-center\">\r\n            <p class=\"mat-body-1 text-dark-1\">\r\n              Please click the “Add” button below to add a new product. Once you\r\n              clicked the button, you will be prompted to enter the name of\r\n              product, description and additional details.\r\n            </p>\r\n            <button\r\n              mat-flat-button\r\n              color=\"primary\"\r\n              class=\"mt-11 large\"\r\n              [routerLink]=\"'/plans/create/product-variant'\"\r\n              [disabled]=\"!stepOneCompleted\"\r\n            >\r\n              Add product\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Product Details inner -->\r\n    <!-- <div\r\n      #step3\r\n      id=\"step3\"\r\n      class=\"plan-section-block flex-center border-2 p-11 mb-4\"\r\n      *ngIf=\"productDetails?.length > 0\"\r\n    >\r\n      <div class=\"plan-info-block inner-wrapper\">\r\n        <div class=\"heading flex align-center\">\r\n          <img\r\n            src=\"../../../../../../assets/images/icons/basil_invoice-outline.svg\"\r\n            alt=\"invoice-outline-icon\"\r\n          />\r\n          <h5 class=\"mat-headline-5 text-dark\">Product Details</h5>\r\n        </div>\r\n        <div\r\n          class=\"details-wrapper mt-6 p-3 border-2\"\r\n          *ngFor=\"let product of productDetails\"\r\n        >\r\n          <div class=\"details-inner flex justify-between\">\r\n            <div class=\"flex align-center\">\r\n              <div class=\"product-img p-2 mr-4\">\r\n                <img\r\n                  src=\"../.././../../assets/images/teams.png\"\r\n                  alt=\"product-img\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <h6 class=\"mat-subtitle-2 font-weight-500 text-dark mb-1\">\r\n                  {{ product.productID }}\r\n                </h6>\r\n                <span class=\"mat-body-1 font-weight-500 text-dark\"\r\n                  >{{ product.features.length }} Features included</span\r\n                >\r\n              </div>\r\n            </div>\r\n            <div class=\"flex align-center\">\r\n              <button\r\n                class=\"flex icon-text mat-caption mr-4\"\r\n                mat-button\r\n                color=\"primary\"\r\n                (click)=\"editProductVariant(product.productVariantId)\"\r\n              >\r\n                <mat-icon class=\"material-symbols-outlined mr-1\" color=\"primary\"\r\n                  >edit</mat-icon\r\n                >Edit\r\n              </button>\r\n              <button\r\n                mat-icon-button\r\n                color=\"warn\"\r\n                class=\"light-bg small rounded-1\"\r\n                (click)=\"onDelete(product.productVariantId)\"\r\n                [disabled]=\"!stepOneCompleted\"\r\n              >\r\n                <mat-icon class=\"material-symbols-outlined mr-0\" color=\"warn\"\r\n                  >close</mat-icon\r\n                >\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div class=\"flex-center gap-2 wrap mt-3\">\r\n            <mat-chip\r\n              class=\"primary-light-chip mr-2\"\r\n              *ngFor=\"let feature of product.features\"\r\n              (click)=\"openPopup(feature)\"\r\n              ><span class=\"mat-body-1 text-grey-darken-7\"\r\n                >{{ feature.featureId }} {{ feature.value }}</span\r\n              >\r\n            </mat-chip>\r\n          </div>\r\n        </div>\r\n        <div class=\"mt-12 text-right\">\r\n          <button\r\n            mat-flat-button\r\n            color=\"primary\"\r\n            class=\"large\"\r\n            [routerLink]=\"'/plans/create/product-variant'\"\r\n            [disabled]=\"!stepOneCompleted\"\r\n          >\r\n            Add Product\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div> -->\r\n\r\n    <!-- add-on view section  -->\r\n    <div\r\n      #step4\r\n      id=\"step4\"\r\n      class=\"plan-section-block flex-center border-2 p-11 mb-4\"\r\n    >\r\n      <div class=\"plan-info-block inner-wrapper\">\r\n        <div class=\"heading flex align-center\">\r\n          <img\r\n            src=\"../../../../../../assets/images/icons/basil_invoice-outline.svg\"\r\n            alt=\"add-on-icon\"\r\n          />\r\n          <h5 class=\"mat-headline-5 text-dark\">Add-ons Details</h5>\r\n        </div>\r\n        <div class=\"details-wrapper add-on-view-wrapper mt-6 p-3 border-2\">\r\n          <div class=\"details-inner flex justify-between\">\r\n            <div class=\"flex align-center\">\r\n              <div class=\"product-img p-2 mr-4\">\r\n                <img\r\n                  src=\"../.././../../assets/images/teams.png\"\r\n                  alt=\"product-img\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <h6 class=\"mat-subtitle-2 font-weight-500 text-dark mb-1\">\r\n                  MS Team\r\n                </h6>\r\n                <span class=\"mat-body-1 font-weight-500 text-dark\"\r\n                  >3 Features included</span\r\n                >\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"content-wrapper\">\r\n            <div class=\"mt-3\">\r\n              <mat-chip class=\"primary-light-chip mr-2\"\r\n                ><span class=\"mat-body-1 text-grey-darken-7\"\r\n                  >Whiteboard (ON)</span\r\n                >\r\n              </mat-chip>\r\n              <mat-chip class=\"primary-light-chip mr-2\"\r\n                ><span class=\"mat-body-1 text-grey-darken-7\"\r\n                  >Email support (All Week)</span\r\n                >\r\n              </mat-chip>\r\n              <mat-chip class=\"primary-light-chip\"\r\n                ><span class=\"mat-body-1 text-grey-darken-7\"\r\n                  >User License (10 License)</span\r\n                >\r\n              </mat-chip>\r\n            </div>\r\n            <div class=\"flex mt-12\">\r\n              <div class=\"add-on-details-wrapper px-2 py-3\">\r\n                <div class=\"add-on-detail\">\r\n                  <div class=\"heading-content text-headine-light pl-3\">\r\n                    <span\r\n                      class=\"title font-weight-700 text-headline-light mat-subtitle-1\"\r\n                      >Teamwork and communication</span\r\n                    >\r\n                    <p class=\"subtile mat-body-1 text-headline-light mt-2\">\r\n                      It is a long established fact that a reader will be\r\n                      distracted.\r\n                    </p>\r\n                  </div>\r\n                  <div class=\"flex-center mt-3 flex-wrap chip-wrapper\">\r\n                    <mat-chip class=\"primary-light-chip pointer white-bg mr-2\"\r\n                      ><span class=\"mat-body-1 text-grey-darken-7\"\r\n                        >Host online calls (1-50)</span\r\n                      >\r\n                    </mat-chip>\r\n                    <mat-chip class=\"primary-light-chip pointer white-bg mr-2\"\r\n                      ><span class=\"mat-body-1 text-grey-darken-7\"\r\n                        >Host webinars (50-100)</span\r\n                      >\r\n                    </mat-chip>\r\n                    <mat-chip class=\"primary-light-chip pointer white-bg\"\r\n                      ><span class=\"mat-body-1 text-grey-darken-7\"\r\n                        >Create team sites (ON)</span\r\n                      >\r\n                    </mat-chip>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <button\r\n                mat-icon-button\r\n                color=\"warn\"\r\n                class=\"light-bg small rounded-1 ml-2\"\r\n                [disabled]=\"!stepOneCompleted\"\r\n              >\r\n                <mat-icon class=\"material-symbols-outlined mr-0\" color=\"warn\"\r\n                  >close</mat-icon\r\n                >\r\n              </button>\r\n            </div>\r\n\r\n            <div class=\"info-form\">\r\n              <div class=\"flag-wrapper flex align-center pt-8 pb-2\">\r\n                <img\r\n                  src=\"../../../../../../assets/images/flags.png\"\r\n                  alt=\"flags\"\r\n                  class=\"mr-3\"\r\n                />\r\n                <span class=\"mat-subtitle-2 text-headline-dark\">USD</span>\r\n              </div>\r\n              <div class=\"table-wrapper mt-3\">\r\n                <table mat-table [dataSource]=\"dataSource\" class=\"\">\r\n                  <!-- PricingCycle Column -->\r\n                  <ng-container matColumnDef=\"PricingCycle\">\r\n                    <th\r\n                      mat-header-cell\r\n                      *matHeaderCellDef\r\n                      class=\"mat-subtitle-2 text-headline-dark\"\r\n                    >\r\n                      Pricing Cycle\r\n                    </th>\r\n                    <td\r\n                      mat-cell\r\n                      *matCellDef=\"let element\"\r\n                      class=\"mat-subtitle-2 text-headline-light\"\r\n                    >\r\n                      {{ element.PricingCycle }}\r\n                    </td>\r\n                  </ng-container>\r\n\r\n                  <!-- Price Column -->\r\n                  <ng-container matColumnDef=\"Price\">\r\n                    <th\r\n                      mat-header-cell\r\n                      *matHeaderCellDef\r\n                      class=\"mat-subtitle-2 text-headline-dark\"\r\n                    >\r\n                      Price\r\n                    </th>\r\n                    <td\r\n                      mat-cell\r\n                      *matCellDef=\"let element\"\r\n                      class=\"mat-subtitle-2 text-headline-light price-cell\"\r\n                    >\r\n                      <div class=\"flex align-center\">\r\n                        {{ element.Price\r\n                        }}<mat-icon\r\n                          class=\"material-symbols-outlined ml-2\"\r\n                          color=\"primary\"\r\n                          >arrow_right_alt</mat-icon\r\n                        >\r\n                      </div>\r\n                    </td>\r\n                  </ng-container>\r\n\r\n                  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                  <tr\r\n                    mat-row\r\n                    (click)=\"clickedRows.add(row)\"\r\n                    [class.demo-row-is-clicked]=\"clickedRows.has(row)\"\r\n                    *matRowDef=\"let row; columns: displayedColumns\"\r\n                  ></tr>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- add-on view section  -->\r\n\r\n    <!-- Charges -->\r\n    <div\r\n      #step5\r\n      id=\"step5\"\r\n      class=\"plan-section-block flex-center border-2 p-11 mb-4 bottom-margin\"\r\n    >\r\n      <div class=\"plan-info-block inner-wrapper\">\r\n        <div class=\"heading flex align-center\">\r\n          <img\r\n            src=\"../../../../../assets/images/icons/money.svg\"\r\n            alt=\"money-icon\"\r\n          />\r\n          <h5 class=\"mat-headline-5 text-dark\">Charges</h5>\r\n        </div>\r\n        <div class=\"input-wrapper mt-8\">\r\n          <div class=\"mt-6\">\r\n            <div class=\"flex align-center mb-2\">\r\n              <p class=\"mat-subtitle-2 font-weight-500 input-label\">Charges</p>\r\n              <mat-icon\r\n                class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n                [ngxTippy]=\"chargesInfo\"\r\n                [tippyProps]=\"{ placement: 'right' }\"\r\n                >help</mat-icon\r\n              >\r\n              <ng-template #chargesInfo let-name>\r\n                <div class=\"help-info-tooltip\">\r\n                  <div class=\"heading-with-background\">Charges</div>\r\n                  <div class=\"details\">\r\n                    You can create and select charges to include it in the plan\r\n                  </div>\r\n                  <button mat-button color=\"primary\" class=\"px-0\">\r\n                    Learn more\r\n                  </button>\r\n                </div>\r\n              </ng-template>\r\n            </div>\r\n            <mat-form-field\r\n              appearance=\"outline\"\r\n              class=\"border-2 with-footer-btn\"\r\n            >\r\n              <!-- <mat-label> Select </mat-label> -->\r\n              <mat-select required placeholder=\"select\" multiple>\r\n                <mat-option value=\"Setup Fee\"> Setup Fee </mat-option>\r\n                <mat-option value=\"Activation Fee\"> Activation Fee </mat-option>\r\n                <mat-option value=\"Implementation Charges\">\r\n                  Implementation Charges\r\n                </mat-option>\r\n                <button\r\n                  mat-button\r\n                  color=\"primary\"\r\n                  class=\"px-0 w-full add-new-btn-list pl-4 mat-body-1 large\"\r\n                >\r\n                  <mat-icon class=\"material-symbols-outlined\" color=\"primary\"\r\n                    >add_circle</mat-icon\r\n                  >Add New Charge\r\n                </button>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n        <!-- setup fee inputs -->\r\n        <div class=\"fee-input-wrapper\">\r\n          <div class=\"fee-input flex align-center justify-between\">\r\n            <span class=\"mat-subtitle-2\">Setup fee</span>\r\n            <div class=\"flex align-start\">\r\n              <mat-form-field appearance=\"outline\" class=\"mb-0\">\r\n                <input matInput placeholder=\"Enter here...\" />\r\n              </mat-form-field>\r\n              <button\r\n                mat-icon-button\r\n                color=\"warn\"\r\n                class=\"close-icon-btn light-bg rounded ml-2 mt-1\"\r\n                [disabled]=\"!stepOneCompleted\"\r\n              >\r\n                <mat-icon class=\"material-symbols-outlined mr-0\" color=\"warn\"\r\n                  >close</mat-icon\r\n                >\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div class=\"fee-input flex align-center justify-between\">\r\n            <span class=\"mat-subtitle-2\">Activation fee</span>\r\n            <div class=\"flex align-start\">\r\n              <mat-form-field appearance=\"outline\" class=\"mb-0\">\r\n                <input matInput placeholder=\"Enter here...\" />\r\n              </mat-form-field>\r\n              <button\r\n                mat-icon-button\r\n                color=\"warn\"\r\n                class=\"close-icon-btn light-bg rounded ml-2 mt-1\"\r\n                [disabled]=\"!stepOneCompleted\"\r\n              >\r\n                <mat-icon class=\"material-symbols-outlined mr-0\" color=\"warn\"\r\n                  >close</mat-icon\r\n                >\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- setup fee inputs -->\r\n        <div class=\"action-btns flex align-center justify-end\">\r\n          <div>\r\n            <button\r\n              mat-stroked-button\r\n              color=\"primary\"\r\n              class=\"mr-2 large\"\r\n              [disabled]=\"!stepOneCompleted\"\r\n            >\r\n              Dismiss\r\n            </button>\r\n            <button\r\n              mat-flat-button\r\n              color=\"primary\"\r\n              class=\"large\"\r\n              type=\"submit\"\r\n              [disabled]=\"!stepOneCompleted\"\r\n            >\r\n              Save\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "CreateProductComponent",
            "id": "component-CreateProductComponent-93fe2209b67e830c82a2b8127200f5cc20013f4f3937f56e88667cd51e75d449872d2663f85c5dc9e2ccae71f4676086662763397b50e81140b67b3137ea1944",
            "file": "src/app/modules/products/components/create-product/create-product.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-create-product",
            "styleUrls": [
                "./create-product.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./create-product.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "imageName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "imagePath",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "imageUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "productForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "tippyContent",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgxTippyProps",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "tippyTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'tippyTemplate', {read: ElementRef, static: true}"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "uploadMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "uploadSuccess",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 47
                }
            ],
            "methodsClass": [
                {
                    "name": "isChecked",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 154,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDelete",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openDialog",
                    "args": [
                        {
                            "name": "enterAnimationDuration",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "exitAnimationDuration",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 119,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "enterAnimationDuration",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "exitAnimationDuration",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openSuccess",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "startMessageTimer",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleStatus",
                    "args": [
                        {
                            "name": "checked",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "checked",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Output,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { NgxTippyProps } from 'ngx-tippy-wrapper';\r\nimport { trigger, transition, animate, style } from '@angular/animations';\r\nimport { SuccessDialogComponent } from 'src/app/shared/components/dialog-box/success-dialog/success-dialog.component';\r\nimport { OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ProductsService } from '../../services/products.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-create-product',\r\n  templateUrl: './create-product.component.html',\r\n  styleUrls: ['./create-product.component.scss'],\r\n  animations: [\r\n    trigger('slideInOut', [\r\n      transition(':enter', [\r\n        style({ transform: 'translateY(-100%)' }),\r\n        animate('200ms ease-in', style({ transform: 'translateY(0%)' })),\r\n      ]),\r\n      transition(':leave', [\r\n        animate('200ms ease-in', style({ transform: 'translateY(-100%)' })),\r\n      ]),\r\n    ]),\r\n  ],\r\n})\r\nexport class CreateProductComponent implements OnInit {\r\n  subscription: Subscription;\r\n  @ViewChild('tippyTemplate', { read: ElementRef, static: true })\r\n  tippyTemplate: ElementRef;\r\n  tippyContent: NgxTippyProps = {};\r\n  productForm: FormGroup;\r\n  imageUrl: string = '';\r\n  imageName: string = '';\r\n  data: string = '';\r\n  imagePath: string = '';\r\n  uploadMessage: string = '';\r\n  uploadSuccess: boolean = false;\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private productService: ProductsService,\r\n    private snackBar: MatSnackBar\r\n  ) {}\r\n  ngOnInit() {\r\n    this.productForm = this.formBuilder.group({\r\n      productId: ['', Validators.required],\r\n      name: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(20),\r\n          Validators.pattern(/^[a-zA-Z0-9\\s]*$/),\r\n        ],\r\n      ],\r\n      description: ['', Validators.maxLength(500)],\r\n      status: [true],\r\n      imageUrl: [],\r\n    });\r\n\r\n    this.productForm.controls['name'].valueChanges.subscribe((value) => {\r\n      const idValue = value?.replace(/[^\\w\\s]/gi, '').replace(/\\s+/g, '-');\r\n      this.productForm.controls['productId'].setValue(idValue);\r\n    });\r\n  }\r\n  isChecked(): boolean {\r\n    const status = this.productForm.get('status')?.value;\r\n    return status === 'active';\r\n  }\r\n\r\n  toggleStatus(checked: boolean): void {\r\n    const newStatus = checked ? 'active' : 'draft';\r\n    this.productForm.get('status')?.setValue(newStatus);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.productForm.get('imageUrl')?.setValue(this.imageUrl);\r\n    const status = this.productForm.value.status ? 'active' : 'draft';\r\n    const product = {\r\n      ...this.productForm.value,\r\n      status: status,\r\n    };\r\n    this.subscription = this.productService.createProduct(product).subscribe({\r\n      next: (res) => {\r\n        this.openSuccess();\r\n        this.router.navigate([`/products/view-product/${res.productId}`]);\r\n      },\r\n      error: (error: any) => {\r\n        this.snackBar.open(error.error.message, '', {\r\n          duration: 5000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        })\r\n      },\r\n    });\r\n  }\r\n  onDelete() {\r\n    this.router.navigate(['/products']);\r\n  }\r\n\r\n  startMessageTimer(): void {\r\n    const duration = 5000;\r\n    setTimeout(() => {\r\n      this.uploadSuccess = false;\r\n      this.uploadMessage = '';\r\n    }, duration);\r\n  }\r\n\r\n  openDialog(\r\n    enterAnimationDuration: string,\r\n    exitAnimationDuration: string\r\n  ): void {\r\n    const dialogRef = this.dialog.open(DialogAnimationsDialog, {\r\n      width: '',\r\n      enterAnimationDuration,\r\n      exitAnimationDuration,\r\n    });\r\n    dialogRef.componentInstance.saveSuccess.subscribe(\r\n      (data: { imageUrl: string; imageName: string }) => {\r\n        this.imageUrl = data.imageUrl;\r\n        this.imageName = data.imageName;\r\n        this.imagePath = environment.blobStorage;\r\n        this.uploadSuccess = true;\r\n        this.uploadMessage = 'Image upload successful';\r\n        this.startMessageTimer();\r\n      }\r\n    );\r\n    dialogRef.componentInstance.saveError.subscribe((res: any) => {\r\n      this.uploadSuccess = false;\r\n      this.uploadMessage = 'Image upload failed. Please try again.';\r\n      this.startMessageTimer();\r\n    });\r\n  }\r\n\r\n  openSuccess() {\r\n    this.dialog.open(SuccessDialogComponent, {\r\n      width: '420px',\r\n      data: {\r\n        module: 'Product',\r\n        operation: 'is created',\r\n      },\r\n    });\r\n  }\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'dialog-animations-dialog',\r\n  templateUrl:\r\n    '../../../../shared/components/dialog-box/dialog-animations-dialog.html',\r\n  styleUrls: [\r\n    '../../../../shared/components/dialog-box/dialog-animations.scss',\r\n  ],\r\n  animations: [\r\n    trigger('slideInOut', [\r\n      transition(':enter', [\r\n        style({ transform: 'translateX(-100%)' }),\r\n        animate('300ms ease-in', style({ transform: 'translateX(0%)' })),\r\n      ]),\r\n      transition(':leave', [\r\n        animate('300ms ease-in', style({ transform: 'translateX(-100%)' })),\r\n      ]),\r\n    ]),\r\n  ],\r\n})\r\nexport class DialogAnimationsDialog {\r\n  subscription: Subscription;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogAnimationsDialog>,\r\n    private productService: ProductsService\r\n  ) {}\r\n  activeColor: string = 'green';\r\n  baseColor: string = '#ccc';\r\n  overlayColor: string = 'rgba(255,255,255,0.5)';\r\n  iconColor: string;\r\n  dragging: boolean = false;\r\n  loaded: boolean = false;\r\n  imageLoaded: boolean = false;\r\n  imageSrc: string = '';\r\n  base64imageData: string = '';\r\n  imageName: string = '';\r\n  imageUrl: string = '';\r\n\r\n  handleDragEnter() {\r\n    this.dragging = true;\r\n  }\r\n\r\n  handleDragLeave() {\r\n    this.dragging = false;\r\n  }\r\n\r\n  handleDrop(e: any) {\r\n    e.preventDefault();\r\n    this.dragging = false;\r\n    this.handleFileInput(e);\r\n  }\r\n\r\n  handleImageLoad() {\r\n    this.imageLoaded = true;\r\n    this.iconColor = this.overlayColor;\r\n  }\r\n\r\n  handleFileInput(e: any) {\r\n    var file = e.dataTransfer ? e.dataTransfer.files[0] : e.target.files[0];\r\n    var pattern = /image-*/;\r\n    var reader = new FileReader();\r\n    if (!file.type.match(pattern)) {\r\n      alert('invalid format');\r\n      return;\r\n    }\r\n    this.loaded = false;\r\n    this.imageName = file.name;\r\n    reader.onload = this._handleReaderLoaded.bind(this);\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  _handleReaderLoaded(e: any) {\r\n    var reader = e.target;\r\n    this.imageSrc = reader.result;\r\n    const dataURLParts = this.imageSrc?.split(';base64,');\r\n    this.base64imageData = dataURLParts[1];\r\n    this.loaded = true;\r\n  }\r\n  @Output() saveSuccess: EventEmitter<{ imageUrl: string; imageName: string }> =\r\n    new EventEmitter<{ imageUrl: string; imageName: string }>();\r\n  @Output() saveError: EventEmitter<any> = new EventEmitter<any>();\r\n  handleSave() {\r\n    if (this.base64imageData) {\r\n      const payload = {\r\n        image: this.base64imageData,\r\n        imageName: this.imageName,\r\n      };\r\n      this.subscription = this.productService.uploadImage(payload).subscribe({\r\n        next: (res) => {\r\n          this.imageUrl = res.data.blobURL;\r\n        },\r\n        error: (error: any) => {\r\n          this.saveError.emit(error);\r\n        },\r\n        complete: () => {\r\n          this.saveSuccess.emit({\r\n            imageUrl: this.imageUrl,\r\n            imageName: this.imageName,\r\n          });\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n.upload-message {\r\n  font-weight: bold;\r\n}\r\n\r\n.upload-message.success {\r\n  color: green;\r\n}\r\n\r\n.upload-message.error {\r\n  color: red;\r\n}\r\n",
                    "styleUrl": "./create-product.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 47,
                "jsdoctags": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"create-product-wrapper\">\r\n  <div class=\"header-section pt-6 pb-6\">\r\n    <div class=\"flex align-center\">\r\n      <mat-icon\r\n        class=\"material-symbols-outlined pointer\"\r\n        color=\"primary\"\r\n        [routerLink]=\"'/products'\"\r\n        >keyboard_backspace</mat-icon\r\n      >\r\n      <p class=\"mat-h1 primary-text text-main\">Create Product</p>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-block pt-6\">\r\n    <div class=\"form-block pt-6\">\r\n      <div\r\n        *ngIf=\"uploadMessage\"\r\n        class=\"upload-message\"\r\n        [ngClass]=\"{ success: uploadSuccess, error: !uploadSuccess }\"\r\n      >\r\n        {{ uploadMessage }}\r\n      </div>\r\n      <div class=\"user-img-wrapper flex align-center\">\r\n        <div class=\"user-avatar flex align-center justify-center\">\r\n          <ng-container *ngIf=\"imageUrl\">\r\n            <img src=\"{{ imagePath + imageUrl }}\" alt=\"{{ imageName }}\" />\r\n          </ng-container>\r\n          <ng-container *ngIf=\"!imageUrl\">\r\n            <p class=\"mat-body-1 mb-0\">LOGO</p>\r\n          </ng-container>\r\n        </div>\r\n        <div class=\"ml-6\">\r\n          <div class=\"upload-actions\">\r\n            <div class=\"flex align-center\">\r\n              <button mat-stroked-button color=\"primary\" class=\"mr-3\">\r\n                Remove\r\n              </button>\r\n              <button\r\n                mat-flat-button\r\n                color=\"primary\"\r\n                (click)=\"openDialog('0ms', '0ms')\"\r\n              >\r\n                Upload\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <p class=\"mat-caption text-light font-weight-500 mt-3\">\r\n            Allowed JPG, GIF or PNG. Max size of 800K\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"input-wrapper mt-8\">\r\n      <form [formGroup]=\"productForm\">\r\n        <div>\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Product Name\r\n            </p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"productnameinfo\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              tippyName=\"content\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #productnameinfo let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Product name</div>\r\n                <div class=\"details\">\r\n                  Enter a name that helps you identify this Product\r\n                </div>\r\n                <button mat-button color=\"primary\" class=\"px-0\">\r\n                  Learn more\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <input\r\n              matInput\r\n              placeholder=\"Enter here...\"\r\n              formControlName=\"name\"\r\n            />\r\n            <mat-error\r\n              *ngIf=\"\r\n                productForm.controls['name'].invalid &&\r\n                productForm.controls['name'].touched\r\n              \"\r\n            >\r\n              <ng-container\r\n                *ngIf=\"productForm.controls['name'].errors['required']\"\r\n              >\r\n                Name is required and cannot be left empty.\r\n              </ng-container>\r\n              <ng-container\r\n                *ngIf=\"productForm.controls['name'].errors['maxlength']\"\r\n              >\r\n                Name cannot exceed 20 characters.\r\n              </ng-container>\r\n              <ng-container\r\n                *ngIf=\"productForm.controls['name'].errors['pattern']\"\r\n              >\r\n                Name cannot contain special characters.\r\n              </ng-container>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Description\r\n            </p>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <textarea\r\n              matInput\r\n              placeholder=\"Enter here...\"\r\n              formControlName=\"description\"\r\n            ></textarea>\r\n            <mat-error\r\n              *ngIf=\"\r\n                productForm.controls['description'].invalid &&\r\n                productForm.controls['description'].touched\r\n              \"\r\n            >\r\n              <ng-container\r\n                *ngIf=\"productForm.controls['description'].errors['maxlength']\"\r\n              >\r\n                Description cannot exceed 500 characters.\r\n              </ng-container>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">Product ID</p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"helpinfotooltip\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #helpinfotooltip let-name>\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Description</div>\r\n                <div class=\"details\">\r\n                  Enter a id that helps you identify this Product\r\n                </div>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <input\r\n              matInput\r\n              placeholder=\"Enter here...\"\r\n              formControlName=\"productId\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"action-btns flex align-center justify-between\">\r\n          <mat-checkbox\r\n            color=\"primary\"\r\n            class=\"font-weight-500 checkbox ml-n-3\"\r\n            formControlName=\"status\"\r\n            >Active</mat-checkbox\r\n          >\r\n          <div>\r\n            <button\r\n              mat-stroked-button\r\n              color=\"primary\"\r\n              class=\"mr-2 large\"\r\n              [mat-dialog-close]=\"true\"\r\n              (click)=\"onDelete()\"\r\n            >\r\n              Dismiss\r\n            </button>\r\n            <button\r\n              mat-flat-button\r\n              color=\"primary\"\r\n              class=\"large\"\r\n              type=\"submit\"\r\n              [disabled]=\"productForm.invalid\"\r\n              (click)=\"onSubmit()\"\r\n            >\r\n              Create\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <!-- </div> -->\r\n</div>\r\n"
        },
        {
            "name": "CustomDateHeaderComponent",
            "id": "component-CustomDateHeaderComponent-bc476eda0655851d8a31538a2fa435d55d192ccae64670506d24dfd381196ebaa649c5c000be3e6ff9d3592cbb9ee12435d5344c81944a72350ca49e6a972c97",
            "file": "src/app/shared/components/custom-date-header/custom-date-header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-custom-date-header",
            "styleUrls": [
                "./custom-date-header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./custom-date-header.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_destroyed",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "nextClicked",
                    "args": [
                        {
                            "name": "mode",
                            "type": "\"month\" | \"year\"",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "mode",
                            "type": "\"month\" | \"year\"",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "previousClicked",
                    "args": [
                        {
                            "name": "mode",
                            "type": "\"month\" | \"year\"",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "mode",
                            "type": "\"month\" | \"year\"",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { ChangeDetectorRef, Inject } from '@angular/core';\r\nimport { MatCalendar } from '@angular/material/datepicker';\r\nimport {\r\n  DateAdapter,\r\n  MAT_DATE_FORMATS,\r\n  MatDateFormats,\r\n} from '@angular/material/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n@Component({\r\n  selector: 'app-custom-date-header',\r\n  templateUrl: './custom-date-header.component.html',\r\n  styleUrls: ['./custom-date-header.component.scss'],\r\n})\r\nexport class CustomDateHeaderComponent<D> {\r\n  private _destroyed = new Subject<void>();\r\n\r\n  constructor(\r\n    private _calendar: MatCalendar<D>,\r\n    private _dateAdapter: DateAdapter<D>,\r\n    @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\r\n    cdr: ChangeDetectorRef\r\n  ) {\r\n    _calendar.stateChanges\r\n      .pipe(takeUntil(this._destroyed))\r\n      .subscribe(() => cdr.markForCheck());\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._destroyed.next();\r\n    this._destroyed.complete();\r\n  }\r\n\r\n  get periodLabel() {\r\n    return this._dateAdapter\r\n      .format(\r\n        this._calendar.activeDate,\r\n        this._dateFormats.display.monthYearLabel\r\n      )\r\n      .toLocaleUpperCase();\r\n  }\r\n\r\n  previousClicked(mode: 'month' | 'year') {\r\n    this._calendar.activeDate =\r\n      mode === 'month'\r\n        ? this._dateAdapter.addCalendarMonths(this._calendar.activeDate, -1)\r\n        : this._dateAdapter.addCalendarYears(this._calendar.activeDate, -1);\r\n  }\r\n\r\n  nextClicked(mode: 'month' | 'year') {\r\n    this._calendar.activeDate =\r\n      mode === 'month'\r\n        ? this._dateAdapter.addCalendarMonths(this._calendar.activeDate, 1)\r\n        : this._dateAdapter.addCalendarYears(this._calendar.activeDate, 1);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./custom-date-header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_calendar",
                        "type": "MatCalendar<D>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_dateAdapter",
                        "type": "DateAdapter<D>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_dateFormats",
                        "type": "MatDateFormats",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "_calendar",
                        "type": "MatCalendar<D>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_dateAdapter",
                        "type": "DateAdapter<D>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_dateFormats",
                        "type": "MatDateFormats",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "periodLabel": {
                    "name": "periodLabel",
                    "getSignature": {
                        "name": "periodLabel",
                        "type": "",
                        "returnType": "",
                        "line": 35
                    }
                }
            },
            "templateData": "<div class=\"pt-8 pl-8 pr-8 pb-0\">\r\n  <div class=\"flex align-center justify-between\">\r\n    <div class=\"flex align-center pointer\" (click)=\"previousClicked('month')\">\r\n      <img\r\n        src=\"../../../../assets/images/icons/prev-circle-primary.svg\"\r\n        alt=\"prev icon\"\r\n      />\r\n    </div>\r\n    <div class=\"primary-text text-main\">{{periodLabel}}</div>\r\n    <div class=\"flex align-center pointer\" (click)=\"nextClicked('month')\">\r\n      <img\r\n        src=\"../../../../assets/images/icons/next-circle-primary.svg\"\r\n        alt=\"prev icon\"\r\n      />\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "CustomerListingComponent",
            "id": "component-CustomerListingComponent-de041a1f04d57921527e1110a5f2e50e4e0e09f20ab5f0d7db31ad07720228fb65a1f1daeb421a765604eae9fb4938b93fa1175d6e17ab690341da860e66f152",
            "file": "src/app/modules/dashboard/customer/components/customer-listing/customer-listing.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-customer-listing",
            "styleUrls": [
                "./customer-listing.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./customer-listing.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "customers",
                    "defaultValue": "CustomerList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Customer[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "[\r\n    'select',\r\n    'id',\r\n    'name',\r\n    'companyName',\r\n    'email',\r\n    'workPhone',\r\n    'website',\r\n    'subscription',\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "emptyList",
                    "defaultValue": "noCustomers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "selection",
                    "defaultValue": "new SelectionModel<Customer>(true, [])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "announceSortChange",
                    "args": [
                        {
                            "name": "sortState",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "sortState",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isAllSelected",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhether the number of selected elements matches the total number of rows.",
                    "description": "<p>Whether the number of selected elements matches the total number of rows.</p>\n"
                },
                {
                    "name": "selectAll",
                    "args": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectedRow",
                    "args": [
                        {
                            "name": "selectedID",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "selectedID",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleAllRows",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSelects all rows if they are not all selected; otherwise clear selection.",
                    "description": "<p>Selects all rows if they are not all selected; otherwise clear selection.</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport {\r\n  Customer,\r\n  CustomerList,\r\n  noCustomers,\r\n} from 'src/app/shared/constants/consants';\r\n\r\n@Component({\r\n  selector: 'app-customer-listing',\r\n  templateUrl: './customer-listing.component.html',\r\n  styleUrls: ['./customer-listing.component.scss'],\r\n})\r\nexport class CustomerListingComponent {\r\n  customers: Customer[] = CustomerList;\r\n  emptyList = noCustomers;\r\n  displayedColumns: string[] = [\r\n    'select',\r\n    'id',\r\n    'name',\r\n    'companyName',\r\n    'email',\r\n    'workPhone',\r\n    'website',\r\n    'subscription',\r\n  ];\r\n  selection = new SelectionModel<Customer>(true, []);\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(private _liveAnnouncer: LiveAnnouncer) {}\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.customers.length;\r\n    return numSelected === numRows;\r\n  }\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  toggleAllRows() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n    this.selection.select(...this.customers);\r\n  }\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n\r\n  selectedRow(selectedID: string, event: any) {\r\n    const selectedRow = document.getElementById(`${selectedID}`);\r\n    if (selectedRow != null) {\r\n      selectedRow.classList.toggle('selected-row');\r\n    }\r\n    event.stopPropagation();\r\n  }\r\n\r\n  selectAll(data: any[]) {\r\n    if (this.isAllSelected()) {\r\n      data.map((element: any) => {\r\n        document.getElementById(element.id)?.classList.add('selected-row');\r\n      });\r\n    } else {\r\n      data.map((element: any) => {\r\n        document.getElementById(element.id)?.classList.remove('selected-row');\r\n      });\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./customer-listing.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_liveAnnouncer",
                        "type": "LiveAnnouncer",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "_liveAnnouncer",
                        "type": "LiveAnnouncer",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div\r\n  *ngIf=\"customers.length == 0\"\r\n  class=\"relative main-bg border-2 w-full h-full p-7 overflow-scroll\"\r\n>\r\n  <app-empty-listing [items]=\"emptyList\"></app-empty-listing>\r\n</div>\r\n<div\r\n  class=\"relative main-bg border-2 w-full h-full py-6 pl-5 pr-6 overflow-scroll\"\r\n  *ngIf=\"customers.length > 0\"\r\n>\r\n  <div class=\"flex justify-between align-center px-1\">\r\n    <div class=\"flex align-center\">\r\n      <h1 class=\"text-text text-dark\">Customers</h1>\r\n    </div>\r\n    <div class=\"flex align-center\">\r\n      <div class=\"global-search light mr-2 border-1\">\r\n        <span class=\"search-icon pointer\">\r\n          <img\r\n            src=\"../../../../assets/images/icons/search.svg\"\r\n            alt=\"search-icon\"\r\n          />\r\n        </span>\r\n        <input type=\"text\" placeholder=\"Search anything...\" />\r\n        <!-- <div class=\"loader\" *ngIf=\"loading\">\r\n          <mat-spinner></mat-spinner>\r\n        </div> -->\r\n      </div>\r\n      <button mat-flat-button color=\"primary\" class=\"create-btn\">\r\n        <img\r\n          src=\"../../../../../../assets/images/icons/file-download.svg\"\r\n          alt=\"download\"\r\n        />\r\n        <span class=\"text-nowrap block ml-2 letter-spacing-0\">Export Data</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"primary-table overflow-visible mt-8 px-1 pb-2\">\r\n    <table\r\n      mat-table\r\n      [dataSource]=\"customers\"\r\n      matSort\r\n      (matSortChange)=\"announceSortChange($event)\"\r\n    >\r\n      <!--- Note that these columns can be defined in any order.\r\n              The actual rendered columns are set as a property on the row definition\" -->\r\n      <ng-container matColumnDef=\"select\">\r\n        <th mat-header-cell *matHeaderCellDef>\r\n          <mat-checkbox\r\n            color=\"primary\"\r\n            (click)=\"selectAll(customers)\"\r\n            (change)=\"$event ? toggleAllRows() : null\"\r\n            [checked]=\"selection.hasValue() && isAllSelected()\"\r\n            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n          >\r\n          </mat-checkbox>\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let row\">\r\n          <mat-checkbox\r\n            color=\"primary\"\r\n            (click)=\"selectedRow(row.id, $event)\"\r\n            (change)=\"$event ? selection.toggle(row) : null\"\r\n            [checked]=\"selection.isSelected(row)\"\r\n          >\r\n          </mat-checkbox>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- ID Column -->\r\n      <ng-container matColumnDef=\"id\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>#ID</th>\r\n        <td mat-cell *matCellDef=\"let element\" [routerLink]=\"'/customers/view'\">{{ element.id }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Product Name Column -->\r\n      <ng-container matColumnDef=\"name\">\r\n        <th\r\n          mat-header-cell\r\n          *matHeaderCellDef\r\n          mat-sort-header\r\n          sortActionDescription=\"Sort by title\"\r\n        >\r\n          Name\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let element\" [routerLink]=\"'/customers/view'\">{{ element.name }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Description Column -->\r\n      <ng-container matColumnDef=\"companyName\">\r\n        <th mat-header-cell *matHeaderCellDef>Company Name</th>\r\n        <td mat-cell *matCellDef=\"let element\" [routerLink]=\"'/customers/view'\">\r\n          {{ element.companyName }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Created Date Column -->\r\n      <ng-container matColumnDef=\"email\">\r\n        <th mat-header-cell *matHeaderCellDef>\r\n          <p class=\"text-center\">Email</p>\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let element\" [routerLink]=\"'/customers/view'\">\r\n          <p class=\"text-center\">{{ element.email }}</p>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Created Date Column -->\r\n\r\n      <ng-container matColumnDef=\"workPhone\">\r\n        <th mat-header-cell *matHeaderCellDef>Work Phone</th>\r\n        <td mat-cell *matCellDef=\"let element\" [routerLink]=\"'/customers/view'\">\r\n          {{ element.workPhone }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Description Column -->\r\n      <ng-container matColumnDef=\"website\">\r\n        <th mat-header-cell *matHeaderCellDef>Website</th>\r\n        <td mat-cell *matCellDef=\"let element\" [routerLink]=\"'/customers/view'\">\r\n          {{ element.website }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Created Date Column -->\r\n      <ng-container matColumnDef=\"subscription\">\r\n        <th mat-header-cell *matHeaderCellDef>Subscription</th>\r\n        <td mat-cell *matCellDef=\"let element\" [routerLink]=\"'/customers/view'\">\r\n          {{ element.subscription }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr\r\n        mat-row\r\n        *matRowDef=\"let row; columns: displayedColumns\"\r\n        [id]=\"row.id\"\r\n      ></tr>\r\n    </table>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "CustomerViewComponent",
            "id": "component-CustomerViewComponent-c7391cbb9fc6d8227c02553bf671725313cad9d7272891764a902bc9193cedc99fbe0dd6b7de69a008227ea6843f9f0ec60d890c29b0aae5c1198900f8904277",
            "file": "src/app/modules/dashboard/customer/components/customer-view/customer-view.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-customer-view",
            "styleUrls": [
                "./customer-view.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./customer-view.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activityLogs",
                    "defaultValue": "[{\r\n    'timeStamp': 'Aug 7th, 2022 9:09am',\r\n    'events': 'Subscription has been created for the Plan Premium USD - Monthly.',\r\n    'customerInfo': 'Greenplus Enterprises',\r\n    'eventSource': 'Via Portal'\r\n  }]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "customers",
                    "defaultValue": "[{\r\n    'subscriptionInfo': 'Premium USD (Monthly)',\r\n    'id': 'SUB - 001',\r\n    'state': 'Active',\r\n    'createdOn': 'Jan 02, 2023',\r\n    'activatedOn': 'Jan 10, 2023',\r\n    'nextRenewal': 'Jan 10, 2023'\r\n  }]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "invoiceCols",
                    "defaultValue": "[\r\n    'id',\r\n    'occurOn',\r\n    'status',\r\n    'paymentMethod',\r\n    'amount'\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "invoices",
                    "defaultValue": "[{\r\n    'id': 'SO - 001',\r\n    'occurOn': 'Jan 09, 2023',\r\n    'status': 'Paid',\r\n    'paymentMethod': '2341',\r\n    'amount': '899.00'\r\n  }]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "logsCols",
                    "defaultValue": "[\r\n    'timeStamp',\r\n    'events',\r\n    'customerInfo',\r\n    'eventSource'\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "subscriptionCols",
                    "defaultValue": "[\r\n    'subscriptionInfo',\r\n    'id',\r\n    'state',\r\n    'createdOn',\r\n    'activatedOn',\r\n    'nextRenewal'\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "transactionCols",
                    "defaultValue": "[\r\n    'id',\r\n    'occurOn',\r\n    'status',\r\n    'type',\r\n    'paymentMethod',\r\n    'amount'\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "transactions",
                    "defaultValue": "[{\r\n    'id': 'SO - 001',\r\n    'occurOn': 'Jan 09, 2023',\r\n    'status': 'Success',\r\n    'type': 'Payment',\r\n    'paymentMethod': '2341',\r\n    'amount': '899.00'\r\n  }]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "openEdit",
                    "args": [
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { EditCustomerDetailsComponent } from 'src/app/shared/components/dialog-box/edit-customer-details/edit-customer-details.component';\r\n\r\n@Component({\r\n  selector: 'app-customer-view',\r\n  templateUrl: './customer-view.component.html',\r\n  styleUrls: ['./customer-view.component.scss'],\r\n})\r\nexport class CustomerViewComponent {\r\n  dialogRef: any;\r\n  customers: any[] = [{\r\n    'subscriptionInfo': 'Premium USD (Monthly)',\r\n    'id': 'SUB - 001',\r\n    'state': 'Active',\r\n    'createdOn': 'Jan 02, 2023',\r\n    'activatedOn': 'Jan 10, 2023',\r\n    'nextRenewal': 'Jan 10, 2023'\r\n  }];\r\n  transactions: any[] = [{\r\n    'id': 'SO - 001',\r\n    'occurOn': 'Jan 09, 2023',\r\n    'status': 'Success',\r\n    'type': 'Payment',\r\n    'paymentMethod': '2341',\r\n    'amount': '899.00'\r\n  }]\r\n  invoices: any[] = [{\r\n    'id': 'SO - 001',\r\n    'occurOn': 'Jan 09, 2023',\r\n    'status': 'Paid',\r\n    'paymentMethod': '2341',\r\n    'amount': '899.00'\r\n  }]\r\n  activityLogs: any[] = [{\r\n    'timeStamp': 'Aug 7th, 2022 9:09am',\r\n    'events': 'Subscription has been created for the Plan Premium USD - Monthly.',\r\n    'customerInfo': 'Greenplus Enterprises',\r\n    'eventSource': 'Via Portal'\r\n  }]\r\n  subscriptionCols: string[] = [\r\n    'subscriptionInfo',\r\n    'id',\r\n    'state',\r\n    'createdOn',\r\n    'activatedOn',\r\n    'nextRenewal'\r\n  ];\r\n  transactionCols: string[] = [\r\n    'id',\r\n    'occurOn',\r\n    'status',\r\n    'type',\r\n    'paymentMethod',\r\n    'amount'\r\n  ];\r\n  invoiceCols: string[] = [\r\n    'id',\r\n    'occurOn',\r\n    'status',\r\n    'paymentMethod',\r\n    'amount'\r\n  ]\r\n  logsCols: string[] = [\r\n    'timeStamp',\r\n    'events',\r\n    'customerInfo',\r\n    'eventSource'\r\n  ]\r\n  constructor(public dialog: MatDialog) {}\r\n\r\n  openEdit(type: string) {\r\n    this.dialogRef = this.dialog.open(EditCustomerDetailsComponent, {\r\n      width: '29rem',\r\n      panelClass: 'edit-customer',\r\n      data: {\r\n        type: type,\r\n      },\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./customer-view.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 69,
                "jsdoctags": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"relative main-bg border-2 w-full h-full overflow-scroll\">\r\n  <div class=\"flex align-center heading-bt-br\">\r\n    <mat-icon\r\n      class=\"material-symbols-outlined pointer text-headline-dark mr-2\"\r\n      [routerLink]=\"'/customers'\"\r\n      >keyboard_backspace</mat-icon\r\n    >\r\n    <h2 class=\"mat-headline-5 text-headline-dark\">Customer</h2>\r\n  </div>\r\n  <div class=\"px-7 mt-4 tab-panel content-width\">\r\n    <mat-tab-group\r\n      mat-stretch-tabs=\"false\"\r\n      mat-align-tabs=\"start\"\r\n      class=\"tabs-medium\"\r\n    >\r\n      <mat-tab label=\"Overview\">\r\n        <div class=\"pt-7\">\r\n          <div class=\"mb-11\">\r\n            <div class=\"section-heading flex align-center justify-between\">\r\n              <h4 class=\"primary-text text-main mat-subtitle-2\">\r\n                General Details\r\n              </h4>\r\n              <button\r\n                mat-button\r\n                color=\"primary\"\r\n                class=\"small\"\r\n                (click)=\"openEdit('general')\"\r\n              >\r\n                <mat-icon class=\"material-symbols-outlined\">edit</mat-icon>\r\n                <span class=\"primary-text text-main\">Edit</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"flex mt-4\">\r\n              <div class=\"mr-12 img-contain\">\r\n                <img\r\n                  src=\"../../../../../../assets/images/company_logo.png\"\r\n                  alt=\"company logo\"\r\n                />\r\n              </div>\r\n              <div class=\"ml-2 w-90\">\r\n                <div class=\"mb-6\">\r\n                  <h5 class=\"mat-subtitle-2 mb-1\">Company Name</h5>\r\n                  <span class=\"block mat-body-1 grey-text text-darken-6\"\r\n                    >Greenplus Enterprises</span\r\n                  >\r\n                </div>\r\n                <div>\r\n                  <h5 class=\"mat-subtitle-2 mb-1\">Work Phone</h5>\r\n                  <span class=\"block mat-body-1 grey-text text-darken-6\"\r\n                    >9896778865</span\r\n                  >\r\n                </div>\r\n              </div>\r\n              <div class=\"w-60\">\r\n                <div>\r\n                  <h5 class=\"mat-subtitle-2 mb-1\">Name</h5>\r\n                  <span class=\"block mat-body-1 grey-text text-darken-6\"\r\n                    >Alex C</span\r\n                  >\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <div>\r\n                  <h5 class=\"mat-subtitle-2 mb-1\">Email</h5>\r\n                  <span class=\"block mat-body-1 grey-text text-darken-6\"\r\n                    >Alex@example.com</span\r\n                  >\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"mb-9\">\r\n            <div class=\"section-heading flex align-center justify-between\">\r\n              <h4 class=\"primary-text text-main mat-subtitle-2\">Address</h4>\r\n              <button\r\n                mat-button\r\n                color=\"primary\"\r\n                class=\"small\"\r\n                (click)=\"openEdit('address')\"\r\n              >\r\n                <mat-icon class=\"material-symbols-outlined\">edit</mat-icon>\r\n                <span class=\"primary-text text-main\">Edit</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"flex mt-4\">\r\n              <div class=\"w-60\">\r\n                <h5 class=\"mat-subtitle-2 mb-1\">Billing Address</h5>\r\n                <span class=\"block mat-body-1 grey-text text-darken-6\"\r\n                  >21/5, ABC Lane, India</span\r\n                >\r\n              </div>\r\n              <div>\r\n                <h5 class=\"mat-subtitle-2 mb-1\">Shipping Address</h5>\r\n                <span class=\"block mat-body-1 grey-text text-darken-6\"\r\n                  >21/5, ABC Lane, India</span\r\n                >\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"mb-9\">\r\n            <div class=\"section-heading flex align-center justify-between\">\r\n              <h4 class=\"primary-text text-main mat-subtitle-2\">\r\n                Order Details\r\n              </h4>\r\n              <button\r\n                mat-button\r\n                color=\"primary\"\r\n                class=\"small\"\r\n                (click)=\"openEdit('other')\"\r\n              >\r\n                <mat-icon class=\"material-symbols-outlined\">edit</mat-icon>\r\n                <span class=\"primary-text text-main\">Edit</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"flex mt-4\">\r\n              <div class=\"w-60\">\r\n                <h5 class=\"mat-subtitle-2 mb-1\">Customer Type</h5>\r\n                <span class=\"block mat-body-1 grey-text text-darken-6\"\r\n                  >Business</span\r\n                >\r\n              </div>\r\n              <div class=\"w-60\">\r\n                <h5 class=\"mat-subtitle-2 mb-1\">Currencies</h5>\r\n                <span class=\"block mat-body-1 grey-text text-darken-6\"\r\n                  >USD</span\r\n                >\r\n              </div>\r\n              <div class=\"w-60\">\r\n                <h5 class=\"mat-subtitle-2 mb-1\">Payment Terms</h5>\r\n                <span class=\"block mat-body-1 grey-text text-darken-6\"\r\n                  >Due on Reception</span\r\n                >\r\n              </div>\r\n              <div>\r\n                <h5 class=\"mat-subtitle-2 mb-1\">Portal Status</h5>\r\n                <span class=\"block mat-body-1 grey-text text-darken-6 Active\"\r\n                  >Enabled</span\r\n                >\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"mb-9\">\r\n            <div class=\"section-heading flex align-center justify-between\">\r\n              <h4 class=\"primary-text text-main mat-subtitle-2 mb-2\">\r\n                Record Information\r\n              </h4>\r\n            </div>\r\n            <div class=\"flex mt-4\">\r\n              <div class=\"w-60\">\r\n                <h5 class=\"mat-subtitle-2 mb-1\">Customer ID</h5>\r\n                <span class=\"block mat-body-1 grey-text text-darken-6\"\r\n                  >SO-001</span\r\n                >\r\n              </div>\r\n              <div class=\"w-60\">\r\n                <h5 class=\"mat-subtitle-2 mb-1\">Created On</h5>\r\n                <span class=\"block mat-body-1 grey-text text-darken-6\"\r\n                  >Jan 02 2023</span\r\n                >\r\n              </div>\r\n              <div class=\"w-60\">\r\n                <h5 class=\"mat-subtitle-2 mb-1\">Created By</h5>\r\n                <span class=\"block mat-body-1 grey-text text-darken-6\"\r\n                  >Alex C</span\r\n                >\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-tab>\r\n      <mat-tab label=\"Subscription\">\r\n        <div class=\"primary-table\">\r\n          <table mat-table [dataSource]=\"customers\">\r\n            <!-- ID Column -->\r\n            <ng-container matColumnDef=\"subscriptionInfo\">\r\n              <th mat-header-cell *matHeaderCellDef>Subscription Info</th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let element\"\r\n                [routerLink]=\"'/customers/view'\"\r\n              >\r\n                {{ element.subscriptionInfo }}\r\n              </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"id\">\r\n              <th mat-header-cell *matHeaderCellDef>#ID</th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let element\"\r\n                [routerLink]=\"'/customers/view'\"\r\n              >\r\n                {{ element.id }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Description Column -->\r\n            <ng-container matColumnDef=\"state\">\r\n              <th mat-header-cell *matHeaderCellDef>State</th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let element\"\r\n                [routerLink]=\"'/customers/view'\"\r\n                [ngClass]=\"element.state   === 'Active' ? 'Active' : 'InActive'\" \r\n              >\r\n                {{ element.state }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Created Date Column -->\r\n            <ng-container matColumnDef=\"createdOn\">\r\n              <th mat-header-cell *matHeaderCellDef>\r\n                <p class=\"text-center\">Created On</p>\r\n              </th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let element\"\r\n                [routerLink]=\"'/customers/view'\"\r\n              >\r\n                <p class=\"text-center\">{{ element.createdOn }}</p>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Created Date Column -->\r\n\r\n            <ng-container matColumnDef=\"activatedOn\">\r\n              <th mat-header-cell *matHeaderCellDef>Work Phone</th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let element\"\r\n                [routerLink]=\"'/customers/view'\"\r\n              >\r\n                {{ element.activatedOn }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Description Column -->\r\n            <ng-container matColumnDef=\"nextRenewal\">\r\n              <th mat-header-cell *matHeaderCellDef>Next Renewal</th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let element\"\r\n                [routerLink]=\"'/customers/view'\"\r\n              >\r\n                {{ element.nextRenewal }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"subscriptionCols\"></tr>\r\n            <tr\r\n              mat-row\r\n              *matRowDef=\"let row; columns: subscriptionCols\"\r\n              [id]=\"row.id\"\r\n            ></tr>\r\n          </table>\r\n        </div>\r\n      </mat-tab>\r\n      <mat-tab label=\"Transaction\">\r\n        <div class=\"primary-table\">\r\n          <table mat-table [dataSource]=\"transactions\">\r\n            <!-- ID Column -->\r\n            <ng-container matColumnDef=\"id\">\r\n              <th mat-header-cell *matHeaderCellDef>#ID</th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let element\"\r\n                [routerLink]=\"'/customers/view'\"\r\n              >\r\n                {{ element.id }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"occurOn\">\r\n              <th mat-header-cell *matHeaderCellDef>Occurs On</th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let element\"\r\n                [routerLink]=\"'/customers/view'\"\r\n              >\r\n                {{ element.occurOn }}\r\n              </td>\r\n            </ng-container>\r\n            <!-- Description Column -->\r\n            <ng-container matColumnDef=\"status\">\r\n              <th mat-header-cell *matHeaderCellDef>Status</th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let element\"\r\n                [routerLink]=\"'/customers/view'\"\r\n                [ngClass]=\"element.status === 'Success' ? 'Active' : 'InActive'\" \r\n              >\r\n                {{ element.status }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Created Date Column -->\r\n            <ng-container matColumnDef=\"type\">\r\n              <th mat-header-cell *matHeaderCellDef>\r\n                <p class=\"text-center\">Type</p>\r\n              </th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let element\"\r\n                [routerLink]=\"'/customers/view'\"\r\n              >\r\n                <p class=\"text-center\">{{ element.type }}</p>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Created Date Column -->\r\n\r\n            <ng-container matColumnDef=\"paymentMethod\">\r\n              <th mat-header-cell *matHeaderCellDef>Payment Method</th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let element\"\r\n                [routerLink]=\"'/customers/view'\"\r\n              >\r\n                <div class=\"flex align-center\">\r\n                  <mat-icon\r\n                    class=\"material-symbols-outlined mr-2 grey-text text-darken-6\"\r\n                    >credit_card</mat-icon\r\n                  >\r\n                  {{ element.paymentMethod }}\r\n                </div>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Description Column -->\r\n            <ng-container matColumnDef=\"amount\">\r\n              <th mat-header-cell *matHeaderCellDef>Amount</th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let element\"\r\n                [routerLink]=\"'/customers/view'\"\r\n              >\r\n                $ {{ element.amount }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"transactionCols\"></tr>\r\n            <tr\r\n              mat-row\r\n              *matRowDef=\"let row; columns: transactionCols\"\r\n              [id]=\"row.id\"\r\n            ></tr>\r\n          </table>\r\n        </div>\r\n      </mat-tab>\r\n      <mat-tab label=\"Invoices\">\r\n        <div class=\"primary-table\">\r\n          <table mat-table [dataSource]=\"invoices\">\r\n            <!-- ID Column -->\r\n            <ng-container matColumnDef=\"id\">\r\n              <th mat-header-cell *matHeaderCellDef>#ID</th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let element\"\r\n                [routerLink]=\"'/customers/view'\"\r\n              >\r\n                {{ element.id }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Description Column -->\r\n            <ng-container matColumnDef=\"occurOn\">\r\n              <th mat-header-cell *matHeaderCellDef>Occurs On</th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let element\"\r\n                [routerLink]=\"'/customers/view'\"\r\n              >\r\n                {{ element.occurOn }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Created Date Column -->\r\n            <ng-container matColumnDef=\"status\">\r\n              <th mat-header-cell *matHeaderCellDef>\r\n                <p class=\"text-center\">Status</p>\r\n              </th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let element\"\r\n                [routerLink]=\"'/customers/view'\"\r\n                [ngClass]=\"element.status === 'Paid' ? 'Active' : 'InActive'\" \r\n              >\r\n                <p class=\"text-center\">{{ element.status }}</p>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Created Date Column -->\r\n\r\n            <ng-container matColumnDef=\"paymentMethod\">\r\n              <th mat-header-cell *matHeaderCellDef>Payment Method</th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let element\"\r\n                [routerLink]=\"'/customers/view'\"\r\n              >\r\n                <div class=\"flex align-center\">\r\n                  <mat-icon\r\n                    class=\"material-symbols-outlined mr-2 grey-text text-darken-6\"\r\n                    >credit_card</mat-icon\r\n                  >\r\n                  {{ element.paymentMethod }}\r\n                </div>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Description Column -->\r\n            <ng-container matColumnDef=\"amount\">\r\n              <th mat-header-cell *matHeaderCellDef>Amount</th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let element\"\r\n                [routerLink]=\"'/customers/view'\"\r\n              >\r\n                $ {{ element.amount }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"invoiceCols\"></tr>\r\n            <tr\r\n              mat-row\r\n              *matRowDef=\"let row; columns: invoiceCols\"\r\n              [id]=\"row.id\"\r\n            ></tr>\r\n          </table>\r\n        </div>\r\n      </mat-tab>\r\n      <mat-tab label=\"Activity Logs\">\r\n        <div class=\"primary-table\">\r\n          <table mat-table [dataSource]=\"activityLogs\">\r\n            <!-- Description Column -->\r\n            <ng-container matColumnDef=\"timeStamp\">\r\n              <th mat-header-cell *matHeaderCellDef>Timestamp</th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let element\"\r\n                [routerLink]=\"'/customers/view'\"\r\n              >\r\n                {{ element.timeStamp }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Created Date Column -->\r\n            <ng-container matColumnDef=\"events\">\r\n              <th mat-header-cell *matHeaderCellDef>\r\n                <p class=\"text-center\">Events</p>\r\n              </th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let element\"\r\n                [routerLink]=\"'/customers/view'\"\r\n              >\r\n                <p class=\"text-center\">{{ element.events }}</p>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Created Date Column -->\r\n\r\n            <ng-container matColumnDef=\"customerInfo\">\r\n              <th mat-header-cell *matHeaderCellDef>Customer Info</th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let element\"\r\n                [routerLink]=\"'/customers/view'\"\r\n              >\r\n                {{ element.customerInfo }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Description Column -->\r\n            <ng-container matColumnDef=\"eventSource\">\r\n              <th mat-header-cell *matHeaderCellDef>Event Source</th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let element\"\r\n                [routerLink]=\"'/customers/view'\"\r\n              >\r\n                <span class=\"primary-light-6-bg p-1 border-1 text-primary\">\r\n                  {{ element.eventSource }}\r\n                </span>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"logsCols\"></tr>\r\n            <tr\r\n              mat-row\r\n              *matRowDef=\"let row; columns: logsCols\"\r\n              [id]=\"row.id\"\r\n            ></tr>\r\n          </table>\r\n        </div>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "DashboardLayoutComponent",
            "id": "component-DashboardLayoutComponent-fa341aa3929bde6926992e92725c99e7135b393f7fcde971371f9dc72be009456e147e925185b25baa32dab4be16341f26f1f979484f7af9d57e2fcb5dcdaaf1",
            "file": "src/stories/softobiz-ui/dashboardLayout/dashboardLayout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sft-dashboardLayout",
            "styleUrls": [
                "./dashboardLayout.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dashboardLayout.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "newItemEvent",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "activeRoute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "configOptions",
                    "defaultValue": "Config_Menu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "currentRoute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "globalService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GlobalService",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "Menu_Headings",
                    "defaultValue": "Menu_Headings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "menuItems",
                    "defaultValue": "MENUITEMS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "notificationsData",
                    "defaultValue": "Notifications_Data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "opened",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "route",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActivatedRoute",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "sidenav",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSidenav",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'sidenav'"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "userProfile",
                    "defaultValue": "User_Options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                }
            ],
            "methodsClass": [
                {
                    "name": "getList",
                    "args": [
                        {
                            "name": "item",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "preventClose",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleSidenav",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output, ViewChild } from '@angular/core';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { filter } from 'rxjs';\r\nimport { GlobalService } from 'src/app/core/services/global.service';\r\nimport { MENUITEMS, Config_Menu, Menu_Headings, User_Options, Notifications_Data } from 'src/app/shared/constants/consants';\r\n@Component({\r\n  selector: 'sft-dashboardLayout',\r\n  templateUrl: './dashboardLayout.component.html',\r\n  styleUrls: ['./dashboardLayout.component.scss']\r\n})\r\nexport class DashboardLayoutComponent {\r\n  // menuItems = MENUITEMS;\r\n  // configOptions = Config_Menu;\r\n  // Menu_Headings = Menu_Headings;\r\n  // userProfile = User_Options;\r\n  // notificationsData = Notifications_Data;\r\n  // constructor() {}\r\n\r\n  // @ViewChild('sidenav') sidenav: MatSidenav;\r\n\r\n  // opened: boolean = true;\r\n  // toggleSidenav(event: any) {\r\n  //   this.sidenav.toggle();\r\n  //   this.opened = event;\r\n  // }\r\n\r\n  // getList(item: string) {\r\n  //   let list = [];\r\n  //   return (list = this.menuItems.filter((ele) => ele.category == item));\r\n  // }\r\n  preventClose(event: any) {\r\n    event.stopPropagation();\r\n  }\r\n  menuItems = MENUITEMS;\r\n  configOptions = Config_Menu;\r\n  Menu_Headings = Menu_Headings;\r\n  userProfile = User_Options;\r\n  notificationsData = Notifications_Data;\r\n  activeRoute: string[];\r\n  currentRoute: string;\r\n\r\n  constructor(\r\n    public globalService: GlobalService,\r\n    private router: Router,\r\n    public route: ActivatedRoute\r\n  ) {\r\n    this.router.events\r\n      .pipe(filter((event: any) => event instanceof NavigationEnd))\r\n      .subscribe((event: any) => {\r\n        this.currentRoute = event.url;\r\n        this.activeRoute = this.currentRoute.split('/')\r\n      });\r\n  }\r\n\r\n  @ViewChild('sidenav') sidenav: MatSidenav;\r\n  @Output() newItemEvent = new EventEmitter<boolean>();\r\n\r\n  opened: boolean = true;\r\n  toggleSidenav() {\r\n    this.sidenav.toggle();\r\n    this.opened = !this.opened;\r\n    this.newItemEvent.emit(this.opened);\r\n  }\r\n  getList(item: string) {\r\n    let list = [];\r\n    return (list = this.menuItems.filter((ele) => ele.category == item));\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "// .left-navigation {\r\n//   width: 261px;\r\n// }",
                    "styleUrl": "./dashboardLayout.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "globalService",
                        "type": "GlobalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 41,
                "jsdoctags": [
                    {
                        "name": "globalService",
                        "type": "GlobalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"outer-layout\">\n  <mat-sidenav-container [ngClass]=\"opened ? 'sidenav-open' : 'sidenav-closed'\">\n    <mat-sidenav #sidenav mode=\"side\" opened=\"true\" class=\"sidenav-slider\">\n      <!-- <app-sidebar (newItemEvent)=\"toggleSidenav($event)\"></app-sidebar> -->\n      <!-- <sft-leftNavigation></sft-leftNavigation> -->\n      <div class=\"sidenav-wrapper border-2\">\n        <div class=\"sidebar-toggle\">\n          <button\n            mat-mini-fab\n            color=\"accent\"\n            class=\"toggle-sidenav\"\n            (click)=\"toggleSidenav()\"\n          >\n            <svg\n              width=\"8\"\n              height=\"14\"\n              viewBox=\"0 0 8 14\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M0.269968 12.3681L1.42697 13.5186L7.85547 7.08355L1.42047 0.648554L0.269969 1.79905L5.55447 7.08355L0.269968 12.3681V12.3681Z\"\n                fill=\"white\"\n              />\n            </svg>\n          </button>\n        </div>\n        <div class=\"sidebar-wrapper\">\n          <div class=\"logo pointer\">\n            <div class=\"logo-img pointer\">\n              <img src=\"/framework-logo.png\" alt=\"logo\" />\n            </div>\n            <div class=\"text-wrapper\">\n              <h3>Digital</h3>\n              <span class=\"logo-text\">Framework</span>\n            </div>\n          </div>\n          <div class=\"sidebar-scrollable mt-11\">\n            <mat-nav-list class=\"sidebar p-0\">\n              <div *ngFor=\"let element of Menu_Headings\" class=\"transition-400\">\n                <div\n                  *ngIf=\"element.name != 'Dashboard'\"\n                  class=\"category-heading\"\n                >\n                  <h1>{{ element.name }}</h1>\n                </div>\n                <mat-list-item\n                  class=\"nav-list-item p-0 w-full\"\n                  *ngFor=\"let item of getList(element.category)\"\n                >\n                  <a\n                    class=\"icon-wrapper flex align-center\"\n                  >\n                    <div class=\"flex justify-center sidebar-icon-wraper\">\n                      <mat-icon\n                        class=\"material-symbols-outlined m-0 sidebar-icon\"\n                        >{{ item.icon }}</mat-icon\n                      >\n                    </div>\n                    <div class=\"content-wrapper\">\n                      <span class=\"content\">{{ item.name }}</span>\n                    </div>\n                  </a>\n                </mat-list-item>\n              </div>\n            </mat-nav-list>\n            <div class=\"image-wrapper\">\n              <div class=\"img\">\n                <img src=\"/dashboard-cat.png\" alt=\"Dashboard Get Started\" />\n              </div>\n              <div class=\"text\">\n                <h3>First steps</h3>\n                <p class=\"description\">\n                  Customize your dashboard and lean <br />about out features\n                </p>\n                <span class=\"pointer\">Get Started</span>\n              </div>\n            </div>\n          </div>\n          <mat-nav-list class=\"config-section sidebar\">\n            <mat-list-item\n              class=\"nav-list-item p-0\"\n              *ngFor=\"let item of configOptions\"\n            >\n              <a\n                class=\"icon-wrapper flex align-center\"\n                [routerLink]=\"['/', item.state]\"\n              >\n                <mat-icon class=\"material-symbols-outlined m-0 sidebar-icon\">{{\n                  item.icon\n                }}</mat-icon>\n                <div class=\"content-wrapper\">\n                  <span class=\"content\">{{ item.name }}</span>\n                </div>\n              </a>\n            </mat-list-item>\n          </mat-nav-list>\n        </div>\n      </div>\n    </mat-sidenav>\n    <mat-sidenav-content>\n      <!-- Header for application starts here! -->\n      <div class=\"header-wrapper border-2\">\n        <div class=\"global-search basic mr-6 border-2\">\n          <span class=\"search-icon pointer\">\n            <img src=\"/icons/search.svg\" alt=\"search-icon\" />\n          </span>\n          <input type=\"text\" placeholder=\"Search...\" />\n        </div>\n        <div class=\"header-right\">\n          <div\n            class=\"notifications-section pointer\"\n            [matMenuTriggerFor]=\"notificationsMenu\"\n            matBadge=\"3\"\n            matBadgeSize=\"small\"\n            matBadgeColor=\"warn\"\n          >\n            <img src=\"/icons/notifications.svg\" alt=\"notifications-icon\" />\n          </div>\n          <mat-menu\n            #notificationsMenu=\"matMenu\"\n            class=\"notifications-menu border-2\"\n            backdropClass=\"right-menu\"\n          >\n            <div class=\"notifications-header\">\n              <div class=\"flex align-center justify-between\">\n                <div class=\"label\">Notifications</div>\n                <mat-chip class=\"basic-chip\"> 4 New </mat-chip>\n              </div>\n              <div class=\"tab-panel\" (click)=\"preventClose($event)\">\n                <mat-tab-group mat-stretch-tabs=\"false\" mat-align-tabs=\"start\">\n                  <mat-tab label=\"All (4)\">\n                    <div\n                      class=\"relative h-55\"\n                      *ngIf=\"notificationsData.length == 0\"\n                    >\n                      <div class=\"absolute position-center text-center w-full\">\n                        <img src=\"/notifications-icon.png\" alt=\"no data\" />\n                        <span class=\"block mt-6\">\n                          Hey! You have no notifications.\n                        </span>\n                      </div>\n                    </div>\n                    <div\n                      class=\"notification-list\"\n                      (click)=\"preventClose($event)\"\n                      *ngIf=\"notificationsData.length > 0\"\n                    ></div>\n                  </mat-tab>\n                  <mat-tab label=\"Messages\">\n                    <div\n                      class=\"relative h-55\"\n                      *ngIf=\"notificationsData.length == 0\"\n                    >\n                      <div class=\"absolute position-center text-center w-full\">\n                        <img src=\"/notifications-icon.png\" alt=\"no data\" />\n                        <span class=\"block mt-6\">\n                          Hey! You have no notifications.\n                        </span>\n                      </div>\n                    </div>\n                    <div\n                      class=\"message-list\"\n                      (click)=\"preventClose($event)\"\n                      *ngIf=\"notificationsData.length > 0\"\n                    >\n                      My Messages\n                    </div>\n                  </mat-tab>\n                  <mat-tab label=\"Alerts\">\n                    <div\n                      class=\"relative h-55\"\n                      *ngIf=\"notificationsData.length == 0\"\n                    >\n                      <div class=\"absolute position-center text-center w-full\">\n                        <img src=\"/notifications-icon.png\" alt=\"no data\" />\n                        <span class=\"block mt-6\">\n                          Hey! You have no notifications.\n                        </span>\n                      </div>\n                    </div>\n                    <div\n                      class=\"message-list\"\n                      (click)=\"preventClose($event)\"\n                      *ngIf=\"notificationsData.length > 0\"\n                    >\n                      Alerts\n                    </div>\n                  </mat-tab>\n                </mat-tab-group>\n              </div>\n              <div\n                class=\"text-center modal-footer pointer\"\n                (click)=\"preventClose($event)\"\n              >\n                <span class=\"block py-4\"> View All </span>\n              </div>\n            </div>\n          </mat-menu>\n          <div class=\"user-profile pointer\" [matMenuTriggerFor]=\"menu\">\n            <div class=\"user-image\">\n              <img src=\"/profile-avatar-1.png\" />\n            </div>\n            <div class=\"user-info\">\n              <span class=\"name\">John Smith</span>\n              <span class=\"role\">Founder</span>\n            </div>\n          </div>\n          <mat-menu\n            #menu=\"matMenu\"\n            class=\"profile-menu\"\n            backdropClass=\"alert-menu\"\n          >\n            <div class=\"profile-menu-outer\">\n              <div class=\"grad-bg\">\n                <div class=\"user-initials\">JS</div>\n              </div>\n              <div class=\"profile-inner\">\n                <p class=\"mat-h1 fw-600 m-0\">John Smith</p>\n                <p class=\"m-0 mt-1\">Founder</p>\n              </div>\n              <div class=\"profile-paths\">\n                <a\n                  class=\"flex align-center justify-between user-link\"\n                  *ngFor=\"let element of userProfile\"\n                >\n                  <div class=\"flex align-center\">\n                    <mat-icon class=\"material-symbols-outlined\">{{\n                      element.icon\n                    }}</mat-icon>\n                    <span class=\"ml-3\">{{ element.name }}</span>\n                  </div>\n                  <div *ngIf=\"element.toggle\">\n                    <mat-slide-toggle\n                      color=\"primary\"\n                      (click)=\"preventClose($event)\"\n                    ></mat-slide-toggle>\n                  </div>\n                </a>\n              </div>\n            </div>\n          </mat-menu>\n        </div>\n      </div>\n      <div class=\"pt-6 main-content-height\">\n        <router-outlet></router-outlet>\n      </div>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n</div>\n"
        },
        {
            "name": "DeleteConfirmationComponent",
            "id": "component-DeleteConfirmationComponent-d87e73f189e3e1858a7f6ba56234953ac4ae60ad362620dd9899ef67d2e3c18b14b6068dc66ee63da158096b2c37fb3b55651901c40e7db4d801036da6a29150",
            "file": "src/app/shared/components/dialog-box/delete-confirmation/delete-confirmation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-delete-confirmation",
            "styleUrls": [
                "./delete-confirmation.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./delete-confirmation.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "confirmed",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogData",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        167,
                        123
                    ]
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialogRef<DeleteConfirmationComponent>",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onCancelClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Inject, Output } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { CouponsDeleteSuccessComponent } from 'src/app/shared/components/dialog-box/coupons-delete-success/coupons-delete-success.component';\r\n\r\n\r\nexport interface DialogData {\r\n  module: string;\r\n  deleteId: number;\r\n}\r\n@Component({\r\n  selector: 'app-delete-confirmation',\r\n  templateUrl: './delete-confirmation.component.html',\r\n  styleUrls: ['./delete-confirmation.component.scss']\r\n})\r\nexport class DeleteConfirmationComponent {\r\n  @Output() confirmed: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeleteConfirmationComponent>,\r\n    public dialog: MatDialog,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\r\n  ) {}\r\n  // dialogRef: any;\r\n\r\n  onCancelClick(): void {\r\n    this.dialogRef.close(false);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./delete-confirmation.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<DeleteConfirmationComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "data",
                        "type": "DialogData",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<DeleteConfirmationComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "data",
                        "type": "DialogData",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"border-2 text-center coupons-dialog\">\r\n  <div class=\"close-dialog-icon\">\r\n      <mat-icon (click)=\"onCancelClick()\" class=\"material-symbols-outlined\">close</mat-icon>\r\n  </div>\r\n  <div class=\"mb-6\">\r\n      <img src=\"../../../../../assets/images/coupons-delete-confirmation.png\" alt=\"delete-confirmation\">\r\n  </div>\r\n  <h1 class=\"mb-4\">Confirmation</h1>\r\n  <span class=\"mat-body-1 mb-8 block\">Are you sure do you want to delete this {{data.module}} {{data.deleteId}}</span\r\n  >\r\n  <div class=\"flex-center\">\r\n    <button mat-stroked-button color=\"primary\" mat-dialog-close (click)=\"onCancelClick()\" class=\"px-6 medium\">Cancel</button>\r\n    <button mat-flat-button color=\"primary\" class=\"medium ml-2\" [mat-dialog-close]=\"true\">Yes</button>\r\n  </div>\r\n</div>\r\n\r\n"
        },
        {
            "name": "DialogAnimationsDialog",
            "id": "component-DialogAnimationsDialog-93fe2209b67e830c82a2b8127200f5cc20013f4f3937f56e88667cd51e75d449872d2663f85c5dc9e2ccae71f4676086662763397b50e81140b67b3137ea1944",
            "file": "src/app/modules/products/components/create-product/create-product.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dialog-animations-dialog",
            "styleUrls": [
                "../../../../shared/components/dialog-box/dialog-animations.scss"
            ],
            "styles": [],
            "templateUrl": [
                "../../../../shared/components/dialog-box/dialog-animations-dialog.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "saveError",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 240,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "saveSuccess",
                    "defaultValue": "new EventEmitter<{ imageUrl: string; imageName: string }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 238,
                    "type": "EventEmitter<literal type>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "activeColor",
                    "defaultValue": "'green'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 186
                },
                {
                    "name": "base64imageData",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 194
                },
                {
                    "name": "baseColor",
                    "defaultValue": "'#ccc'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 187
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialogRef<DialogAnimationsDialog>",
                    "optional": false,
                    "description": "",
                    "line": 183,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dragging",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 190
                },
                {
                    "name": "iconColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 189
                },
                {
                    "name": "imageLoaded",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 192
                },
                {
                    "name": "imageName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 195
                },
                {
                    "name": "imageSrc",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 193
                },
                {
                    "name": "imageUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 196
                },
                {
                    "name": "loaded",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 191
                },
                {
                    "name": "overlayColor",
                    "defaultValue": "'rgba(255,255,255,0.5)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 188
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 181
                }
            ],
            "methodsClass": [
                {
                    "name": "_handleReaderLoaded",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 231,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "cancel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 264,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleDragEnter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 198,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleDragLeave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 202,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleDrop",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 206,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleFileInput",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 217,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleImageLoad",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 212,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleSave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 241,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Output,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { NgxTippyProps } from 'ngx-tippy-wrapper';\r\nimport { trigger, transition, animate, style } from '@angular/animations';\r\nimport { SuccessDialogComponent } from 'src/app/shared/components/dialog-box/success-dialog/success-dialog.component';\r\nimport { OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ProductsService } from '../../services/products.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-create-product',\r\n  templateUrl: './create-product.component.html',\r\n  styleUrls: ['./create-product.component.scss'],\r\n  animations: [\r\n    trigger('slideInOut', [\r\n      transition(':enter', [\r\n        style({ transform: 'translateY(-100%)' }),\r\n        animate('200ms ease-in', style({ transform: 'translateY(0%)' })),\r\n      ]),\r\n      transition(':leave', [\r\n        animate('200ms ease-in', style({ transform: 'translateY(-100%)' })),\r\n      ]),\r\n    ]),\r\n  ],\r\n})\r\nexport class CreateProductComponent implements OnInit {\r\n  subscription: Subscription;\r\n  @ViewChild('tippyTemplate', { read: ElementRef, static: true })\r\n  tippyTemplate: ElementRef;\r\n  tippyContent: NgxTippyProps = {};\r\n  productForm: FormGroup;\r\n  imageUrl: string = '';\r\n  imageName: string = '';\r\n  data: string = '';\r\n  imagePath: string = '';\r\n  uploadMessage: string = '';\r\n  uploadSuccess: boolean = false;\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private productService: ProductsService,\r\n    private snackBar: MatSnackBar\r\n  ) {}\r\n  ngOnInit() {\r\n    this.productForm = this.formBuilder.group({\r\n      productId: ['', Validators.required],\r\n      name: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(20),\r\n          Validators.pattern(/^[a-zA-Z0-9\\s]*$/),\r\n        ],\r\n      ],\r\n      description: ['', Validators.maxLength(500)],\r\n      status: [true],\r\n      imageUrl: [],\r\n    });\r\n\r\n    this.productForm.controls['name'].valueChanges.subscribe((value) => {\r\n      const idValue = value?.replace(/[^\\w\\s]/gi, '').replace(/\\s+/g, '-');\r\n      this.productForm.controls['productId'].setValue(idValue);\r\n    });\r\n  }\r\n  isChecked(): boolean {\r\n    const status = this.productForm.get('status')?.value;\r\n    return status === 'active';\r\n  }\r\n\r\n  toggleStatus(checked: boolean): void {\r\n    const newStatus = checked ? 'active' : 'draft';\r\n    this.productForm.get('status')?.setValue(newStatus);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.productForm.get('imageUrl')?.setValue(this.imageUrl);\r\n    const status = this.productForm.value.status ? 'active' : 'draft';\r\n    const product = {\r\n      ...this.productForm.value,\r\n      status: status,\r\n    };\r\n    this.subscription = this.productService.createProduct(product).subscribe({\r\n      next: (res) => {\r\n        this.openSuccess();\r\n        this.router.navigate([`/products/view-product/${res.productId}`]);\r\n      },\r\n      error: (error: any) => {\r\n        this.snackBar.open(error.error.message, '', {\r\n          duration: 5000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        })\r\n      },\r\n    });\r\n  }\r\n  onDelete() {\r\n    this.router.navigate(['/products']);\r\n  }\r\n\r\n  startMessageTimer(): void {\r\n    const duration = 5000;\r\n    setTimeout(() => {\r\n      this.uploadSuccess = false;\r\n      this.uploadMessage = '';\r\n    }, duration);\r\n  }\r\n\r\n  openDialog(\r\n    enterAnimationDuration: string,\r\n    exitAnimationDuration: string\r\n  ): void {\r\n    const dialogRef = this.dialog.open(DialogAnimationsDialog, {\r\n      width: '',\r\n      enterAnimationDuration,\r\n      exitAnimationDuration,\r\n    });\r\n    dialogRef.componentInstance.saveSuccess.subscribe(\r\n      (data: { imageUrl: string; imageName: string }) => {\r\n        this.imageUrl = data.imageUrl;\r\n        this.imageName = data.imageName;\r\n        this.imagePath = environment.blobStorage;\r\n        this.uploadSuccess = true;\r\n        this.uploadMessage = 'Image upload successful';\r\n        this.startMessageTimer();\r\n      }\r\n    );\r\n    dialogRef.componentInstance.saveError.subscribe((res: any) => {\r\n      this.uploadSuccess = false;\r\n      this.uploadMessage = 'Image upload failed. Please try again.';\r\n      this.startMessageTimer();\r\n    });\r\n  }\r\n\r\n  openSuccess() {\r\n    this.dialog.open(SuccessDialogComponent, {\r\n      width: '420px',\r\n      data: {\r\n        module: 'Product',\r\n        operation: 'is created',\r\n      },\r\n    });\r\n  }\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'dialog-animations-dialog',\r\n  templateUrl:\r\n    '../../../../shared/components/dialog-box/dialog-animations-dialog.html',\r\n  styleUrls: [\r\n    '../../../../shared/components/dialog-box/dialog-animations.scss',\r\n  ],\r\n  animations: [\r\n    trigger('slideInOut', [\r\n      transition(':enter', [\r\n        style({ transform: 'translateX(-100%)' }),\r\n        animate('300ms ease-in', style({ transform: 'translateX(0%)' })),\r\n      ]),\r\n      transition(':leave', [\r\n        animate('300ms ease-in', style({ transform: 'translateX(-100%)' })),\r\n      ]),\r\n    ]),\r\n  ],\r\n})\r\nexport class DialogAnimationsDialog {\r\n  subscription: Subscription;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogAnimationsDialog>,\r\n    private productService: ProductsService\r\n  ) {}\r\n  activeColor: string = 'green';\r\n  baseColor: string = '#ccc';\r\n  overlayColor: string = 'rgba(255,255,255,0.5)';\r\n  iconColor: string;\r\n  dragging: boolean = false;\r\n  loaded: boolean = false;\r\n  imageLoaded: boolean = false;\r\n  imageSrc: string = '';\r\n  base64imageData: string = '';\r\n  imageName: string = '';\r\n  imageUrl: string = '';\r\n\r\n  handleDragEnter() {\r\n    this.dragging = true;\r\n  }\r\n\r\n  handleDragLeave() {\r\n    this.dragging = false;\r\n  }\r\n\r\n  handleDrop(e: any) {\r\n    e.preventDefault();\r\n    this.dragging = false;\r\n    this.handleFileInput(e);\r\n  }\r\n\r\n  handleImageLoad() {\r\n    this.imageLoaded = true;\r\n    this.iconColor = this.overlayColor;\r\n  }\r\n\r\n  handleFileInput(e: any) {\r\n    var file = e.dataTransfer ? e.dataTransfer.files[0] : e.target.files[0];\r\n    var pattern = /image-*/;\r\n    var reader = new FileReader();\r\n    if (!file.type.match(pattern)) {\r\n      alert('invalid format');\r\n      return;\r\n    }\r\n    this.loaded = false;\r\n    this.imageName = file.name;\r\n    reader.onload = this._handleReaderLoaded.bind(this);\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  _handleReaderLoaded(e: any) {\r\n    var reader = e.target;\r\n    this.imageSrc = reader.result;\r\n    const dataURLParts = this.imageSrc?.split(';base64,');\r\n    this.base64imageData = dataURLParts[1];\r\n    this.loaded = true;\r\n  }\r\n  @Output() saveSuccess: EventEmitter<{ imageUrl: string; imageName: string }> =\r\n    new EventEmitter<{ imageUrl: string; imageName: string }>();\r\n  @Output() saveError: EventEmitter<any> = new EventEmitter<any>();\r\n  handleSave() {\r\n    if (this.base64imageData) {\r\n      const payload = {\r\n        image: this.base64imageData,\r\n        imageName: this.imageName,\r\n      };\r\n      this.subscription = this.productService.uploadImage(payload).subscribe({\r\n        next: (res) => {\r\n          this.imageUrl = res.data.blobURL;\r\n        },\r\n        error: (error: any) => {\r\n          this.saveError.emit(error);\r\n        },\r\n        complete: () => {\r\n          this.saveSuccess.emit({\r\n            imageUrl: this.imageUrl,\r\n            imageName: this.imageName,\r\n          });\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "../../../../shared/components/dialog-box/dialog-animations.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<DialogAnimationsDialog>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 181,
                "jsdoctags": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<DialogAnimationsDialog>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"image-upload-dialog\" [@slideInOut]>\r\n  <h4 class=\"text-dark mat-subtitle-2 mb-2 font-weight-500\">Upload Logo</h4>\r\n  <p class=\"mat-caption grey-text text-darken-6\">\r\n    Allowed JPG, GIF or PNG. Max size of 800K\r\n  </p>\r\n  <div>\r\n    <input type=\"file\" name=\"logo\" id=\"logo\" accept=\"image/*\" (change)=\"handleFileInput($event)\" />\r\n    <label for=\"logo\" class=\"upload-field border-2 pointer\" id=\"file-label\"  (dragenter)=\"handleDragEnter()\"\r\n    (dragleave)=\"handleDragLeave()\"\r\n    (drop)=\"handleDrop($event)\">\r\n     <img \r\n        [src]=\"imageSrc\" \r\n        [class.loaded]=\"imageLoaded\"\r\n        (load)=\"handleImageLoad()\"\r\n        class=\"w-full\" />\r\n      <div class=\"file-thumbnail\" [style.display]=\"imageLoaded ? 'none' : 'block'\">\r\n        <mat-icon class=\"material-symbols-outlined m-0\">imagesmode</mat-icon>\r\n        <h3 id=\"filename\" class=\"mat-body-1 font-weight-500 text-text text-primary\">\r\n          <a href=\"\" class=\"mr-1 primary-text text-main text-underline\">Click here to upload</a\r\n          >or drag & drop\r\n        </h3>\r\n      </div>\r\n    </label>\r\n  </div>\r\n  <div class=\"action-btns flex align-center justify-end\">\r\n    <button mat-stroked-button color=\"primary\" class=\"mr-2\" mat-dialog-close (click)=\"cancel()\">Dismiss</button>\r\n    <button mat-flat-button color=\"primary\" class=\"\" mat-dialog-close (click)=\"handleSave()\" >Save</button>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "DialogComponent",
            "id": "component-DialogComponent-07d3a5708bd210a0fdf31e3c773772b951c43b6fc582173219a94d08f6c3ddf7c7ab36809d5c5068b582924bbd7dfa343595322f48566f8e44d5978282e7c4df",
            "file": "src/stories/softobiz-ui/dialog/dialog.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sft-dialog",
            "styleUrls": [
                "./dialog.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dialog.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "openDelete",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation } from '@angular/core';\r\nimport { DeleteConfirmationComponent } from '../../../app/shared/components/dialog-box/delete-confirmation/delete-confirmation.component';\r\nimport { DialogInfoComponent } from '../dialog-info/dialog-info.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n@Component({\r\n  selector: 'sft-dialog',\r\n  templateUrl: './dialog.component.html',\r\n  styleUrls: ['./dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class DialogComponent {\r\n  dialogRef: any;\r\n  constructor(public dialog: MatDialog) {}\r\n  openDelete() {\r\n    this.dialogRef = this.dialog.open(DialogInfoComponent, {\r\n      width: '422px',\r\n      panelClass: 'dialog-curved',\r\n    });\r\n    console.log('open');\r\n  }\r\n  \r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dialog.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<button mat-flat-button color=\"primary\" disableRipple (click)=\"openDelete()\">\r\n    Delete\r\n</button>\r\n\r\n<!-- <div class=\"border-2 text-center coupons-dialog\">\r\n    <div class=\"close-dialog-icon\">\r\n        <mat-icon (click)=\"onCancelClick()\" class=\"material-symbols-outlined\">close</mat-icon>\r\n    </div>\r\n    <div class=\"mb-6\">\r\n        <img src=\"/coupons-delete-confirmation.png\" alt=\"delete-confirmation\">\r\n    </div>\r\n    <h1 class=\"mb-4\">Confirmation</h1>\r\n    <span class=\"mat-body-1 mb-8 block\">Are you sure you want to delete plan</span\r\n    >\r\n    <div class=\"flex-center\">\r\n      <button mat-stroked-button color=\"primary\" mat-dialog-close (click)=\"onCancelClick()\" class=\"px-6 medium\">Cancel</button>\r\n      <button mat-flat-button color=\"primary\" class=\"medium ml-2\" [mat-dialog-close]=\"true\" (click)=\"onYesClick()\">Yes</button>\r\n    </div>\r\n  </div> -->"
        },
        {
            "name": "DialogInfoComponent",
            "id": "component-DialogInfoComponent-1b05b51a54e68eb0c9959033db8e13c807fd056ac98b8d9250b01ee7234f7d5dd028aaa3e5520d2cd8fce28923b3164bae8e0b42e87e9f7bf694751d070ed0f5",
            "file": "src/stories/softobiz-ui/dialog-info/dialog-info.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dialog-info",
            "styleUrls": [
                "./dialog-info.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dialog-info.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "withIcon",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogData",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        167,
                        123
                    ]
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialogRef<DialogInfoComponent>",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialogRefYes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "onCancelClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onYesClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, Input } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { CouponsDeleteSuccessComponent, DialogData } from 'src/app/shared/components/dialog-box/coupons-delete-success/coupons-delete-success.component';\r\nimport { ErrorLayoutComponent } from '../errorLayout/errorLayout.component';\r\nimport { ChipComponent } from '../Chip/chip.component';\r\n\r\n@Component({\r\n  selector: 'app-dialog-info',\r\n  templateUrl: './dialog-info.component.html',\r\n  styleUrls: ['./dialog-info.component.scss'],\r\n})\r\nexport class DialogInfoComponent {\r\n  @Input() withIcon: boolean = false;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogInfoComponent>,\r\n    public dialog: MatDialog,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\r\n  ) {}\r\n\r\n  \r\n  dialogRefYes: any;\r\n  onYesClick() {\r\n    this.dialogRefYes = this.dialog.open(DialogInfoDeleteSuccess, {\r\n      width: '422px',\r\n      panelClass: 'dialog-curved',\r\n    });\r\n    console.log('open');\r\n  }\r\n  \r\n  onCancelClick(): void {\r\n    this.dialogRef.close(false);\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'dialog-info-success',\r\n  templateUrl: './dialog-info-success.html',\r\n})\r\nexport class DialogInfoDeleteSuccess {\r\n  constructor(public dialogRef: MatDialogRef<DialogInfoDeleteSuccess>, @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\r\n\r\n  onCancelClick(): void {\r\n    this.dialogRef.close(false);\r\n  }\r\n}\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dialog-info.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<DialogInfoComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "data",
                        "type": "DialogData",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<DialogInfoComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "data",
                        "type": "DialogData",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"border-2 text-center coupons-dialog\">\r\n  <div class=\"close-dialog-icon\">\r\n      <mat-icon (click)=\"onCancelClick()\" class=\"material-symbols-outlined\">close</mat-icon>\r\n  </div>\r\n  <div class=\"mb-6\">\r\n      <img src=\"/coupons-delete-confirmation.png\" alt=\"delete-confirmation\">\r\n  </div>\r\n  <h1 class=\"mb-4\">Confirmation</h1>\r\n  <span class=\"mat-body-1 mb-8 block\">Are you sure you want to delete plan</span\r\n  >\r\n  <div class=\"flex-center\">\r\n    <button mat-stroked-button color=\"primary\" mat-dialog-close (click)=\"onCancelClick()\" class=\"px-6 medium\">Cancel</button>\r\n    <button mat-flat-button color=\"primary\" class=\"medium ml-2\" [mat-dialog-close]=\"true\" (click)=\"onYesClick()\">Yes</button>\r\n  </div>\r\n</div>\r\n "
        },
        {
            "name": "DialogInfoDeleteSuccess",
            "id": "component-DialogInfoDeleteSuccess-1b05b51a54e68eb0c9959033db8e13c807fd056ac98b8d9250b01ee7234f7d5dd028aaa3e5520d2cd8fce28923b3164bae8e0b42e87e9f7bf694751d070ed0f5",
            "file": "src/stories/softobiz-ui/dialog-info/dialog-info.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dialog-info-success",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dialog-info-success.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogData",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        167,
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialogRef<DialogInfoDeleteSuccess>",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onCancelClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, Input } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { CouponsDeleteSuccessComponent, DialogData } from 'src/app/shared/components/dialog-box/coupons-delete-success/coupons-delete-success.component';\r\nimport { ErrorLayoutComponent } from '../errorLayout/errorLayout.component';\r\nimport { ChipComponent } from '../Chip/chip.component';\r\n\r\n@Component({\r\n  selector: 'app-dialog-info',\r\n  templateUrl: './dialog-info.component.html',\r\n  styleUrls: ['./dialog-info.component.scss'],\r\n})\r\nexport class DialogInfoComponent {\r\n  @Input() withIcon: boolean = false;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogInfoComponent>,\r\n    public dialog: MatDialog,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\r\n  ) {}\r\n\r\n  \r\n  dialogRefYes: any;\r\n  onYesClick() {\r\n    this.dialogRefYes = this.dialog.open(DialogInfoDeleteSuccess, {\r\n      width: '422px',\r\n      panelClass: 'dialog-curved',\r\n    });\r\n    console.log('open');\r\n  }\r\n  \r\n  onCancelClick(): void {\r\n    this.dialogRef.close(false);\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'dialog-info-success',\r\n  templateUrl: './dialog-info-success.html',\r\n})\r\nexport class DialogInfoDeleteSuccess {\r\n  constructor(public dialogRef: MatDialogRef<DialogInfoDeleteSuccess>, @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\r\n\r\n  onCancelClick(): void {\r\n    this.dialogRef.close(false);\r\n  }\r\n}\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<DialogInfoDeleteSuccess>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "data",
                        "type": "DialogData",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 41,
                "jsdoctags": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<DialogInfoDeleteSuccess>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "data",
                        "type": "DialogData",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"border-2 text-center coupons-dialog\">\r\n  <div class=\"close-dialog-icon\">\r\n      <mat-icon (click)=\"onCancelClick()\" class=\"material-symbols-outlined\">close</mat-icon>\r\n  </div>\r\n  <div class=\"mb-6\">\r\n      <img src=\"/coupons-delete-success.png\" alt=\"coupons-delete-success\">\r\n  </div>\r\n  <h1 class=\"mb-4\">Success</h1>\r\n  <!-- <span class=\"mat-body-1 mb-8 block\">{{data.module}} {{data.deleteId}} deleted successfully</span\r\n  > -->\r\n  <span class=\"mat-body-1 mb-8 block\"> deleted successfully</span\r\n  >\r\n  <div class=\"flex-center\">\r\n    <button mat-flat-button color=\"primary\" class=\"medium ml-2\" [mat-dialog-close]=\"true\" (click)=\"onCancelClick()\">Okay</button>\r\n  </div>\r\n</div>\r\n\r\n"
        },
        {
            "name": "EditCustomerDetailsComponent",
            "id": "component-EditCustomerDetailsComponent-75bdac5a457f7a234d5209ce9ff6a6fdc36628bddb590cd50280c07c5488886b91bf42a47d83426979423bc9717a00b8dbef7a3ab55065a483806a88766adf14",
            "file": "src/app/shared/components/dialog-box/edit-customer-details/edit-customer-details.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-edit-customer-details",
            "styleUrls": [
                "./edit-customer-details.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./edit-customer-details.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogData",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        167,
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialogRef<EditCustomerDetailsComponent>",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "popupType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\ninterface DialogData {\r\n  type: 'general' | 'address' | 'other';\r\n}\r\n\r\n@Component({\r\n  selector: 'app-edit-customer-details',\r\n  templateUrl: './edit-customer-details.component.html',\r\n  styleUrls: ['./edit-customer-details.component.scss'],\r\n})\r\nexport class EditCustomerDetailsComponent {\r\n  popupType: string;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<EditCustomerDetailsComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\r\n  ) {\r\n    this.popupType = data.type;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./edit-customer-details.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<EditCustomerDetailsComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "data",
                        "type": "DialogData",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<EditCustomerDetailsComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "data",
                        "type": "DialogData",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"main-bg border-2 overflow-hidden py-7 px-8\">\r\n    \r\n  <!--  -->\r\n  <!-- General Details Form Fields -->\r\n  <!--  -->\r\n\r\n  <div *ngIf=\"popupType == 'general'\">\r\n    <form>\r\n      <h3 class=\"black-text mb-7\">General Details</h3>\r\n      <div class=\"mb-4\">\r\n        <h4 class=\"black-text mb-2 mat-subtitle-2\">Company Name</h4>\r\n        <div class=\"input-wrapper no-sub\">\r\n          <mat-form-field appearance=\"outline\">\r\n            <input matInput placeholder=\"Company Name\" type=\"text\" />\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"mb-4\">\r\n        <h4 class=\"black-text mb-2 mat-subtitle-2\">Name</h4>\r\n        <div class=\"input-wrapper no-sub\">\r\n          <mat-form-field appearance=\"outline\">\r\n            <input matInput placeholder=\"Name\" type=\"text\" />\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"mb-4\">\r\n        <h4 class=\"black-text mb-2 mat-subtitle-2\">Email</h4>\r\n        <div class=\"input-wrapper no-sub\">\r\n          <mat-form-field appearance=\"outline\">\r\n            <input matInput placeholder=\"Email\" type=\"text\" />\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"mb-4\">\r\n        <h4 class=\"black-text mb-2 mat-subtitle-2\">Work Phone</h4>\r\n        <div class=\"input-wrapper no-sub\">\r\n          <mat-form-field appearance=\"outline\">\r\n            <input matInput placeholder=\"work phone\" type=\"number\" />\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n\r\n  <!--  -->\r\n  <!-- Address Form Fields -->\r\n  <!--  -->\r\n\r\n  <div *ngIf=\"popupType == 'address'\">\r\n    <form>\r\n      <h3 class=\"black-text mb-7\">Address</h3>\r\n      <div class=\"mb-4\">\r\n        <h4 class=\"black-text mb-2 mat-subtitle-2\">Billing Address</h4>\r\n        <div class=\"input-wrapper no-sub\">\r\n          <mat-form-field appearance=\"outline\">\r\n            <input matInput placeholder=\"billing address\" type=\"text\" />\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"mb-4\">\r\n        <h4 class=\"black-text mb-2 mat-subtitle-2\">Shipping Address</h4>\r\n        <div class=\"input-wrapper no-sub\">\r\n          <mat-form-field appearance=\"outline\">\r\n            <input matInput placeholder=\"shipping address\" type=\"text\" />\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n\r\n  <!--  -->\r\n  <!-- Other Details Form Fields -->\r\n  <!--  -->\r\n\r\n  <div *ngIf=\"popupType == 'other'\">\r\n    <form>\r\n      <h3 class=\"black-text mb-7\">Other Details</h3>\r\n      <div class=\"mb-4\">\r\n        <h4 class=\"black-text mb-2 mat-subtitle-2\">Customer Type</h4>\r\n        <div class=\"input-wrapper no-sub\">\r\n          <mat-form-field appearance=\"outline\">\r\n            <input matInput placeholder=\"customer Type\" type=\"text\" />\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"mb-4\">\r\n        <h4 class=\"black-text mb-2 mat-subtitle-2\">Currencies</h4>\r\n        <div class=\"input-wrapper no-sub\">\r\n          <mat-form-field appearance=\"outline\">\r\n            <input matInput placeholder=\"Currencies\" type=\"text\" />\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"mb-4\">\r\n        <h4 class=\"black-text mb-2 mat-subtitle-2\">Payment Terms</h4>\r\n        <div class=\"input-wrapper no-sub\">\r\n          <mat-form-field appearance=\"outline\">\r\n            <input matInput placeholder=\"Payment Terms\" type=\"text\" />\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"mb-4\">\r\n        <h4 class=\"black-text mb-2 mat-subtitle-2\">Portal Status</h4>\r\n        <div class=\"input-wrapper no-sub\">\r\n          <mat-form-field appearance=\"outline\">\r\n            <input matInput placeholder=\"portal status\" type=\"text\" />\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"flex align-center justify-end\">\r\n    <button mat-stroked-button class=\"mr-2\">\r\n      <span class=\"primary-text text-main\">Dismiss</span>\r\n    </button>\r\n    <button mat-flat-button color=\"primary\">Save</button>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "EditFeatureComponent",
            "id": "component-EditFeatureComponent-dd11ed974bdb1949b659f532fb84a1ad4c4601ac9c9d8675400a335e343f000dd9873a2bda70d4e09ec4c70ba5399670f9c10c769c1021e25dd3f4150377c0c4",
            "file": "src/app/modules/features/components/edit-feature/edit-feature.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-edit-feature",
            "styleUrls": [
                "./edit-feature.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./edit-feature.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "autosize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CdkTextareaAutosize",
                    "optional": false,
                    "description": "",
                    "line": 79,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'autosize'"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 87,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "featureForm",
                    "defaultValue": "this.formBuilder.group({\r\n    featureId: ['', Validators.required],\r\n    productID: ['', Validators.required],\r\n    name: [\r\n      '',\r\n      [\r\n        Validators.required,\r\n        Validators.maxLength(20),\r\n        Validators.pattern(/^[a-zA-Z0-9\\s]*$/),\r\n      ],\r\n    ],\r\n    description: ['', Validators.maxLength(500)],\r\n    type: ['', Validators.required],\r\n    unit: [null, Validators.required],\r\n    status: [false],\r\n    levels: this.formBuilder.array([\r\n      this.formBuilder.group({\r\n        isUnlimited: [false],\r\n        value: ['', Validators.required],\r\n        name: ['', Validators.required],\r\n      }),\r\n      this.formBuilder.group({\r\n        isUnlimited: [false],\r\n        value: ['', Validators.required],\r\n        name: ['', Validators.required],\r\n      }),\r\n    ]),\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "featureType",
                    "defaultValue": "feature_types",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "menuOptions[]",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "isRangeSelected",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "isUnlimited",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "limit",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "PageNumber",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "postName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "preName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "productId",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "search",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "sortBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"name\" | \"createdOn\"",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "sortOrder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"asc\" | \"desc\"",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "unlimitedButtonLabel",
                    "defaultValue": "'Set Unlimited'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                }
            ],
            "methodsClass": [
                {
                    "name": "addLevels",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "deleteLevels",
                    "args": [
                        {
                            "name": "levelIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 129,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "levelIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getLevelList",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 113,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDelete",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 300,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 236,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onTypeSelection",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 163,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openSuccess",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 304,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setName",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 153,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleUnlimited",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateForm",
                    "args": [
                        {
                            "name": "res",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 200,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "res",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CdkTextareaAutosize } from '@angular/cdk/text-field';\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport {\r\n  FormArray,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { ProductsService } from 'src/app/modules/products/services/products.service';\r\nimport { SuccessDialogComponent } from 'src/app/shared/components/dialog-box/success-dialog/success-dialog.component';\r\nimport {\r\n  Data_Type,\r\n  feature_types,\r\n  User_Data,\r\n} from 'src/app/shared/constants/consants';\r\nimport { FeatureService } from '../../services/feature.service';\r\n\r\nexport interface menuOptions {\r\n  value: number;\r\n  title: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-edit-feature',\r\n  templateUrl: './edit-feature.component.html',\r\n  styleUrls: ['./edit-feature.component.scss'],\r\n})\r\nexport class EditFeatureComponent {\r\n  featureType: menuOptions[] = feature_types;\r\n  subscription: Subscription;\r\n  isUnlimited: boolean = false;\r\n  preName: string = '';\r\n  postName: string = '';\r\n  position: any;\r\n  isRangeSelected: boolean = false;\r\n\r\n  unlimitedButtonLabel: string = 'Set Unlimited';\r\n  PageNumber: any = '';\r\n  limit: any = '';\r\n  search: string = '';\r\n  sortBy: 'name' | 'createdOn';\r\n  sortOrder: 'asc' | 'desc';\r\n  productId = [];\r\n  status: boolean;\r\n  featureForm: FormGroup = this.formBuilder.group({\r\n    featureId: ['', Validators.required],\r\n    productID: ['', Validators.required],\r\n    name: [\r\n      '',\r\n      [\r\n        Validators.required,\r\n        Validators.maxLength(20),\r\n        Validators.pattern(/^[a-zA-Z0-9\\s]*$/),\r\n      ],\r\n    ],\r\n    description: ['', Validators.maxLength(500)],\r\n    type: ['', Validators.required],\r\n    unit: [null, Validators.required],\r\n    status: [false],\r\n    levels: this.formBuilder.array([\r\n      this.formBuilder.group({\r\n        isUnlimited: [false],\r\n        value: ['', Validators.required],\r\n        name: ['', Validators.required],\r\n      }),\r\n      this.formBuilder.group({\r\n        isUnlimited: [false],\r\n        value: ['', Validators.required],\r\n        name: ['', Validators.required],\r\n      }),\r\n    ]),\r\n  });\r\n\r\n  @ViewChild('autosize') autosize: CdkTextareaAutosize;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private featureService: FeatureService,\r\n    private routes: Router,\r\n    private route: ActivatedRoute,\r\n    private productService: ProductsService,\r\n    public dialog: MatDialog,\r\n    private snackBar: MatSnackBar\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.productService\r\n      .getProducts(\r\n        this.PageNumber,\r\n        this.limit,\r\n        this.search,\r\n        this.sortBy,\r\n        this.sortOrder\r\n      )\r\n      .subscribe((data) => {\r\n        this.productId = data.map((res) => res.productId);\r\n      });\r\n    const id = this.route.snapshot.params['id'];\r\n\r\n    this.featureService.getFeatureById(id).subscribe((data) => {\r\n      this.updateForm(data);\r\n    });\r\n  }\r\n\r\n  get levels() {\r\n    return this.featureForm.controls['levels'] as FormArray;\r\n  }\r\n  getLevelList(index: number) {\r\n    const levelList = this.levels.at(index) as FormGroup;\r\n    return levelList;\r\n  }\r\n  addLevels() {\r\n    this.position = this.levels.controls.length + 1;\r\n    this.levels.insert(\r\n      this.position,\r\n      this.formBuilder.group({\r\n        isUnlimited: [false],\r\n        value: ['', Validators.required],\r\n        name: ['', Validators.required],\r\n      })\r\n    );\r\n  }\r\n\r\n  deleteLevels(levelIndex: number) {\r\n    this.levels.removeAt(levelIndex);\r\n  }\r\n  toggleUnlimited() {\r\n    this.position = this.levels.controls.length - 1;\r\n    const lastLevel = this.getLevelList(this.position);\r\n    this.postName = this.featureForm.value.unit;\r\n    if (this.isUnlimited) {\r\n      lastLevel.patchValue({\r\n        value: '',\r\n        name: '',\r\n      });\r\n      this.unlimitedButtonLabel = 'Set Unlimited';\r\n    } else {\r\n      lastLevel.patchValue({\r\n        isUnlimited: true,\r\n        value: 'Unlimited',\r\n        name: 'Unlimited' + ' ' + this.postName,\r\n      });\r\n      this.unlimitedButtonLabel = 'Set Custom Maximum';\r\n    }\r\n    this.isUnlimited = !this.isUnlimited;\r\n  }\r\n\r\n  setName(index: number) {\r\n    this.postName = this.featureForm.value.unit;\r\n    this.preName = this.featureForm.value.levels[index].value;\r\n    const displayName = this.preName + ' ' + this.postName + 's';\r\n    const currentIndex = this.getLevelList(index);\r\n    currentIndex.patchValue({\r\n      name: displayName,\r\n    });\r\n  }\r\n\r\n  onTypeSelection(value: string) {\r\n    if (value === 'switch') {\r\n      this.featureForm.removeControl('unit');\r\n    }\r\n    if (value === 'range') {\r\n      this.featureForm.addControl(\r\n        'unit',\r\n        this.formBuilder.control(null, Validators.required)\r\n      );\r\n      this.isRangeSelected = true;\r\n      let i = 0;\r\n      if (this.levels.length == 0) {\r\n        while (i < 2) {\r\n          this.addLevels();\r\n          i++;\r\n        }\r\n      }\r\n      while (this.levels.length > 2) {\r\n        this.levels.removeAt(2);\r\n      }\r\n    }\r\n    if (value === 'quantity' || value === 'custom') {\r\n      this.isRangeSelected = false;\r\n      this.featureForm.addControl(\r\n        'unit',\r\n        this.formBuilder.control(null, Validators.required)\r\n      );\r\n\r\n      let i = 0;\r\n      if (this.levels.length == 0) {\r\n        while (i < 2) {\r\n          this.addLevels();\r\n          i++;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  updateForm(res: any) {\r\n    if (res.status === 'active') {\r\n      this.status = true;\r\n    } else if (res.status === 'draft') {\r\n      this.status = false;\r\n    }\r\n    if (res.type === 'range') {\r\n      this.isRangeSelected = true;\r\n    }\r\n    this.featureForm.patchValue({\r\n      featureId: res.featureId,\r\n      productID: res.product.productId,\r\n      name: res.name,\r\n      description: res.description,\r\n      type: res.type,\r\n      status: this.status,\r\n      unit: res.unit,\r\n      levels: res.levels,\r\n    });\r\n    if (Array.isArray(res.levels) && res.levels.length >= 0) {\r\n      const levelsControl = this.featureForm.get('levels') as FormArray;\r\n      levelsControl.clear();\r\n\r\n      res.levels.forEach((level: any) => {\r\n        const levelGroup = this.formBuilder.group({\r\n          isUnlimited: [level.isUnlimited],\r\n          level: [level.level],\r\n          name: [level.name],\r\n          value: [level.value],\r\n        });\r\n\r\n        levelsControl.push(levelGroup);\r\n      });\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    this.levels.controls.forEach((ele, index) => {\r\n      if (!ele.get('level')) {\r\n        (<FormGroup>ele).addControl('level', new FormControl(index));\r\n      } else {\r\n        ele.get('level').setValue(index);\r\n      }\r\n    });\r\n\r\n    const status = this.featureForm.value.status ? 'active' : 'draft';\r\n    let feature: any = {\r\n      featureId: this.featureForm.value.featureId,\r\n      productID: this.featureForm.value.productID,\r\n      name: this.featureForm.value.name,\r\n      description: this.featureForm.value.description,\r\n      type: this.featureForm.value.type,\r\n      status: status,\r\n      levels: [],\r\n    };\r\n    if (this.featureForm.value.type === 'quantity') {\r\n      feature = {\r\n        ...feature,\r\n        unit: this.featureForm.value.unit,\r\n        levels: this.featureForm.value.levels,\r\n      };\r\n    } else if (this.featureForm.value.type === 'custom') {\r\n      const levels = this.featureForm.value.levels.map((level: any) => {\r\n        return {\r\n          ...level,\r\n          isUnlimited: '',\r\n        };\r\n      });\r\n      feature = {\r\n        ...feature,\r\n        unit: this.featureForm.value.unit,\r\n        levels: levels,\r\n      };\r\n    }\r\n\r\n    if (this.featureForm.value.type === 'range') {\r\n      feature = {\r\n        ...feature,\r\n        unit: this.featureForm.value.unit,\r\n        levels: this.featureForm.value.levels,\r\n      };\r\n    }\r\n    this.subscription = this.featureService\r\n      .updateFeature(this.featureForm.value.featureId, feature)\r\n      .subscribe({\r\n        next: (res: any) => {\r\n          this.openSuccess();\r\n          this.routes.navigate([`/features/view/${res.featureId}`]);\r\n          return res;\r\n        },\r\n        error: (error: any) => {\r\n          this.snackBar.open(error.error.message, '', {\r\n            duration: 5000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          })\r\n        },\r\n      });\r\n  }\r\n\r\n  onDelete() {\r\n    this.routes.navigate(['/features']);\r\n  }\r\n\r\n  openSuccess() {\r\n    this.dialog.open(SuccessDialogComponent, {\r\n      width: '420px',\r\n      data: {\r\n        module: 'Feature',\r\n        operation: 'is updated',\r\n      },\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./edit-feature.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "featureService",
                        "type": "FeatureService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "routes",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 79,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "featureService",
                        "type": "FeatureService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "routes",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "levels": {
                    "name": "levels",
                    "getSignature": {
                        "name": "levels",
                        "type": "",
                        "returnType": "",
                        "line": 110
                    }
                }
            },
            "templateData": "<div\r\n  class=\"form-with-sample flex main-bg border-2 w-full h-full overflow-scroll pt-2 pb- 5 px-6\"\r\n>\r\n  <div class=\"form-left\">\r\n    <div class=\"header-section\">\r\n      <div class=\"pt-10 pb-5 pl-6\">\r\n        <div class=\"flex align-center mb-2\">\r\n          <mat-icon\r\n            class=\"material-symbols-outlined pointer\"\r\n            color=\"primary\"\r\n            [routerLink]=\"'/features'\"\r\n            >keyboard_backspace</mat-icon\r\n          >\r\n          <span class=\"mat-h1 primary-text text-main ml-2\">Edit Feature</span>\r\n        </div>\r\n        <span class=\"pl-8 grey-text text-lighten-9 fs-lg\">\r\n          Fill in the details to update a new item\r\n        </span>\r\n      </div>\r\n    </div>\r\n    <form [formGroup]=\"featureForm\">\r\n      <div class=\"form-container pl-6 pr-10\">\r\n        <div class=\"input-wrapper\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Feature Name\r\n            </p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"featureName\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #featureName let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Feature name</div>\r\n                <div class=\"details\">\r\n                  Enter a name that helps you identify this Feature.\r\n                </div>\r\n                <button mat-button color=\"primary\" class=\"px-0\">\r\n                  Learn more\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n            <input\r\n              required\r\n              matInput\r\n              placeholder=\"Enter here\"\r\n              formControlName=\"name\"\r\n            />\r\n            <mat-error\r\n              *ngIf=\"\r\n                featureForm.controls['name'].invalid &&\r\n                featureForm.controls['name'].touched\r\n              \"\r\n            >\r\n              <ng-container\r\n                *ngIf=\"featureForm.controls['name'].errors['required']\"\r\n              >\r\n                Name is required and cannot be left empty.\r\n              </ng-container>\r\n              <ng-container\r\n                *ngIf=\"featureForm.controls['name'].errors['maxlength']\"\r\n              >\r\n                Name cannot exceed 20 characters.\r\n              </ng-container>\r\n              <ng-container\r\n                *ngIf=\"featureForm.controls['name'].errors['pattern']\"\r\n              >\r\n                Name cannot contain special characters.\r\n              </ng-container>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"input-wrapper\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Select Product\r\n            </p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"selectProduct\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #selectProduct let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Product</div>\r\n                <div class=\"details\">\r\n                  Please select a product to create a feature to it.\r\n                </div>\r\n                <button mat-button color=\"primary\" class=\"px-0\">\r\n                  Learn more\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n            <!-- <mat-label> Select </mat-label> -->\r\n            <mat-select\r\n              required\r\n              formControlName=\"productID\"\r\n              placeholder=\"select\"\r\n            >\r\n              <mat-option\r\n                *ngFor=\"let product of productId\"\r\n                value=\"{{ product }}\"\r\n              >\r\n                {{ product }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"input-wrapper\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">Feature ID</p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"helpinfotooltip\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #helpinfotooltip let-name>\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Feature id</div>\r\n                <div class=\"details\">\r\n                  Please enter a Customized Id.If user do not enter this field,\r\n                  the system will generate a 'Customized Human-Readable-id'\r\n                  based on the Name field.\r\n                  <div>\r\n                    e.g. Feature Name: \"Analytics Reporting\" FeatureId:\r\n                    \"analytics-reporting-01\".\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n            <input\r\n              required\r\n              matInput\r\n              readonly\r\n              placeholder=\"Enter here\"\r\n              formControlName=\"featureId\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"input-wrapper\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Feature Type\r\n            </p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"type\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #type let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Feature type</div>\r\n                <div class=\"details\">\r\n                  Select how entitlements to this feature can be set in plans,\r\n                  addons, and charges.\r\n                </div>\r\n                <button mat-button color=\"primary\" class=\"px-0\">\r\n                  Learn more\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n            <mat-select required formControlName=\"type\" placeholder=\"select\">\r\n              <mat-option\r\n                *ngFor=\"let type of featureType\"\r\n                value=\"{{ type.title }}\"\r\n                (click)=\"onTypeSelection(type.title)\"\r\n              >\r\n                {{ type.title }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"input-wrapper\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Description\r\n            </p>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <textarea\r\n              rows=\"4\"\r\n              matInput\r\n              placeholder=\"Enter here...\"\r\n              formControlName=\"description\"\r\n            ></textarea>\r\n            <mat-error\r\n              *ngIf=\"\r\n                featureForm.controls['description'].invalid &&\r\n                featureForm.controls['description'].touched\r\n              \"\r\n            >\r\n              <ng-container\r\n                *ngIf=\"featureForm.controls['description'].errors['maxlength']\"\r\n              >\r\n                Description cannot exceed 500 characters.\r\n              </ng-container>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div\r\n          class=\"input-wrapper\"\r\n          *ngIf=\"\r\n            this.featureForm.value.type &&\r\n            this.featureForm.value.type != 1 &&\r\n            this.featureForm.value.type !== 'switch'\r\n          \"\r\n        >\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Entitlement Units\r\n            </p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"selectProduct\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #selectProduct let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Entitlement Units</div>\r\n                <div class=\"details\">\r\n                  Please select a product to create a feature to it.\r\n                </div>\r\n                <button mat-button color=\"primary\" class=\"px-0\">\r\n                  Learn more\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n            <input\r\n              required\r\n              matInput\r\n              placeholder=\"Enter here\"\r\n              formControlName=\"unit\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n        <div *ngIf=\"this.featureForm.value.unit\">\r\n          <ng-container formArrayName=\"levels\">\r\n            <ng-container\r\n              *ngFor=\"let element of levels.controls; let i = index\"\r\n            >\r\n              <div class=\"flex align-center wrap mb-3\" [formGroupName]=\"i\">\r\n                <div class=\"flex align-center wrap w-88\">\r\n                  <div class=\"input-wrapper pr-2\">\r\n                    <div class=\"flex align-center mb-2\">\r\n                      <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n                        Entitlement\r\n                      </p>\r\n                    </div>\r\n                    <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n                      <input\r\n                        (input)=\"setName(i)\"\r\n                        required\r\n                        matInput\r\n                        placeholder=\"Enter here\"\r\n                        formControlName=\"value\"\r\n                      />\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"input-wrapper\">\r\n                    <div class=\"flex align-center mb-2\">\r\n                      <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n                        Display Name\r\n                      </p>\r\n                    </div>\r\n                    <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n                      <input\r\n                        matInput\r\n                        placeholder=\"Enter here\"\r\n                        formControlName=\"name\"\r\n                      />\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n                <button\r\n                  *ngIf=\"i == 0\"\r\n                  mat-stroked-button\r\n                  disableRipple\r\n                  class=\"upper-case primary light medium px-1 ml-2\"\r\n                >\r\n                  Default\r\n                </button>\r\n                <button\r\n                  *ngIf=\"\r\n                    levels.controls.length > 1 &&\r\n                    i < levels.controls.length - 1 &&\r\n                    i != 0\r\n                  \"\r\n                  mat-stroked-button\r\n                  disableRipple\r\n                  class=\"upper-case primary light medium px-1 ml-2\"\r\n                  (click)=\"deleteLevels(i)\"\r\n                >\r\n                  Remove\r\n                </button>\r\n                <button\r\n                  *ngIf=\"i == levels.controls.length - 1\"\r\n                  mat-stroked-button\r\n                  disableRipple\r\n                  class=\"upper-case primary light medium px-1 ml-2\"\r\n                >\r\n                  Maximum\r\n                </button>\r\n              </div>\r\n            </ng-container>\r\n          </ng-container>\r\n          <div>\r\n            <button mat-stroked-button (click)=\"toggleUnlimited()\">\r\n              <mat-icon class=\"add-course-btn\"></mat-icon\r\n              >{{ unlimitedButtonLabel }}\r\n            </button>\r\n          </div>\r\n          <button\r\n            mat-stroked-button\r\n            (click)=\"addLevels()\"\r\n            *ngIf=\"!isRangeSelected\"\r\n          >\r\n            <mat-icon class=\"add-course-btn\"></mat-icon>Add Entitlement\r\n          </button>\r\n        </div>\r\n        <div class=\"action-btns flex align-center justify-between\">\r\n          <mat-checkbox\r\n            color=\"primary\"\r\n            formControlName=\"status\"\r\n            class=\"font-weight-500 checkbox ml-n-3\"\r\n            >Active</mat-checkbox\r\n          >\r\n          <div>\r\n            <button\r\n              mat-stroked-button\r\n              color=\"primary\"\r\n              class=\"mr-2 large\"\r\n              (click)=\"onDelete()\"\r\n            >\r\n              Dismiss\r\n            </button>\r\n            <button\r\n              mat-flat-button\r\n              color=\"primary\"\r\n              class=\"large\"\r\n              type=\"button\"\r\n              (click)=\"onSubmit()\"\r\n              [disabled]=\"\r\n                featureForm.invalid && this.featureForm.value.type !== 'switch'\r\n              \"\r\n            >\r\n              Update\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"sample-right h-auto\">\r\n    <div class=\"py-5 pr-4 pl-8\">\r\n      <div class=\"heading-with-background mb-2\">Sample Feature</div>\r\n      <div class=\"text-text text-primary mb-2\">\r\n        <h3 class=\"fw-500 m-0\">Switch Feature</h3>\r\n        <p class=\"mat-h4\">\r\n          This feature type has 2 entitlement levels- \"available\" and \"not\r\n          available\".\r\n        </p>\r\n        <button mat-button color=\"primary\" class=\"medium px-1\">\r\n          Try a Sample\r\n        </button>\r\n      </div>\r\n      <div class=\"text-text text-primary mb-2\">\r\n        <h3 class=\"fw-500 m-0\">Range Feature</h3>\r\n        <p class=\"mat-h4\">\r\n          This feature supports range based entitlements. For eg : Customer’s\r\n          access can be between 100 and 300 API / minute.\r\n        </p>\r\n        <button mat-button color=\"primary\" class=\"medium px-1\">\r\n          Try a Sample\r\n        </button>\r\n      </div>\r\n      <div class=\"text-text text-primary mb-2\">\r\n        <h3 class=\"fw-500 m-0\">Quantity Feature</h3>\r\n        <p class=\"mat-h4\">\r\n          This feature type has numbered entitlement levels- For eg : 2,3,4 or\r\n          10 user licenses.\r\n        </p>\r\n        <button mat-button color=\"primary\" class=\"medium px-1\">\r\n          Try a Sample\r\n        </button>\r\n      </div>\r\n      <div class=\"text-text text-primary\">\r\n        <h3 class=\"fw-500 m-0\">Custom Feature</h3>\r\n        <p class=\"mat-h4\">\r\n          This feature supports range based entitlements. For eg : Customer’s\r\n          access can be between 100 and 300 API / minute.\r\n        </p>\r\n        <button mat-button color=\"primary\" class=\"medium px-1\">\r\n          Try a Sample\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "EditProductComponent",
            "id": "component-EditProductComponent-b27ca358404d1656353aa7cb5b9cd0bb2c89a1461e6460addbbbaf48f4d134e5c32b65cb2ee65b53d6bc45c38f0d781d9395e1ca2a7c9ed7d096fc1892cc42b2",
            "file": "src/app/modules/products/components/edit-product/edit-product.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-edit-product",
            "styleUrls": [
                "./edit-product.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./edit-product.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "environment",
                    "defaultValue": "environment",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "getProductImageUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "imagePath",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "imageUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "imageUrlName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "isImageUploaded",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "postForm",
                    "defaultValue": "this.formBuilder.group({\r\n    productId: ['', Validators.required],\r\n    name: [\r\n      '',\r\n      [\r\n        Validators.required,\r\n        Validators.maxLength(20),\r\n        Validators.pattern(/^[a-zA-Z0-9\\s]*$/),\r\n      ],\r\n    ],\r\n    description: ['', Validators.maxLength(500)],\r\n    status: [true],\r\n    imageUrl: ['', Validators.required],\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "product$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "productsData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "uploadMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "uploadSuccess",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 44
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 160,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDelete",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openDialog",
                    "args": [
                        {
                            "name": "enterAnimationDuration",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "exitAnimationDuration",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "enterAnimationDuration",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "exitAnimationDuration",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openSuccess",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 136,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "populateForm",
                    "args": [
                        {
                            "name": "res",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 146,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "res",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "startMessageTimer",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { DialogAnimationsDialog } from '../create-product/create-product.component';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { animate, style, transition, trigger } from '@angular/animations';\r\nimport { ProductsService } from '../../services/products.service';\r\nimport { Observable, Subscription} from 'rxjs';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { SuccessDialogComponent } from 'src/app/shared/components/dialog-box/success-dialog/success-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-edit-product',\r\n  templateUrl: './edit-product.component.html',\r\n  styleUrls: ['./edit-product.component.scss'],\r\n  animations: [\r\n    trigger('slideInOut', [\r\n      transition(':enter', [\r\n        style({ transform: 'translateY(-100%)' }),\r\n        animate('200ms ease-in', style({ transform: 'translateY(0%)' })),\r\n      ]),\r\n      transition(':leave', [\r\n        animate('200ms ease-in', style({ transform: 'translateY(-100%)' })),\r\n      ]),\r\n    ]),\r\n  ],\r\n})\r\nexport class EditProductComponent implements OnInit {\r\n  imageUrl: string = '';\r\n  isImageUploaded: boolean = false;\r\n  getProductImageUrl: string;\r\n  environment = environment;\r\n  imagePath: string;\r\n  product$: Observable<any>;\r\n  subscription: Subscription;\r\n  productsData = [];\r\n  status: boolean;\r\n  imageUrlName: string;\r\n  uploadMessage: string = '';\r\n  uploadSuccess: boolean = false;\r\n  postForm = this.formBuilder.group({\r\n    productId: ['', Validators.required],\r\n    name: [\r\n      '',\r\n      [\r\n        Validators.required,\r\n        Validators.maxLength(20),\r\n        Validators.pattern(/^[a-zA-Z0-9\\s]*$/),\r\n      ],\r\n    ],\r\n    description: ['', Validators.maxLength(500)],\r\n    status: [true],\r\n    imageUrl: ['', Validators.required],\r\n  });\r\n\r\n  constructor(\r\n    private productService: ProductsService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    public dialog: MatDialog,\r\n    private snackBar: MatSnackBar\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    const id = this.route.snapshot.params['id'];\r\n    this.productService.getProductById(id).subscribe((data) => {\r\n      this.populateForm(data);\r\n      this.getProductImageUrl = data.imageUrl;\r\n      this.imagePath = this.environment.blobStorage;\r\n    });\r\n  }\r\n  startMessageTimer(): void {\r\n    const duration = 5000;\r\n    setTimeout(() => {\r\n      this.isImageUploaded = false;\r\n      this.uploadMessage = '';\r\n    }, duration);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.postForm.get('imageUrl')?.setValue(this.imageUrlName);\r\n    const status = this.postForm.value.status ? 'active' : 'draft';\r\n    const product = {\r\n      ...this.postForm.value,\r\n      status: status,\r\n    };\r\n    this.subscription = this.productService\r\n      .editProduct(this.postForm.value.productId, product)\r\n      .subscribe({\r\n        next: (data) => {\r\n          this.openSuccess();\r\n          this.router.navigate([`/products/view-product/${data.productId}`]);\r\n        },\r\n        error: (error: any) => {\r\n          this.snackBar.open(error.error.message, '', {\r\n            duration: 5000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          })\r\n        },\r\n      });\r\n  }\r\n  onDelete() {\r\n    this.router.navigate(['/products']);\r\n  }\r\n\r\n  openDialog(\r\n    enterAnimationDuration: string,\r\n    exitAnimationDuration: string\r\n  ): void {\r\n    const dialogRef = this.dialog.open(DialogAnimationsDialog, {\r\n      width: '',\r\n      enterAnimationDuration,\r\n      exitAnimationDuration,\r\n    });\r\n    dialogRef.componentInstance.saveSuccess.subscribe((imageUrl: string) => {\r\n      this.imageUrl = imageUrl;\r\n      this.imageUrlName = this.imageUrl['imageUrl'];\r\n      this.uploadSuccess = true;\r\n      this.uploadMessage = 'Image upload successful';\r\n      this.startMessageTimer();\r\n    }\r\n    );\r\n    dialogRef.componentInstance.saveError.subscribe((res: any) => {\r\n      this.uploadSuccess = false;\r\n      this.uploadMessage = 'Image upload failed. Please try again.';\r\n      this.startMessageTimer();\r\n    });\r\n  }\r\n\r\n  openSuccess() {\r\n    this.dialog.open(SuccessDialogComponent, {\r\n      width: '420px',\r\n      data: {\r\n        module: 'Product',\r\n        operation: 'is updated',\r\n      },\r\n    });\r\n  }\r\n\r\n  populateForm(res: any) {\r\n    if (res.status === 'active') {\r\n      this.status = true;\r\n    } else if (res.status === 'draft') {\r\n      this.status = false;\r\n    }\r\n    this.postForm.setValue({\r\n      name: res.name,\r\n      description: res.description,\r\n      productId: res.productId,\r\n      status: this.status,\r\n      imageUrl: res.imageUrl,\r\n    });\r\n  }\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n.upload-message {\r\n  font-weight: bold;\r\n}\r\n\r\n.upload-message.success {\r\n  color: green;\r\n}\r\n\r\n.upload-message.error {\r\n  color: red;\r\n}",
                    "styleUrl": "./edit-product.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 58,
                "jsdoctags": [
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"create-product-wrapper\">\r\n  <div class=\"header-section pt-6 pb-6\">\r\n    <div class=\"flex align-center\">\r\n      <mat-icon\r\n        class=\"material-symbols-outlined pointer\"\r\n        color=\"primary\"\r\n        [routerLink]=\"'/products'\"\r\n        >keyboard_backspace</mat-icon\r\n      >\r\n      <p class=\"mat-h1 primary-text text-main\">Edit Product</p>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-block pt-6\">\r\n    <div class=\"form-block pt-6\">\r\n      <div\r\n        *ngIf=\"uploadMessage\"\r\n        class=\"upload-message\"\r\n        [ngClass]=\"{ success: uploadSuccess, error: !uploadSuccess }\"\r\n      >\r\n        {{ uploadMessage }}\r\n      </div>\r\n\r\n      <div class=\"user-img-wrapper flex align-center\">\r\n        <div\r\n          class=\"user-avatar flex align-center justify-center\"\r\n          *ngIf=\"\r\n            getProductImageUrl &&\r\n              getProductImageUrl.length > 0 &&\r\n              !isImageUploaded;\r\n            else upload\r\n          \"\r\n        >\r\n          <img src=\"{{ imagePath + getProductImageUrl }}\" />\r\n        </div>\r\n        <!-- <div\r\n          class=\"user-avatar flex align-center justify-center\"\r\n          *ngIf=\"imageUrlName && imageUrlName.length > 0\"\r\n        >\r\n          <img src=\"{{ imagePath + imageUrlName }}\" />\r\n        </div> -->\r\n\r\n        <ng-template #upload>\r\n          <div class=\"user-avatar flex align-center justify-center\">\r\n            <img\r\n              src=\"../.././../../assets/images/no-image.logo.jpg\"\r\n              alt=\"product-img\"\r\n            />\r\n          </div>\r\n        </ng-template>\r\n\r\n        <div class=\"ml-6\">\r\n          <div class=\"upload-actions\">\r\n            <div class=\"flex align-center\">\r\n              <button mat-stroked-button color=\"primary\" class=\"mr-3\">\r\n                Remove\r\n              </button>\r\n              <button\r\n                mat-flat-button\r\n                color=\"primary\"\r\n                (click)=\"openDialog('0ms', '0ms')\"\r\n              >\r\n                Upload\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <p class=\"mat-caption text-light font-weight-500 mt-3\">\r\n            Allowed JPG, GIF or PNG. Max size of 800K\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"input-wrapper mt-8\">\r\n      <form [formGroup]=\"postForm\">\r\n        <div>\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Product Name\r\n            </p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"productnameinfo\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              tippyName=\"content\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #productnameinfo let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Product name</div>\r\n                <div class=\"details\">\r\n                  Enter a name that helps you identify this Product\r\n                </div>\r\n                <button mat-button color=\"primary\" class=\"px-0\">\r\n                  Learn more\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <input\r\n              matInput\r\n              placeholder=\"Enter here...\"\r\n              formControlName=\"name\"\r\n            />\r\n            <mat-error\r\n              *ngIf=\"\r\n                postForm.controls['name'].invalid &&\r\n                postForm.controls['name'].touched\r\n              \"\r\n            >\r\n              <ng-container\r\n                *ngIf=\"postForm.controls['name'].errors['required']\"\r\n              >\r\n                Name is required and cannot be left empty.\r\n              </ng-container>\r\n              <ng-container\r\n                *ngIf=\"postForm.controls['name'].errors['maxlength']\"\r\n              >\r\n                Name cannot exceed 20 characters.\r\n              </ng-container>\r\n              <ng-container *ngIf=\"postForm.controls['name'].errors['pattern']\">\r\n                Name cannot contain special characters.\r\n              </ng-container>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Description\r\n            </p>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <textarea\r\n              matInput\r\n              placeholder=\"Enter here...\"\r\n              formControlName=\"description\"\r\n            ></textarea>\r\n            <mat-error\r\n              *ngIf=\"\r\n                postForm.controls['description'].invalid &&\r\n                postForm.controls['description'].touched\r\n              \"\r\n            >\r\n              <ng-container\r\n                *ngIf=\"postForm.controls['description'].errors['maxlength']\"\r\n              >\r\n                Description cannot exceed 500 characters.\r\n              </ng-container>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">Product ID</p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"helpinfotooltip\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #helpinfotooltip let-name>\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Description</div>\r\n                <div class=\"details\">\r\n                  Enter a id that helps you identify this Product\r\n                </div>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <input\r\n              matInput\r\n              readonly\r\n              placeholder=\"Enter here...\"\r\n              formControlName=\"productId\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"action-btns flex align-center justify-between\">\r\n          <mat-checkbox\r\n            color=\"primary\"\r\n            class=\"font-weight-500 checkbox ml-n-3\"\r\n            formControlName=\"status\"\r\n            >Active</mat-checkbox\r\n          >\r\n          <div>\r\n            <button\r\n              mat-stroked-button\r\n              color=\"primary\"\r\n              class=\"mr-2 large\"\r\n              (click)=\"onDelete()\"\r\n            >\r\n              Dismiss\r\n            </button>\r\n            <button\r\n              mat-flat-button\r\n              color=\"primary\"\r\n              class=\"large\"\r\n              type=\"submit\"\r\n              (click)=\"onSubmit()\"\r\n            >\r\n              Update\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <!-- </div> -->\r\n</div>\r\n"
        },
        {
            "name": "EditProductDetailsComponent",
            "id": "component-EditProductDetailsComponent-6a67ce28e2c91c37ca926bb779e3c57c9420476da99af638ad327cd9f17d05058719d775d3c5479d4f9697fe33174096dc0f7676fcdebe86877cb8a1f14f6458",
            "file": "src/app/modules/plans/components/edit-product-details/edit-product-details.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-edit-product-details",
            "styleUrls": [
                "./edit-product-details.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./edit-product-details.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 66,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "[\r\n    'select',\r\n    'position',\r\n    'name',\r\n    'status',\r\n    'symbol',\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "featureDetails",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "isAvailable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "isProductIdSelected",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "limit",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "PageNumber",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "productData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "productForm",
                    "defaultValue": "this.formBuilder.group({\r\n    productID: ['', Validators.required],\r\n    productName: ['', Validators.required],\r\n    description: [''],\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "search",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "selected",
                    "defaultValue": "'option1'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "selectedFeatures",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PeriodicElement[]",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "selectedProduct",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "selection",
                    "defaultValue": "new SelectionModel<PeriodicElement>(true, [])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "selectProductId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "sortBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"name\" | \"createdOn\"",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "sortOrder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"asc\" | \"desc\"",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 48
                }
            ],
            "methodsClass": [
                {
                    "name": "checkboxLabel",
                    "args": [
                        {
                            "name": "row",
                            "type": "PeriodicElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 173,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nThe label for the checkbox on the passed row",
                    "description": "<p>The label for the checkbox on the passed row</p>\n",
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "PeriodicElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isAllSelected",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 156,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhether the number of selected elements matches the total number of rows.",
                    "description": "<p>Whether the number of selected elements matches the total number of rows.</p>\n"
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDelete",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 141,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openSuccess",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectProduct",
                    "args": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleAllRows",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 163,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSelects all rows if they are not all selected; otherwise clear selection.",
                    "description": "<p>Selects all rows if they are not all selected; otherwise clear selection.</p>\n"
                },
                {
                    "name": "toggleCheckbox",
                    "args": [
                        {
                            "name": "row",
                            "type": "PeriodicElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 180,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "PeriodicElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ProductsService } from 'src/app/modules/products/services/products.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { PlanService } from '../../services/plan.service';\r\nimport { SuccessDialogComponent } from 'src/app/shared/components/dialog-box/success-dialog/success-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\nexport interface PeriodicElement {\r\n  featureId: string;\r\n  value: string;\r\n  type?: string;\r\n  levels: { featureID: string; value: string }[];\r\n  name: string;\r\n  position: number | string;\r\n  status: string;\r\n  symbol: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-edit-product-details',\r\n  templateUrl: './edit-product-details.component.html',\r\n  styleUrls: ['./edit-product-details.component.scss'],\r\n})\r\nexport class EditProductDetailsComponent implements OnInit {\r\n  selected = 'option1';\r\n  displayedColumns: string[] = [\r\n    'select',\r\n    'position',\r\n    'name',\r\n    'status',\r\n    'symbol',\r\n  ];\r\n  selection = new SelectionModel<PeriodicElement>(true, []);\r\n\r\n  PageNumber: any = '';\r\n  limit: any = '';\r\n  search: string = '';\r\n  sortBy: 'name' | 'createdOn';\r\n  sortOrder: 'asc' | 'desc';\r\n  productData: any = [];\r\n  id: string;\r\n  selectProductId: string = '';\r\n  featureDetails: any = [];\r\n  subscription: Subscription;\r\n  isProductIdSelected: boolean = true;\r\n  selectedProduct: any;\r\n  selectedFeatures: PeriodicElement[] = [];\r\n  isAvailable: boolean = true;\r\n\r\n  productForm: FormGroup = this.formBuilder.group({\r\n    productID: ['', Validators.required],\r\n    productName: ['', Validators.required],\r\n    description: [''],\r\n  });\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private routes: Router,\r\n    private productService: ProductsService,\r\n    private route: ActivatedRoute,\r\n    private planService: PlanService,\r\n    public dialog: MatDialog\r\n  ) {}\r\n  ngOnInit(): void {\r\n    this.id = this.route.snapshot.params['id'];\r\n    this.planService.getProductVariantById(this.id).subscribe((data) => {\r\n      console.log('a', data);\r\n      this.selectProductId = data.productID;\r\n      this.featureDetails = data.features;\r\n\r\n      this.productService\r\n        .getProducts(\r\n          this.PageNumber,\r\n          this.limit,\r\n          this.search,\r\n          this.sortBy,\r\n          this.sortOrder\r\n        )\r\n        .subscribe((data) => {\r\n          this.productData = data;\r\n\r\n          const selectedProduct = this.productData.find(\r\n            (product) => product.productId === this.selectProductId\r\n          );\r\n          if (selectedProduct) {\r\n            this.selectProduct(selectedProduct.productId);\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  selectProduct(productId: string) {\r\n    this.selectedProduct = this.productData.find(\r\n      (product) => product.productId === productId\r\n    );\r\n    if (this.selectedProduct) {\r\n      this.productForm.patchValue({\r\n        productName: this.selectedProduct.name,\r\n        description: this.selectedProduct.description,\r\n      });\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    const productVariant = {\r\n      type: 'base',\r\n      status: 'active',\r\n      features: this.selectedFeatures.map((features) => {\r\n        if (features.type === 'quantity') {\r\n          return {\r\n            featureID: features.featureId,\r\n            value: features.value,\r\n          };\r\n        } else {\r\n          return {\r\n            featureID: features.featureId,\r\n            value: this.isAvailable ? true : false,\r\n          };\r\n        }\r\n      }),\r\n    };\r\n\r\n    this.subscription = this.planService\r\n      .updateProductVariant(this.id, productVariant)\r\n      .subscribe({\r\n        next: (res: any) => {\r\n          this.openSuccess();\r\n          this.routes.navigate(['/plans/create']);\r\n          return res;\r\n        },\r\n        error: (err: any) => {\r\n          console.log('something wrong occured', err);\r\n        },\r\n      });\r\n  }\r\n\r\n  onDelete() {\r\n    this.routes.navigate(['/plans/create']);\r\n  }\r\n\r\n  openSuccess() {\r\n    this.dialog.open(SuccessDialogComponent, {\r\n      width: '420px',\r\n      data: {\r\n        module: 'Product-variant',\r\n        operation: 'is updated',\r\n      },\r\n    });\r\n  }\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.productData.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  toggleAllRows() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n\r\n    this.selection.select(...this.productData);\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: PeriodicElement): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row `;\r\n  }\r\n\r\n  toggleCheckbox(row: PeriodicElement) {\r\n    this.selection.toggle(row);\r\n    if (this.selection.isSelected(row)) {\r\n      this.selectedFeatures.push(row);\r\n    } else {\r\n      const index = this.selectedFeatures.findIndex(\r\n        (feature) => feature.featureId === row.featureId\r\n      );\r\n      if (index !== -1) {\r\n        this.selectedFeatures.splice(index, 1);\r\n      }\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./edit-product-details.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "routes",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "planService",
                        "type": "PlanService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 58,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "routes",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "planService",
                        "type": "PlanService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div\r\n  class=\"plan-product-details main-bg w-full h-full overflow-auto border-2 py-8 pl-11 pr-10\"\r\n>\r\n  <div class=\"flex align-center justify-between mb-2\">\r\n    <div class=\"flex align-center\">\r\n      <mat-icon\r\n        class=\"material-symbols-outlined pointer\"\r\n        color=\"primary\"\r\n        [routerLink]=\"'/plans/create'\"\r\n        >keyboard_backspace</mat-icon\r\n      >\r\n\r\n      <span class=\"mat-h1 primary-text text-main ml-2\">Create Plan</span>\r\n    </div>\r\n\r\n    <div class=\"flex align-center\">\r\n      <button\r\n        mat-stroked-button\r\n        color=\"primary\"\r\n        class=\"mr-2\"\r\n        (click)=\"onDelete()\"\r\n      >\r\n        Dismiss\r\n      </button>\r\n\r\n      <button mat-flat-button color=\"primary\" (click)=\"onSubmit()\">Save</button>\r\n    </div>\r\n  </div>\r\n  <div class=\"flex align-center\">\r\n    <span class=\"pl-8 grey-text text-lighten-9\"> Create plan </span>\r\n    <mat-icon class=\"material-symbols-outlined mx-2 small-icon\">\r\n      chevron_right\r\n    </mat-icon>\r\n    <span class=\"shades-text text-black fw-500\">Add Product</span>\r\n  </div>\r\n  <div class=\"mt-8\">\r\n    <div class=\"py-2\">\r\n      <div class=\"input-wrapper\">\r\n        <div class=\"flex align-center mb-2\">\r\n          <p class=\"mat-subtitle-2 font-weight-500 input-label\">Product</p>\r\n          <mat-icon\r\n            class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n            [ngxTippy]=\"producthelpinfotooltip\"\r\n            [tippyProps]=\"{ placement: 'right' }\"\r\n            >help</mat-icon\r\n          >\r\n          <ng-template #producthelpinfotooltip let-name>\r\n            <div class=\"help-info-tooltip\">\r\n              <div class=\"heading-with-background\">Product</div>\r\n              <div class=\"details\">\r\n                Please select the product to include it in the Plan\r\n              </div>\r\n              <button mat-button color=\"primary\" class=\"px-0\">\r\n                Learn more\r\n              </button>\r\n            </div>\r\n          </ng-template>\r\n        </div>\r\n        <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n          <mat-select\r\n            required\r\n            [(ngModel)]=\"selectProductId\"\r\n            placeholder=\"select\"\r\n            (selectionChange)=\"selectProduct($event.value)\"\r\n          >\r\n            <mat-option\r\n              *ngFor=\"let product of productData\"\r\n              [value]=\"product.productId\"\r\n              >{{ product.productId }}</mat-option\r\n            >\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <div>\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label disabled\">\r\n              Product Name\r\n            </p>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <input\r\n              matInput\r\n              [disabled]=\"true\"\r\n              [value]=\"selectedProduct?.name\"\r\n              placeholder=\"Select\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div>\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label disabled\">\r\n              Description\r\n            </p>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <textarea\r\n              matInput\r\n              [disabled]=\"true\"\r\n              [value]=\"selectedProduct?.description\"\r\n              placeholder=\"Enter \"\r\n            ></textarea>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"add-product-table\">\r\n          <p\r\n            class=\"mat-subtitle-2 font-weight-500 text-primary py-2 mb-3 table-heading\"\r\n          >\r\n            Feature for this plan\r\n          </p>\r\n          <div class=\"relative main-bg border-2\">\r\n            <div class=\"checked-stripe-table\">\r\n              <table mat-table [dataSource]=\"featureDetails\">\r\n                <!-- Checkbox Column -->\r\n                <ng-container matColumnDef=\"select\">\r\n                  <th mat-header-cell *matHeaderCellDef>\r\n                    <mat-checkbox\r\n                      (change)=\"$event ? toggleAllRows() : null\"\r\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                      [aria-label]=\"checkboxLabel()\"\r\n                    >\r\n                    </mat-checkbox>\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let row\">\r\n                    <mat-checkbox\r\n                      (click)=\"$event.stopPropagation()\"\r\n                      (change)=\"$event ? toggleCheckbox(row) : null\"\r\n                      [checked]=\"selection.isSelected(row)\"\r\n                      [aria-label]=\"checkboxLabel(row)\"\r\n                    >\r\n                    </mat-checkbox>\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <!-- Position Column -->\r\n                <ng-container matColumnDef=\"position\">\r\n                  <th mat-header-cell *matHeaderCellDef class=\"font-weight-500\">\r\n                    Name\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let feature\">\r\n                    {{ feature.featureId }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <!-- Name Column -->\r\n                <ng-container matColumnDef=\"name\">\r\n                  <th mat-header-cell *matHeaderCellDef class=\"font-weight-500\">\r\n                    Type\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let feature\">{{ feature.type }}</td>\r\n                </ng-container>\r\n\r\n                <!-- Weight Column -->\r\n                <ng-container matColumnDef=\"status\">\r\n                  <th mat-header-cell *matHeaderCellDef class=\"font-weight-500\">\r\n                    Status\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let feature\">\r\n                    {{ feature.status }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <!-- Symbol Column -->\r\n                <ng-container matColumnDef=\"symbol\">\r\n                  <th mat-header-cell *matHeaderCellDef class=\"font-weight-500\">\r\n                    Entitlements\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let feature\">\r\n                    <ng-container\r\n                      *ngIf=\"feature.type === 'quantity'; else switchFeature\"\r\n                    >\r\n                      {{ feature.value }}\r\n                    </ng-container>\r\n                    <ng-template #switchFeature>\r\n                      <mat-form-field\r\n                        appearance=\"fill\"\r\n                        subscriptSizing=\"dynamic\"\r\n                      >\r\n                        <mat-select [(value)]=\"selected\" errorState=\"false\">\r\n                          <mat-option value=\"option1\">Available</mat-option>\r\n                          <mat-option value=\"option2\">Not available</mat-option>\r\n                        </mat-select>\r\n                      </mat-form-field>\r\n                    </ng-template>\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr\r\n                  mat-row\r\n                  *matRowDef=\"let row; columns: displayedColumns\"\r\n                  (click)=\"selection.toggle(row)\"\r\n                ></tr>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "EmptyListingComponent",
            "id": "component-EmptyListingComponent-69a9c42747e2d1d95353906bc1071cc7035d17ada7c7cc055388637aa57c15fbc06fcb5d18421a1bd2223c07deb654c884d4278300f584f3f9676e4cf8a0230b",
            "file": "src/app/shared/components/empty-listing/empty-listing.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-empty-listing",
            "styleUrls": [
                "./empty-listing.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./empty-listing.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-empty-listing',\r\n  templateUrl: './empty-listing.component.html',\r\n  styleUrls: ['./empty-listing.component.scss']\r\n})\r\nexport class EmptyListingComponent {\r\n  @Input() items: any;\r\n  constructor(){}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./empty-listing.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "templateData": "<div *ngIf=\"items.length\">\r\n<div *ngFor=\"let item of items\">\r\n  <h1 class=\"text-text text-dark\">{{ item.heading }}</h1>\r\n  <div class=\"absolute position-center text-center\">\r\n    <div class=\"\">\r\n      <img src=\"{{ item.imgPath }}\" alt=\"{{ item.alt }}\" />\r\n      <div class=\"my-10\">\r\n        <p class=\"mat-h1 purple-text text-darken-1\">{{ item.subtext }}</p>\r\n        <p class=\"desc-info mt-6 text-text text-lighten-2\">\r\n          {{ item.text }}\r\n        </p>\r\n      </div>\r\n      <a *ngIf=\"item.showButton\" href=\"{{ item.path }}\">\r\n        <button mat-flat-button color=\"primary\" class=\"medium\">\r\n          {{ item.buttonTxt }}\r\n        </button>\r\n      </a>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>"
        },
        {
            "name": "ErrorLayoutComponent",
            "id": "component-ErrorLayoutComponent-9ec3c6c83fc2ef8fd96ddd7f8acfd2e217764c854b08551771351dbc45dea5bc4a0632f6652209604a230ee6d6a7be5efb68ac4015748123233fa55c61e11fae",
            "file": "src/stories/softobiz-ui/errorLayout/errorLayout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sft-errorLayout",
            "styleUrls": [
                "./errorLayout.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./errorLayout.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component , Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'sft-errorLayout',\r\n  templateUrl: './errorLayout.component.html',\r\n  styleUrls: ['./errorLayout.component.scss']\r\n})\r\nexport class ErrorLayoutComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "// .left-navigation {\r\n//   width: 261px;\r\n// }",
                    "styleUrl": "./errorLayout.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div   *ngIf=\"variant === 'E404'\">\r\n    <div class=\"absolute position-center text-center\">\r\n      <div class=\"\">\r\n        <img src=\"404-page.png\" alt=\"No Page Found\" />\r\n        <div class=\"my-10\">\r\n          <p class=\"mat-h1 purple-text text-darken-1\"> Oops! Why you’re here?</p>\r\n          <p class=\"desc-info mt-6 text-text text-lighten-2\">\r\n          We are very sorry for inconvenience. It looks like you’re try to access a page that either has been deleted or never existed.\r\n          </p>\r\n        </div>\r\n        <a href=\"\">\r\n          <sft-button [label]=\"'Back To Home'\" [color]=\"'primary'\" [variant]=\"'flat'\" [disable]=\"false\"\r\n            [disableRipple]=\"false\" [size]=\"'medium'\" [onClick]=\"'funtion()'\"></sft-button>\r\n        </a>\r\n      </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<div   *ngIf=\"variant === 'E505'\">\r\n  <div class=\"absolute position-center text-center\">\r\n    <div class=\"\">\r\n      <img src=\"505-page.png\" alt=\"No Page Found\" />\r\n      <div class=\"my-10\">\r\n        <p class=\"mat-h1 purple-text text-darken-1\">Gateway Timeout Error</p>\r\n        <p class=\"desc-info mt-6 text-text text-lighten-2\">\r\n        We are very sorry for inconvenience. It looks like some how our server did not receive a timely response.\r\n        </p>\r\n      </div>\r\n      <a href=\"\">\r\n        <sft-button [label]=\"'Back To Home'\" [color]=\"'primary'\" [variant]=\"'flat'\" [disable]=\"false\"\r\n          [disableRipple]=\"false\" [size]=\"'medium'\" [onClick]=\"'funtion()'\"></sft-button>\r\n      </a>\r\n    </div>\r\n  </div>\r\n</div>"
        },
        {
            "name": "FeatureDetailsPopupComponent",
            "id": "component-FeatureDetailsPopupComponent-c9e2392553d1ecd9cdbadc9fda6f064bf9bac6c1793b89828e131fff255ca8485549e949cf6504b383fa55ef3c36587be2fa648b5ba732c850f772c103d78bea",
            "file": "src/app/shared/components/dialog-box/feature-details-popup/feature-details-popup.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-feature-details-popup",
            "styleUrls": [
                "./feature-details-popup.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./feature-details-popup.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogData",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        167,
                        123
                    ]
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "featureDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "closePopup",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "editFeature",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, Input, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FeatureService } from 'src/app/modules/features/services/feature.service';\r\nimport {\r\n  MatDialogRef,\r\n  MatDialog,\r\n  MAT_DIALOG_DATA,\r\n} from '@angular/material/dialog';\r\n\r\nexport interface DialogData {\r\n  featureId: string;\r\n  featureName: string;\r\n  featureType: string;\r\n  entitlement: string;\r\n  status: string;\r\n}\r\n@Component({\r\n  selector: 'app-feature-details-popup',\r\n  templateUrl: './feature-details-popup.component.html',\r\n  styleUrls: ['./feature-details-popup.component.scss'],\r\n})\r\nexport class FeatureDetailsPopupComponent implements OnInit {\r\n  featureDetails: any;\r\n  constructor(\r\n    private featureService: FeatureService,\r\n    private router: Router,\r\n    public dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.featureService\r\n      .getFeatureById(this.data.featureId['featureId'])\r\n      .subscribe((res) => {\r\n        this.featureDetails = res;\r\n\r\n        this.data.featureName = this.featureDetails?.name;\r\n        this.data.featureType = this.featureDetails?.type;\r\n        this.data.status = this.featureDetails?.status;\r\n\r\n        if (this.data.featureType === 'switch') {\r\n          this.data.entitlement = 'OFF';\r\n        } else if (this.data.featureType === 'quantity') {\r\n          this.data.entitlement = 'ON';\r\n        }\r\n      });\r\n  }\r\n\r\n  closePopup() {\r\n    this.dialog.closeAll();\r\n  }\r\n\r\n  editFeature() {\r\n    this.router.navigate([\r\n      `/features/edit-feature/${this.data.featureId['featureId']}`,\r\n    ]);\r\n    this.dialog.closeAll();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./feature-details-popup.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "featureService",
                        "type": "FeatureService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "data",
                        "type": "DialogData",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "featureService",
                        "type": "FeatureService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "data",
                        "type": "DialogData",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"feature-details-popup p-5\">\r\n    <div class=\"title\">\r\n        <div class=\"flex justify-between align-center pb-4 pt-2 px-2\">\r\n            <h5 class=\"mat-subtitle-1 font-weight-500 text-dark mb-0\">Feature Details</h5>\r\n            <button mat-icon-button class=\"x-small\" [disableRipple]=\"true\" (click)=\"closePopup()\">\r\n            <mat-icon class=\"material-symbols-outlined mr-0\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <table class=\"w-full simple-table\">\r\n      <tr>\r\n        <th class=\"mat-subtitle-2 font-weight-500 text-dark\">Name</th>\r\n        <td class=\"mat-subtitle-2 text-grey-darken-6\">{{data.featureName}}</td>\r\n      </tr>\r\n      <tr>\r\n        <th class=\"mat-subtitle-2 font-weight-500 text-dark\">Type</th>\r\n        <td class=\"mat-subtitle-2 text-grey-darken-6\">{{data.featureType}}</td>\r\n      </tr>\r\n      <tr>\r\n        <th class=\"mat-subtitle-2 font-weight-500 text-dark\">Entitlements</th>\r\n        <td class=\"mat-subtitle-2 text-grey-darken-6\">{{data.entitlement}}</td>\r\n      </tr>\r\n      <tr>\r\n        <th class=\"mat-subtitle-2 font-weight-500 text-dark\">Status</th>\r\n        <td class=\"mat-subtitle-2 text-green-dark-3\">{{data.status}}</td>\r\n      </tr>\r\n    </table>\r\n    <div class=\"py-4 px-2 text-right\">\r\n      <button class=\"flex icon-text primary mat-caption\" mat-button (click)=\"editFeature()\"><mat-icon class=\"material-symbols-outlined mr-1\">edit</mat-icon>Edit</button>\r\n    </div>\r\n  </div>\r\n"
        },
        {
            "name": "FeaturesListingComponent",
            "id": "component-FeaturesListingComponent-2345e1bacae3b61b6ebe017fd5b2eae7c005bb8404a46acaf95c528e702f768718cea4ba9def56da46574aebf8d11e148af3a29a299f549e9a93de974af690b8",
            "file": "src/app/modules/features/components/features-listing/features-listing.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-features-listing",
            "styleUrls": [
                "./features-listing.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./features-listing.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "allFeaturesData",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "data$",
                    "defaultValue": "this.featureService.feature$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 78,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "[\r\n    'featureId',\r\n    'productName',\r\n    'name',\r\n    'type',\r\n    'createdOn',\r\n    'status',\r\n    'action',\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "elementId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "emptyFeature",
                    "defaultValue": "noFeatures",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "featuresData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "hasNextPage",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "limit",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "NumberOfLimit",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "NumberOfPage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "PageNumber",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "search",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "searchData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "searchLength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "searchQuery",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "searchQueryChanged",
                    "defaultValue": "new Subject<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<string>",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "searchSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "selection",
                    "defaultValue": "new SelectionModel<features>(true, [])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "sortBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"name\" | \"createdOn\"",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "sortOrder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"asc\" | \"desc\"",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "totalNumberOfFeature",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "totalPages",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 56
                }
            ],
            "methodsClass": [
                {
                    "name": "announceSortChange",
                    "args": [
                        {
                            "name": "sortState",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 261,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nAnnounce the change in sort state for assistive technology.",
                    "description": "<p>Announce the change in sort state for assistive technology.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "sortState",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteElementById",
                    "args": [
                        {
                            "name": "elementId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 202,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "elementId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteSuccess",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 217,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAllFeature",
                    "args": [
                        {
                            "name": "PageNumber",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "limit",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "search",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "sortBy",
                            "type": "\"name\" | \"createdOn\"",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "sortOrder",
                            "type": "\"asc\" | \"desc\"",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 143,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "PageNumber",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "limit",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "search",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "sortBy",
                            "type": "\"name\" | \"createdOn\"",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "sortOrder",
                            "type": "\"asc\" | \"desc\"",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getFeature",
                    "args": [
                        {
                            "name": "PageNumber",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "search",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "sortBy",
                            "type": "\"name\" | \"createdOn\"",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "sortOrder",
                            "type": "\"asc\" | \"desc\"",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "PageNumber",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "search",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "sortBy",
                            "type": "\"name\" | \"createdOn\"",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "sortOrder",
                            "type": "\"asc\" | \"desc\"",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isAllSelected",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhether the number of selected elements matches the total number of rows.",
                    "description": "<p>Whether the number of selected elements matches the total number of rows.</p>\n"
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 173,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onNext",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 191,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onPrevious",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 178,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSearchInput",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openDelete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 242,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport {\r\n  FeatureList,\r\n  features,\r\n  noFeatures,\r\n} from 'src/app/shared/constants/consants';\r\nimport { FeatureService } from '../../services/feature.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport {\r\n  Subject,\r\n  Subscription,\r\n  debounceTime,\r\n  distinctUntilChanged,\r\n} from 'rxjs';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DeleteConfirmationComponent } from 'src/app/shared/components/dialog-box/delete-confirmation/delete-confirmation.component';\r\nimport { CouponsDeleteSuccessComponent } from 'src/app/shared/components/dialog-box/coupons-delete-success/coupons-delete-success.component';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { GlobalService } from 'src/app/core/services/global.service';\r\n\r\n@Component({\r\n  selector: 'app-features-listing',\r\n  templateUrl: './features-listing.component.html',\r\n  styleUrls: ['./features-listing.component.scss'],\r\n})\r\nexport class FeaturesListingComponent implements OnInit {\r\n  displayedColumns: string[] = [\r\n    'featureId',\r\n    'productName',\r\n    'name',\r\n    'type',\r\n    'createdOn',\r\n    'status',\r\n    'action',\r\n  ];\r\n\r\n  featuresData = [];\r\n  searchLength: number;\r\n  totalNumberOfFeature: number;\r\n  NumberOfPage: any = '';\r\n  NumberOfLimit: any = '';\r\n  selection = new SelectionModel<features>(true, []);\r\n  emptyFeature = noFeatures;\r\n  subscription: Subscription;\r\n  data$ = this.featureService.feature$;\r\n  elementId: number;\r\n  data: any;\r\n  PageNumber = 1;\r\n  limit = 10;\r\n  sortBy: 'name' | 'createdOn';\r\n  sortOrder: 'asc' | 'desc';\r\n  hasNextPage: boolean = false;\r\n  totalPages: number = 0;\r\n  dialogRef: any;\r\n  search: string = '';\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  searchQuery: string;\r\n  searchData = [];\r\n  allFeaturesData: number = 0;\r\n  private searchQueryChanged: Subject<string> = new Subject<string>();\r\n  private searchSubscription: Subscription;\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.featuresData.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  constructor(\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private featureService: FeatureService,\r\n    public dialog: MatDialog,\r\n    private snackBar: MatSnackBar,\r\n    private global: GlobalService,\r\n  ) {}\r\n  onSearchInput() {\r\n    this.searchQueryChanged.next(this.searchQuery);\r\n  }\r\n  ngOnInit(): void {\r\n    this.sortBy = 'createdOn';\r\n    this.sortOrder = 'desc';\r\n    \r\n    this.getAllFeature(\r\n      this.NumberOfPage,\r\n      this.NumberOfLimit,\r\n      this.search,\r\n      this.sortBy,\r\n      this.sortOrder\r\n    );\r\n    this.getFeature(\r\n      this.PageNumber,\r\n      this.limit,\r\n      this.search,\r\n      this.sortBy,\r\n      this.sortOrder\r\n    );\r\n    this.searchSubscription = this.searchQueryChanged\r\n      .pipe(debounceTime(500), distinctUntilChanged())\r\n      .subscribe((value) => {\r\n        this.search = value;\r\n        this.getFeature(\r\n          this.NumberOfPage,\r\n          this.NumberOfLimit,\r\n          this.search,\r\n          this.sortBy,\r\n          this.sortOrder\r\n        );\r\n      });\r\n  }\r\n\r\n  getFeature(\r\n    PageNumber: number,\r\n    limit: number,\r\n    search: string,\r\n    sortBy: 'name' | 'createdOn',\r\n    sortOrder: 'asc' | 'desc'\r\n  ) {\r\n    this.global.showLoader();\r\n    this.featureService\r\n      .getFeatures(\r\n        this.PageNumber,\r\n        this.limit,\r\n        this.search,\r\n        this.sortBy,\r\n        this.sortOrder\r\n      )\r\n      .subscribe((data) => {\r\n        if (data) {\r\n          this.featuresData = data;\r\n          this.global.hideLoader();\r\n          this.totalPages = Math.ceil(this.totalNumberOfFeature / limit);\r\n          this.hasNextPage = PageNumber < this.totalPages;\r\n          this.searchLength = data.length;\r\n        }\r\n      });\r\n  }\r\n  getAllFeature(\r\n    PageNumber: string,\r\n    limit: string,\r\n    search: string,\r\n    sortBy: 'name' | 'createdOn',\r\n    sortOrder: 'asc' | 'desc'\r\n  ) {\r\n    this.global.showLoader();\r\n    this.featureService\r\n      .getFeatures(\r\n        this.NumberOfPage,\r\n        this.NumberOfLimit,\r\n        this.search,\r\n        this.sortBy,\r\n        this.sortOrder\r\n      )\r\n      .subscribe((data) => {\r\n        if (data) {\r\n          this.totalNumberOfFeature = data.length;\r\n          this.global.hideLoader();\r\n\r\n          if (\r\n            this.totalNumberOfFeature > this.allFeaturesData ||\r\n            this.totalNumberOfFeature == 0\r\n          ) {\r\n            this.allFeaturesData = this.totalNumberOfFeature;            \r\n          }\r\n        }\r\n      });\r\n  }\r\n  ngOnDestroy(): void {\r\n    if (this.searchSubscription) {\r\n      this.searchSubscription.unsubscribe();\r\n    }\r\n  }\r\n  onPrevious() {\r\n    if (this.PageNumber > 1) {\r\n      this.PageNumber--;\r\n      this.getFeature(\r\n        this.PageNumber,\r\n        this.limit,\r\n        this.search,\r\n        this.sortBy,\r\n        this.sortOrder\r\n      );\r\n    }\r\n  }\r\n\r\n  onNext() {\r\n    this.PageNumber++;\r\n    this.getFeature(\r\n      this.PageNumber,\r\n      this.limit,\r\n      this.search,\r\n      this.sortBy,\r\n      this.sortOrder\r\n    );\r\n  }\r\n\r\n  deleteElementById(elementId: number) {\r\n    this.featureService.deleteFeature(elementId).subscribe({\r\n      next: (res) => {\r\n        this.deleteSuccess(elementId);\r\n      },\r\n      error: (error: any) => {\r\n        this.snackBar.open(error.error.message, '', {\r\n          duration: 5000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        })\r\n      },\r\n    });\r\n  }\r\n\r\n  deleteSuccess(id: any) {\r\n    const dialogRef = this.dialog.open(CouponsDeleteSuccessComponent, {\r\n      width: '422px',\r\n      panelClass: 'dialog-curved',\r\n      data: {\r\n        module: 'Feature',\r\n        deleteId: id,\r\n      },\r\n    });\r\n    this.getAllFeature(\r\n      this.NumberOfPage,\r\n      this.NumberOfLimit,\r\n      this.search,\r\n      this.sortBy,\r\n      this.sortOrder\r\n    );\r\n    this.getFeature(\r\n      this.PageNumber,\r\n      this.limit,\r\n      this.search,\r\n      this.sortBy,\r\n      this.sortOrder\r\n    );\r\n  }\r\n\r\n  openDelete(id: any) {\r\n    this.dialogRef = this.dialog.open(DeleteConfirmationComponent, {\r\n      width: '420px',\r\n      panelClass: 'dialog-curved',\r\n      data: {\r\n        module: 'Feature',\r\n        deleteId: id,\r\n      },\r\n    });\r\n\r\n    this.dialogRef.afterClosed().subscribe((res) => {\r\n      if (res) {\r\n        this.deleteElementById(id);\r\n      }\r\n    });\r\n  }\r\n\r\n  /** Announce the change in sort state for assistive technology. */\r\n\r\n  announceSortChange(sortState: Sort) {\r\n    this.sortBy = sortState.active as 'name' | 'createdOn';\r\n    this.sortOrder = sortState.direction as 'asc' | 'desc';\r\n    this.getFeature(\r\n      this.PageNumber,\r\n      this.limit,\r\n      this.search,\r\n      this.sortBy,\r\n      this.sortOrder\r\n    );\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n.disabled {\r\n  pointer-events: none;\r\n  opacity: 0.6;\r\n  cursor: not-allowed;\r\n}\r\n",
                    "styleUrl": "./features-listing.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_liveAnnouncer",
                        "type": "LiveAnnouncer",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "featureService",
                        "type": "FeatureService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "global",
                        "type": "GlobalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 73,
                "jsdoctags": [
                    {
                        "name": "_liveAnnouncer",
                        "type": "LiveAnnouncer",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "featureService",
                        "type": "FeatureService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "global",
                        "type": "GlobalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div\r\n  *ngIf=\"allFeaturesData > 0; else noDataList\"\r\n  class=\"relative main-bg border-2 w-full h-full py-6 pl-5 pr-6 overflow-scroll\"\r\n>\r\n  <div class=\"flex justify-between align-center px-1\">\r\n    <div class=\"flex align-center\">\r\n      <h1 class=\"text-text text-dark\">Features</h1>\r\n\r\n      <mat-chip class=\"chip-dark ml-3\">\r\n        {{ totalNumberOfFeature }}\r\n      </mat-chip>\r\n    </div>\r\n\r\n    <div class=\"flex align-center\">\r\n      <div class=\"global-search light mr-6 border-2\">\r\n        <span class=\"search-icon pointer\">\r\n          <img\r\n            src=\"../../../../assets/images/icons/search.svg\"\r\n            alt=\"search-icon\"\r\n          />\r\n        </span>\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search anything...\"\r\n          [(ngModel)]=\"searchQuery\"\r\n          (input)=\"onSearchInput()\"\r\n        />\r\n      </div>\r\n\r\n      <button\r\n        mat-flat-button\r\n        color=\"primary\"\r\n        class=\"create-btn\"\r\n        [routerLink]=\"['create']\"\r\n      >\r\n        <mat-icon class=\"material-symbols-outlined m-0 white-text\"\r\n          >add_circle</mat-icon\r\n        >\r\n\r\n        <span class=\"text-nowrap block ml-2 letter-spacing-0\"\r\n          >Create Feature</span\r\n        >\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <div\r\n    *ngIf=\"featuresData.length > 0; else noDataFound\"\r\n    class=\"primary-table mt-8 px-1 pb-2\"\r\n  >\r\n    <table\r\n      mat-table\r\n      [dataSource]=\"featuresData\"\r\n      matSort\r\n      (matSortChange)=\"announceSortChange($event)\"\r\n    >\r\n      <!--- Note that these columns can be defined in any order.\r\n\r\n              The actual rendered columns are set as a property on the row definition\" -->\r\n\r\n      <!-- Product ID Column -->\r\n\r\n      <ng-container matColumnDef=\"featureId\">\r\n        <th mat-header-cell *matHeaderCellDef>Feature ID</th>\r\n\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element\"\r\n          [routerLink]=\"'/features/view/' + element.featureId\"\r\n        >\r\n          {{ element.featureId }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Product Name Column -->\r\n\r\n      <ng-container matColumnDef=\"productName\">\r\n        <th\r\n          mat-header-cell\r\n          *matHeaderCellDef\r\n          mat-sort-header\r\n          sortActionDescription=\"Sort by title\"\r\n        >\r\n          Product Name\r\n        </th>\r\n\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element\"\r\n          [routerLink]=\"'/features/view/' + element.featureId\"\r\n        >\r\n          {{ element.productName }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Product Name Column -->\r\n\r\n      <ng-container matColumnDef=\"name\">\r\n        <th\r\n          mat-header-cell\r\n          *matHeaderCellDef\r\n          mat-sort-header\r\n          sortActionDescription=\"Sort by title\"\r\n        >\r\n          Feature Name\r\n        </th>\r\n\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element\"\r\n          [routerLink]=\"'/features/view/' + element.featureId\"\r\n        >\r\n          {{ element.name }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Features Column -->\r\n\r\n      <ng-container matColumnDef=\"type\">\r\n        <th mat-header-cell *matHeaderCellDef>Feature Type</th>\r\n\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element\"\r\n          [routerLink]=\"'/features/view/' + element.featureId\"\r\n        >\r\n          <p>{{ element.type }}</p>\r\n        </td>\r\n      </ng-container>\r\n      <!-- Created Date Column -->\r\n\r\n      <ng-container matColumnDef=\"createdOn\">\r\n        <th\r\n          mat-header-cell\r\n          *matHeaderCellDef\r\n          mat-sort-header\r\n          sortActionDescription=\"Sort by date\"\r\n        >\r\n          Created On\r\n        </th>\r\n\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element\"\r\n          [routerLink]=\"'/features/view/' + element.featureId\"\r\n        >\r\n          {{ element.createdOn | date : \"d MMMM y\" }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Created Date Column -->\r\n\r\n      <ng-container matColumnDef=\"status\">\r\n        <th mat-header-cell *matHeaderCellDef>Status</th>\r\n\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element\"\r\n          [ngClass]=\"element.status\"\r\n          [routerLink]=\"'/features/view/' + element.featureId\"\r\n        >\r\n          {{ element.status }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Created Date Column -->\r\n\r\n      <ng-container matColumnDef=\"action\">\r\n        <th mat-header-cell *matHeaderCellDef>Action</th>\r\n\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          <mat-icon\r\n            class=\"material-symbols-outlined\"\r\n            [matMenuTriggerFor]=\"actionsMenu\"\r\n          >\r\n            more_vert\r\n          </mat-icon>\r\n\r\n          <mat-menu\r\n            #actionsMenu=\"matMenu\"\r\n            class=\"actions-menu\"\r\n            backdropClass=\"edit-menu\"\r\n          >\r\n            <button\r\n              mat-menu-item\r\n              disableRipple\r\n              [routerLink]=\"['edit-feature/' + element.featureId]\"\r\n            >\r\n              Edit\r\n            </button>\r\n\r\n            <button\r\n              mat-menu-item\r\n              disableRipple\r\n              (click)=\"openDelete(element.featureId)\"\r\n            >\r\n              Delete\r\n            </button>\r\n          </mat-menu>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n\r\n      <tr\r\n        mat-row\r\n        *matRowDef=\"let row; columns: displayedColumns\"\r\n        [id]=\"row.id\"\r\n      ></tr>\r\n    </table>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-2\">\r\n        <div class=\"dataTables_length\">\r\n          <label\r\n            >Show\r\n\r\n            <select\r\n              [(ngModel)]=\"limit\"\r\n              (change)=\"\r\n                this.getFeature(\r\n                  this.PageNumber,\r\n                  this.limit,\r\n                  this.search,\r\n                  this.sortBy,\r\n                  this.sortOrder\r\n                )\r\n              \"\r\n            >\r\n              <option value=\"10\">10</option>\r\n\r\n              <option value=\"20\">20</option>\r\n\r\n              <option value=\"50\">50</option>\r\n\r\n              <option value=\"100\">100</option>\r\n            </select>\r\n\r\n            entries</label\r\n          >\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-md-10\" style=\"float: right; text-align: right\">\r\n        <div class=\"paginations\">\r\n          <div>\r\n            <div class=\"btn-group\" id=\"radioBtn\">\r\n              <a\r\n                class=\"btn btn-primary btn-sm notActive\"\r\n                (click)=\"onPrevious()\"\r\n                [ngClass]=\"{ disabled: PageNumber == 1 }\"\r\n              >\r\n                Previous\r\n              </a>\r\n\r\n              <a class=\"btn btn-primary btn-sm active\" style=\"margin: 0 20px\">{{\r\n                PageNumber\r\n              }}</a>\r\n\r\n              <a\r\n                class=\"btn btn-primary btn-sm notActive\"\r\n                (click)=\"onNext()\"\r\n                [ngClass]=\"{ disabled: !hasNextPage }\"\r\n                >Next\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <ng-template #noDataFound>\r\n    <div class=\"relative main-bg border-2 w-full h-full p-7 overflow-scroll\">\r\n      <app-no-item-found></app-no-item-found>\r\n    </div>\r\n  </ng-template>\r\n</div>\r\n\r\n<ng-template #noDataList>\r\n  <div class=\"relative main-bg border-2 w-full h-full p-7 overflow-scroll\">\r\n    <app-empty-listing [items]=\"emptyFeature\"></app-empty-listing>\r\n  </div>\r\n</ng-template>\r\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-47e3ac081c812c6bc74501626ad2ee5fb5281cbf8ab6cbd42b61c5994ffdab9dc071eb80db40703dafa1328112a0019cfc17c36d3daea7c02d802fa2c14cf071",
            "file": "src/stories/softobiz-ui/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sft-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "configOptions",
                    "defaultValue": "Config_Menu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "Menu_Headings",
                    "defaultValue": "Menu_Headings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "menuItems",
                    "defaultValue": "MENUITEMS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "notificationsData",
                    "defaultValue": "Notifications_Data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "opened",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "sidenav",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSidenav",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'sidenav'"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "userProfile",
                    "defaultValue": "User_Options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "getList",
                    "args": [
                        {
                            "name": "item",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "preventClose",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleSidenav",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewChild } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { MENUITEMS, Config_Menu, Menu_Headings, User_Options, Notifications_Data } from 'src/app/shared/constants/consants';\n@Component({\n  selector: 'sft-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {\n  menuItems = MENUITEMS;\n  configOptions = Config_Menu;\n  Menu_Headings = Menu_Headings;\n  userProfile = User_Options;\n  notificationsData = Notifications_Data;\n  constructor() {}\n\n  @ViewChild('sidenav') sidenav: MatSidenav;\n\n  opened: boolean = true;\n  toggleSidenav(event: any) {\n    this.sidenav.toggle();\n    this.opened = event;\n  }\n\n  getList(item: string) {\n    let list = [];\n    return (list = this.menuItems.filter((ele) => ele.category == item));\n  }\n  preventClose(event: any) {\n    event.stopPropagation();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "templateData": "\n  <div class=\"header-wrapper border-2\">\n    <sft-searchbar></sft-searchbar>\n    <div class=\"header-right\">\n      <div\n        class=\"notifications-section pointer\"\n        [matMenuTriggerFor]=\"notificationsMenu\"\n        matBadge=\"3\"\n        matBadgeSize=\"small\"\n        matBadgeColor=\"warn\"\n      >\n        <img src=\"/icons/notifications.svg\" alt=\"notifications-icon\" />\n      </div>\n      <mat-menu\n        #notificationsMenu=\"matMenu\"\n        class=\"notifications-menu border-2\"\n        backdropClass=\"right-menu\"\n      >\n        <div class=\"notifications-header\">\n          <div class=\"flex align-center justify-between\">\n            <div class=\"label\">Notifications</div>\n            <mat-chip class=\"basic-chip\"> 4 New </mat-chip>\n          </div>\n          <div class=\"tab-panel\" (click)=\"preventClose($event)\">\n            <mat-tab-group mat-stretch-tabs=\"false\" mat-align-tabs=\"start\">\n              <mat-tab label=\"All (4)\">\n                <div\n                  class=\"relative h-55\"\n                  *ngIf=\"notificationsData.length == 0\"\n                >\n                  <div class=\"absolute position-center text-center w-full\">\n                    <img src=\"/notifications-icon.png\" alt=\"no data\" />\n                    <span class=\"block mt-6\">\n                      Hey! You have no notifications.\n                    </span>\n                  </div>\n                </div>\n                <div\n                  class=\"notification-list\"\n                  (click)=\"preventClose($event)\"\n                  *ngIf=\"notificationsData.length > 0\"\n                ></div>\n              </mat-tab>\n              <mat-tab label=\"Messages\">\n                <div\n                  class=\"relative h-55\"\n                  *ngIf=\"notificationsData.length == 0\"\n                >\n                  <div class=\"absolute position-center text-center w-full\">\n                    <img src=\"/notifications-icon.png\" alt=\"no data\" />\n                    <span class=\"block mt-6\">\n                      Hey! You have no notifications.\n                    </span>\n                  </div>\n                </div>\n                <div\n                  class=\"message-list\"\n                  (click)=\"preventClose($event)\"\n                  *ngIf=\"notificationsData.length > 0\"\n                >\n                  My Messages\n                </div>\n              </mat-tab>\n              <mat-tab label=\"Alerts\">\n                <div\n                  class=\"relative h-55\"\n                  *ngIf=\"notificationsData.length == 0\"\n                >\n                  <div class=\"absolute position-center text-center w-full\">\n                    <img src=\"/notifications-icon.png\" alt=\"no data\" />\n                    <span class=\"block mt-6\">\n                      Hey! You have no notifications.\n                    </span>\n                  </div>\n                </div>\n                <div\n                  class=\"message-list\"\n                  (click)=\"preventClose($event)\"\n                  *ngIf=\"notificationsData.length > 0\"\n                >\n                  Alerts\n                </div>\n              </mat-tab>\n            </mat-tab-group>\n          </div>\n          <div\n            class=\"text-center modal-footer pointer\"\n            (click)=\"preventClose($event)\"\n          >\n            <span class=\"block py-4\"> View All </span>\n          </div>\n        </div>\n      </mat-menu>\n      <sft-profile></sft-profile>\n    </div>\n  </div>\n"
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-30db90e58b0643e406d23c30b844e2cdf9ebd3ed8b2f412faf19fc81e2afd8938765264aab82d5ed618619c28b124b78404b3311a0ae6ab7be9108a560d1b353",
            "file": "src/stories/softobiz-ui/Input/input.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sft-input",
            "styleUrls": [
                "./input.component.scss",
                "../../../themes/dark.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hint",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "infoDetail",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "infoIcon",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "infoTitle",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "'Enter here...'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "readonly",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "errorState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 38
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation, Input } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NgxTippyModule } from 'ngx-tippy-wrapper';\r\n// import { ButtonVariant } from './types';\r\n\r\n@Component({\r\n  selector: 'sft-input',\r\n  templateUrl: './input.component.html',\r\n  styleUrls: ['./input.component.scss', '../../../themes/dark.scss'],\r\n  encapsulation: ViewEncapsulation.None, \r\n})\r\nexport class InputComponent {\r\n  @Input() label: string = 'Label';\r\n\r\n  @Input() readonly: boolean = false;\r\n\r\n  @Input() type: string;\r\n\r\n  @Input() placeholder: string = 'Enter here...';\r\n\r\n  @Input() hint?: string = '';\r\n\r\n  @Input() disable: boolean = false;\r\n\r\n  @Input() required: boolean = false;\r\n\r\n  @Input() infoIcon: boolean = false;\r\n\r\n  @Input() infoTitle: string = '';\r\n\r\n  @Input() infoDetail: string = '';\r\n\r\n  @Input() value: string = '';\r\n\r\n  @Input() class: string = '';\r\n\r\n  errorState: boolean;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./input.component.scss"
                },
                {
                    "data": "@use \"sass:map\";\r\n@use \"@angular/material\" as mat;\r\n@include mat.core();\r\n\r\n$dark-primary-text: rgba(black, 0.87);\r\n$light-primary-text: white;\r\n$light-focused: rgba(white, 0.12);\r\n$light-dividers: rgba(white, 0.12);\r\n$light-disabled-text: rgba(white, 0.5);\r\n$light-secondary-text: rgba(white, 0.7);\r\n// Define a light theme\r\n$grey-palette: (\r\n  50: #fafafa,\r\n  100: #f5f5f5,\r\n  200: #eeeeee,\r\n  300: #e0e0e0,\r\n  400: #bdbdbd,\r\n  500: #9e9e9e,\r\n  600: #757575,\r\n  700: #616161,\r\n  800: #424242,\r\n  900: #212121,\r\n  A100: #ffffff,\r\n  A200: #eeeeee,\r\n  A400: #bdbdbd,\r\n  A700: #616161,\r\n  contrast: (\r\n    50: $dark-primary-text,\r\n    100: $dark-primary-text,\r\n    200: $dark-primary-text,\r\n    300: $dark-primary-text,\r\n    400: $dark-primary-text,\r\n    500: $dark-primary-text,\r\n    600: $light-primary-text,\r\n    700: $light-primary-text,\r\n    800: $light-primary-text,\r\n    900: $light-primary-text,\r\n    A100: $dark-primary-text,\r\n    A200: $dark-primary-text,\r\n    A400: $dark-primary-text,\r\n    A700: $light-primary-text,\r\n  ),\r\n);\r\n\r\n$custom-dark-theme-background-palette: (\r\n  status-bar: black,\r\n  app-bar: map.get($grey-palette, 900),\r\n  background: #303030,\r\n  hover: rgba(white, 0.04),\r\n  // TODO(kara): check style with Material Design UX\r\n  card: map.get($grey-palette, 800),\r\n  dialog: #303030,\r\n  disabled-button: rgba(white, 0.12),\r\n  raised-button: map.get($grey-palette, 800),\r\n  focused-button: $light-focused,\r\n  selected-button: map.get($grey-palette, 900),\r\n  selected-disabled-button: map.get($grey-palette, 800),\r\n  disabled-button-toggle: black,\r\n  unselected-chip: map.get($grey-palette, 700),\r\n  disabled-list-option: rgba(white, 0.12),\r\n  tooltip: map.get($grey-palette, 700),\r\n);\r\n$custom-dark-theme-foreground-palette: (\r\n  base: white,\r\n  divider: $light-dividers,\r\n  dividers: $light-dividers,\r\n  disabled: $light-disabled-text,\r\n  disabled-button: rgba(white, 0.3),\r\n  disabled-text: $light-disabled-text,\r\n  elevation: black,\r\n  hint-text: $light-disabled-text,\r\n  secondary-text: $light-secondary-text,\r\n  icon: white,\r\n  icons: white,\r\n  text: white,\r\n  slider-min: white,\r\n  slider-off: rgba(white, 0.3),\r\n  slider-off-active: rgba(white, 0.3),\r\n);\r\n@function custom-dark-theme($primary, $accent) {\r\n  @return (\r\n    primary: $primary,\r\n    accent: $accent,\r\n    warn: $primary,\r\n    is-dark: true,\r\n    foreground: $custom-dark-theme-foreground-palette,\r\n    background: $custom-dark-theme-background-palette\r\n  );\r\n}\r\n\r\n$light-primary: mat.define-palette(mat.$indigo-palette, A700);\r\n$light-accent: mat.define-palette(mat.$pink-palette);\r\n$light-theme: mat.define-light-theme(\r\n  (\r\n    color: (\r\n      primary: $light-primary,\r\n      accent: $light-accent,\r\n    ),\r\n  )\r\n);\r\n\r\n// Define a dark theme\r\n$dark-primary: mat.define-palette(mat.$pink-palette);\r\n$dark-accent: mat.define-palette(mat.$purple-palette, 900);\r\n$custom-dark-theme: custom-dark-theme($dark-primary, $dark-accent);\r\n// $dark-theme: mat.define-dark-theme(\r\n//   (\r\n//     color: (\r\n//       primary: $dark-primary,\r\n//       accent: $dark-accent,\r\n//       background: $dark-primary\r\n//     ),\r\n//   )\r\n// );\r\n\r\n[data-app-theme=\"dark\"] {\r\n  .mat-app-background,\r\n  .outer-layout {\r\n    background: #303030;\r\n  }\r\n  @include mat.all-component-themes($custom-dark-theme);\r\n  // @include mat.sidenav-theme\r\n  // @include mat.color($dark-theme);\r\n  // @include mat.core-theme($dark-theme);\r\n  // @include mat.button-theme($dark-theme);\r\n  // @include mat.card-theme($dark-theme);\r\n  // @include mat.progress-bar-theme($dark-theme);\r\n  // @include mat.chips-theme($dark-theme);\r\n  // @include mat.badge-theme($dark-theme);\r\n  // @include mat.button-toggle-theme($dark-theme);\r\n  // @include mat.checkbox-theme($dark-theme);\r\n  // @include mat.list-theme($dark-theme);\r\n  // @include mat.form-field-theme($dark-theme);\r\n  // @include mat.icon-theme($dark-theme);\r\n  // @include mat.select-theme($dark-theme);\r\n  // @include mat.dialog-theme($dark-theme);\r\n}\r\n\r\n// Apply the dark theme by default\r\n\r\n[data-app-theme=\"light\"] {\r\n  @include mat.core-color($light-theme);\r\n  @include mat.button-color($light-theme);\r\n  @include mat.card-theme($light-theme);\r\n  @include mat.progress-bar-theme($light-theme);\r\n  @include mat.chips-theme($light-theme);\r\n  @include mat.badge-theme($light-theme);\r\n  @include mat.button-toggle-theme($light-theme);\r\n  @include mat.checkbox-theme($light-theme);\r\n  // @include mat.sidenav-theme($light-theme);\r\n  @include mat.list-theme($light-theme);\r\n  // @include mat.form-field-theme($light-theme);\r\n  @include mat.icon-theme($light-theme);\r\n  @include mat.select-theme($light-theme);\r\n}\r\n\r\n// style for dark theme\r\n\r\n[data-app-theme=\"dark\"] {\r\n  textarea {\r\n    color: #ffffff;\r\n  }\r\n}\r\n",
                    "styleUrl": "../../../themes/dark.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"input-wrapper\">\r\n  <div class=\"flex align-center mb-2\">\r\n    <p class=\"mat-subtitle-2 font-weight-500 input-label\">{{ label }}</p>\r\n    <mat-icon\r\n      *ngIf=\"infoIcon\"\r\n      class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n      [ngxTippy]=\"helpinfotooltip\"\r\n      [tippyProps]=\"{ placement: 'right' }\"\r\n      >help</mat-icon\r\n    >\r\n    <ng-template #helpinfotooltip let-name>\r\n      <div class=\"help-info-tooltip\">\r\n        <div class=\"heading-with-background\">{{infoTitle}}</div>\r\n        <div class=\"details\">\r\n          {{infoDetail}}\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  </div>\r\n  <mat-form-field appearance=\"outline\" [class]=\"'border-2' + ' ' + class\">\r\n    <mat-hint *ngIf=\"hint\" align=\"start\"\r\n      ><strong>{{ hint }}</strong>\r\n    </mat-hint>\r\n    <input\r\n      [required]=\"required\"\r\n      matInput\r\n      [placeholder]=\"placeholder\"\r\n      formControlName=\"id\"\r\n      [readonly]=\"readonly\"\r\n      [disabled]=\"disable\"\r\n      [value]=\"value\"\r\n    />\r\n  </mat-form-field>\r\n</div>\r\n"
        },
        {
            "name": "InvoiceListComponent",
            "id": "component-InvoiceListComponent-b55471f72b145cdb0adb6b66e09d6cf638cb2d4ef4da0ff9cca5f605c7dcff7bad6fa201fec0db4418002550b46b8952edbabda89e4858f1e344cc10b6929b0c",
            "file": "src/app/modules/payment-history/invoices/components/invoice-list/invoice-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-invoice-list",
            "styleUrls": [
                "./invoice-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./invoice-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "[\r\n    'select',\r\n    'id',\r\n    'customer_info',\r\n    'issued_on',\r\n    'voided_on',\r\n    'paid_on',\r\n    'status',\r\n    'amount',\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "emptyInvoice",
                    "defaultValue": "noInvoice",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "InvoiceData",
                    "defaultValue": "InvoiceList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "noContent",
                    "defaultValue": "noInvoice",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "selection",
                    "defaultValue": "new SelectionModel<invoice>(true, [])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "announceSortChange",
                    "args": [
                        {
                            "name": "sortState",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nAnnounce the change in sort state for assistive technology.",
                    "description": "<p>Announce the change in sort state for assistive technology.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "sortState",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "checkboxLabel",
                    "args": [
                        {
                            "name": "row",
                            "type": "invoice",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nThe label for the checkbox on the passed row",
                    "description": "<p>The label for the checkbox on the passed row</p>\n",
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "invoice",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isAllSelected",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhether the number of selected elements matches the total number of rows.",
                    "description": "<p>Whether the number of selected elements matches the total number of rows.</p>\n"
                },
                {
                    "name": "openDelete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectAll",
                    "args": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectedRow",
                    "args": [
                        {
                            "name": "selectedID",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "selectedID",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sendElementId",
                    "args": [
                        {
                            "name": "elementId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "elementId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleAllRows",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSelects all rows if they are not all selected; otherwise clear selection.",
                    "description": "<p>Selects all rows if they are not all selected; otherwise clear selection.</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewChild } from '@angular/core';\r\nimport { DeleteConfirmationComponent } from 'src/app/shared/components/dialog-box/delete-confirmation/delete-confirmation.component';\r\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\n\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n\r\nimport {\r\n  invoice,\r\n  noInvoice,\r\n  InvoiceList,\r\n\r\n} from 'src/app/shared/constants/consants';\r\n@Component({\r\n  selector: 'app-invoice-list',\r\n  templateUrl: './invoice-list.component.html',\r\n  styleUrls: ['./invoice-list.component.scss']\r\n})\r\nexport class InvoiceListComponent {\r\n  noContent =  noInvoice;\r\n  displayedColumns: string[] = [\r\n    'select',\r\n    'id',\r\n    'customer_info',\r\n    'issued_on',\r\n    'voided_on',\r\n    'paid_on',\r\n    'status',\r\n    'amount',\r\n  ];\r\n  InvoiceData: any = InvoiceList;\r\n  selection = new SelectionModel<invoice>(true, []);\r\n  emptyInvoice = noInvoice;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  dialogRef: any;\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.InvoiceData.length;\r\n    return numSelected === numRows;\r\n  }\r\n  constructor(\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    public dialog: MatDialog\r\n  ) {}\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  toggleAllRows() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n    // console.log(this.selection.select)\r\n    this.selection.select(...this.InvoiceData);\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: invoice): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${\r\n      row.id + 1\r\n    }`;\r\n  }\r\n\r\n  // ngAfterViewInit() {\r\n  //   this.featuresData.sort = this.sort;\r\n  // }\r\n\r\n  /** Announce the change in sort state for assistive technology. */\r\n  announceSortChange(sortState: Sort) {\r\n    // This example uses English messages. If your application supports\r\n    // multiple language, you would internationalize these strings.\r\n    // Furthermore, you can customize the message to add additional\r\n    // details about the values being sorted.\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n  selectedRow(selectedID: string, event: any) {\r\n    const selectedRow = document.getElementById(`${selectedID}`);\r\n    if (selectedRow != null) {\r\n      selectedRow.classList.toggle('selected-row');\r\n    }\r\n    event.stopPropagation();\r\n  }\r\n  selectAll(data: any[]) {\r\n    if (this.isAllSelected()) {\r\n      data.map((element: any) => {\r\n        document.getElementById(element.id)?.classList.add('selected-row');\r\n      });\r\n    } else {\r\n      data.map((element: any) => {\r\n        document.getElementById(element.id)?.classList.remove('selected-row');\r\n      });\r\n    }\r\n  }\r\n  sendElementId(elementId: string) {\r\n    console.log(elementId);\r\n  }\r\n  openDelete(id: any) {\r\n    this.dialogRef = this.dialog.open(DeleteConfirmationComponent, {\r\n      width: '422px',\r\n      panelClass: 'dialog-curved',\r\n    });\r\n\r\n    this.dialogRef.afterClosed().subscribe((res: any) => {\r\n      if (res) {\r\n        console.log(res);\r\n\r\n        this.sendElementId(id);\r\n      } else {\r\n        console.log('Delete canceled');\r\n      }\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./invoice-list.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_liveAnnouncer",
                        "type": "LiveAnnouncer",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 44,
                "jsdoctags": [
                    {
                        "name": "_liveAnnouncer",
                        "type": "LiveAnnouncer",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div\r\n  class=\"relative main-bg border-2 w-full h-full py-6 pl-5 pr-6 overflow-scroll\"\r\n  *ngIf=\"InvoiceData.length == 0\"\r\n>\r\n  <app-empty-listing [items]=\"noContent\"></app-empty-listing>\r\n</div>\r\n<div\r\n  class=\"relative main-bg border-2 w-full h-full py-6 pl-5 pr-6 overflow-scroll\"\r\n  *ngIf=\"InvoiceData.length > 0\"\r\n>\r\n  <div class=\"flex justify-between align-center px-1\">\r\n    <div class=\"flex align-center\">\r\n      <h1 class=\"text-text text-dark\">Invoice</h1>\r\n    </div>\r\n    <div class=\"flex align-center\">\r\n      <div class=\"global-search light mr-2 border-1\">\r\n        <span class=\"search-icon pointer\">\r\n          <img\r\n            src=\"../../../../assets/images/icons/search.svg\"\r\n            alt=\"search-icon\"\r\n          />\r\n        </span>\r\n        <input type=\"text\" placeholder=\"Search anything...\" />\r\n        <!-- <div class=\"loader\" *ngIf=\"loading\">\r\n          <mat-spinner></mat-spinner>\r\n        </div> -->\r\n      </div>\r\n      <button mat-flat-button color=\"primary\" class=\"create-btn\">\r\n        <img\r\n          src=\"../../../../../../assets/images/icons/file-download.svg\"\r\n          alt=\"download\"\r\n        />\r\n        <span class=\"text-nowrap block ml-2 letter-spacing-0\">Export Data</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"primary-table overflow-visible mt-8 px-1 pb-2\">\r\n    <table\r\n      mat-table\r\n      [dataSource]=\"InvoiceData\"\r\n      matSort\r\n      (matSortChange)=\"announceSortChange($event)\"\r\n    >\r\n      <!--- Note that these columns can be defined in any order.\r\n                The actual rendered columns are set as a property on the row definition\" -->\r\n      <ng-container matColumnDef=\"select\">\r\n        <th mat-header-cell *matHeaderCellDef>\r\n          <mat-checkbox\r\n            color=\"primary\"\r\n            (click)=\"selectAll(InvoiceData)\"\r\n            (change)=\"$event ? toggleAllRows() : null\"\r\n            [checked]=\"selection.hasValue() && isAllSelected()\"\r\n            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n            [aria-label]=\"checkboxLabel()\"\r\n          >\r\n          </mat-checkbox>\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let row\">\r\n          <mat-checkbox\r\n            color=\"primary\"\r\n            (click)=\"selectedRow(row.id, $event)\"\r\n            (change)=\"$event ? selection.toggle(row) : null\"\r\n            [checked]=\"selection.isSelected(row)\"\r\n            [aria-label]=\"checkboxLabel(row)\"\r\n          >\r\n          </mat-checkbox>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- ID Column -->\r\n      <ng-container matColumnDef=\"id\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>#ID</th>\r\n        <td mat-cell *matCellDef=\"let element\">{{ element.id }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Product Name Column -->\r\n      <ng-container matColumnDef=\"customer_info\">\r\n        <th\r\n          mat-header-cell\r\n          *matHeaderCellDef\r\n          mat-sort-header\r\n          sortActionDescription=\"Sort by title\"\r\n        >\r\n        Customer Info.\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let element\">{{ element.customerInfo }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Description Column -->\r\n      <ng-container matColumnDef=\"issued_on\">\r\n        <th mat-header-cell *matHeaderCellDef>Issued On</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n            {{ element.issuedOn}}\r\n        </td>\r\n      </ng-container>\r\n\r\n         <!-- Created Date Column -->\r\n         <ng-container matColumnDef=\"voided_on\">\r\n            <th mat-header-cell *matHeaderCellDef><p class=\"text-center\">Voided On</p></th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <p class=\"text-center\">{{ element.voidedOn }}</p>\r\n            </td>\r\n          </ng-container>\r\n      <!-- Created Date Column -->\r\n      <ng-container matColumnDef=\"paid_on\">\r\n        <th mat-header-cell *matHeaderCellDef>Paid On</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          {{ element.paidOn }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Created Date Column -->\r\n      <ng-container matColumnDef=\"status\">\r\n        <th mat-header-cell *matHeaderCellDef>Status</th>\r\n        <td mat-cell *matCellDef=\"let element\" [ngClass]=\"element.status === 'Active' ? 'Active' : 'InActive'\">\r\n          {{ element.status }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Created Date Column -->\r\n      <ng-container matColumnDef=\"amount\">\r\n        <th mat-header-cell *matHeaderCellDef class=\"text-right\">Amount</th>\r\n        <td mat-cell *matCellDef=\"let element\" class=\"text-right\">\r\n          $ {{ element.amount }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr\r\n        mat-row\r\n        *matRowDef=\"let row; columns: displayedColumns\"\r\n        [id]=\"row.id\"\r\n      ></tr>\r\n    </table>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "InvoiceViewComponent",
            "id": "component-InvoiceViewComponent-dfc257c6968412c13d871c88caa08140761a4e560bf5b2e994629d0ef42e1f67c6b9235260e4c80dd6839888e147fc10add614c5ee3051778831f9de24d91dfd",
            "file": "src/app/modules/payment-history/invoices/components/invoice-view/invoice-view.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-invoice-view",
            "styleUrls": [
                "./invoice-view.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./invoice-view.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-invoice-view',\r\n  templateUrl: './invoice-view.component.html',\r\n  styleUrls: ['./invoice-view.component.scss']\r\n})\r\nexport class InvoiceViewComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./invoice-view.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"invoice-view main-bg border-2 overflow-auto border-2 w-full h-full pb-4\">\r\n    <div class=\"flex align-center title\">\r\n        <mat-icon class=\"material-symbols-outlined pointer text-headline-dark mr-2\"\r\n            [routerLink]=\"'/coupons'\">keyboard_backspace</mat-icon>\r\n        <h2 class=\"mat-headline-5 text-headline-dark\">Invoice</h2>\r\n    </div>\r\n    <div class=\"inner-wrapper\">\r\n        <div class=\"inner-title\">\r\n            <h2 class=\"text-purple-dark-2 mb-1\">Invoice #SO - 001</h2>\r\n            <p class=\"text-grey-lighten-11 mb-0\">Your invoice details are given bellow.</p>\r\n        </div>\r\n        <table style=\"border: 1px solid #D9D9D9; width: 970px; border-radius: 6px; padding: 56px 62px 37px;\">\r\n            <tr>\r\n                <td style=\"width: 50%; text-align: left;\">\r\n                    <svg width=\"111\" height=\"35\" viewBox=\"0 0 111 35\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <rect y=\"0.145508\" width=\"33.1582\" height=\"34\" rx=\"10.1955\" fill=\"url(#paint0_linear_1_11)\" />\r\n                        <path\r\n                            d=\"M13.3023 17.7271H6.38656C6.3631 17.7271 6.33932 17.7302 6.31685 17.7369C5.65217 17.9361 5.63614 18.5491 5.71319 18.8353C6.3736 21.0068 7.76158 25.5111 8.03023 26.1558C8.29887 26.8005 8.76899 26.9393 8.97047 26.9281H15.5522C16.5193 26.9281 16.4701 26.167 16.3246 25.7864L14.0472 18.4855C14.0431 18.4725 14.0401 18.4589 14.0378 18.4454C13.9491 17.9241 13.5123 17.7492 13.3023 17.7271Z\"\r\n                            fill=\"#00A885\" />\r\n                        <path\r\n                            d=\"M15.6187 9.09726H9.03699C8.7146 9.09726 8.49971 9.3659 8.43257 9.50022C7.59305 11.0001 5.83343 14.1477 5.51106 14.7387C5.20612 15.2978 5.67839 15.7206 5.99563 15.8879C6.03002 15.906 6.06848 15.9141 6.10735 15.9141H12.4085C12.9995 15.8805 13.3689 15.5783 13.5367 15.3096L16.2903 10.3397C16.747 9.39948 16.0329 9.11965 15.6187 9.09726Z\"\r\n                            fill=\"#00664B\" />\r\n                        <path opacity=\"0.95\"\r\n                            d=\"M18.5407 8.19046H11.6249C11.6014 8.19046 11.5777 8.19349 11.5552 8.20023C10.8905 8.39939 10.8745 9.01243 10.9515 9.29861C11.6119 11.4701 12.9999 15.9744 13.2686 16.6191C13.5372 17.2639 14.0073 17.4027 14.2088 17.3915H20.7905C21.7577 17.3915 21.7084 16.6303 21.5629 16.2497L19.2855 8.94884C19.2815 8.93578 19.2784 8.92222 19.2761 8.90873C19.1874 8.38737 18.7506 8.21256 18.5407 8.19046Z\"\r\n                            fill=\"#00A885\" />\r\n                        <path\r\n                            d=\"M9.76163 11.3159L22.8106 8.05495C23.2443 7.94656 23.6837 8.21029 23.7921 8.644L27.053 21.693C27.1614 22.1267 26.8977 22.5661 26.464 22.6745L13.415 25.9354C12.9813 26.0438 12.5419 25.7801 12.4335 25.3464L9.17257 12.2974C9.06419 11.8637 9.32792 11.4242 9.76163 11.3159Z\"\r\n                            stroke=\"#F68C1F\" stroke-width=\"1.33616\" stroke-linejoin=\"round\" />\r\n                        <path opacity=\"0.95\"\r\n                            d=\"M21.2504 18.1297H14.675C14.3529 18.1297 14.1383 18.4659 14.0712 18.6339C13.2325 20.5107 11.4745 24.4491 11.1525 25.1886C10.8505 25.8819 11.3115 26.4079 11.6282 26.6208C11.6674 26.6472 11.7141 26.6591 11.7613 26.6591H18.0433C18.6337 26.6171 19.0028 26.239 19.1705 25.9028L21.9214 19.6844C22.3777 18.5079 21.6642 18.1578 21.2504 18.1297Z\"\r\n                            fill=\"#00664B\" fill-opacity=\"0.95\" />\r\n                        <path\r\n                            d=\"M48.8685 2.06117C50.393 2.06117 51.7252 2.36653 52.8652 2.97724C54.0052 3.58796 54.8842 4.44851 55.5022 5.55891C56.134 6.65542 56.4499 7.92543 56.4499 9.36894C56.4499 10.7986 56.134 12.0686 55.5022 13.179C54.8842 14.2894 53.9983 15.1499 52.8446 15.7606C51.7046 16.3714 50.3793 16.6767 48.8685 16.6767H43.4502V2.06117H48.8685ZM48.6419 13.5954C49.9741 13.5954 51.0111 13.2276 51.7527 12.4919C52.4944 11.7563 52.8652 10.7153 52.8652 9.36894C52.8652 8.02259 52.4944 6.97466 51.7527 6.22514C51.0111 5.47563 49.9741 5.10087 48.6419 5.10087H46.9731V13.5954H48.6419Z\"\r\n                            fill=\"#7868E6\" />\r\n                        <path\r\n                            d=\"M60.1904 3.85168C59.5723 3.85168 59.0642 3.67124 58.6659 3.31036C58.2813 2.9356 58.089 2.47757 58.089 1.93625C58.089 1.38105 58.2813 0.923015 58.6659 0.562137C59.0642 0.187379 59.5723 0 60.1904 0C60.7947 0 61.2891 0.187379 61.6737 0.562137C62.072 0.923015 62.2711 1.38105 62.2711 1.93625C62.2711 2.47757 62.072 2.9356 61.6737 3.31036C61.2891 3.67124 60.7947 3.85168 60.1904 3.85168ZM61.9415 5.05923V16.6767H58.4186V5.05923H61.9415Z\"\r\n                            fill=\"#7868E6\" />\r\n                        <path\r\n                            d=\"M68.8621 4.89267C69.6724 4.89267 70.3797 5.05923 70.984 5.39235C71.6021 5.72546 72.0759 6.16268 72.4056 6.704V5.05923H75.9284V16.6559C75.9284 17.7246 75.7156 18.6893 75.2898 19.5499C74.8778 20.4243 74.2391 21.1183 73.3738 21.6318C72.5223 22.1454 71.4579 22.4022 70.1806 22.4022C68.4775 22.4022 67.0972 21.9927 66.0396 21.1738C64.9821 20.3688 64.3778 19.2723 64.2267 17.8843H67.7084C67.8183 18.3284 68.0792 18.6754 68.4912 18.9253C68.9033 19.189 69.4114 19.3208 70.0158 19.3208C70.7437 19.3208 71.3205 19.1057 71.7463 18.6754C72.1858 18.259 72.4056 17.5859 72.4056 16.6559V15.0111C72.0622 15.5524 71.5884 15.9966 70.984 16.3436C70.3797 16.6767 69.6724 16.8433 68.8621 16.8433C67.9144 16.8433 67.056 16.6004 66.2869 16.1146C65.5177 15.6149 64.9065 14.914 64.4533 14.0118C64.0138 13.0957 63.7941 12.0408 63.7941 10.8472C63.7941 9.65348 64.0138 8.60555 64.4533 7.70335C64.9065 6.80116 65.5177 6.10716 66.2869 5.62137C67.056 5.13557 67.9144 4.89267 68.8621 4.89267ZM72.4056 10.868C72.4056 9.97966 72.1583 9.27872 71.6639 8.76517C71.1832 8.25161 70.5926 7.99483 69.8922 7.99483C69.1917 7.99483 68.5942 8.25161 68.0998 8.76517C67.6191 9.26484 67.3787 9.95884 67.3787 10.8472C67.3787 11.7355 67.6191 12.4433 68.0998 12.9708C68.5942 13.4843 69.1917 13.7411 69.8922 13.7411C70.5926 13.7411 71.1832 13.4843 71.6639 12.9708C72.1583 12.4572 72.4056 11.7563 72.4056 10.868Z\"\r\n                            fill=\"#7868E6\" />\r\n                        <path\r\n                            d=\"M80.2488 3.85168C79.6308 3.85168 79.1226 3.67124 78.7243 3.31036C78.3397 2.9356 78.1475 2.47757 78.1475 1.93625C78.1475 1.38105 78.3397 0.923015 78.7243 0.562137C79.1226 0.187379 79.6308 0 80.2488 0C80.8531 0 81.3476 0.187379 81.7322 0.562137C82.1305 0.923015 82.3296 1.38105 82.3296 1.93625C82.3296 2.47757 82.1305 2.9356 81.7322 3.31036C81.3476 3.67124 80.8531 3.85168 80.2488 3.85168ZM82 5.05923V16.6767H78.4771V5.05923H82Z\"\r\n                            fill=\"#7868E6\" />\r\n                        <path\r\n                            d=\"M90.9601 13.6578V16.6767H89.1677C87.8904 16.6767 86.8947 16.3644 86.1805 15.7398C85.4663 15.1013 85.1092 14.0673 85.1092 12.6377V8.01565H83.7083V5.05923H85.1092V2.22773H88.6321V5.05923H90.9395V8.01565H88.6321V12.6793C88.6321 13.0263 88.7145 13.2761 88.8793 13.4288C89.0441 13.5815 89.3188 13.6578 89.7034 13.6578H90.9601Z\"\r\n                            fill=\"#7868E6\" />\r\n                        <path\r\n                            d=\"M92.2219 10.8472C92.2219 9.65348 92.4417 8.60555 92.8812 7.70335C93.3344 6.80116 93.9456 6.10716 94.7147 5.62137C95.4839 5.13557 96.3423 4.89267 97.2899 4.89267C98.1003 4.89267 98.8076 5.05923 99.4119 5.39235C100.03 5.72546 100.504 6.16268 100.833 6.704V5.05923H104.356V16.6767H100.833V15.0319C100.49 15.5733 100.009 16.0105 99.3913 16.3436C98.787 16.6767 98.0797 16.8433 97.2693 16.8433C96.3354 16.8433 95.4839 16.6004 94.7147 16.1146C93.9456 15.6149 93.3344 14.914 92.8812 14.0118C92.4417 13.0957 92.2219 12.0408 92.2219 10.8472ZM100.833 10.868C100.833 9.97966 100.586 9.27872 100.092 8.76517C99.6111 8.25161 99.0205 7.99483 98.32 7.99483C97.6196 7.99483 97.0221 8.25161 96.5277 8.76517C96.047 9.26484 95.8066 9.95884 95.8066 10.8472C95.8066 11.7355 96.047 12.4433 96.5277 12.9708C97.0221 13.4843 97.6196 13.7411 98.32 13.7411C99.0205 13.7411 99.6111 13.4843 100.092 12.9708C100.586 12.4572 100.833 11.7563 100.833 10.868Z\"\r\n                            fill=\"#7868E6\" />\r\n                        <path d=\"M110.428 1.27001V16.6767H106.905V1.27001H110.428Z\" fill=\"#7868E6\" />\r\n                        <path\r\n                            d=\"M48.1661 24.4358V25.8047H44.6781V27.9729H47.3511V29.3175H44.6781V32.891H43V24.4358H48.1661Z\"\r\n                            fill=\"#7868E6\" />\r\n                        <path\r\n                            d=\"M51.0342 27.2219C51.2499 26.8666 51.5296 26.588 51.8732 26.3861C52.2248 26.1842 52.6244 26.0833 53.0719 26.0833V27.8639H52.6284C52.101 27.8639 51.7014 27.9891 51.4297 28.2394C51.166 28.4898 51.0342 28.9259 51.0342 29.5477V32.891H49.3561V26.1802H51.0342V27.2219Z\"\r\n                            fill=\"#7868E6\" />\r\n                        <path\r\n                            d=\"M53.7706 29.5113C53.7706 28.833 53.9025 28.2314 54.1662 27.7065C54.4379 27.1815 54.8015 26.7778 55.257 26.4951C55.7204 26.2125 56.2359 26.0711 56.8032 26.0711C57.2986 26.0711 57.7302 26.1721 58.0977 26.374C58.4733 26.5759 58.773 26.8303 58.9967 27.1371V26.1802H60.6868V32.891H58.9967V31.9098C58.781 32.2247 58.4813 32.4872 58.0977 32.6972C57.7222 32.8991 57.2867 33 56.7912 33C56.2319 33 55.7204 32.8546 55.257 32.5639C54.8015 32.2732 54.4379 31.8654 54.1662 31.3405C53.9025 30.8075 53.7706 30.1978 53.7706 29.5113ZM58.9967 29.5356C58.9967 29.1237 58.9168 28.7724 58.757 28.4817C58.5972 28.1829 58.3814 27.9568 58.1097 27.8034C57.838 27.6418 57.5464 27.5611 57.2347 27.5611C56.9231 27.5611 56.6354 27.6378 56.3717 27.7912C56.108 27.9447 55.8922 28.1708 55.7244 28.4696C55.5646 28.7603 55.4847 29.1076 55.4847 29.5113C55.4847 29.9151 55.5646 30.2705 55.7244 30.5773C55.8922 30.8761 56.108 31.1063 56.3717 31.2678C56.6434 31.4293 56.9311 31.5101 57.2347 31.5101C57.5464 31.5101 57.838 31.4333 58.1097 31.2799C58.3814 31.1184 58.5972 30.8923 58.757 30.6015C58.9168 30.3028 58.9967 29.9474 58.9967 29.5356Z\"\r\n                            fill=\"#7868E6\" />\r\n                        <path\r\n                            d=\"M70.5724 26.0833C71.3875 26.0833 72.0428 26.3376 72.5382 26.8464C73.0416 27.3471 73.2933 28.0497 73.2933 28.9541V32.891H71.6152V29.1843C71.6152 28.6594 71.4834 28.2596 71.2197 27.9851C70.956 27.7024 70.5964 27.5611 70.1409 27.5611C69.6854 27.5611 69.3218 27.7024 69.0501 27.9851C68.7864 28.2596 68.6546 28.6594 68.6546 29.1843V32.891H66.9765V29.1843C66.9765 28.6594 66.8446 28.2596 66.5809 27.9851C66.3172 27.7024 65.9577 27.5611 65.5022 27.5611C65.0387 27.5611 64.6711 27.7024 64.3994 27.9851C64.1357 28.2596 64.0039 28.6594 64.0039 29.1843V32.891H62.3258V26.1802H64.0039V26.9918C64.2196 26.7091 64.4953 26.487 64.8309 26.3255C65.1745 26.164 65.5501 26.0833 65.9577 26.0833C66.4771 26.0833 66.9405 26.1963 67.3481 26.4224C67.7556 26.6405 68.0713 26.9554 68.295 27.3673C68.5108 26.9796 68.8224 26.6687 69.2299 26.4345C69.6455 26.2004 70.093 26.0833 70.5724 26.0833Z\"\r\n                            fill=\"#7868E6\" />\r\n                        <path\r\n                            d=\"M81.0588 29.3902C81.0588 29.6325 81.0428 29.8505 81.0108 30.0443H76.1563C76.1963 30.5289 76.3641 30.9084 76.6597 31.183C76.9554 31.4576 77.319 31.5948 77.7505 31.5948C78.3738 31.5948 78.8173 31.3243 79.081 30.7833H80.891C80.6992 31.4293 80.3316 31.9623 79.7882 32.3822C79.2448 32.7941 78.5776 33 77.7865 33C77.1472 33 76.5718 32.8587 76.0604 32.576C75.557 32.2853 75.1614 31.8775 74.8738 31.3526C74.5941 30.8277 74.4542 30.222 74.4542 29.5356C74.4542 28.8411 74.5941 28.2314 74.8738 27.7065C75.1535 27.1815 75.545 26.7778 76.0484 26.4951C76.5519 26.2125 77.1312 26.0711 77.7865 26.0711C78.4178 26.0711 78.9811 26.2084 79.4766 26.483C79.98 26.7576 80.3675 27.1492 80.6392 27.658C80.9189 28.1587 81.0588 28.7361 81.0588 29.3902ZM79.3207 28.9057C79.3127 28.4696 79.1569 28.1223 78.8533 27.8639C78.5496 27.5974 78.178 27.4642 77.7385 27.4642C77.323 27.4642 76.9714 27.5934 76.6837 27.8518C76.404 28.1022 76.2322 28.4534 76.1683 28.9057H79.3207Z\"\r\n                            fill=\"#7868E6\" />\r\n                        <path\r\n                            d=\"M91.4892 26.1802L89.5474 32.891H87.7374L86.5268 28.2031L85.3162 32.891H83.4943L81.5405 26.1802H83.2425L84.4172 31.292L85.6878 26.1802H87.4618L88.7083 31.2799L89.883 26.1802H91.4892Z\"\r\n                            fill=\"#7868E6\" />\r\n                        <path\r\n                            d=\"M95.3458 33C94.7066 33 94.1312 32.8587 93.6198 32.576C93.1084 32.2853 92.7048 31.8775 92.4092 31.3526C92.1215 30.8277 91.9776 30.222 91.9776 29.5356C91.9776 28.8491 92.1255 28.2435 92.4211 27.7186C92.7248 27.1937 93.1363 26.7899 93.6557 26.5072C94.1752 26.2165 94.7545 26.0711 95.3938 26.0711C96.0331 26.0711 96.6124 26.2165 97.1318 26.5072C97.6512 26.7899 98.0588 27.1937 98.3544 27.7186C98.6581 28.2435 98.8099 28.8491 98.8099 29.5356C98.8099 30.222 98.6541 30.8277 98.3424 31.3526C98.0388 31.8775 97.6232 32.2853 97.0958 32.576C96.5764 32.8587 95.9931 33 95.3458 33ZM95.3458 31.5222C95.6495 31.5222 95.9332 31.4495 96.1969 31.3041C96.4686 31.1507 96.6843 30.9246 96.8441 30.6258C97.0039 30.327 97.0839 29.9636 97.0839 29.5356C97.0839 28.8976 96.916 28.409 96.5804 28.0699C96.2528 27.7226 95.8493 27.549 95.3698 27.549C94.8903 27.549 94.4868 27.7226 94.1592 28.0699C93.8395 28.409 93.6797 28.8976 93.6797 29.5356C93.6797 30.1735 93.8355 30.6662 94.1472 31.0134C94.4668 31.3526 94.8664 31.5222 95.3458 31.5222Z\"\r\n                            fill=\"#7868E6\" />\r\n                        <path\r\n                            d=\"M101.719 27.2219C101.935 26.8666 102.214 26.588 102.558 26.3861C102.91 26.1842 103.309 26.0833 103.757 26.0833V27.8639H103.313C102.786 27.8639 102.386 27.9891 102.115 28.2394C101.851 28.4898 101.719 28.9259 101.719 29.5477V32.891H100.041V26.1802H101.719V27.2219Z\"\r\n                            fill=\"#7868E6\" />\r\n                        <path\r\n                            d=\"M108.818 32.891L106.565 30.0322V32.891H104.887V23.9271H106.565V29.0268L108.795 26.1802H110.976L108.051 29.5477L111 32.891H108.818Z\"\r\n                            fill=\"#7868E6\" />\r\n                        <defs>\r\n                            <linearGradient id=\"paint0_linear_1_11\" x1=\"16.5791\" y1=\"0.145508\" x2=\"16.5791\" y2=\"34.1455\"\r\n                                gradientUnits=\"userSpaceOnUse\">\r\n                                <stop offset=\"0.286458\" stop-color=\"#EEEEEE\" />\r\n                                <stop offset=\"0.942708\" stop-color=\"#F9F9F9\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                    </svg>\r\n\r\n                </td>\r\n                <td style=\"width: 50%; text-align: right;\">\r\n                    <div\r\n                        style=\"width: 44px; height: 44px; border: 1px solid #C1C8FF; border-radius: 5px; text-align: center; display:inline-block\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"margin:10px 0;\" height=\"24\"\r\n                            viewBox=\"0 -960 960 960\" width=\"24\">\r\n                            <path\r\n                                d=\"M652.913-662.696v-112.217H307.087v112.217h-79.218v-192h504.827v192h-79.783Zm-507.826 79.783h669.826-669.826Zm584.586 108.001q15.109 0 25.805-10.59t10.696-25.628q0-14.826-10.59-25.804-10.59-10.979-25.911-10.979-15.108 0-25.804 10.979-10.696 10.978-10.696 25.804 0 14.826 10.696 25.522 10.696 10.696 25.804 10.696Zm-76.76 299.999v-159.215H307.087v159.215h345.826Zm79.783 76.392H227.869V-284.13h-162V-542q0-50.476 34.292-85.586t84.709-35.11h590.26q50.816 0 85.191 35.11T894.696-542v257.87h-162v185.61Zm82.217-265.392v-179.432q0-17.143-11.438-28.355-11.437-11.213-28.345-11.213H184.87q-16.512 0-28.148 11.812-11.635 11.812-11.635 29.101v178.087h82.782v-49.999h504.827v49.999h82.217Z\" />\r\n                        </svg>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td style=\"width: 100%; text-align: center; font-weight: 500; font-size: 29px; color: #1A3447; padding: 32px 24px; text-transform: uppercase;\"\r\n                    colspan=\"2\">\r\n                    Invoice\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td style=\"text-transform: uppercase; font-size: 11px; color: #333333;\" colspan=\"2\">Invoice To</td>\r\n            </tr>\r\n            <tr>\r\n                <td style=\"font-weight: 500; color: #495057; font-size: 22px;\" colspan=\"2\">Greenplus Enterprises</td>\r\n            </tr>\r\n            <tr>\r\n                <td colspan=\"2\">\r\n                    <table style=\"width: 100%; padding: 24px 0 4px;\">\r\n                        <tr>\r\n                            <td style=\"color: #495057;\">\r\n                                <svg style=\"float: left; margin-right:15px;\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"\r\n                                    fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <g clip-path=\"url(#clip0_4153_324227)\">\r\n                                        <path\r\n                                            d=\"M9.9974 1.6665C6.7724 1.6665 4.16406 4.27484 4.16406 7.49984C4.16406 11.8748 9.9974 18.3332 9.9974 18.3332C9.9974 18.3332 15.8307 11.8748 15.8307 7.49984C15.8307 4.27484 13.2224 1.6665 9.9974 1.6665ZM5.83073 7.49984C5.83073 5.19984 7.6974 3.33317 9.9974 3.33317C12.2974 3.33317 14.1641 5.19984 14.1641 7.49984C14.1641 9.89984 11.7641 13.4915 9.9974 15.7332C8.26406 13.5082 5.83073 9.87484 5.83073 7.49984Z\"\r\n                                            fill=\"#495057\" />\r\n                                        <path\r\n                                            d=\"M9.9974 9.58317C11.148 9.58317 12.0807 8.65043 12.0807 7.49984C12.0807 6.34924 11.148 5.4165 9.9974 5.4165C8.8468 5.4165 7.91406 6.34924 7.91406 7.49984C7.91406 8.65043 8.8468 9.58317 9.9974 9.58317Z\"\r\n                                            fill=\"#495057\" />\r\n                                    </g>\r\n                                    <defs>\r\n                                        <clipPath id=\"clip0_4153_324227\">\r\n                                            <rect width=\"20\" height=\"20\" fill=\"white\" />\r\n                                        </clipPath>\r\n                                    </defs>\r\n                                </svg>\r\n\r\n                                21/5, ABC Lane, India\r\n                            </td>\r\n                            <td\r\n                                style=\"font-weight: 500; font-size: 14px; color: #333333; width: 91px; text-transform: uppercase;\">\r\n                                Invoice ID\r\n                            </td>\r\n                            <td\r\n                                style=\"font-weight: 500; color: #495057; width: 105px; padding-right: 20px; text-align: right;\">\r\n                                SO - 001\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td style=\"color: #495057;\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"float: left; margin: 0 15px 0 3px;\"\r\n                                    height=\"20\" viewBox=\"0 -960 960 960\" width=\"20\">\r\n                                    <path\r\n                                        d=\"M795-120q-122 0-242.5-60T336-336q-96-96-156-216.5T120-795q0-19.286 12.857-32.143T165-840h140q13.611 0 24.306 9.5Q340-821 343-805l27 126q2 14-.5 25.5T359-634L259-533q56 93 125.5 162T542-254l95-98q10-11 23-15.5t26-1.5l119 26q15.312 3.375 25.156 15.188Q840-316 840-300v135q0 19.286-12.857 32.143T795-120ZM229-588l81-82-23-110H180q0 39 12 85.5T229-588Zm369 363q41 19 89 31t93 14v-107l-103-21-79 83ZM229-588Zm369 363Z\" />\r\n                                </svg>\r\n\r\n                                9896778865\r\n                            </td>\r\n                            <td\r\n                                style=\"font-weight: 500; font-size: 14px; color: #333333; width: 91px; text-transform: uppercase;\">\r\n                                Date\r\n                            </td>\r\n                            <td\r\n                                style=\"font-weight: 500; color: #495057; width: 105px; padding-right: 20px; text-align: right;\">\r\n                                Jan 14, 2023\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td colspan=\"2\">\r\n                    <table style=\"padding-bottom: 20px; width: 100%; border-spacing: 0;\">\r\n                        <tr>\r\n                            <th\r\n                                style=\"font-weight: 500; font-size: 14px; width: 60%; color: #333333;text-transform: uppercase; padding: 8px 0 8px 20px;\">\r\n                                Description\r\n                            </th>\r\n                            <th\r\n                                style=\"font-weight: 500; font-size: 14px; color: #333333;text-transform: uppercase; padding: 8px 0;\">\r\n                                Price\r\n                            </th>\r\n                            <th\r\n                                style=\"font-weight: 500; font-size: 14px; color: #333333;text-transform: uppercase; width: 116px; padding: 8px 0;\">\r\n                                Qty\r\n                            </th>\r\n                            <th\r\n                                style=\"font-weight: 500; font-size: 14px; color: #333333;text-transform: uppercase; text-align: right; width: 86px; padding: 8px 20px 8px 0;\">\r\n                                Amount\r\n                            </th>\r\n                        </tr>\r\n                        <tr>\r\n                            <td style=\"color: #495057; background: #F5F6FA; padding: 8px 0 8px 20px;\">\r\n                                Premium USD Monthly\r\n                            </td>\r\n                            <td style=\"color: #495057; background: #F5F6FA; padding: 8px 0;\">\r\n                                100.00\r\n                            </td>\r\n                            <td style=\"color: #495057; background: #F5F6FA; padding: 8px 0;\">\r\n                                1\r\n                            </td>\r\n                            <td\r\n                                style=\"text-align: right; color: #495057; background: #F5F6FA; padding: 8px 20px 8px 0;\">\r\n                                100.00\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td style=\"color: #495057;padding: 8px 0 8px 20px;\">\r\n                                Setup Fee\r\n                            </td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td style=\"color: #495057; text-align: right; padding: 8px 20px 8px 0;\">\r\n                                99.00\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td style=\"color: #495057; padding: 8px 0;\">\r\n                                Subtotal\r\n                            </td>\r\n                            <td style=\"color: #495057; padding: 8px 20px 8px 0; text-align: right;\">\r\n                                199.00\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td style=\"color: #495057; padding: 8px 0;\">\r\n                                TAX\r\n                            </td>\r\n                            <td\r\n                                style=\"color: #495057; padding: 8px 20px 8px 0; text-align: right; border-bottom: 1px solid #DBDFEA;\">\r\n                                00.00\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td style=\"color: #495057; padding: 8px 0;\">\r\n                                Grand Total\r\n                            </td>\r\n                            <td style=\"color: #495057; text-align: right;padding: 8px 20px 8px 0;\">\r\n                                $ 199.00\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td style=\"color: #495057; font-style: italic;\" colspan=\"2\">\r\n                    Invoice was created on a computer and is valid without the signature and seal.\r\n                </td>\r\n            </tr>\r\n\r\n        </table>\r\n        <div class=\"text-right pt-4\">\r\n            <button mat-flat-button color=\"primary\">\r\n                Close\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>"
        },
        {
            "name": "LayoutComponent",
            "id": "component-LayoutComponent-2e55f10a69bf9753aa99a1cbe5de38b881beed3da7017723b10a05cd41c26ac8ba5e87ba2432e9fbfe3ae159d8eac7d27fc8730bf81f87b0304dc0be20298452",
            "file": "src/app/core/layouts/layout/layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-layout",
            "styleUrls": [
                "./layout.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./layout.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "configOptions",
                    "defaultValue": "Config_Menu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "Menu_Headings",
                    "defaultValue": "Menu_Headings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "menuItems",
                    "defaultValue": "MENUITEMS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "notificationsData",
                    "defaultValue": "Notifications_Data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "opened",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "sidenav",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSidenav",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'sidenav'"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "userProfile",
                    "defaultValue": "User_Options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "getList",
                    "args": [
                        {
                            "name": "item",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "preventClose",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleSidenav",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewChild, Output, EventEmitter } from '@angular/core';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\nimport {\r\n  Config_Menu,\r\n  MENUITEMS,\r\n  User_Options,\r\n  Menu_Headings,\r\n  Notifications_Data,\r\n} from 'src/app/shared/constants/consants';\r\nimport { GlobalService } from '../../services/global.service';\r\nimport { takeUntil } from 'rxjs';\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.scss'],\r\n})\r\nexport class LayoutComponent {\r\n  menuItems = MENUITEMS;\r\n  configOptions = Config_Menu;\r\n  Menu_Headings = Menu_Headings;\r\n  userProfile = User_Options;\r\n  notificationsData = Notifications_Data;\r\n  loading: boolean = false;\r\n  constructor(private global: GlobalService) {}\r\n\r\n  @ViewChild('sidenav') sidenav: MatSidenav;\r\n\r\n  ngOnInit() {\r\n    this.global\r\n      .loaderStatus()\r\n      .pipe(takeUntil(this.global.componentDestroyed(this)))\r\n      .subscribe((res) => this.loading = res);\r\n  }\r\n\r\n  opened: boolean = true;\r\n  toggleSidenav(event: any) {\r\n    this.sidenav.toggle();\r\n    this.opened = event;\r\n  }\r\n\r\n  getList(item: string) {\r\n    let list = [];\r\n    return (list = this.menuItems.filter((ele) => ele.category == item));\r\n  }\r\n  preventClose(event: any) {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./layout.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "global",
                        "type": "GlobalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "global",
                        "type": "GlobalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"outer-layout\">\r\n  <mat-sidenav-container [ngClass]=\"opened ? 'sidenav-open' : 'sidenav-closed'\">\r\n    <mat-sidenav #sidenav mode=\"side\" opened=\"true\" class=\"sidenav-slider\">\r\n      <app-sidebar (newItemEvent)=\"toggleSidenav($event)\"></app-sidebar>\r\n    </mat-sidenav>\r\n    <mat-sidenav-content>\r\n      <!-- Header for application starts here! -->\r\n      <div class=\"header-wrapper border-2\">\r\n        <div class=\"header-right\">\r\n          <div\r\n            class=\"notifications-section pointer\"\r\n            [matMenuTriggerFor]=\"notificationsMenu\"\r\n            matBadge=\"3\"\r\n            matBadgeSize=\"small\"\r\n            matBadgeColor=\"warn\"\r\n          >\r\n            <img\r\n              src=\"../../../../assets/images/icons/notifications.svg\"\r\n              alt=\"notifications-icon\"\r\n            />\r\n          </div>\r\n          <mat-menu\r\n            #notificationsMenu=\"matMenu\"\r\n            class=\"notifications-menu border-2\"\r\n            backdropClass=\"right-menu\"\r\n          >\r\n            <div class=\"notifications-header\">\r\n              <div class=\"flex align-center justify-between\">\r\n                <div class=\"label\">Notifications</div>\r\n                <mat-chip class=\"basic-chip\"> 4 New </mat-chip>\r\n              </div>\r\n              <div class=\"tab-panel\" (click)=\"preventClose($event)\">\r\n                <mat-tab-group mat-stretch-tabs=\"false\" mat-align-tabs=\"start\">\r\n                  <mat-tab label=\"All (4)\">\r\n                    <div\r\n                      class=\"relative h-55\"\r\n                      *ngIf=\"notificationsData.length == 0\"\r\n                    >\r\n                      <div class=\"absolute position-center text-center w-full\">\r\n                        <img\r\n                          src=\"../../../../assets/images/notifications-icon.png\"\r\n                          alt=\"no data\"\r\n                        />\r\n                        <span class=\"block mt-6\">\r\n                          Hey! You have no notifications.\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      class=\"notification-list\"\r\n                      (click)=\"preventClose($event)\"\r\n                      *ngIf=\"notificationsData.length > 0\"\r\n                    ></div>\r\n                  </mat-tab>\r\n                  <mat-tab label=\"Messages\">\r\n                    <div\r\n                      class=\"relative h-55\"\r\n                      *ngIf=\"notificationsData.length == 0\"\r\n                    >\r\n                      <div class=\"absolute position-center text-center w-full\">\r\n                        <img\r\n                          src=\"../../../../assets/images/notifications-icon.png\"\r\n                          alt=\"no data\"\r\n                        />\r\n                        <span class=\"block mt-6\">\r\n                          Hey! You have no notifications.\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      class=\"message-list\"\r\n                      (click)=\"preventClose($event)\"\r\n                      *ngIf=\"notificationsData.length > 0\"\r\n                    >\r\n                      My Messages\r\n                    </div>\r\n                  </mat-tab>\r\n                  <mat-tab label=\"Alerts\">\r\n                    <div\r\n                      class=\"relative h-55\"\r\n                      *ngIf=\"notificationsData.length == 0\"\r\n                    >\r\n                      <div class=\"absolute position-center text-center w-full\">\r\n                        <img\r\n                          src=\"../../../../assets/images/notifications-icon.png\"\r\n                          alt=\"no data\"\r\n                        />\r\n                        <span class=\"block mt-6\">\r\n                          Hey! You have no notifications.\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      class=\"message-list\"\r\n                      (click)=\"preventClose($event)\"\r\n                      *ngIf=\"notificationsData.length > 0\"\r\n                    >\r\n                      Alerts\r\n                    </div>\r\n                  </mat-tab>\r\n                </mat-tab-group>\r\n              </div>\r\n              <div\r\n                class=\"text-center modal-footer pointer\"\r\n                (click)=\"preventClose($event)\"\r\n              >\r\n                <span class=\"block py-4\"> View All </span>\r\n              </div>\r\n            </div>\r\n          </mat-menu>\r\n          <div class=\"user-profile pointer\" [matMenuTriggerFor]=\"menu\">\r\n            <div class=\"user-image\">\r\n              <img src=\"../../../../assets/images/profile-avatar-1.png\" />\r\n            </div>\r\n            <div class=\"user-info\">\r\n              <span class=\"name\">John Smith</span>\r\n              <span class=\"role\">Founder</span>\r\n            </div>\r\n          </div>\r\n          <mat-menu\r\n            #menu=\"matMenu\"\r\n            class=\"profile-menu\"\r\n            backdropClass=\"alert-menu\"\r\n          >\r\n            <div class=\"profile-menu-outer\">\r\n              <div class=\"grad-bg\">\r\n                <div class=\"user-initials\">JS</div>\r\n              </div>\r\n              <div class=\"profile-inner\">\r\n                <p class=\"mat-h1 fw-600 m-0\">John Smith</p>\r\n                <p class=\"m-0 mt-1\">Founder</p>\r\n              </div>\r\n              <div class=\"profile-paths\">\r\n                <a\r\n                  class=\"flex align-center justify-between user-link\"\r\n                  *ngFor=\"let element of userProfile\"\r\n                >\r\n                  <div class=\"flex align-center\">\r\n                    <mat-icon class=\"material-symbols-outlined\">{{\r\n                      element.icon\r\n                    }}</mat-icon>\r\n                    <span class=\"ml-3\">{{ element.name }}</span>\r\n                  </div>\r\n                  <div *ngIf=\"element.toggle\">\r\n                    <mat-slide-toggle\r\n                      color=\"primary\"\r\n                      (click)=\"preventClose($event)\"\r\n                    ></mat-slide-toggle>\r\n                  </div>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </mat-menu>\r\n        </div>\r\n      </div>\r\n      <div class=\"pt-6 main-content-height relative\">\r\n        <div class=\"loader\" *ngIf=\"loading\">\r\n          <div class=\"position-center\">\r\n            <mat-spinner ></mat-spinner>\r\n          </div>\r\n        </div>\r\n        <router-outlet></router-outlet>\r\n      </div>\r\n    </mat-sidenav-content>\r\n  </mat-sidenav-container>\r\n</div>\r\n"
        },
        {
            "name": "LeftNavigationComponent",
            "id": "component-LeftNavigationComponent-baf5b0c42495c4d441e55fa99b6b3bb10c399d094053114c82a70e54af803a82c843755ffac6c4a4a3ca83b304724178a89be29827e8e43c50650852ec69afd5",
            "file": "src/stories/softobiz-ui/leftNavigation/leftNavigation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sft-leftNavigation",
            "styleUrls": [
                "./leftNavigation.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./leftNavigation.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "newItemEvent",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "activeRoute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "configOptions",
                    "defaultValue": "Config_Menu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "currentRoute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "globalService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GlobalService",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "Menu_Headings",
                    "defaultValue": "Menu_Headings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "menuItems",
                    "defaultValue": "MENUITEMS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "notificationsData",
                    "defaultValue": "Notifications_Data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "opened",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "route",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActivatedRoute",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "sidenav",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSidenav",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'sidenav'"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "userProfile",
                    "defaultValue": "User_Options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                }
            ],
            "methodsClass": [
                {
                    "name": "getList",
                    "args": [
                        {
                            "name": "item",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleSidenav",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs';\nimport { GlobalService } from 'src/app/core/services/global.service';\nimport { MENUITEMS, Config_Menu, Menu_Headings, User_Options, Notifications_Data } from 'src/app/shared/constants/consants';\n@Component({\n  selector: 'sft-leftNavigation',\n  templateUrl: './leftNavigation.component.html',\n  styleUrls: ['./leftNavigation.component.scss']\n})\nexport class LeftNavigationComponent {\n  // menuItems = MENUITEMS;\n  // configOptions = Config_Menu;\n  // Menu_Headings = Menu_Headings;\n  // userProfile = User_Options;\n  // notificationsData = Notifications_Data;\n  // constructor() {}\n\n  // @ViewChild('sidenav') sidenav: MatSidenav;\n\n  // opened: boolean = true;\n  // toggleSidenav(event: any) {\n  //   this.sidenav.toggle();\n  //   this.opened = event;\n  // }\n\n  // getList(item: string) {\n  //   let list = [];\n  //   return (list = this.menuItems.filter((ele) => ele.category == item));\n  // }\n  // preventClose(event: any) {\n  //   event.stopPropagation();\n  // }\n  menuItems = MENUITEMS;\n  configOptions = Config_Menu;\n  Menu_Headings = Menu_Headings;\n  userProfile = User_Options;\n  notificationsData = Notifications_Data;\n  activeRoute: string[];\n  currentRoute: string;\n\n  constructor(\n    public globalService: GlobalService,\n    private router: Router,\n    public route: ActivatedRoute\n  ) {\n    this.router.events\n      .pipe(filter((event: any) => event instanceof NavigationEnd))\n      .subscribe((event: any) => {\n        this.currentRoute = event.url;\n        this.activeRoute = this.currentRoute.split('/')\n      });\n  }\n\n  @ViewChild('sidenav') sidenav: MatSidenav;\n  @Output() newItemEvent = new EventEmitter<boolean>();\n\n  opened: boolean = true;\n  toggleSidenav() {\n    // this.sidenav.toggle();\n    this.opened = !this.opened;\n    this.newItemEvent.emit(this.opened);\n  }\n  getList(item: string) {\n    let list = [];\n    return (list = this.menuItems.filter((ele) => ele.category == item));\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "// .left-navigation {\r\n//   width: 261px;\r\n// }",
                    "styleUrl": "./leftNavigation.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "globalService",
                        "type": "GlobalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 41,
                "jsdoctags": [
                    {
                        "name": "globalService",
                        "type": "GlobalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"outer-layout\">\r\n  <mat-sidenav-container [ngClass]=\"opened ? 'sidenav-open' : 'sidenav-closed'\">\r\n    <mat-sidenav #sidenav mode=\"side\" opened=\"true\" class=\"sidenav-slider\">\r\n      <div class=\"sidenav-wrapper border-2\">\r\n        <div class=\"sidebar-toggle\">\r\n          <button\r\n            mat-mini-fab\r\n            color=\"accent\"\r\n            class=\"toggle-sidenav\"\r\n            (click)=\"toggleSidenav()\"\r\n          >\r\n            <svg\r\n              width=\"8\"\r\n              height=\"14\"\r\n              viewBox=\"0 0 8 14\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M0.269968 12.3681L1.42697 13.5186L7.85547 7.08355L1.42047 0.648554L0.269969 1.79905L5.55447 7.08355L0.269968 12.3681V12.3681Z\"\r\n                fill=\"white\"\r\n              />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n        <div class=\"sidebar-wrapper\">\r\n          <div class=\"logo pointer\">\r\n            <div class=\"logo-img pointer\">\r\n              <img src=\"/framework-logo.png\" alt=\"logo\" />\r\n            </div>\r\n            <div class=\"text-wrapper\">\r\n              <h3>Digital</h3>\r\n              <span class=\"logo-text\">Framework</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"sidebar-scrollable mt-11\">\r\n            <mat-nav-list class=\"sidebar p-0\">\r\n              <div *ngFor=\"let element of Menu_Headings\" class=\"transition-400\">\r\n                <div\r\n                  *ngIf=\"element.name != 'Dashboard'\"\r\n                  class=\"category-heading\"\r\n                >\r\n                  <h1>{{ element.name }}</h1>\r\n                </div>\r\n                <mat-list-item\r\n                  class=\"nav-list-item p-0 w-full\"\r\n                  *ngFor=\"let item of getList(element.category)\"\r\n                >\r\n                  <a\r\n                    class=\"icon-wrapper flex align-center\"\r\n                  >\r\n                    <div class=\"flex justify-center sidebar-icon-wraper\">\r\n                      <mat-icon\r\n                        class=\"material-symbols-outlined m-0 sidebar-icon\"\r\n                        >{{ item.icon }}</mat-icon\r\n                      >\r\n                    </div>\r\n                    <div class=\"content-wrapper\">\r\n                      <span class=\"content\">{{ item.name }}</span>\r\n                    </div>\r\n                  </a>\r\n                </mat-list-item>\r\n              </div>\r\n            </mat-nav-list>\r\n            <!-- <div class=\"image-wrapper\">\r\n              <div class=\"img\">\r\n                <img src=\"/dashboard-cat.png\" alt=\"Dashboard Get Started\" />\r\n              </div>\r\n              <div class=\"text\">\r\n                <h3>First steps</h3>\r\n                <p class=\"description\">\r\n                  Customize your dashboard and lean <br />about out features\r\n                </p>\r\n                <span class=\"pointer\">Get Started</span>\r\n              </div>\r\n            </div> -->\r\n          </div>\r\n          <mat-nav-list class=\"config-section sidebar\">\r\n            <mat-list-item\r\n              class=\"nav-list-item p-0\"\r\n              *ngFor=\"let item of configOptions\"\r\n            >\r\n              <a\r\n                class=\"icon-wrapper flex align-center\"\r\n                [routerLink]=\"['/', item.state]\"\r\n              >\r\n                <mat-icon class=\"material-symbols-outlined m-0 sidebar-icon\">{{\r\n                  item.icon\r\n                }}</mat-icon>\r\n                <div class=\"content-wrapper\">\r\n                  <span class=\"content\">{{ item.name }}</span>\r\n                </div>\r\n              </a>\r\n            </mat-list-item>\r\n          </mat-nav-list>\r\n        </div>\r\n      </div>\r\n    </mat-sidenav>\r\n    <mat-sidenav-content>\r\n      <div class=\"pt-6 main-content-height\">\r\n        <router-outlet></router-outlet>\r\n      </div>\r\n    </mat-sidenav-content>\r\n  </mat-sidenav-container>\r\n</div>\r\n"
        },
        {
            "name": "LogsListComponent",
            "id": "component-LogsListComponent-e333cf90916fdbeeeac4641bed28f5c6515efe19823c14f032caf516c949b66a585ed71d36c3b7a4c58dd43cfb4bd35e8cf4b17ec536cc89e74f4b9cdd72b720",
            "file": "src/app/modules/payment-history/logs/components/logs-list/logs-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: DateAdapter, useClass: CustomDateAdapter, deps: [MAT_DATE_LOCALE],\n}"
                },
                {
                    "name": "{ provide: MAT_DATE_FORMATS, useValue: MATERIAL_DATEPICKER_FORMATS }"
                }
            ],
            "selector": "app-logs-list",
            "styleUrls": [
                "./logs-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./logs-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "customHeader",
                    "defaultValue": "CustomDateHeaderComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 67
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "[\r\n    'Timestamp',\r\n    'Events',\r\n    'Customer_Info',\r\n    'Event_Source',\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "emptyCoupons",
                    "defaultValue": "noLogs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "endDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 69
                },
                {
                    "name": "filterOptions",
                    "defaultValue": "listFilterOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 66
                },
                {
                    "name": "isOpened",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "LogsData",
                    "defaultValue": "Logs_Data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "logs[]",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "startDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 68
                }
            ],
            "methodsClass": [
                {
                    "name": "handleDateRangeSelection",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openDatePicker",
                    "args": [
                        {
                            "name": "event",
                            "type": "MatTabChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MatTabChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "preventClose",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setFilter",
                    "args": [
                        {
                            "name": "selectedOption",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "selectedOption",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewChild } from '@angular/core';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\nimport { CustomDateHeaderComponent } from 'src/app/shared/components/custom-date-header/custom-date-header.component';\r\n\r\nimport {\r\n  Logs_Data,\r\n  listFilterOptions,\r\n  logs,\r\n  noLogs,\r\n} from 'src/app/shared/constants/consants';\r\n// import * as moment from 'moment';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport {\r\n  DateAdapter,\r\n  MAT_DATE_FORMATS,\r\n  MAT_DATE_LOCALE,\r\n} from '@angular/material/core';\r\nclass CustomDateAdapter extends MomentDateAdapter {\r\n  override getDayOfWeekNames(style: 'long' | 'short' | 'narrow') {\r\n    return ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n  }\r\n  override getFirstDayOfWeek(): number {\r\n    return 1;\r\n  }\r\n}\r\n\r\nexport const MATERIAL_DATEPICKER_FORMATS = {\r\n  parse: {\r\n    dateInput: 'DD/MMM/YYYY',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MMM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'DD/MMM/YYYY',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n\r\n@Component({\r\n  selector: 'app-logs-list',\r\n  templateUrl: './logs-list.component.html',\r\n  styleUrls: ['./logs-list.component.scss'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: CustomDateAdapter,\r\n      deps: [MAT_DATE_LOCALE],\r\n    },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MATERIAL_DATEPICKER_FORMATS },\r\n  ],\r\n})\r\nexport class LogsListComponent {\r\n  isOpened: boolean = false;\r\n  displayedColumns: string[] = [\r\n    'Timestamp',\r\n    'Events',\r\n    'Customer_Info',\r\n    'Event_Source',\r\n  ];\r\n  LogsData: logs[] = Logs_Data;\r\n  emptyCoupons = noLogs;\r\n  filterOptions: string[] = listFilterOptions;\r\n  customHeader = CustomDateHeaderComponent;\r\n  startDate: Date;\r\n  endDate: Date;\r\n  preventClose(event: any) {\r\n    event.stopPropagation();\r\n  }\r\n  setFilter(selectedOption: string) {\r\n    console.log(selectedOption, 'this is the selected option');\r\n  }\r\n  openDatePicker(event: MatTabChangeEvent): void {\r\n    const selectedTab = event.index;\r\n    console.log(selectedTab, 'check');\r\n    if (selectedTab === 1) {\r\n      this.isOpened = true;\r\n    }\r\n  }\r\n  handleDateRangeSelection(): void {\r\n    console.log(this.selectedDates, 'test date');\r\n    if (this.selectedDates.length === 2) {\r\n      this.startDate = this.selectedDates[0];\r\n      this.endDate = this.selectedDates[1];\r\n      console.log(this.startDate, 'start date');\r\n      console.log(this.endDate, 'end date');\r\n    }\r\n  }\r\n  get selectedDates(): Date[] {\r\n    return [this.startDate, this.endDate];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "::ng-deep .mat-datepicker-panel {\r\n    position: absolute !important;\r\n    top: auto !important;\r\n    left: auto !important;\r\n    right: 0 !important;\r\n    bottom: calc(100% + 5px) !important;\r\n    transform: none !important;\r\n  }",
                    "styleUrl": "./logs-list.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "selectedDates": {
                    "name": "selectedDates",
                    "getSignature": {
                        "name": "selectedDates",
                        "type": "[]",
                        "returnType": "Date[]",
                        "line": 92
                    }
                }
            },
            "templateData": "<div\r\n  *ngIf=\"LogsData.length == 0\"\r\n  class=\"relative main-bg border-2 w-full h-full p-7 overflow-scroll\"\r\n>\r\n  <app-empty-listing [items]=\"emptyCoupons\"></app-empty-listing>\r\n</div>\r\n<div\r\n  *ngIf=\"LogsData.length > 0\"\r\n  class=\"relative main-bg border-2 w-full h-full py-6 pl-5 pr-6 overflow-scroll logs-list\"\r\n>\r\n  <div class=\"flex justify-between align-center px-1\">\r\n    <div class=\"flex align-center\">\r\n      <h1 class=\"text-text text-dark\">Logs</h1>\r\n    </div>\r\n    <div class=\"flex align-center\">\r\n      <div class=\"global-search light mr-2 border-1\">\r\n        <span class=\"search-icon pointer\">\r\n          <img\r\n            src=\"../../../../assets/images/icons/search.svg\"\r\n            alt=\"search-icon\"\r\n          />\r\n        </span>\r\n        <input type=\"text\" placeholder=\"Search anything...\" />\r\n      </div>\r\n      <div\r\n        class=\"tab-wrapper p-2 flex align-center w-full pointer\"\r\n        [matMenuTriggerFor]=\"filterMenu\"\r\n      >\r\n        <div class=\"flex mr-4\">\r\n          <img\r\n            src=\"../../../../../assets/images/icons/primary-calendar-icon.svg\"\r\n            alt=\"calendar-icon\"\r\n          />\r\n        </div>\r\n        <p>2023-08-07 - 2023- 08-07</p>\r\n      </div>\r\n      <mat-menu #filterMenu=\"matMenu\" class=\"listing-filter\">\r\n        <div class=\"tab-panel\" (click)=\"preventClose($event)\">\r\n          <mat-tab-group\r\n            mat-stretch-tabs=\"false\"\r\n            mat-align-tabs=\"start\"\r\n          >\r\n            <mat-tab label=\"Present\">\r\n              <mat-list role=\"list\" class=\"filter-list\">\r\n                <mat-list-item\r\n                  role=\"listitem\"\r\n                  *ngFor=\"let option of filterOptions\"\r\n                  (click)=\"setFilter(option)\"\r\n                  >{{ option }}</mat-list-item\r\n                >\r\n              </mat-list>\r\n            </mat-tab>\r\n            <mat-tab label=\"Custom\">\r\n              <div class=\"py-2 px-6\">\r\n                <div class=\"flex align-center input-wrapper px-2\">\r\n                  <div class=\"block filter-input mr-4\">\r\n                    <span class=\"block mat-body-1 pl-2 mb-1\"> Start </span>\r\n                    <mat-form-field>\r\n                      <input\r\n                        matInput\r\n                        placeholder=\"Start Date\"\r\n                        [(ngModel)]=\"startDate\"\r\n                      />\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"block filter-input\">\r\n                    <span class=\"block mat-body-1 pl-2 mb-1\"> End </span>\r\n                    <mat-form-field>\r\n                      <input matInput type=\"text\" placeholder=\"end Date\" />\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n                <mat-calendar ></mat-calendar>\r\n                <div class=\"w-full flex justify-end align-center\">\r\n                  <button mat-stroked-button color=\"primary\" class=\"mr-3\">Cancel</button>\r\n                  <button mat-flat-button color=\"primary\">Apply</button>\r\n                </div>\r\n              </div>\r\n            </mat-tab>\r\n          </mat-tab-group>\r\n        </div>\r\n      </mat-menu>\r\n    </div>\r\n  </div>\r\n  <div class=\"primary-table overflow-visible mt-8 px-1 pb-2 table-wrapper\">\r\n    <table mat-table [dataSource]=\"LogsData\">\r\n      <!-- TimestampColumn -->\r\n      <ng-container matColumnDef=\"Timestamp\">\r\n        <th mat-header-cell *matHeaderCellDef>Timestamp</th>\r\n        <td mat-cell *matCellDef=\"let element\">{{ element.Timestamp }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Events Column -->\r\n      <ng-container matColumnDef=\"Events\">\r\n        <th mat-header-cell *matHeaderCellDef>Events</th>\r\n        <td mat-cell *matCellDef=\"let element\">{{ element.Events }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Description Column -->\r\n      <ng-container matColumnDef=\"Customer_Info\">\r\n        <th mat-header-cell *matHeaderCellDef>Customer Info</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          <p>{{ element.Customer_Info }}</p>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Created Date Column -->\r\n      <ng-container matColumnDef=\"Event_Source\">\r\n        <th mat-header-cell *matHeaderCellDef>Event Source</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          <span class=\"primary-light-6-bg p-1 border-1 text-primary\">\r\n            {{ element.Event_Source }}\r\n          </span>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n    </table>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "LogViewComponent",
            "id": "component-LogViewComponent-aa9aa7e8f66c21e6de72f73cd3dda117d285d6533e673c151fd877aed76461da5d249df3e3081db526c487f4f9eeed84b138775d1ca281a97f741cb111c7a3eb",
            "file": "src/app/modules/payment-history/logs/components/log-view/log-view.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-log-view",
            "styleUrls": [
                "./log-view.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./log-view.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-log-view',\r\n  templateUrl: './log-view.component.html',\r\n  styleUrls: ['./log-view.component.scss']\r\n})\r\nexport class LogViewComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./log-view.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"logs-view main-bg border-2 overflow-auto border-2 w-full h-full pb-4\">\r\n    <div class=\"flex align-center title\">\r\n        <mat-icon class=\"material-symbols-outlined pointer text-headline-dark mr-2\"\r\n            [routerLink]=\"'/coupons'\">keyboard_backspace</mat-icon>\r\n        <h2 class=\"mat-headline-5 text-headline-dark\">Logs</h2>\r\n    </div>\r\n    <div class=\"inner-wrapper\">\r\n        <div class=\"table-wrapper border-2\">\r\n            <table class=\"w-full\">\r\n                <tr>\r\n                    <th>\r\n                        <span class=\"text-dark mr-3 font-weight-400 mat-subtitle-2\">Event</span>\r\n                        <span class=\"chip-active text-white font-weight-400 mat-subtitle-2 inline-block\">Active</span>\r\n                    </th>\r\n                    <th>\r\n\r\n                    </th>\r\n                </tr>\r\n                <tr>\r\n                    <td class=\"text-dark\">\r\n                        Name               : \r\n                    </td>\r\n                    <td class=\"text-right text-dark\">\r\n                        Subscription has been created for the Plan.\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td class=\"text-dark\">\r\n                        Timestamp    : \r\n                    </td>\r\n                    <td class=\"text-right text-dark\">\r\n                        Aug 7th, 2022 9:09am\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td class=\"text-dark\">\r\n                        Customer Info.   :\r\n                    </td>\r\n                    <td class=\"text-right text-dark\">\r\n                        Greenplus Enterprises\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td class=\"text-dark\">\r\n                        Source Type    :\r\n                    </td>\r\n                    <td class=\"text-right text-dark\">\r\n                        Via Portal\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n        <div class=\"text-right pt-4\">\r\n            <button mat-flat-button color=\"primary\">\r\n                Close\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>"
        },
        {
            "name": "MenuComponent",
            "id": "component-MenuComponent-5d83d2889048775e8e1eb523123e3682a80f54460a58d2dbddff49926b6b1505c1f00f15f55425d4c576b8676b8de20af0509565b4bb8f7d5a3fddb2275eeee7",
            "file": "src/stories/softobiz-ui/menu/menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-menu",
            "styleUrls": [
                "./menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./menu.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "withIcon",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.scss']\r\n})\r\nexport class MenuComponent {\r\n  \r\n  @Input() withIcon: boolean = false;\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./menu.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-icon class=\"material-symbols-outlined\" [matMenuTriggerFor]=\"actionsMenu\">\r\n  more_vert\r\n</mat-icon>\r\n<mat-menu #actionsMenu=\"matMenu\" class=\"actions-menu\" backdropClass=\"edit-menu\">\r\n  <button mat-menu-item disableRipple>\r\n    <mat-icon *ngIf=\"withIcon\" class=\"material-symbols-outlined\"\r\n      ><img src=\"/icons/bunny.svg\" alt=\"bunny-icon\" class=\"mr-3\"\r\n    /></mat-icon>\r\n    Edit\r\n  </button>\r\n  <button mat-menu-item disableRipple>\r\n    <mat-icon *ngIf=\"withIcon\" class=\"material-symbols-outlined\"\r\n      ><img src=\"/icons/bunny.svg\" alt=\"bunny-icon\" class=\"mr-3\"\r\n    /></mat-icon>\r\n    Delete\r\n  </button>\r\n</mat-menu>\r\n"
        },
        {
            "name": "NoItemFoundComponent",
            "id": "component-NoItemFoundComponent-dc836a199cbb77901236f4c4a6ec870bade8e6cfb07a67f7cdd383e910c7d45672360c67ca64771a3bda6fb3193acc3d316bd1deb094f3ff3801b63fcb5d5d8a",
            "file": "src/app/shared/components/no-item-found/no-item-found.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-no-item-found",
            "styleUrls": [
                "./no-item-found.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./no-item-found.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-no-item-found',\r\n  templateUrl: './no-item-found.component.html',\r\n  styleUrls: ['./no-item-found.component.scss'],\r\n})\r\nexport class NoItemFoundComponent {\r\n  constructor() {}\r\n  ngOnInit() {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./no-item-found.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "templateData": "<div class=\"position-center text-center\">\r\n    <img src=\"../../../../assets/images/no-item-list.png\" alt=\"No Items in List\" />\r\n    <h4 class=\"mat-headline-5 mt-7\">Oops! there is no data found</h4>\r\n    <p class=\"mat-subtitle-2 mt-3\">We are unable to fetch any data.</p>\r\n</div>"
        },
        {
            "name": "NotificationComponent",
            "id": "component-NotificationComponent-f7f7a17ac41d2a8a014e042cdc96f1fb637dc243008ed55da968593f31908a480a55b221e87472fe7243c2898c449120d55f3e6506fbcaa40cc2bd902a17ae76",
            "file": "src/stories/softobiz-ui/notification/notification.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-notification",
            "styleUrls": [
                "./notification.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./notification.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "badgeCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "ThemePalette",
                    "decorators": []
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "MatBadgeSize",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { MatBadgeSize } from '@angular/material/badge';\r\nimport { ThemePalette } from '@angular/material/core';\r\n\r\n@Component({\r\n  selector: 'app-notification',\r\n  templateUrl: './notification.component.html',\r\n  styleUrls: ['./notification.component.scss'],\r\n})\r\nexport class NotificationComponent {\r\n  @Input() badgeCount: number;\r\n\r\n  @Input() color: ThemePalette;\r\n\r\n  @Input() size: MatBadgeSize;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./notification.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"header-wrapper\">\r\n  <div class=\"header-right\">\r\n    <div\r\n      class=\"notifications-section pointer\"\r\n      [matBadge]=\"badgeCount\"\r\n      [matBadgeSize]=\"size\"\r\n      [matBadgeColor]=\"color\"\r\n    >\r\n      <img src=\"/icons/notifications.svg\" alt=\"notifications-icon\" />\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "PageNotFoundComponent",
            "id": "component-PageNotFoundComponent-0cf36aa02a1a356295616bcc758c59b8bb95891721ff3ffa38706fd11e06e6f4e8873bf420964857ed2ac31ad602da3a624ca4e8b498760218a54b2dde5a5a06",
            "file": "src/app/shared/components/page-not-found/page-not-found.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-page-not-found",
            "styleUrls": [
                "./page-not-found.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./page-not-found.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "emptyData",
                    "defaultValue": "noPageFound",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { noPageFound } from '../../constants/consants';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.scss'],\r\n})\r\nexport class PageNotFoundComponent {\r\n  constructor() {}\r\n  emptyData = noPageFound;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./page-not-found.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "templateData": "<app-empty-listing [items]=\"emptyData\"></app-empty-listing>"
        },
        {
            "name": "PaginatorComponent",
            "id": "component-PaginatorComponent-75e4546c1e7121b45493f13b61746cbaf3f46c61d8311bfcb6962f32a92535e4d34df47849eb108eda7f21b8c662c9ba14fa750fccf28109e46c45c7ee3e5ef9",
            "file": "src/stories/softobiz-ui/paginator/paginator.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sft-paginator",
            "styleUrls": [
                "./paginator.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./paginator.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "length",
                    "defaultValue": "500",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "pageIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "pageSize",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "pageSizeOptions",
                    "defaultValue": "[5, 10, 25]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "handlePageEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "PageEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "PageEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation } from '@angular/core';\r\nimport {PageEvent} from '@angular/material/paginator';\r\n\r\n@Component({\r\n  selector: 'sft-paginator',\r\n  templateUrl: './paginator.component.html',\r\n  styleUrls: ['./paginator.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class PaginatorComponent {\r\n  length = 500;\r\n  pageSize = 10;\r\n  pageIndex = 0;\r\n  pageSizeOptions = [5, 10, 25];\r\n\r\n  handlePageEvent(event: PageEvent) {\r\n    this.length = event.length;\r\n    this.pageSize = event.pageSize;\r\n    this.pageIndex = event.pageIndex;\r\n  }\r\n  \r\n  // getRangeLabel = (page: number, pageSize: number, length: number) =>  {\r\n  //   if (length === 0 || pageSize === 0) {\r\n  //     return `0 / ${length}`;\r\n  //   }\r\n  //   length = Math.max(length, 0);\r\n  //   const startIndex = page * pageSize;\r\n  //   const endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\r\n  //   return `Showing ${startIndex + 1} of   ${endIndex} / ${length}`;\r\n  // }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./paginator.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-paginator\r\n    (page)=\"handlePageEvent($event)\"\r\n    [length]=\"length\"\r\n    [pageSize]=\"pageSize\"\r\n    [pageSizeOptions]=\"pageSizeOptions\"\r\n    [pageIndex]=\"pageIndex\"\r\n    aria-label=\"Select page\">\r\n</mat-paginator>\r\n"
        },
        {
            "name": "PlansListingComponent",
            "id": "component-PlansListingComponent-0bc3b4a6f7fbcc131468ef1a1670c6e5928d05a913e077fe82296cf722c7b7ab2029d0402409bb8037ed5562ab78ce08b8c23b5b65ac4aee9feba2997036d23d",
            "file": "src/app/modules/plans/components/plans-listing/plans-listing.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-plans-listing",
            "styleUrls": [
                "./plans-listing.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./plans-listing.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "[\r\n    'plan_ID',\r\n    'external_name',\r\n    'internal_name',\r\n    'created_at',\r\n    'status',\r\n    'action',\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "emptyList",
                    "defaultValue": "noPlans",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "limit",
                    "defaultValue": "5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "pageNumber",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "plansData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<any>",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "search",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "selection",
                    "defaultValue": "new SelectionModel<plansFields>(true, [])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "announceSortChange",
                    "args": [
                        {
                            "name": "sortState",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nAnnounce the change in sort state for assistive technology.",
                    "description": "<p>Announce the change in sort state for assistive technology.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "sortState",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPlans",
                    "args": [
                        {
                            "name": "pageNumber",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "limit",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "search",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pageNumber",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "limit",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "search",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDelete",
                    "args": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onNext",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onPrevious",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openDelete",
                    "args": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "searchItem",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setLimit",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewChild } from '@angular/core';\r\nimport { noPlans, plansFields } from 'src/app/shared/constants/consants';\r\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { PlanService } from '../../services/plan.service';\r\nimport { takeUntil } from 'rxjs';\r\nimport { GlobalService } from 'src/app/core/services/global.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DeleteConfirmationComponent } from 'src/app/shared/components/dialog-box/delete-confirmation/delete-confirmation.component';\r\n@Component({\r\n  selector: 'app-plans-listing',\r\n  templateUrl: './plans-listing.component.html',\r\n  styleUrls: ['./plans-listing.component.scss'],\r\n})\r\nexport class PlansListingComponent {\r\n  emptyList = noPlans;\r\n  plansData: Array<any>;\r\n  pageNumber: number = 1;\r\n  limit: number = 5;\r\n  search: string = '';\r\n  displayedColumns: string[] = [\r\n    'plan_ID',\r\n    'external_name',\r\n    'internal_name',\r\n    'created_at',\r\n    'status',\r\n    'action',\r\n  ];\r\n  selection = new SelectionModel<plansFields>(true, []);\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  dialogRef: any;\r\n\r\n  constructor(\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private plans: PlanService,\r\n    private global: GlobalService,\r\n    public dialog: MatDialog\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    setTimeout(() => {\r\n      this.getPlans(this.pageNumber, this.limit, this.search);\r\n    });\r\n  }\r\n  getPlans(pageNumber, limit, search) {\r\n    this.global.showLoader();\r\n    this.plans\r\n      .getPlans(pageNumber, limit, search)\r\n      .pipe(takeUntil(this.global.componentDestroyed(this)))\r\n      .subscribe((res) => {\r\n        if (res.data.length > 0) {\r\n          this.plansData = res.data;\r\n          this.global.hideLoader();\r\n        } else {\r\n          this.global.hideLoader();\r\n        }\r\n      });\r\n  }\r\n\r\n  /** Announce the change in sort state for assistive technology. */\r\n  announceSortChange(sortState: Sort) {\r\n    // This example uses English messages. If your application supports\r\n    // multiple language, you would internationalize these strings.\r\n    // Furthermore, you can customize the message to add additional\r\n    // details about the values being sorted.\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n  \r\n  onDelete(id) {\r\n    this.plans.deletePlan(id).subscribe((res) => res);\r\n    this.getPlans(this.pageNumber, this.limit, this.search);\r\n  }\r\n  openDelete(id) {\r\n    this.dialogRef = this.dialog.open(DeleteConfirmationComponent, {\r\n      width: '420px',\r\n      panelClass: 'dialog-curved',\r\n    });\r\n\r\n    this.dialogRef.afterClosed().subscribe((res: any) => {\r\n      if (res) {\r\n        this.onDelete(id);\r\n      }\r\n    });\r\n  }\r\n  onPrevious() {\r\n    if (this.pageNumber > 1) {\r\n      this.pageNumber--;\r\n      this.getPlans(this.pageNumber, this.limit, this.search);\r\n    }\r\n  }\r\n  onNext() {\r\n    this.pageNumber++;\r\n    this.getPlans(this.pageNumber, this.limit, this.search);\r\n  }\r\n  setLimit(event: any) {\r\n    this.limit = event.value;\r\n    this.getPlans(this.pageNumber, this.limit, this.search);\r\n  }\r\n  searchItem(event: any) {\r\n    const search = event.target.value;\r\n    this.getPlans(this.pageNumber, this.limit, search);\r\n    console.log(search, 'hmmfph');\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./plans-listing.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_liveAnnouncer",
                        "type": "LiveAnnouncer",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "plans",
                        "type": "PlanService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "global",
                        "type": "GlobalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 32,
                "jsdoctags": [
                    {
                        "name": "_liveAnnouncer",
                        "type": "LiveAnnouncer",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "plans",
                        "type": "PlanService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "global",
                        "type": "GlobalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div\r\n  *ngIf=\"plansData; else noDataList\"\r\n  class=\"relative main-bg border-2 w-full h-full p-7 overflow-scroll\"\r\n>\r\n  <div>\r\n    <div class=\"flex justify-between align-center px-1\">\r\n      <div class=\"flex align-center\">\r\n        <h1 class=\"text-text text-dark\">Plans</h1>\r\n        <mat-chip class=\"chip-dark ml-3\">\r\n          {{ plansData.length }}\r\n        </mat-chip>\r\n      </div>\r\n      <div class=\"flex align-center\">\r\n        <div class=\"global-search light mr-6 border-2\">\r\n          <span class=\"search-icon pointer\">\r\n            <img\r\n              src=\"../../../../assets/images/icons/search.svg\"\r\n              alt=\"search-icon\"\r\n            />\r\n          </span>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search anything...\"\r\n            (change)=\"searchItem($event)\"\r\n          />\r\n        </div>\r\n        <button\r\n          mat-flat-button\r\n          color=\"primary\"\r\n          class=\"create-btn\"\r\n          [routerLink]=\"['create']\"\r\n        >\r\n          <mat-icon class=\"material-symbols-outlined m-0 white-text\"\r\n            >add_circle</mat-icon\r\n          >\r\n          <span class=\"text-nowrap block ml-2 letter-spacing-0\"\r\n            >Create Plan</span\r\n          >\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <ng-container *ngIf=\"plansData.length > 0; else noRecordFound\">\r\n      <div class=\"primary-table mt-8 px-1 pb-2\">\r\n        <table\r\n          mat-table\r\n          [dataSource]=\"plansData\"\r\n          matSort\r\n          (matSortChange)=\"announceSortChange($event)\"\r\n        >\r\n          <!--- Note that these columns can be defined in any order.\r\n              The actual rendered columns are set as a property on the row definition\" -->\r\n          <!-- Product ID Column -->\r\n          <ng-container matColumnDef=\"plan_ID\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>#Plan ID</th>\r\n            <td mat-cell *matCellDef=\"let element\" [routerLink]=\"'/plans/view'\">\r\n              {{ element.planId }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <!-- Product Name Column -->\r\n          <ng-container matColumnDef=\"external_name\">\r\n            <th\r\n              mat-header-cell\r\n              *matHeaderCellDef\r\n              mat-sort-header\r\n              sortActionDescription=\"Sort by title\"\r\n            >\r\n              External Name\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\" [routerLink]=\"'/plans/view'\">\r\n              {{ element.externalName }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <!-- Product Name Column -->\r\n          <ng-container matColumnDef=\"internal_name\">\r\n            <th\r\n              mat-header-cell\r\n              *matHeaderCellDef\r\n              mat-sort-header\r\n              sortActionDescription=\"Sort by title\"\r\n            >\r\n              Internal Name\r\n            </th>\r\n            featuresData\r\n            <td mat-cell *matCellDef=\"let element\" [routerLink]=\"'/plans/view'\">\r\n              {{ element.internalName }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <!-- Created Date Column -->\r\n          <ng-container matColumnDef=\"created_at\">\r\n            <th mat-header-cell *matHeaderCellDef>Created On</th>\r\n            <td mat-cell *matCellDef=\"let element\" [routerLink]=\"'/plans/view'\">\r\n              {{ element.createdOn }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <!-- Created Date Column -->\r\n          <ng-container matColumnDef=\"status\">\r\n            <th mat-header-cell *matHeaderCellDef>Status</th>\r\n            <td\r\n              mat-cell\r\n              *matCellDef=\"let element\"\r\n              [ngClass]=\"element.status\"\r\n              [routerLink]=\"'/plans/view'\"\r\n            >\r\n              {{ element.status }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <!-- Created Date Column -->\r\n          <ng-container matColumnDef=\"action\">\r\n            <th mat-header-cell *matHeaderCellDef>Action</th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n              <mat-icon\r\n                class=\"material-symbols-outlined\"\r\n                [matMenuTriggerFor]=\"actionsMenu\"\r\n              >\r\n                more_vert\r\n              </mat-icon>\r\n              <mat-menu\r\n                #actionsMenu=\"matMenu\"\r\n                class=\"actions-menu\"\r\n                backdropClass=\"edit-menu\"\r\n              >\r\n                <button\r\n                  mat-menu-item\r\n                  disableRipple\r\n                  [routerLink]=\"['/plans/create/'] + element.planId\"\r\n                >\r\n                  Edit\r\n                </button>\r\n                <button\r\n                  mat-menu-item\r\n                  disableRipple\r\n                  (click)=\"openDelete(element.planId)\"\r\n                >\r\n                  Delete\r\n                </button>\r\n              </mat-menu>\r\n            </td>\r\n          </ng-container>\r\n\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr\r\n            mat-row\r\n            *matRowDef=\"let row; columns: displayedColumns\"\r\n            [id]=\"row.id\"\r\n          ></tr>\r\n        </table>\r\n        <div class=\"flex align-center justify-between mt-4\">\r\n          <div class=\"flex align-center\">\r\n            <span>Show</span>\r\n            <div class=\"w-10 mx-2 basic-border\">\r\n              <mat-select (selectionChange)=\"setLimit($event)\" value=\"5\">\r\n                <mat-option value=\"5\">5</mat-option>\r\n                <mat-option value=\"10\">10</mat-option>\r\n                <mat-option value=\"20\">20</mat-option>\r\n                <mat-option value=\"50\">50</mat-option>\r\n                <mat-option value=\"100\">100</mat-option>\r\n              </mat-select>\r\n            </div>\r\n            <span>Entries</span>\r\n          </div>\r\n\r\n          <div class=\"col-md-10\">\r\n            <div class=\"paginations\">\r\n              <div>\r\n                <div class=\"btn-group\" id=\"radioBtn\">\r\n                  <a\r\n                    class=\"btn btn-primary btn-sm notActive\"\r\n                    (click)=\"onPrevious()\"\r\n                  >\r\n                    Previous\r\n                  </a>\r\n                  <a class=\"btn btn-primary btn-sm active mx-5\">{{\r\n                    pageNumber\r\n                  }}</a>\r\n                  <a class=\"btn btn-primary btn-sm notActive\" (click)=\"onNext()\"\r\n                    >Next\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n    <ng-template #noRecordFound> No Data is Visible </ng-template>\r\n  </div>\r\n</div>\r\n<ng-template #noDataList>\r\n  <div class=\"relative main-bg border-2 w-full h-full p-7 overflow-scroll\">\r\n    <app-empty-listing [items]=\"emptyList\"></app-empty-listing>\r\n  </div>\r\n</ng-template>\r\n"
        },
        {
            "name": "ProductDetailsComponent",
            "id": "component-ProductDetailsComponent-4481b6496a2db52dbca5afe379b172f962dcfe062ac98788b10e948aecd0732db799da83fb0fae5ece6fb3fab7520db29c1f6463f6751c33bd5adb71d7c820d1",
            "file": "src/app/modules/plans/components/product-details/product-details.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-product-details",
            "styleUrls": [
                "./product-details.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./product-details.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "clicked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "[\r\n    'select',\r\n    'position',\r\n    'name',\r\n    'status',\r\n    'symbol',\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "filteredFeatures",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "formGroup",
                    "defaultValue": "this.formBuilder.group({\r\n    productID: [''],\r\n    productName: [''],\r\n    description: [''],\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "isButtonDisabled",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "isCheckboxChecked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "isProductSelected",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "limit",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "PageNumber",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "productData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "productId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "rangeForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "search",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "selectedFeatures",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PeriodicElement[]",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "selectedLevelFromDropdown",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "selectedOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "selectedOptions",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 102
                },
                {
                    "name": "selection",
                    "defaultValue": "new SelectionModel<PeriodicElement>(true, [])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "sortBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"name\" | \"createdOn\"",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "sortOrder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"asc\" | \"desc\"",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "methodsClass": [
                {
                    "name": "checkboxLabel",
                    "args": [
                        {
                            "name": "row",
                            "type": "PeriodicElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "PeriodicElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getProduct",
                    "args": [
                        {
                            "name": "PageNumber",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "search",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "PageNumber",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "search",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isAllSelected",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhether the number of selected elements matches the total number of rows.",
                    "description": "<p>Whether the number of selected elements matches the total number of rows.</p>\n"
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSelectedLevelChange",
                    "args": [
                        {
                            "name": "featureId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "level",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "featureId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "level",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 173,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openSuccess",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 163,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectProduct",
                    "args": [
                        {
                            "name": "product",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 136,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "product",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleAllRows",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleCheckbox",
                    "args": [
                        {
                            "name": "event",
                            "type": "MatCheckboxChange",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "row",
                            "type": "PeriodicElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MatCheckboxChange",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "row",
                            "type": "PeriodicElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { ProductsService } from 'src/app/modules/products/services/products.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { ProductDetailsService } from '../../services/product-details.service';\r\nimport { SuccessDialogComponent } from 'src/app/shared/components/dialog-box/success-dialog/success-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatCheckboxChange } from '@angular/material/checkbox';\r\nimport { Router } from '@angular/router';\r\n\r\nexport interface PeriodicElement {\r\n  featureId: string;\r\n  value: string;\r\n  name: string;\r\n  type?: string;\r\n  position: number | string;\r\n  status: string;\r\n  symbol: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-product-details',\r\n  templateUrl: './product-details.component.html',\r\n  styleUrls: ['./product-details.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductDetailsComponent implements OnInit {\r\n  subscription: Subscription;\r\n  PageNumber: any = '';\r\n  limit: any = '';\r\n  search: string = '';\r\n  sortBy: 'name' | 'createdOn';\r\n  sortOrder: 'asc' | 'desc';\r\n  productData = [];\r\n  filteredFeatures = [];\r\n  selectedFeatures: PeriodicElement[] = [];\r\n  productId: string = '';\r\n  isProductSelected: boolean = false;\r\n  isButtonDisabled: boolean = true;\r\n  selectedOption: boolean;\r\n  disabled: boolean;\r\n  isCheckboxChecked: boolean = false;\r\n  selectedLevelFromDropdown: { [key: string]: any } = {};\r\n  clicked = false;\r\n  rangeForm: FormGroup;\r\n  loading = false;\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private formBuilder: FormBuilder,\r\n    private productService: ProductsService,\r\n    private productDetailsService: ProductDetailsService,\r\n    private routes: Router\r\n  ) {}\r\n\r\n  displayedColumns: string[] = [\r\n    'select',\r\n    'position',\r\n    'name',\r\n    'status',\r\n    'symbol',\r\n  ];\r\n  selection = new SelectionModel<PeriodicElement>(true, []);\r\n\r\n  formGroup = this.formBuilder.group({\r\n    productID: [''],\r\n    productName: [''],\r\n    description: [''],\r\n  });\r\n\r\n  ngOnInit() {\r\n    this.getProduct(this.PageNumber, this.limit, this.search);\r\n    this.productService.product$.subscribe((data) => {\r\n      if (data) {\r\n        this.productData = data;\r\n      }\r\n    });\r\n  }\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.productData.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  toggleAllRows() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n\r\n    this.selection.select(...this.productData);\r\n  }\r\n\r\n  checkboxLabel(row?: PeriodicElement): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row `;\r\n  }\r\n  selectedOptions: { [key: string]: boolean } = {};\r\n\r\n  toggleCheckbox(event: MatCheckboxChange, row: PeriodicElement) {\r\n    if (event.checked) {\r\n      this.isButtonDisabled = false;\r\n      this.selection.select(row);\r\n      this.selectedFeatures.push(row);\r\n    } else {\r\n      this.selection.deselect(row);\r\n      const index = this.selectedFeatures.findIndex(\r\n        (feature) => feature.featureId === row.featureId\r\n      );\r\n      if (index !== -1) {\r\n        this.selectedFeatures.splice(index, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  onSelectedLevelChange(featureId: string, level: any) {\r\n    this.selectedLevelFromDropdown[featureId] = level;\r\n  }\r\n\r\n  getProduct(PageNumber: number, limit: number, search: string) {\r\n    this.productService\r\n      .getProducts(\r\n        this.PageNumber,\r\n        this.limit,\r\n        this.search,\r\n        this.sortBy,\r\n        this.sortOrder\r\n      )\r\n      .subscribe(() => {});\r\n  }\r\n\r\n  selectProduct(product) {\r\n    this.productId = product.productId;\r\n    this.isProductSelected = true;\r\n    this.formGroup.controls.productName.patchValue(product.name);\r\n    this.formGroup.controls.description.patchValue(product.description);\r\n    this.filteredFeatures = product.feature;\r\n    const rangeFormControls = {};\r\n    this.filteredFeatures.forEach((feature) => {\r\n      const minValue = feature.levels[0]?.value;\r\n      const maxValue = feature.levels[1]?.value;\r\n      if (feature.type === 'range') {\r\n        const rangeValue = [\r\n          '',\r\n          [\r\n            Validators.required,\r\n            Validators.min(Math.min(minValue, maxValue)),\r\n            Validators.max(Math.max(minValue, maxValue)),\r\n          ],\r\n        ];\r\n        rangeFormControls[feature.featureId] = rangeValue;\r\n        feature.minValue = Math.min(minValue, maxValue);\r\n        feature.maxValue = Math.max(minValue, maxValue);\r\n      }\r\n    });\r\n\r\n    this.rangeForm = this.formBuilder.group(rangeFormControls);\r\n  }\r\n  openSuccess() {\r\n    this.dialog.open(SuccessDialogComponent, {\r\n      width: '420px',\r\n      data: {\r\n        module: 'Product-variant',\r\n        operation: 'Created',\r\n      },\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.loading = true;\r\n    const formData = this.formGroup.value;\r\n    const productVariantName = formData.productName + ' product Variant';\r\n    const productVariantId = productVariantName\r\n      .replace(/\\s+/g, '-')\r\n      .toLowerCase();\r\n\r\n    const features = this.selectedFeatures.map((productVariantFeature) => {\r\n      switch (productVariantFeature.type) {\r\n        case 'quantity':\r\n        case 'custom':\r\n          const values =\r\n            this.selectedLevelFromDropdown[productVariantFeature.featureId];\r\n          return {\r\n            featureID: productVariantFeature.featureId,\r\n            value: values,\r\n          };\r\n        case 'switch':\r\n          return {\r\n            featureID: productVariantFeature.featureId,\r\n            value: this.selectedOptions[productVariantFeature.featureId],\r\n          };\r\n        case 'range':\r\n          return {\r\n            featureID: productVariantFeature.featureId,\r\n            value: this.rangeForm.get(productVariantFeature.featureId).value,\r\n          };\r\n        default:\r\n          return null;\r\n      }\r\n    });\r\n    const payload = {\r\n      productVariantId: productVariantId,\r\n      name: productVariantName,\r\n      productID: this.productId,\r\n      type: 'base',\r\n      features: features,\r\n      status: 'active',\r\n    };\r\n    this.clicked = false;\r\n    this.subscription = this.productDetailsService\r\n      .createProductVariant(payload)\r\n      .subscribe({\r\n        next: (res) => {\r\n          this.loading = false;\r\n          this.isButtonDisabled = true;\r\n          this.openSuccess();\r\n          this.routes.navigate([`/plans/create`]);\r\n          this.formGroup.reset();\r\n          this.rangeForm.reset();\r\n          this.selectedFeatures = [];\r\n          return res;\r\n        },\r\n        error: (err: any) => {\r\n          this.loading = false;\r\n          this.formGroup.reset();\r\n          this.rangeForm.reset();\r\n          this.routes.navigate([`/plans/create`]);\r\n          this.selectedFeatures = [];\r\n          console.log('something wrong occured', err.error.message);\r\n        },\r\n      });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".loader {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(249, 246, 246, 0.477);\r\n  z-index: 9999;\r\n}\r\n\r\n.loader mat-spinner {\r\n  margin-right: 10px;\r\n}\r\n",
                    "styleUrl": "./product-details.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "productDetailsService",
                        "type": "ProductDetailsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "routes",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 47,
                "jsdoctags": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "productDetailsService",
                        "type": "ProductDetailsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "routes",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"plan-product-details main-bg w-full h-full overflow-auto border-2 py-8 pl-11 pr-10\">\r\n  <div class=\"flex align-center justify-between mb-2\">\r\n    <div class=\"flex align-center\">\r\n      <mat-icon class=\"material-symbols-outlined pointer\" color=\"primary\"\r\n        [routerLink]=\"'/features'\">keyboard_backspace</mat-icon>\r\n\r\n      <span class=\"mat-h1 primary-text text-main ml-2\">Create Plan</span>\r\n    </div>\r\n\r\n    <div class=\"flex align-center\">\r\n      <button mat-stroked-button color=\"primary\" class=\"mr-2\">Dismiss</button>\r\n      <button mat-flat-button [disabled]=\"clicked || isButtonDisabled\" (click)=\"onSubmit(); clicked = true\"\r\n        color=\"primary\">\r\n        Add\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"flex align-center\">\r\n    <span class=\"pl-8 grey-text text-lighten-9\"> Create plan </span>\r\n    <mat-icon class=\"material-symbols-outlined mx-2 small-icon\">\r\n      chevron_right\r\n    </mat-icon>\r\n    <span class=\"shades-text text-black fw-500\">Add Product</span>\r\n  </div>\r\n  <div class=\"mt-8\">\r\n    <div class=\"py-2\">\r\n      <div class=\"input-wrapper\">\r\n        <div class=\"flex align-center mb-2\">\r\n          <p class=\"mat-subtitle-2 font-weight-500 input-label\">Product</p>\r\n          <mat-icon class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n            [ngxTippy]=\"producthelpinfotooltip\" [tippyProps]=\"{ placement: 'right' }\">help</mat-icon>\r\n          <ng-template #producthelpinfotooltip let-name>\r\n            <div class=\"help-info-tooltip\">\r\n              <div class=\"heading-with-background\">Product</div>\r\n              <div class=\"details\">\r\n                Please select the product to include it in the Plan\r\n              </div>\r\n              <button mat-button color=\"primary\" class=\"px-0\">\r\n                Learn more\r\n              </button>\r\n            </div>\r\n          </ng-template>\r\n        </div>\r\n        <ng-container [formGroup]=\"formGroup\">\r\n          <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n            <mat-select required formControlName=\"productID\" placeholder=\"select\">\r\n              <mat-option *ngFor=\"let product of productData\" (click)=\"selectProduct(product)\"\r\n                [value]=\"product.productId\">\r\n                {{ product.productId }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </ng-container>\r\n\r\n        <div>\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label disabled\">\r\n              Product Name\r\n            </p>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <input matInput [disabled]=\"true\" placeholder=\"Select\" [value]=\"formGroup.controls.productName.value\"\r\n              formControlName=\"productName\" />\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div>\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label disabled\">\r\n              Description\r\n            </p>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <textarea matInput [disabled]=\"true\" placeholder=\"Enter \" [value]=\"formGroup.controls.description.value\"\r\n              formControlName=\"description\"></textarea>\r\n          </mat-form-field>\r\n        </div>\r\n    <!-----loader ------>\r\n       <div class=\"loader\" *ngIf=\"loading\">\r\n          <mat-spinner></mat-spinner>\r\n        </div>\r\n\r\n        <div *ngIf=\"isProductSelected\" class=\"add-product-table\">\r\n          <p class=\"mat-subtitle-2 font-weight-500 text-primary py-2 mb-3 table-heading\">\r\n            Feature for this plan\r\n          </p>\r\n          <div class=\"relative main-bg border-2\">\r\n            <div class=\"checked-stripe-table\" let feature of feature>\r\n              <table mat-table [dataSource]=\"filteredFeatures\">\r\n                <!-- Checkbox Column -->\r\n                <ng-container matColumnDef=\"select\">\r\n                  <th mat-header-cell *matHeaderCellDef>\r\n                    <mat-checkbox (change)=\"$event ? toggleAllRows() : null\"\r\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [aria-label]=\"checkboxLabel()\">\r\n                    </mat-checkbox>\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let row\">\r\n                    <mat-checkbox (click)=\"$event.stopPropagation()\"\r\n                      (change)=\"$event ? toggleCheckbox($event, row) : null\"\r\n                      [checked]=\"selection.isSelected(row) && isCheckboxChecked\" [aria-label]=\"checkboxLabel(row)\">\r\n                    </mat-checkbox>\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <!-- Position Column -->\r\n                <ng-container matColumnDef=\"position\">\r\n                  <th mat-header-cell *matHeaderCellDef class=\"font-weight-500\">\r\n                    Name\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let element\">\r\n                    {{ element.name }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <!-- Name Column -->\r\n                <ng-container matColumnDef=\"name\">\r\n                  <th mat-header-cell *matHeaderCellDef class=\"font-weight-500\">\r\n                    Type\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let element\">{{ element.type }}</td>\r\n                </ng-container>\r\n\r\n                <!-- Weight Column -->\r\n                <ng-container matColumnDef=\"status\">\r\n                  <th mat-header-cell *matHeaderCellDef class=\"font-weight-500\">\r\n                    Status\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let element\" [ngClass]=\"element.status\">\r\n                    {{ element.status }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <!-- Symbol Column -->\r\n                <ng-container matColumnDef=\"symbol\">\r\n                  <th mat-header-cell *matHeaderCellDef class=\"font-weight-500\">\r\n                    Entitlements\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let element\">\r\n                    <ng-container *ngIf=\"element.type === 'quantity' || element.type === 'custom' \">\r\n                      <ng-container *ngIf=\"element.levels && element.levels.length > 0\">\r\n                        <mat-form-field appearance=\"fill\" subscriptSizing=\"dynamic\">\r\n                          <mat-select [value]=\"selectedLevelFromDropdown\" placeholder=\"select\">\r\n                            <mat-option *ngFor=\"let level of element.levels\" [value]=\"level.value\" (click)=\"\r\n                                onSelectedLevelChange(\r\n                                  element.featureId,\r\n                                  level.value\r\n                                )\r\n                              \">\r\n                              {{ level.name }}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                      </ng-container>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"element.type === 'switch'\">\r\n                      <mat-form-field appearance=\"fill\" subscriptSizing=\"dynamic\">\r\n                        <mat-select [(ngModel)]=\"selectedOptions[element.featureId]\" errorState=\"false\"\r\n                          placeholder=\"select\">\r\n                          <mat-option [value]=\"true\">Available</mat-option>\r\n                          <mat-option [value]=\"false\">Not available</mat-option>\r\n                        </mat-select>\r\n                      </mat-form-field>\r\n                    </ng-container>\r\n\r\n                    <ng-container *ngIf=\"element.type === 'range'\">\r\n                      <form [formGroup]=\"rangeForm\">\r\n                        <mat-form-field appearance=\"outline\" class=\"border-2\" subscriptSizing=\"dynamic\">\r\n                          <input matInput placeholder=\"Enter the value\" [formControlName]=\"element.featureId\" (input)=\"rangeForm.controls[element.featureId].markAsTouched()\" pattern=\"[0-9]*\" required />\r\n                           <mat-hint>\r\n                          Between {{ element.minValue }} and {{ element.maxValue }}\r\n                          </mat-hint>\r\n                          <mat-error *ngIf=\"\r\n                              rangeForm.controls[element.featureId].invalid &&\r\n                              rangeForm.controls[element.featureId].touched\r\n                            \">\r\n                            <ng-container *ngIf=\"rangeForm.controls[element.featureId].errors['required']\">\r\n                              Value is required and cannot be left empty.\r\n                            </ng-container>\r\n                              <ng-container *ngIf=\"rangeForm.controls[element.featureId].errors['pattern']\">\r\n                             Only number are allowed.\r\n                             </ng-container>\r\n                           <ng-container *ngIf=\"rangeForm.controls[element.featureId].errors['min']\">\r\n                          Value should above {{ element.minValue }}.\r\n                          </ng-container>\r\n                       <ng-container *ngIf=\"rangeForm.controls[element.featureId].errors['max']\">\r\n                        Between {{ element.minValue }} and {{ element.maxValue }}\r\n                     </ng-container>\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n                      </form>\r\n                    </ng-container>\r\n                  </td>\r\n                </ng-container>\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns\" (click)=\"selection.toggle(row)\"></tr>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"
        },
        {
            "name": "ProductListingComponent",
            "id": "component-ProductListingComponent-9a745a1a0f1bc9277ad1c4823d28a0bd9745538b89286113b0c8011f4c729593e424253c3f6a6cf7aecb793246c46ce1af5a0f3c4d9ef4802e65990cfa5da32b",
            "file": "src/app/modules/products/components/product-listing/product-listing.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-product-listing",
            "styleUrls": [
                "./product-listing.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./product-listing.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "allProduct",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "allProductsData",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "data$",
                    "defaultValue": "this.productService.product$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 69
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "[\r\n    'productId',\r\n    'name',\r\n    'feature',\r\n    'createdOn',\r\n    'status',\r\n    'action',\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "emptyProductPros",
                    "defaultValue": "noProducts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "featureLength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "getfeaturedata",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "hasNextPage",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "limit",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "Nolimit",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "NoPage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "PageNumber",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "productsData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "search",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "searchQuery",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "searchQueryChanged",
                    "defaultValue": "new Subject<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<string>",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "searchSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "selection",
                    "defaultValue": "new SelectionModel<Data_Type>(true, [])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "sortBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"name\" | \"createdOn\"",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "sortOrder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"asc\" | \"desc\"",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "totalPages",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 48
                }
            ],
            "methodsClass": [
                {
                    "name": "announceSortChange",
                    "args": [
                        {
                            "name": "sortState",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 260,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "sortState",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteSuccess",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 215,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAllProduct",
                    "args": [
                        {
                            "name": "PageNumber",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "search",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "sortBy",
                            "type": "\"name\" | \"createdOn\"",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "sortOrder",
                            "type": "\"asc\" | \"desc\"",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "PageNumber",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "search",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "sortBy",
                            "type": "\"name\" | \"createdOn\"",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "sortOrder",
                            "type": "\"asc\" | \"desc\"",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getProduct",
                    "args": [
                        {
                            "name": "PageNumber",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "search",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "sortBy",
                            "type": "\"name\" | \"createdOn\"",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "sortOrder",
                            "type": "\"asc\" | \"desc\"",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 131,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "PageNumber",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "search",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "sortBy",
                            "type": "\"name\" | \"createdOn\"",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "sortOrder",
                            "type": "\"asc\" | \"desc\"",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 157,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onNext",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 176,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onPrevious",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 163,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSearchInput",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openDelete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 226,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sendElementId",
                    "args": [
                        {
                            "name": "elementId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 187,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "elementId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { SelectionModel } from '@angular/cdk/collections';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { ProductsService } from '../../services/products.service';\r\nimport {\r\n  Subject,\r\n  Subscription,\r\n  debounceTime,\r\n  distinctUntilChanged,\r\n} from 'rxjs';\r\nimport { Data_Type, noProducts } from 'src/app/shared/constants/consants';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DeleteConfirmationComponent } from 'src/app/shared/components/dialog-box/delete-confirmation/delete-confirmation.component';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { CouponsDeleteSuccessComponent } from 'src/app/shared/components/dialog-box/coupons-delete-success/coupons-delete-success.component';\r\nimport { GlobalService } from 'src/app/core/services/global.service';\r\n\r\n@Component({\r\n  selector: 'app-product-listing',\r\n  templateUrl: './product-listing.component.html',\r\n  styleUrls: ['./product-listing.component.scss'],\r\n})\r\nexport class ProductListingComponent implements OnInit {\r\n  id: string = '';\r\n  displayedColumns: string[] = [\r\n    'productId',\r\n    'name',\r\n    'feature',\r\n    'createdOn',\r\n    'status',\r\n    'action',\r\n  ];\r\n  getfeaturedata: any;\r\n  featureLength: number;\r\n  allProductsData: number = 0;\r\n  emptyProductPros = noProducts;\r\n  PageNumber = 1;\r\n  limit = 10;\r\n  search: string = '';\r\n  sortBy: 'name' | 'createdOn';\r\n  sortOrder: 'asc' | 'desc';\r\n  productsData = [];\r\n  allProduct: number;\r\n  NoPage: any = '';\r\n  Nolimit: any = '';\r\n  hasNextPage: boolean = false;\r\n  totalPages: number = 0;\r\n\r\n  selection = new SelectionModel<Data_Type>(true, []);\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  searchQuery: string;\r\n  private searchQueryChanged: Subject<string> = new Subject<string>();\r\n  private searchSubscription: Subscription;\r\n  dialogRef: any;\r\n\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    protected productService: ProductsService,\r\n    private snackBar: MatSnackBar,\r\n    private global: GlobalService\r\n  ) {}\r\n\r\n  onSearchInput() {\r\n    this.searchQueryChanged.next(this.searchQuery);\r\n  }\r\n\r\n  data$ = this.productService.product$;\r\n  ngOnInit() {\r\n    this.sortBy = 'createdOn';\r\n    this.sortOrder = 'desc';\r\n    \r\n    this.getAllProduct(\r\n      this.NoPage,\r\n      this.Nolimit,\r\n      this.search,\r\n      this.sortBy,\r\n      this.sortOrder\r\n    );\r\n    this.getProduct(\r\n      this.PageNumber,\r\n      this.limit,\r\n      this.search,\r\n      this.sortBy,\r\n      this.sortOrder\r\n    );\r\n\r\n    this.searchSubscription = this.searchQueryChanged\r\n      .pipe(debounceTime(500), distinctUntilChanged())\r\n      .subscribe((value) => {\r\n        this.search = value;\r\n        this.getProduct(\r\n          this.PageNumber,\r\n          this.limit,\r\n          this.search,\r\n          this.sortBy,\r\n          this.sortOrder\r\n        );\r\n      });\r\n  }\r\n\r\n  getAllProduct(\r\n    PageNumber: number,\r\n    limit: number,\r\n    search: string,\r\n    sortBy: 'name' | 'createdOn',\r\n    sortOrder: 'asc' | 'desc'\r\n  ) {\r\n    this.global.showLoader();\r\n    this.productService\r\n      .getProducts(\r\n        this.NoPage,\r\n        this.Nolimit,\r\n        this.search,\r\n        this.sortBy,\r\n        this.sortOrder\r\n      )\r\n      .subscribe((data) => {\r\n        if (data) {\r\n          this.allProduct = data.length;\r\n          this.global.hideLoader();\r\n\r\n          if (this.allProduct > this.allProductsData || this.allProduct == 0) {\r\n            this.allProductsData = this.allProduct;\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  getProduct(\r\n    PageNumber: number,\r\n    limit: number,\r\n    search: string,\r\n    sortBy: 'name' | 'createdOn',\r\n    sortOrder: 'asc' | 'desc'\r\n  ) {\r\n    this.global.showLoader();\r\n    this.productService\r\n      .getProducts(\r\n        this.PageNumber,\r\n        this.limit,\r\n        this.search,\r\n        this.sortBy,\r\n        this.sortOrder\r\n      )\r\n      .subscribe((data) => {\r\n        if (data) {\r\n          this.productsData = data;\r\n          this.global.hideLoader();\r\n          this.totalPages = Math.ceil(this.allProduct / limit);\r\n          this.hasNextPage = PageNumber < this.totalPages;\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.searchSubscription) {\r\n      this.searchSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  onPrevious() {\r\n    if (this.PageNumber > 1) {\r\n      this.PageNumber--;\r\n      this.getProduct(\r\n        this.PageNumber,\r\n        this.limit,\r\n        this.search,\r\n        this.sortBy,\r\n        this.sortOrder\r\n      );\r\n    }\r\n  }\r\n\r\n  onNext() {\r\n    this.PageNumber++;\r\n    this.getProduct(\r\n      this.PageNumber,\r\n      this.limit,\r\n      this.search,\r\n      this.sortBy,\r\n      this.sortOrder\r\n    );\r\n  }\r\n\r\n  sendElementId(elementId: string) {\r\n    this.productService.deleteProduct(elementId).subscribe({\r\n      next: (res) => {\r\n        this.getProduct(\r\n          this.PageNumber,\r\n          this.limit,\r\n          this.search,\r\n          this.sortBy,\r\n          this.sortOrder\r\n        );\r\n        this.getAllProduct(\r\n          this.NoPage,\r\n          this.Nolimit,\r\n          this.search,\r\n          this.sortBy,\r\n          this.sortOrder\r\n        );\r\n        this.deleteSuccess(elementId);\r\n      },\r\n      error: (error: any) => {\r\n        this.snackBar.open(error.error.message, '', {\r\n          duration: 5000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right',\r\n        });\r\n      },\r\n    });\r\n  }\r\n  deleteSuccess(id: any) {\r\n    const dialogRef = this.dialog.open(CouponsDeleteSuccessComponent, {\r\n      width: '422px',\r\n      panelClass: 'dialog-curved',\r\n      data: {\r\n        module: 'Product',\r\n        deleteId: id,\r\n      },\r\n    });\r\n  }\r\n\r\n  openDelete(id: any) {\r\n    this.productService.getProductById(id).subscribe((data) => {\r\n      this.getfeaturedata = data;\r\n      this.featureLength = this.getfeaturedata.feature.length;\r\n      let productName = data.name;\r\n      if (this.featureLength) {\r\n        this.snackBar.open(\r\n          `Unable to delete ${productName}. Please remove associated features first.`,\r\n          '',\r\n          {\r\n            duration: 5000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right',\r\n          }\r\n        );\r\n      } else {\r\n        this.dialogRef = this.dialog.open(DeleteConfirmationComponent, {\r\n          width: '420px',\r\n          panelClass: 'dialog-curved',\r\n          data: {\r\n            module: 'Product',\r\n            deleteId: id,\r\n          },\r\n        });\r\n\r\n        this.dialogRef.afterClosed().subscribe((res: any) => {\r\n          if (res) {\r\n            this.sendElementId(id);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  announceSortChange(sortState: Sort) {\r\n    this.sortBy = sortState.active as 'name' | 'createdOn';\r\n    this.sortOrder = sortState.direction as 'asc' | 'desc';\r\n    this.getProduct(\r\n      this.PageNumber,\r\n      this.limit,\r\n      this.search,\r\n      this.sortBy,\r\n      this.sortOrder\r\n    );\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n.disabled {\r\n  pointer-events: none;\r\n  opacity: 0.6;\r\n  cursor: not-allowed;\r\n}",
                    "styleUrl": "./product-listing.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "global",
                        "type": "GlobalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 56,
                "jsdoctags": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "global",
                        "type": "GlobalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n\r\n<div\r\n  *ngIf=\"allProductsData > 0; else noDataList\"\r\n  class=\"relative main-bg border-2 w-full h-full py-6 pl-5 pr-6 overflow-scroll\"\r\n>\r\n  <div class=\"flex justify-between align-center px-1\">\r\n    <div class=\"flex align-center\">\r\n      <h1 class=\"text-text text-dark\">Products</h1>\r\n      <mat-chip class=\"chip-dark ml-3\">\r\n        {{ allProduct }}\r\n      </mat-chip>\r\n    </div>\r\n    <div class=\"flex align-center\">\r\n      <div class=\"global-search light mr-6 border-2\">\r\n        <span class=\"search-icon pointer\">\r\n          <img\r\n            src=\"../../../../assets/images/icons/search.svg\"\r\n            alt=\"search-icon\"\r\n          />\r\n        </span>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search anything...\"\r\n          [(ngModel)]=\"searchQuery\"\r\n          (input)=\"onSearchInput()\"\r\n        />\r\n      </div>\r\n      <button\r\n        mat-flat-button\r\n        color=\"primary\"\r\n        class=\"create-btn\"\r\n        [routerLink]=\"['create']\"\r\n      >\r\n        <mat-icon class=\"material-symbols-outlined m-0 white-text\"\r\n          >add_circle</mat-icon\r\n        >\r\n        <span class=\"text-nowrap block ml-2 letter-spacing-0\"\r\n          >Create Product</span\r\n        >\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div\r\n    *ngIf=\"productsData.length > 0; else noDataFound\"\r\n    class=\"primary-table mt-8 px-1 pb-2\"\r\n  >\r\n    <table\r\n      mat-table\r\n      [dataSource]=\"productsData\"\r\n      matSort\r\n      (matSortChange)=\"announceSortChange($event)\"\r\n    >\r\n      <!-- Product ID Column -->\r\n      <ng-container matColumnDef=\"productId\">\r\n        <th mat-header-cell *matHeaderCellDef>#ID</th>\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element\"\r\n          [routerLink]=\"['/products/view-product/' + element.productId]\"\r\n        >\r\n          {{ element.productId }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Product Name Column -->\r\n      <ng-container matColumnDef=\"name\">\r\n        <th\r\n          mat-header-cell\r\n          *matHeaderCellDef\r\n          mat-sort-header\r\n          sortActionDescription=\"Sort by title\"\r\n        >\r\n          Product Name\r\n        </th>\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element\"\r\n          [routerLink]=\"['/products/view-product/' + element.productId]\"\r\n        >\r\n          {{ element.name }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Features Column -->\r\n      <ng-container matColumnDef=\"feature\">\r\n        <th mat-header-cell *matHeaderCellDef>Features</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          <div\r\n            class=\"flex align-center\"\r\n            [ngxTippy]=\"featureListinfo\"\r\n            [tippyProps]=\"{ placement: 'right' }\"\r\n            [routerLink]=\"['/products/view-product/' + element.productId]\"\r\n          >\r\n            <mat-chip\r\n              *ngIf=\"element.feature.length > 0\"\r\n              class=\"table-chip m-2 ml-0\"\r\n              disableRipple\r\n              >{{ element.feature[0].name }}</mat-chip\r\n            >\r\n            <mat-chip\r\n              *ngIf=\"element.feature.length > 1\"\r\n              class=\"table-chip m-2 ml-0 pointer\"\r\n              >+{{ element.feature.length - 1 }}</mat-chip\r\n            >\r\n            <ng-template #featureListinfo let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Features</div>\r\n                <div *ngFor=\"let feature of element.feature\">\r\n                  <button mat-button color=\"primary\" class=\"p-2 py-3\">\r\n                    {{ feature.name }}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Created Date Column  -->\r\n      <ng-container matColumnDef=\"createdOn\">\r\n        <th\r\n          mat-header-cell\r\n          *matHeaderCellDef\r\n          mat-sort-header\r\n          sortActionDescription=\"Sort by date\"\r\n        >\r\n          Created On\r\n        </th>\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element\"\r\n          [routerLink]=\"['/products/view-product/' + element.productId]\"\r\n        >\r\n          {{ element.createdOn | date : \"d MMMM y\" }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Created Date Column -->\r\n      <ng-container matColumnDef=\"status\">\r\n        <th mat-header-cell *matHeaderCellDef>Status</th>\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element\"\r\n          [ngClass]=\"element.status\"\r\n          [routerLink]=\"['/products/view-product/' + element.productId]\"\r\n        >\r\n          {{ element.status }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"action\">\r\n        <th mat-header-cell *matHeaderCellDef>Action</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          <mat-icon\r\n            class=\"material-symbols-outlined\"\r\n            [matMenuTriggerFor]=\"actionsMenu\"\r\n          >\r\n            more_vert\r\n          </mat-icon>\r\n          <mat-menu\r\n            #actionsMenu=\"matMenu\"\r\n            class=\"actions-menu\"\r\n            backdropClass=\"edit-menu\"\r\n          >\r\n            <button\r\n              mat-menu-item\r\n              disableRipple\r\n              [routerLink]=\"['edit-product/' + element.productId]\"\r\n            >\r\n              Edit\r\n            </button>\r\n            <button\r\n              mat-menu-item\r\n              disableRipple\r\n              (click)=\"openDelete(element.productId)\"\r\n            >\r\n              Delete\r\n            </button>\r\n          </mat-menu>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr\r\n        mat-row\r\n        *matRowDef=\"let row; columns: displayedColumns\"\r\n        class=\"pointer\"\r\n        [id]=\"row.id\"\r\n      ></tr>\r\n    </table>\r\n    <div class=\"row\">\r\n      <div class=\"col-2\">\r\n        <div class=\"dataTables_length\">\r\n          <label\r\n            >Show\r\n\r\n            <select\r\n              [(ngModel)]=\"limit\"\r\n              (change)=\"\r\n                this.getProduct(\r\n                  this.PageNumber,\r\n                  this.limit,\r\n                  this.search,\r\n                  this.sortBy,\r\n                  this.sortOrder\r\n                )\r\n              \"\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"50\">50</option>\r\n              <option value=\"100\">100</option>\r\n            </select>\r\n\r\n            entries</label\r\n          >\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-md-10\" style=\"float: right; text-align: right\">\r\n        <div class=\"paginations\">\r\n          <div>\r\n            <div class=\"btn-group\" id=\"radioBtn\">\r\n              <a\r\n                class=\"btn btn-primary btn-sm notActive\"\r\n                (click)=\"onPrevious()\"\r\n                [ngClass]=\"{ disabled: PageNumber == 1 }\"\r\n              >\r\n                Previous\r\n              </a>\r\n              <a class=\"btn btn-primary btn-sm active\" style=\"margin: 0 20px\">{{\r\n                PageNumber\r\n              }}</a>\r\n              <a\r\n                class=\"btn btn-primary btn-sm notActive\"\r\n                (click)=\"onNext()\"\r\n                [ngClass]=\"{ disabled: !hasNextPage }\"\r\n                >Next\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <ng-template #noDataFound>\r\n    <div class=\"relative main-bg border-2 w-full h-full p-7 overflow-scroll\">\r\n      <app-no-item-found></app-no-item-found>\r\n    </div>\r\n  </ng-template>\r\n</div>\r\n<ng-template #noDataList>\r\n  <div class=\"relative main-bg border-2 w-full h-full p-7 overflow-scroll\">\r\n    <app-empty-listing [items]=\"emptyProductPros\"></app-empty-listing>\r\n  </div>\r\n</ng-template>\r\n"
        },
        {
            "name": "ProfileComponent",
            "id": "component-ProfileComponent-98b100fb1bf92828b8e26ab5920075fd887218dbaf87eb88ceeee5b0c6ef67280a6862b10a6a46fabc7e710b456f2d712c11c1e0ff14936b51744dfc55b0294c",
            "file": "src/stories/softobiz-ui/profile/profile.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sft-profile",
            "styleUrls": [
                "./profile.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./profile.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation, Input } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material/core';\r\n\r\n@Component({\r\n  selector: 'sft-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ProfileComponent {\r\n\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./profile.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<!-- <div class=\"outer-layout\"> -->\r\n  <div class=\"user-profile pointer\" [matMenuTriggerFor]=\"menu\">\r\n    <div class=\"user-image\">\r\n      <img src=\"/profile-avatar-1.png\" />\r\n    </div>\r\n    <div class=\"user-info\">\r\n      <span class=\"name\">John Smith</span>\r\n      <span class=\"role\">Founder</span>\r\n    </div>\r\n  </div>\r\n  <mat-menu #menu=\"matMenu\" class=\"profile-menu\" backdropClass=\"alert-menu\">\r\n    <div class=\"profile-menu-outer\">\r\n      <div class=\"grad-bg\">\r\n        <div class=\"user-initials\">JS</div>\r\n      </div>\r\n      <div class=\"profile-inner\">\r\n        <p class=\"mat-h1 fw-600 m-0\">John Smith</p>\r\n        <p class=\"m-0 mt-1\">Founder</p>\r\n      </div>\r\n      <div class=\"profile-paths\">\r\n        <a class=\"flex align-center justify-between user-link\">\r\n          <div class=\"flex align-center\">\r\n            <mat-icon class=\"material-symbols-outlined\"\r\n              >account_circle</mat-icon\r\n            >\r\n            <span class=\"ml-3\">John</span>\r\n          </div>\r\n          <div>\r\n            <mat-slide-toggle color=\"primary\"></mat-slide-toggle>\r\n          </div>\r\n        </a>\r\n        <a class=\"flex align-center justify-between user-link\">\r\n          <div class=\"flex align-center\">\r\n            <mat-icon class=\"material-symbols-outlined\">inbox_outline</mat-icon>\r\n            <span class=\"ml-3\">My Inbox</span>\r\n          </div>\r\n        </a>\r\n        <a class=\"flex align-center justify-between user-link\">\r\n          <div class=\"flex align-center\">\r\n            <mat-icon class=\"material-symbols-outlined\">clear_day</mat-icon>\r\n            <span class=\"ml-3\">Dark Mode</span>\r\n          </div>\r\n        </a>\r\n        <a class=\"flex align-center justify-between user-link\">\r\n          <div class=\"flex align-center\">\r\n            <mat-icon class=\"material-symbols-outlined\">live_help</mat-icon>\r\n            <span class=\"ml-3\">Help</span>\r\n          </div>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </mat-menu>\r\n<!-- </div> -->\r\n"
        },
        {
            "name": "RadioButtonComponent",
            "id": "component-RadioButtonComponent-b07e3feeba0b6dc9edc6e944a93b9aa516a3eb8ddde559197b86360b2d70d538048de012d6160c582e13e1d669fffeb28a973643183128fa9e02ee6ed0aead9c",
            "file": "src/stories/softobiz-ui/radiobutton/radio.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sft-radio-button",
            "styleUrls": [
                "./radio.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./radio.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "ThemePalette",
                    "decorators": []
                },
                {
                    "name": "disable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disableRipple",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "indeterminate",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "labelPosition",
                    "defaultValue": "'after'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "\"before\" | \"after\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation, Input } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material/core';\r\n\r\n@Component({\r\n  selector: 'sft-radio-button',\r\n  templateUrl: './radio.component.html',\r\n  styleUrls: ['./radio.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class RadioButtonComponent {\r\n\r\n  //Checkbox label\r\n  @Input() label: string = '';\r\n\r\n  //Whether the checkbox is disabled.\r\n  @Input() disable = false;\r\n\r\n  //Whether the checkbox is checked.\r\n  @Input() checked: boolean = false;\r\n  \r\n  //Theme color palette for the component\r\n  @Input() color: ThemePalette;\r\n\r\n  //Whether ripples are disabled\r\n  @Input() disableRipple: boolean = false;\r\n\r\n  //Whether the checkbox is indeterminate\r\n  @Input() indeterminate: boolean = false;\r\n\r\n  // Whether the label should appear after or before the checkbox. Defaults to 'after'\r\n  @Input() labelPosition: 'before' | 'after' = 'after';\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./radio.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-radio-button\r\n  [disabled]=\"disable\"\r\n  [checked]=\"checked\"\r\n  [disableRipple]=\"disableRipple\"\r\n  [color]=\"color\"\r\n  [label]=\"label\"\r\n  [labelPosition]=\"labelPosition\"\r\n  value=\"1\"\r\n  >{{ label }}</mat-radio-button\r\n>\r\n"
        },
        {
            "name": "SearchbarComponent",
            "id": "component-SearchbarComponent-08dd7761826a52e37374ff57d4600f4541e97c1baf66d8f1935bc0dbe444878d23430787ebcb6804e68a629f5bc6f22b74827763eea9e61126e01146c010b131",
            "file": "src/stories/softobiz-ui/searchbar/searchbar.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sft-searchbar",
            "styleUrls": [
                "./searchbar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./searchbar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "'Enter here...'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'sft-searchbar',\r\n  templateUrl: './searchbar.component.html',\r\n  styleUrls: ['./searchbar.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class SearchbarComponent {\r\n  @Input() placeholder: string = 'Enter here...';\r\n\r\n  @Input() disable: boolean = false;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./searchbar.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"global-search basic mr-6 border-2\">\r\n  <span class=\"search-icon pointer\">\r\n    <img src=\"/icons/search.svg\" alt=\"search-icon\" />\r\n  </span>\r\n  <input type=\"text\" [disabled]=\"disable\" [placeholder]=\"placeholder\" />\r\n</div>\r\n"
        },
        {
            "name": "SetPriceComponent",
            "id": "component-SetPriceComponent-3ebcd6a11d6dde6eb674ac60bc06ac18afd2b7f38ad0052c86668f86afe738ab19379899ec47b52204ba6e92ff1fc7556043c6b4cd04e0ac3b9c5743cef06d9b",
            "file": "src/app/modules/plans/components/set-price/set-price.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-set-price",
            "styleUrls": [
                "./set-price.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./set-price.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "check",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dropKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "editPriceStatus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "inputValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 189
                },
                {
                    "name": "monthlyBilling",
                    "defaultValue": "['3', '4', '5']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "periodUnit",
                    "defaultValue": "periodUnit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "planId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "planValue",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "previePrice",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "price",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "pricingModelTypes",
                    "defaultValue": "pricingModels",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "selectOptions[]",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "readOnly",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "selectedOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 188
                },
                {
                    "name": "selectedTab",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "setPriceForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "stairTotal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "start",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "tiredTotal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "volumeTotal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 32
                }
            ],
            "methodsClass": [
                {
                    "name": "addMultiPricing",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 143,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "checkIndex",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 268,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "cycleValue",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 190,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteTier",
                    "args": [
                        {
                            "name": "tierIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 182,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tierIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getCurrPLan",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getLevelList",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 118,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPreviewPrice",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 291,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "lastObj",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 133,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 347,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDropdownKey",
                    "args": [
                        {
                            "name": "event",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 178,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onTabChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "MatTabChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 164,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MatTabChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openSuccess",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 258,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "patchValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "pricingModelSetEndingUnitEmpty",
                    "args": [
                        {
                            "name": "price",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 205,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "price",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "pricingModelValueToName",
                    "args": [
                        {
                            "name": "price",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 213,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "price",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "secondLastObj",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 138,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setPeriod",
                    "args": [
                        {
                            "name": "periodSelected",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 123,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "periodSelected",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setStartingValue",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 277,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "submitValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 242,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport {\r\n  pricingModels,\r\n  selectOptions,\r\n  periodUnit,\r\n} from 'src/app/shared/constants/consants';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\nimport { Subscription, takeUntil } from 'rxjs';\r\nimport { SuccessDialogComponent } from 'src/app/shared/components/dialog-box/success-dialog/success-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PlanService } from '../../services/plan.service';\r\nimport { GlobalService } from 'src/app/core/services/global.service';\r\n\r\nexport class PlanValue {\r\n  planId: string;\r\n  internalName: string;\r\n}\r\n@Component({\r\n  selector: 'app-set-price',\r\n  templateUrl: './set-price.component.html',\r\n  styleUrls: ['./set-price.component.scss'],\r\n})\r\nexport class SetPriceComponent {\r\n  subscription: Subscription;\r\n  pricingModelTypes: selectOptions[] = pricingModels;\r\n  periodUnit: string[] = periodUnit;\r\n  selectedTab: number = 0;\r\n  previePrice: number;\r\n  tiredTotal: number;\r\n  volumeTotal: number;\r\n  stairTotal: number;\r\n  price: any;\r\n  planValue: any = {};\r\n  monthlyBilling = ['3', '4', '5'];\r\n  readOnly: boolean = false;\r\n  start = 0;\r\n  check: string;\r\n  dropKey: number;\r\n  planId: string;\r\n  editPriceStatus: boolean;\r\n  public setPriceForm: FormGroup;\r\n\r\n  constructor(\r\n    private form: FormBuilder,\r\n    private global: GlobalService,\r\n    private planService: PlanService,\r\n    public dialog: MatDialog,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.planId = this.route.snapshot.params['id'];\r\n    this.formData();\r\n    // this.getPriceVal();\r\n    this.getCurrPLan();\r\n  }\r\n\r\n  // getPriceVal() {\r\n  //   this.planService\r\n  //     .getEditPrice()\r\n  //     .pipe(takeUntil(this.global.componentDestroyed(this)))\r\n  //     .subscribe((res) => {\r\n  //       this.editPriceStatus = res;\r\n  //       if (this.editPriceStatus) {\r\n  //         this.planService\r\n  //           .getPriceById(this.planId)\r\n  //           .subscribe((res) => console.log('price', res));\r\n  //       } else {\r\n  //         this.getCurrPLan();\r\n  //       }\r\n  //     });\r\n  // }\r\n\r\n  getCurrPLan() {\r\n    this.planService\r\n      .getPlanById(this.planId)\r\n      .pipe(takeUntil(this.global.componentDestroyed(this)))\r\n      .subscribe((res) => {\r\n        this.planValue = res.data;\r\n      });\r\n  }\r\n\r\n  patchValue() {\r\n    this.setPriceForm.patchValue({\r\n      planId: this.planValue.planId,\r\n      name: this.planValue.internalName,\r\n    });\r\n  }\r\n\r\n  formData() {\r\n    this.setPriceForm = this.form.group({\r\n      priceId: ['', Validators.required],\r\n      planId: ['', Validators.required],\r\n      name: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n      invoiceNotes: ['', Validators.required],\r\n      currencyCode: ['USD', Validators.required],\r\n      pricingModel: ['', Validators.required],\r\n      price: ['', Validators.required],\r\n      periodUnit: ['daily', Validators.required],\r\n      period: ['1', Validators.required],\r\n      isExpirable: [true],\r\n      noOfCycle: ['', Validators.required],\r\n      status: 'active',\r\n      multiPricing: this.form.array([\r\n        this.form.group({\r\n          startingUnit: { value: '1', disabled: true },\r\n          endingUnit: { value: '&above', disabled: true },\r\n          price: [''],\r\n        }),\r\n      ]),\r\n    });\r\n  }\r\n\r\n  getLevelList(index: number) {\r\n    const tierList = this.multiPricing.at(index) as FormGroup;\r\n    return tierList;\r\n  }\r\n\r\n  setPeriod(periodSelected: string) {\r\n    this.setPriceForm.patchValue({\r\n      periodUnit: periodSelected,\r\n    });\r\n  }\r\n\r\n  get multiPricing() {\r\n    return this.setPriceForm.controls['multiPricing'] as FormArray;\r\n  }\r\n\r\n  lastObj() {\r\n    const checkCurrent = this.multiPricing.length - 1;\r\n    return this.getLevelList(checkCurrent);\r\n  }\r\n\r\n  secondLastObj() {\r\n    const checkPrev = this.multiPricing.length - 2;\r\n    return this.getLevelList(checkPrev);\r\n  }\r\n\r\n  addMultiPricing() {\r\n    this.multiPricing.push(\r\n      this.form.group({\r\n        startingUnit: { value: '', disabled: true },\r\n        endingUnit: ['&above'],\r\n        price: [''],\r\n      })\r\n    );\r\n\r\n    const lastIdx = this.lastObj();\r\n    const prevIdx = this.secondLastObj();\r\n    lastIdx.patchValue({\r\n      endingUnit: '&above',\r\n    });\r\n    lastIdx.get('endingUnit')?.disable();\r\n    prevIdx.patchValue({\r\n      endingUnit: '',\r\n    });\r\n    prevIdx.get('endingUnit')?.enable();\r\n  }\r\n\r\n  onTabChange(event: MatTabChangeEvent): void {\r\n    this.formData();\r\n    this.selectedTab = event.index;\r\n    if (this.selectedTab == 0) {\r\n      this.setPeriod('daily');\r\n    } else if (this.selectedTab == 1) {\r\n      this.setPeriod('weekly');\r\n    } else if (this.selectedTab == 2) {\r\n      this.setPeriod('monthly');\r\n    } else if (this.selectedTab == 3) {\r\n      this.setPeriod('yearly');\r\n    }\r\n  }\r\n\r\n  onDropdownKey(event: number): void {\r\n    this.dropKey = event;\r\n  }\r\n\r\n  deleteTier(tierIndex: number) {\r\n    this.multiPricing.removeAt(tierIndex);\r\n    const lastIdx = this.lastObj();\r\n    lastIdx.get('endingUnit')?.setValue('&above');\r\n    lastIdx.get('endingUnit')?.disable();\r\n  }\r\n  selectedOption: string;\r\n  inputValue: string;\r\n  cycleValue(event: any) {\r\n    this.selectedOption = event.value;\r\n    if (this.selectedOption === '1') {\r\n      this.setPriceForm.patchValue({\r\n        noOfCycle: '',\r\n        isExpirable: true,\r\n      });\r\n    } else if (this.selectedOption === '2') {\r\n      this.setPriceForm.patchValue({\r\n        noOfCycle: '',\r\n        isExpirable: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  pricingModelSetEndingUnitEmpty(price: any) {\r\n    for (let i = 0; i < price.multiPricing.length; i++) {\r\n      if (price.multiPricing[i].endingUnit == '&above') {\r\n        price.multiPricing[i].endingUnit = '';\r\n      }\r\n    }\r\n  }\r\n\r\n  pricingModelValueToName(price: any) {\r\n    if (price) {\r\n      price.priceId =\r\n        price.planId + '-' + price.currencyCode + '-' + price.periodUnit;\r\n      price.name =\r\n        price.name + '-' + price.currencyCode + '-' + price.periodUnit;\r\n    }\r\n    if (price.pricingModel == 1) {\r\n      price.pricingModel = 'flat_fee';\r\n      price.multiPricing = [];\r\n    }\r\n    if (price.pricingModel == 2) {\r\n      price.pricingModel = 'per_unit';\r\n      price.multiPricing = [];\r\n    }\r\n    if (price.pricingModel == 3) {\r\n      price.pricingModel = 'tiered';\r\n      this.pricingModelSetEndingUnitEmpty(price);\r\n    }\r\n    if (price.pricingModel == 4) {\r\n      price.pricingModel = 'volume';\r\n      this.pricingModelSetEndingUnitEmpty(price);\r\n    }\r\n    if (price.pricingModel == 5) {\r\n      price.pricingModel = 'stairStep';\r\n      this.pricingModelSetEndingUnitEmpty(price);\r\n    }\r\n  }\r\n\r\n  submitValues() {\r\n    this.patchValue();\r\n    this.global.showLoader();\r\n    this.price = this.setPriceForm.getRawValue();\r\n    this.pricingModelValueToName(this.price);\r\n    this.subscription = this.planService\r\n      .createPrice(this.price)\r\n      .subscribe((res) => {\r\n        this.openSuccess();\r\n        this.planService.setData(this.price, 'priceInfo');\r\n        this.router.navigate([`/plans/create/${this.planValue.planId}`]);\r\n        this.global.hideLoader();\r\n      });\r\n    this.global.hideLoader();\r\n  }\r\n\r\n  openSuccess() {\r\n    this.dialog.open(SuccessDialogComponent, {\r\n      width: '420px',\r\n      data: {\r\n        module: 'Pricing',\r\n        operation: 'is created',\r\n      },\r\n    });\r\n  }\r\n\r\n  checkIndex(index: number) {\r\n    const position = this.multiPricing.length - 1;\r\n    if (index > 0 && index !== position) {\r\n      return (this.readOnly = true);\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  setStartingValue(event: any, index: number) {\r\n    const setStarting = Number(event.target.value);\r\n    if (this.start < setStarting) {\r\n      this.start = Number(event.target.value) + 1;\r\n      const getNext = index + 1;\r\n      const NextObject = this.getLevelList(getNext);\r\n      NextObject.patchValue({\r\n        startingUnit: setStarting + 1,\r\n      });\r\n    } else {\r\n      this.check = 'plz put above value from startingunit';\r\n    }\r\n  }\r\n\r\n  getPreviewPrice(event: any) {\r\n    let input = parseInt(event.target.value);\r\n    const arr = this.setPriceForm.value.multiPricing;\r\n    let i = 0;\r\n    let total1 = 0;\r\n    let startUnit = 1;\r\n    while (i < arr.length && input > 0) {\r\n      if (i == arr.length - 1) {\r\n        total1 += input * arr[i].price;\r\n        input = 0;\r\n      }\r\n      let gap = 0;\r\n      if (i == 0) {\r\n        gap = arr[0].endingUnit;\r\n      } else {\r\n        gap = arr[i].endingUnit - arr[i - 1].endingUnit;\r\n        break;\r\n      }\r\n\r\n      if (input >= gap) {\r\n        total1 += arr[i].price * gap;\r\n        input -= gap;\r\n      } else {\r\n        total1 += arr[i].price * input;\r\n        input = 0;\r\n        break;\r\n      }\r\n\r\n      i++;\r\n      break;\r\n    }\r\n\r\n    this.tiredTotal = total1;\r\n    this.previePrice = event.target.value * this.setPriceForm.value.price;\r\n    let inputval = parseInt(event.target.value);\r\n    let voltotal = 0;\r\n    let stTotal = 0;\r\n    let j = 0;\r\n    while (j < arr.length && inputval > 0) {\r\n      if (\r\n        (startUnit <= inputval && inputval <= arr[j].endingUnit) ||\r\n        arr[j].endingUnit === undefined\r\n      ) {\r\n        stTotal = arr[j].price;\r\n        this.stairTotal = stTotal;\r\n        voltotal = inputval * arr[j].price;\r\n        this.volumeTotal = voltotal;\r\n        startUnit = parseInt(arr[j].endingUnit) + 1;\r\n        break;\r\n      }\r\n      j++;\r\n    }\r\n    this.stairTotal = stTotal;\r\n    this.volumeTotal = voltotal;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./set-price.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "form",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "global",
                        "type": "GlobalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "planService",
                        "type": "PlanService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 43,
                "jsdoctags": [
                    {
                        "name": "form",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "global",
                        "type": "GlobalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "planService",
                        "type": "PlanService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "multiPricing": {
                    "name": "multiPricing",
                    "getSignature": {
                        "name": "multiPricing",
                        "type": "",
                        "returnType": "",
                        "line": 129
                    }
                }
            },
            "templateData": "<div class=\"main-bg w-full h-full overflow-auto border-2 py-8 pl-11 pr-10\">\r\n  <form [formGroup]=\"setPriceForm\" (ngSubmit)=\"submitValues()\">\r\n    <div class=\"flex align-center mb-2\">\r\n      <mat-icon\r\n        class=\"material-symbols-outlined pointer\"\r\n        color=\"primary\"\r\n        [routerLink]=\"['/plans/create/'] + planId\"\r\n        >keyboard_backspace</mat-icon\r\n      >\r\n      <span class=\"mat-h1 primary-text text-main ml-2\">Create Plan</span>\r\n    </div>\r\n    <div class=\"flex align-center\">\r\n      <span class=\"pl-8 grey-text text-lighten-9 pointer\" [routerLink]=\"['/plans/create/'] + planId\"> Create plan </span>\r\n      <mat-icon class=\"material-symbols-outlined mx-2 small-icon\">\r\n        chevron_right\r\n      </mat-icon>\r\n      <span class=\"shades-text text-black fw-500\">Set Price</span>\r\n    </div>\r\n    <div class=\"mt-8\">\r\n      <mat-tab-group\r\n        class=\"pricing-tabs mb-6\"\r\n        mat-stretch-tabs=\"false\"\r\n        mat-align-tabs=\"start\"\r\n        (selectedTabChange)=\"onTabChange($event)\"\r\n      >\r\n        <mat-tab\r\n          *ngFor=\"let options of periodUnit\"\r\n          label=\"{{ options }}\"\r\n        ></mat-tab>\r\n      </mat-tab-group>\r\n      <div class=\"py-2 form-section\">\r\n        <!-- Pricing Model -->\r\n        <div class=\"input-wrapper\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Pricing Model\r\n            </p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"helpinfotooltip\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #helpinfotooltip let-name>\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Feature id</div>\r\n                <div class=\"details\">\r\n                  Microsoft Teams is the ultimate messaging app for your\r\n                  organization—a workspace for real-time collaboration and\r\n                  communication, meetings, file and app sharing, and even the\r\n                  occasional emoji! All in one place, all in the open, all\r\n                  accessible to everyone.\r\n                </div>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n            <mat-select\r\n              required\r\n              placeholder=\"select\"\r\n              formControlName=\"pricingModel\"\r\n            >\r\n              <mat-option\r\n                *ngFor=\"let option of pricingModelTypes\"\r\n                value=\"{{ option.value }}\" (click)=\"onDropdownKey(option.value)\"\r\n              >\r\n                {{ option.title }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <!-- Dynamic Fields -->\r\n        <div\r\n          class=\"w-full form-array-section mb-8\"\r\n          *ngIf=\"monthlyBilling.includes(setPriceForm.value.pricingModel)\"\r\n        >\r\n          <div class=\"header-bottom-border mb-8\">\r\n            <h4 class=\"fw-500 primary-text text-main my-2 mat-subtitle-2\">\r\n              Monthly billing\r\n            </h4>\r\n          </div>\r\n          <div class=\"mb-32\">\r\n            <div class=\"w-full\">\r\n              <div class=\"flex align-center\">\r\n                <div class=\"mr-2 input-wrapper small\">\r\n                  <p class=\"mat-subtitle-2 font-weight-500 input-label mb-2\">\r\n                    From (Units)\r\n                  </p>\r\n                </div>\r\n                <div class=\"mr-2 input-wrapper small\">\r\n                  <p class=\"mat-subtitle-2 font-weight-500 input-label mb-2\">\r\n                    To\r\n                  </p>\r\n                </div>\r\n                <div class=\"input-wrapper small\">\r\n                  <p class=\"mat-subtitle-2 font-weight-500 input-label mb-2\">\r\n                    Price Per unit\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <ng-container formArrayName=\"multiPricing\">\r\n                  <ng-container\r\n                    *ngFor=\"let multiPricingGroup of multiPricing.controls; let i = index\"\r\n                  >\r\n                    <div formGroupName=\"{{i}}\" class=\"flex align-center relative\">\r\n                      <div class=\"input-wrapper small mr-2 relative \">\r\n                        <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n                          <input\r\n                            required\r\n                            matInput\r\n                            placeholder=\"Enter here\"\r\n                            formControlName=\"startingUnit\"\r\n                            type=\"number\"\r\n                          />\r\n                        </mat-form-field>\r\n                      </div>\r\n                      <div class=\"input-wrapper small mr-2\">\r\n                        <mat-form-field appearance=\"outline\"class=\"border-2\">\r\n                          <input\r\n                            required\r\n                            matInput\r\n                            placeholder=\"Enter here\"\r\n                            formControlName=\"endingUnit\"\r\n                            (change)=\"setStartingValue($event, i)\"\r\n                          />\r\n                        </mat-form-field>\r\n                        <!-- <ng-container *ngIf=\"check\">\r\n                          {{ check }}\r\n                        </ng-container> -->\r\n                      </div>\r\n                      <div class=\"input-wrapper small relative\">\r\n                        <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n                          <input\r\n                            required\r\n                            matInput\r\n                            ng-readonly=\"readOnly\"\r\n                            placeholder=\"Enter here\"\r\n                            formControlName=\"price\"\r\n                            type=\"number\"\r\n                          />\r\n                        </mat-form-field>\r\n                      </div>\r\n                      <button\r\n                        mat-icon-button\r\n                        color=\"warn\"\r\n                        class=\"light-bg small rounded-1 absolute delete-tier-btn\"\r\n                        *ngIf=\"i == multiPricing.length - 1 && i > 0\"\r\n                        (click)=\"deleteTier(i)\"\r\n                      >\r\n                        <mat-icon\r\n                          class=\"material-symbols-outlined mr-0\"\r\n                          color=\"warn\"\r\n                          >close</mat-icon\r\n                        >\r\n                      </button>\r\n                    </div>\r\n                  </ng-container>\r\n                </ng-container>\r\n              </div>\r\n              <!-- <div class=\"mr-2 input-wrapper small\"> -->\r\n              <!-- </div> -->\r\n            </div>\r\n            <button\r\n              disableRipple\r\n              mat-button\r\n              type=\"button\"\r\n              class=\"primary-text text-main\"\r\n              (click)=\"addMultiPricing()\"\r\n            >\r\n              + Add More\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <!-- Price Field -->\r\n        <div class=\"input-wrapper\" *ngIf=\"!monthlyBilling.includes(setPriceForm.value.pricingModel)\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">Price</p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"helpinfotooltip\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #helpinfotooltip let-name>\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Feature id</div>\r\n                <div class=\"details\">\r\n                  Microsoft Teams is the ultimate messaging app for your\r\n                  organization—a workspace for real-time collaboration and\r\n                  communication, meetings, file and app sharing, and even the\r\n                  occasional emoji! All in one place, all in the open, all\r\n                  accessible to everyone.\r\n                </div>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n            <input\r\n              required\r\n              matInput\r\n              placeholder=\"Enter here \"\r\n              formControlName=\"price\"\r\n              type=\"number\"\r\n              min=\"0\"\r\n            />\r\n            <mat-error *ngIf=\"setPriceForm.controls['price'].invalid && setPriceForm.controls['price'].touched\">\r\n              <ng-container *ngIf=\"setPriceForm.controls['price'].errors['required']\">\r\n                Price is required and cannot be left empty.\r\n              </ng-container>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <!-- Price Preview field -->\r\n        <div class=\"preview-price mb-6\">\r\n          <p class=\"mat-subtitle-2 font-weight-500 input-label mb-2\">\r\n            Price Preview\r\n          </p>\r\n          <div class=\"flex align-center\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label mb-2\">\r\n              If a customer purchase\r\n            </p>\r\n            <div class=\"w-18 border-2 mx-2 input-wrapper price-digits\">\r\n              <mat-form-field appearance=\"outline\">\r\n                <input\r\n                  matInput\r\n                  type=\"number\"\r\n                  placeholder=\"--\"\r\n                  min=\"1\"\r\n                  max=\"1000\"\r\n                  (input)=\"getPreviewPrice($event)\"\r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label mb-2\" *ngIf=\"dropKey ==1\">\r\n              Units. The total amount payable will be USD {{ previePrice }}\r\n            </p>\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label mb-2\" *ngIf=\"dropKey ==2\">\r\n              Units. The total amount payable will be USD {{ previePrice }}\r\n            </p>\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label mb-2\"*ngIf=\"dropKey == 3\" >\r\n              Units. The total amount payable will be USD {{ tiredTotal }}\r\n            </p>\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label mb-2\"*ngIf=\"dropKey == 4\" >\r\n              Units. The total amount payable will be USD {{volumeTotal}}\r\n            </p>\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label mb-2\"*ngIf=\"dropKey == 5\" >\r\n              Units. The total amount payable will be USD {{stairTotal}}\r\n            </p>\r\n            \r\n          </div>\r\n        </div>\r\n        <!-- Billing Cycle -->\r\n        <div class=\"input-wrapper\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Billing Cycle\r\n            </p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"helpinfotooltip\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #helpinfotooltip let-name>\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Feature id</div>\r\n                <div class=\"details\">\r\n                  Microsoft Teams is the ultimate messaging app for your\r\n                  organization—a workspace for real-time collaboration and\r\n                  communication, meetings, file and app sharing, and even the\r\n                  occasional emoji! All in one place, all in the open, all\r\n                  accessible to everyone.\r\n                </div>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n            <mat-select required placeholder=\"select\"  (selectionChange)=\"cycleValue($event)\">\r\n              <mat-option value=\"1\">Fixed</mat-option>\r\n              <mat-option value=\"2\">Forever</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <div *ngIf=\"selectedOption == '1'\">\r\n            <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n              <input matInput type=\"text\" placeholder=\"Number Of Cycle\" formControlName=\"noOfCycle\"  name=\"noOfCycle\">\r\n              <mat-error *ngIf=\"setPriceForm.controls['noOfCycle'].invalid && setPriceForm.controls['noOfCycle'].touched\">\r\n                <ng-container *ngIf=\"setPriceForm.controls['noOfCycle'].errors['required']\">\r\n                  noOfCycle is required and cannot be left empty.\r\n                </ng-container>\r\n              </mat-error>\r\n            </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <button mat-flat-button color=\"primary\" [disabled]=\"setPriceForm.invalid && this.setPriceForm.value.pricingModel!=='2' && this.setPriceForm.value.pricingModel!=='3'\" type=\"submit\">Set Price</button>\r\n    </div>\r\n  </div>\r\n  </form>\r\n</div>\r\n"
        },
        {
            "name": "SidebarComponent",
            "id": "component-SidebarComponent-a3863514419d1cd97e9ab9f72fe3f35ee89d03851560e7c9afef2e3a6582b1b4f5ab79fe566daf5686803c3a11e44b2248dbd90aded869c585830180aaf185f8",
            "file": "src/app/core/layouts/sidebar/sidebar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sidebar",
            "styleUrls": [
                "./sidebar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sidebar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "newItemEvent",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "activeRoute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "configOptions",
                    "defaultValue": "Config_Menu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "currentRoute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "globalService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GlobalService",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "Menu_Headings",
                    "defaultValue": "Menu_Headings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "menuItems",
                    "defaultValue": "MENUITEMS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "notificationsData",
                    "defaultValue": "Notifications_Data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "opened",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "route",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActivatedRoute",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "sidenav",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSidenav",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'sidenav'"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "userProfile",
                    "defaultValue": "User_Options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "methodsClass": [
                {
                    "name": "getList",
                    "args": [
                        {
                            "name": "item",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleSidenav",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport {\r\n  Config_Menu,\r\n  MENUITEMS,\r\n  User_Options,\r\n  Menu_Headings,\r\n  Notifications_Data,\r\n} from 'src/app/shared/constants/consants';\r\nimport { GlobalService } from '../../services/global.service';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.scss'],\r\n})\r\nexport class SidebarComponent {\r\n  menuItems = MENUITEMS;\r\n  configOptions = Config_Menu;\r\n  Menu_Headings = Menu_Headings;\r\n  userProfile = User_Options;\r\n  notificationsData = Notifications_Data;\r\n  activeRoute: string[];\r\n  currentRoute: string;\r\n\r\n  constructor(\r\n    public globalService: GlobalService,\r\n    private router: Router,\r\n    public route: ActivatedRoute\r\n  ) {\r\n    this.router.events\r\n      .pipe(filter((event: any) => event instanceof NavigationEnd))\r\n      .subscribe((event: any) => {\r\n        this.currentRoute = event.url;\r\n        this.activeRoute = this.currentRoute.split('/')\r\n      });\r\n  }\r\n\r\n  @ViewChild('sidenav') sidenav: MatSidenav;\r\n  @Output() newItemEvent = new EventEmitter<boolean>();\r\n\r\n  opened: boolean = true;\r\n  toggleSidenav() {\r\n    // this.sidenav.toggle();\r\n    this.opened = !this.opened;\r\n    this.newItemEvent.emit(this.opened);\r\n  }\r\n  getList(item: string) {\r\n    let list = [];\r\n    return (list = this.menuItems.filter((ele) => ele.category == item));\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./sidebar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "globalService",
                        "type": "GlobalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 32,
                "jsdoctags": [
                    {
                        "name": "globalService",
                        "type": "GlobalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"sidenav-wrapper border-2\">\r\n  <div class=\"sidebar-toggle\">\r\n    <button\r\n      mat-mini-fab\r\n      color=\"accent\"\r\n      class=\"toggle-sidenav\"\r\n      (click)=\"toggleSidenav()\"\r\n    >\r\n      <svg\r\n        width=\"8\"\r\n        height=\"14\"\r\n        viewBox=\"0 0 8 14\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          d=\"M0.269968 12.3681L1.42697 13.5186L7.85547 7.08355L1.42047 0.648554L0.269969 1.79905L5.55447 7.08355L0.269968 12.3681V12.3681Z\"\r\n          fill=\"white\"\r\n        />\r\n      </svg>\r\n    </button>\r\n  </div>\r\n  <div class=\"sidebar-wrapper\">\r\n    <div class=\"logo pointer\">\r\n      <div class=\"logo-img pointer\">\r\n        <img src=\"../../../../assets/images/framework-logo.png\" alt=\"logo\" />\r\n      </div>\r\n      <div class=\"text-wrapper\">\r\n        <h3>Digital</h3>\r\n        <span class=\"logo-text\">Framework</span>\r\n      </div>\r\n    </div>\r\n    <div class=\"sidebar-scrollable mt-11\">\r\n      <mat-nav-list class=\"sidebar p-0\">\r\n        <div *ngFor=\"let element of Menu_Headings\" class=\"transition-400\">\r\n          <div *ngIf=\"element.name != 'Dashboard'\" class=\"category-heading\">\r\n            <h1>{{ element.name }}</h1>\r\n          </div>\r\n          <mat-list-item\r\n            class=\"nav-list-item p-0 w-full\"\r\n            *ngFor=\"let item of getList(element.category)\"\r\n          >\r\n            <a\r\n              class=\"icon-wrapper flex align-center\"\r\n              routerLinkActive=\"active\"\r\n              [ngClass]=\"{\r\n                active:\r\n                  activeRoute.includes(item.name)\r\n              }\"\r\n              [routerLink]=\"[item.state]\"\r\n            >\r\n              <div class=\"flex justify-center sidebar-icon-wraper\">\r\n                <mat-icon class=\"material-symbols-outlined m-0 sidebar-icon\">{{\r\n                  item.icon\r\n                }}</mat-icon>\r\n              </div>\r\n              <div class=\"content-wrapper\">\r\n                <span class=\"content\">{{ item.name }}</span>\r\n              </div>\r\n            </a>\r\n          </mat-list-item>\r\n        </div>\r\n      </mat-nav-list>\r\n      <div class=\"image-wrapper\">\r\n        <div class=\"img\">\r\n          <img\r\n            src=\"../../../../assets/images/dashboard-cat.png\"\r\n            alt=\"Dashboard Get Started\"\r\n          />\r\n        </div>\r\n        <div class=\"text\">\r\n          <h3>First steps</h3>\r\n          <p class=\"description\">\r\n            Customize your dashboard and lean <br />about out features\r\n          </p>\r\n          <span class=\"pointer\">Get Started</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <mat-nav-list class=\"config-section sidebar\">\r\n      <mat-list-item\r\n        class=\"nav-list-item p-0\"\r\n        *ngFor=\"let item of configOptions\"\r\n      >\r\n        <a\r\n          class=\"icon-wrapper flex align-center\"\r\n          [routerLink]=\"['/', item.state]\"\r\n        >\r\n          <div class=\"flex justify-center sidebar-icon-wraper\">\r\n            <mat-icon class=\"material-symbols-outlined m-0 sidebar-icon\">{{\r\n              item.icon\r\n            }}</mat-icon>\r\n          </div>\r\n          <div class=\"content-wrapper\">\r\n            <span class=\"content\">{{ item.name }}</span>\r\n          </div>\r\n        </a>\r\n      </mat-list-item>\r\n    </mat-nav-list>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "SignInComponent",
            "id": "component-SignInComponent-618040091262465f4640f932561386d8e5c3f68a9476e8d636669569dad427637c095c67acec8d965db40ee094dc8708c17bf58baf380c49f55dd614f57bac9e",
            "file": "src/app/modules/sign-in/components/sign-in.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sign-in",
            "styleUrls": [
                "./sign-in.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sign-in.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "hide",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "loginForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { kratosService } from '../services/kratos.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-sign-in',\r\n  templateUrl: './sign-in.component.html',\r\n  styleUrls: ['./sign-in.component.scss']\r\n})\r\nexport class SignInComponent implements OnInit {\r\n  hide = true;\r\n  loading = false;\r\n  loginForm: FormGroup;\r\n  subscription: Subscription;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private kratos: kratosService,\r\n    private router: Router,\r\n\r\n  ) { }\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      password_identifier: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n    });\r\n  }\r\n  onSubmit() {\r\n    this.loading = true\r\n    let login: any = {\r\n      method: \"password\",\r\n      password_identifier: this.loginForm.value.password_identifier,\r\n      password: this.loginForm.value.password,\r\n    };\r\n    this.subscription = this.kratos.loginIdentity(login).subscribe({\r\n      next: (res: any) => {\r\n        this.loading = false\r\n        if (res?.session) {\r\n          // Store the session in the local storage\r\n          localStorage.setItem(\"session\", JSON.stringify(res.session));\r\n          this.router.navigate([`/`]);\r\n        } else {\r\n          // Handle invalid response or missing session\r\n          console.error(\"Invalid response or missing session data.\");\r\n        }\r\n      },\r\n      error: (err: any) => {\r\n        console.log('something wrong occured', err);\r\n      },\r\n    });\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".loader {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(249, 246, 246, 0.477);\r\n  z-index: 9999;\r\n\r\n}\r\n\r\n.loader mat-spinner {\r\n  margin-right: 10px;\r\n}",
                    "styleUrl": "./sign-in.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "kratos",
                        "type": "kratosService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "kratos",
                        "type": "kratosService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"sign-page flex h-screen\">\r\n  <div class=\"side-page primary-bg h-screen\">\r\n    <div class=\"relative inner-side h-full w-full flex-center vertical\">\r\n      <div class=\"top-line absolute top-0 left-0 right-0\">\r\n        <img\r\n          src=\"../../../../assets/images/top-line.png\"\r\n          class=\"w-full\"\r\n          alt=\"top line\"\r\n        />\r\n      </div>\r\n      <div class=\"img-wrapper\">\r\n        <img src=\"../../../../assets/images/sub-sign.png\" alt=\"sign-in\" />\r\n      </div>\r\n      <p class=\"text-white mat-subtitle-1 mb-0\">\r\n        Nulla Lorem mollit cupidatat irure. Laborum magna nulla duis ullamco\r\n        cillum dolor. Voluptate exercitation incididunt aliquip deserunt\r\n        reprehenderit elit laborum.\r\n      </p>\r\n      <div class=\"bottom-line inline-flex absolute bottom-0 left-0 right-0\">\r\n        <img\r\n          src=\"../../../../assets/images/bottom-line.png\"\r\n          class=\"w-full\"\r\n          alt=\"bottom line\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"main-page main-bg h-screen overflow-auto relative\">\r\n    <div class=\"flex align-center justify-between title sticky top-0\">\r\n      <img src=\"../../../../assets/images/logo-main.png\" alt=\"logo\" />\r\n      <!-- <div class=\"flex align-center\">\r\n                <span class=\"mr-6 text-grey-darken-8\">No Account?</span>\r\n                <button mat-flat-button color=\"primary\">Create One!</button>\r\n            </div> -->\r\n    </div>\r\n    <div class=\"inner-wrapper flex justify-center vertical\">\r\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n        <h2 class=\"mat-headline-5 text-grey-darken-8 mb-2\">Log in</h2>\r\n        <h2 class=\"mat-headline-5 fw-600 text-primary\">Welcome Back</h2>\r\n        <p class=\"text-grey-darken-8 my-4\">\r\n          Welcome to Digital Framework , Please put your login credentails below\r\n          to continue..\r\n        </p>\r\n        <div class=\"form-weap w-full\">\r\n          <div class=\"\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label mb-2\">Email</p>\r\n            <mat-form-field appearance=\"outline\">\r\n              <input\r\n                matInput\r\n                placeholder=\"eg, john@gmail.com\"\r\n                formControlName=\"password_identifier\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label mb-2\">\r\n              Password\r\n            </p>\r\n            <mat-form-field appearance=\"outline\">\r\n              <input\r\n                matInput\r\n                [type]=\"hide ? 'password' : 'text'\"\r\n                formControlName=\"password\"\r\n              />\r\n              <button\r\n                mat-icon-button\r\n                matSuffix\r\n                (click)=\"hide = !hide\"\r\n                [attr.aria-label]=\"'Hide password'\"\r\n                [attr.aria-pressed]=\"hide\"\r\n              >\r\n                <mat-icon class=\"material-symbols-outlined\">{{\r\n                  hide ? \"visibility_off\" : \"visibility\"\r\n                }}</mat-icon>\r\n              </button>\r\n            </mat-form-field>\r\n            <!-----loader ------>\r\n            <div class=\"loader\" *ngIf=\"loading\">\r\n              <mat-spinner></mat-spinner>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button\r\n          mat-flat-button\r\n          color=\"primary\"\r\n          class=\"w-full mat-subtitle-1 font-weight-500 large mb-8\"\r\n          type=\"submit\"\r\n        >\r\n          LOG IN\r\n        </button>\r\n        <p>\r\n          By Clicking on sign In you agree the\r\n          <a href=\"\" class=\"text-primary\">Terms of Service</a> and\r\n          <a href=\"\" class=\"text-primary\">Privacy Policy.</a>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "StepperComponent",
            "id": "component-StepperComponent-d655931e902b56965c77893463bd08747467ed301d96dd9ffe8d97c1dcc18556a024c33cced8fb8e44247a7992bdf9a2b2f015a9f5002529f479a877914fb338",
            "file": "src/stories/softobiz-ui/stepper/stepper.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sft-stepper",
            "styleUrls": [
                "./stepper.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./stepper.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'sft-stepper',\r\n  templateUrl: './stepper.component.html',\r\n  styleUrls: ['./stepper.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class StepperComponent {\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./stepper.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"stepper-wrapper\">\r\n  <mat-stepper orientation=\"vertical\" #stepper [disableRipple]=\"true\">\r\n    <mat-step id=\"foo-bar1\">\r\n      <ng-template matStepLabel>\r\n        <div >\r\n          <span id=\"step-id1\" class=\"block text-dark font-weight-500\">step 1</span>\r\n          <span\r\n            class=\"block font-weight-600 mat-subtitle-2 text-headline-light\"\r\n            >Plan Information</span\r\n          >\r\n        </div>\r\n      </ng-template>\r\n    </mat-step>\r\n    <mat-step id=\"foo-bar2\">\r\n      <ng-template matStepLabel>\r\n        <div >\r\n          <span id=\"step-id2\" class=\"block text-dark font-weight-500\">step 2</span>\r\n          <span\r\n            class=\"block font-weight-600 mat-subtitle-2 text-headline-light\"\r\n            >Plan Information</span\r\n          >\r\n        </div>\r\n      </ng-template>\r\n    </mat-step>\r\n    <mat-step id=\"foo-bar3\">\r\n      <ng-template matStepLabel>\r\n        <div >\r\n          <span id=\"step-id3\" class=\"block text-dark font-weight-500\">step 3</span>\r\n          <span\r\n            class=\"block font-weight-600 mat-subtitle-2 text-headline-light\"\r\n            >Plan Information</span\r\n          >\r\n        </div>\r\n      </ng-template>\r\n    </mat-step>\r\n    <mat-step id=\"foo-bar4\">\r\n      <ng-template matStepLabel>\r\n        <div >\r\n          <span id=\"step-id4\" class=\"block text-dark font-weight-500\">step 4</span>\r\n          <span\r\n            class=\"block font-weight-600 mat-subtitle-2 text-headline-light\"\r\n            >Plan Information</span\r\n          >\r\n        </div>\r\n      </ng-template>\r\n    </mat-step>\r\n    <mat-step id=\"foo-bar5\">\r\n      <ng-template matStepLabel>\r\n        <div >\r\n          <span id=\"step-id5\" class=\"block text-dark font-weight-500\">step 5</span>\r\n          <span\r\n            class=\"block font-weight-600 mat-subtitle-2 text-headline-light\"\r\n            >Plan Information</span\r\n          >\r\n        </div>\r\n      </ng-template>\r\n    </mat-step>\r\n  </mat-stepper>\r\n</div>\r\n"
        },
        {
            "name": "SuccessDialogComponent",
            "id": "component-SuccessDialogComponent-0456fbdc5dcc85c1f7ab300f4b9e376b11d7bdec85b9155c8d846c262192430a369a2e86bb0852722bfee1019073b48f051322c7d289924687ed824db4630eb7",
            "file": "src/app/shared/components/dialog-box/success-dialog/success-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-success-dialog",
            "styleUrls": [
                "./success-dialog.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./success-dialog.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "operation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogData",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        167,
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialogRef<SuccessDialogComponent>",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, Input } from '@angular/core';\r\nimport {\r\n  MatDialogRef,\r\n  MatDialog,\r\n  MAT_DIALOG_DATA,\r\n} from '@angular/material/dialog';\r\n\r\nexport interface DialogData {\r\n  module: string;\r\n  operation: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-success-dialog',\r\n  templateUrl: './success-dialog.component.html',\r\n  styleUrls: ['./success-dialog.component.scss'],\r\n})\r\nexport class SuccessDialogComponent {\r\n  @Input() operation: string;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<SuccessDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\r\n  ) {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./success-dialog.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<SuccessDialogComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "data",
                        "type": "DialogData",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<SuccessDialogComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "data",
                        "type": "DialogData",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"p-6 border-4\">\r\n  <h1 class=\"mb-4\">Success</h1>\r\n  <span class=\"mat-body-1 mb-8 block\">{{ data.module }} {{data.operation}} successfully</span>\r\n  <button mat-flat-button color=\"primary\" class=\"medium ml-auto block\" [mat-dialog-close]=\"true\">Close</button>\r\n</div>\r\n"
        },
        {
            "name": "SwitchButtonComponent",
            "id": "component-SwitchButtonComponent-ebf9f43f7e3063356f968272abf4464564f1b52e180c2773a8ce884b0cf3b6678c3f83164bec658f3b281d3a48694be4f9b0ae4feefc0d99ce21c9f426c60354",
            "file": "src/stories/softobiz-ui/switch/switch.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sft-switch-button",
            "styleUrls": [
                "./switch.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./switch.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "ThemePalette",
                    "decorators": []
                },
                {
                    "name": "disable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disableRipple",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "indeterminate",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "labelPosition",
                    "defaultValue": "'after'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "\"before\" | \"after\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation, Input } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material/core';\r\n\r\n@Component({\r\n  selector: 'sft-switch-button',\r\n  templateUrl: './switch.component.html',\r\n  styleUrls: ['./switch.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class SwitchButtonComponent {\r\n\r\n  //Checkbox label\r\n  @Input() label: string = '';\r\n\r\n  //Whether the checkbox is disabled.\r\n  @Input() disable = false;\r\n\r\n  //Whether the checkbox is checked.\r\n  @Input() checked: boolean = false;\r\n  \r\n  //Theme color palette for the component\r\n  @Input() color: ThemePalette;\r\n\r\n  //Whether ripples are disabled\r\n  @Input() disableRipple: boolean = false;\r\n\r\n  //Whether the checkbox is indeterminate\r\n  @Input() indeterminate: boolean = false;\r\n\r\n  // Whether the label should appear after or before the checkbox. Defaults to 'after'\r\n  @Input() labelPosition: 'before' | 'after' = 'after';\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./switch.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-slide-toggle\r\n  class=\"switch-box\"\r\n  [disabled]=\"disable\"\r\n  [checked]=\"checked\"\r\n  [disableRipple]=\"disableRipple\"\r\n  [color]=\"color\"\r\n  [labelPosition]=\"labelPosition\"\r\n  >{{ label }}</mat-slide-toggle\r\n>\r\n"
        },
        {
            "name": "TableComponent",
            "id": "component-TableComponent-c0f8170a2bedc95589740c1796efbdb2d9728c9e39eb26f60d122c30f7e5bf06fa2bbccbd3a0ac86037deec4c02735638eddc07ea6929afb8d21a40060be8ab8",
            "file": "src/stories/softobiz-ui/table/table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: DateAdapter, useClass: CustomDateAdapter, deps: [MAT_DATE_LOCALE],\n}"
                },
                {
                    "name": "{ provide: MAT_DATE_FORMATS, useValue: MATERIAL_DATEPICKER_FORMATS }"
                }
            ],
            "selector": "sft-table",
            "styleUrls": [
                "./table.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./table.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "variant",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "couponsData",
                    "defaultValue": "Coupon_Data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "coupon[]",
                    "optional": false,
                    "description": "",
                    "line": 66
                },
                {
                    "name": "customHeader",
                    "defaultValue": "CustomDateHeaderComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 164
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 80,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 70
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "[\n    'select',\n    'coupon_id',\n    'coupon_name',\n    'description',\n    'created_at',\n    'status',\n    'action',\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "displayedColumns1",
                    "defaultValue": "[\n    'Timestamp',\n    'Events',\n    'Customer_Info',\n    'Event_Source',\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 155
                },
                {
                    "name": "emptyCoupons",
                    "defaultValue": "nocoupons",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "endDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 166
                },
                {
                    "name": "filterOptions",
                    "defaultValue": "listFilterOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 163
                },
                {
                    "name": "isOpened",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 154
                },
                {
                    "name": "LogsData",
                    "defaultValue": "Logs_Data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "logs[]",
                    "optional": false,
                    "description": "",
                    "line": 161
                },
                {
                    "name": "selection",
                    "defaultValue": "new SelectionModel<coupon>(true, [])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 67
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 69,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "startDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 165
                }
            ],
            "methodsClass": [
                {
                    "name": "announceSortChange",
                    "args": [
                        {
                            "name": "sortState",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nAnnounce the change in sort state for assistive technology.",
                    "description": "<p>Announce the change in sort state for assistive technology.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "sortState",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "checkboxLabel",
                    "args": [
                        {
                            "name": "row",
                            "type": "coupon",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nThe label for the checkbox on the passed row",
                    "description": "<p>The label for the checkbox on the passed row</p>\n",
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "coupon",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleDateRangeSelection",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 180,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isAllSelected",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhether the number of selected elements matches the total number of rows.",
                    "description": "<p>Whether the number of selected elements matches the total number of rows.</p>\n"
                },
                {
                    "name": "openDatePicker",
                    "args": [
                        {
                            "name": "event",
                            "type": "MatTabChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 173,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MatTabChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openDelete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 135,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "preventClose",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 167,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectAll",
                    "args": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 121,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectedRow",
                    "args": [
                        {
                            "name": "selectedID",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 114,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "selectedID",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sendElementId",
                    "args": [
                        {
                            "name": "elementId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "elementId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setFilter",
                    "args": [
                        {
                            "name": "selectedOption",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 170,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "selectedOption",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleAllRows",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSelects all rows if they are not all selected; otherwise clear selection.",
                    "description": "<p>Selects all rows if they are not all selected; otherwise clear selection.</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { Component, ViewChild, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { MatTabChangeEvent } from '@angular/material/tabs';\nimport { MATERIAL_DATEPICKER_FORMATS } from 'src/app/modules/coupons/components/create-coupons/create-coupons.component';\nimport { CustomDateHeaderComponent } from 'src/app/shared/components/custom-date-header/custom-date-header.component';\nimport { DeleteConfirmationComponent } from 'src/app/shared/components/dialog-box/delete-confirmation/delete-confirmation.component';\nimport {\n  Coupon_Data,\n  Logs_Data,\n  coupon,\n  listFilterOptions,\n  logs,\n  noLogs,\n  nocoupons,\n} from 'src/app/shared/constants/consants';\n// import * as moment from 'moment';\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\nimport {\n  DateAdapter,\n  MAT_DATE_FORMATS,\n  MAT_DATE_LOCALE,\n} from '@angular/material/core';\nclass CustomDateAdapter extends MomentDateAdapter {\n  override getDayOfWeekNames(style: 'long' | 'short' | 'narrow') {\n    return ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  }\n  override getFirstDayOfWeek(): number {\n    return 1;\n  }\n}\n\n@Component({\n  selector: 'sft-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss'],\n  providers: [\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\n    // application's root module. We provide it at the component level here, due to limitations of\n    // our example generation script.\n    {\n      provide: DateAdapter,\n      useClass: CustomDateAdapter,\n      deps: [MAT_DATE_LOCALE],\n    },\n\n    { provide: MAT_DATE_FORMATS, useValue: MATERIAL_DATEPICKER_FORMATS },\n  ],\n})\nexport class TableComponent {\n  // variant input\n  @Input() variant: string = 'primary';\n\n  // for checked table\n  displayedColumns: string[] = [\n    'select',\n    'coupon_id',\n    'coupon_name',\n    'description',\n    'created_at',\n    'status',\n    'action',\n  ];\n  couponsData: coupon[] = Coupon_Data;\n  selection = new SelectionModel<coupon>(true, []);\n  emptyCoupons = nocoupons;\n  @ViewChild(MatSort) sort: MatSort;\n  dialogRef: any;\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.couponsData.length;\n    return numSelected === numRows;\n  }\n  constructor(\n    private _liveAnnouncer: LiveAnnouncer,\n    public dialog: MatDialog\n  ) {}\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  toggleAllRows() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n    // console.log(this.selection.select)\n    this.selection.select(...this.couponsData);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: coupon): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${\n      row.coupon_id + 1\n    }`;\n  }\n\n  /** Announce the change in sort state for assistive technology. */\n  announceSortChange(sortState: Sort) {\n    // This example uses English messages. If your application supports\n    // multiple language, you would internationalize these strings.\n    // Furthermore, you can customize the message to add additional\n    // details about the values being sorted.\n    if (sortState.direction) {\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\n    } else {\n      this._liveAnnouncer.announce('Sorting cleared');\n    }\n  }\n  selectedRow(selectedID: string, event: any) {\n    const selectedRow = document.getElementById(`${selectedID}`);\n    if (selectedRow != null) {\n      selectedRow.classList.toggle('selected-row');\n    }\n    event.stopPropagation();\n  }\n  selectAll(data: any[]) {\n    if (this.isAllSelected()) {\n      data.map((element: any) => {\n        document.getElementById(element.id)?.classList.add('selected-row');\n      });\n    } else {\n      data.map((element: any) => {\n        document.getElementById(element.id)?.classList.remove('selected-row');\n      });\n    }\n  }\n  sendElementId(elementId: string) {\n    console.log(elementId);\n  }\n  openDelete(id: any) {\n    this.dialogRef = this.dialog.open(DeleteConfirmationComponent, {\n      width: '422px',\n      panelClass: 'dialog-curved',\n    });\n\n    this.dialogRef.afterClosed().subscribe((res: any) => {\n      if (res) {\n        console.log(res);\n\n        this.sendElementId(id);\n      } else {\n        console.log('Delete canceled');\n      }\n    });\n  }\n\n  // for simple table\n\n  isOpened: boolean = false;\n  displayedColumns1: string[] = [\n    'Timestamp',\n    'Events',\n    'Customer_Info',\n    'Event_Source',\n  ];\n  LogsData: logs[] = Logs_Data;\n  // emptyCoupons = noLogs;\n  filterOptions: string[] = listFilterOptions;\n  customHeader = CustomDateHeaderComponent;\n  startDate: Date;\n  endDate: Date;\n  preventClose(event: any) {\n    event.stopPropagation();\n  }\n  setFilter(selectedOption: string) {\n    console.log(selectedOption, 'this is the selected option');\n  }\n  openDatePicker(event: MatTabChangeEvent): void {\n    const selectedTab = event.index;\n    console.log(selectedTab, 'check');\n    if (selectedTab === 1) {\n      this.isOpened = true;\n    }\n  }\n  handleDateRangeSelection(): void {\n    console.log(this.selectedDates, 'test date');\n    if (this.selectedDates.length === 2) {\n      this.startDate = this.selectedDates[0];\n      this.endDate = this.selectedDates[1];\n      console.log(this.startDate, 'start date');\n      console.log(this.endDate, 'end date');\n    }\n  }\n  get selectedDates(): Date[] {\n    return [this.startDate, this.endDate];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./table.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_liveAnnouncer",
                        "type": "LiveAnnouncer",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 77,
                "jsdoctags": [
                    {
                        "name": "_liveAnnouncer",
                        "type": "LiveAnnouncer",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "selectedDates": {
                    "name": "selectedDates",
                    "getSignature": {
                        "name": "selectedDates",
                        "type": "[]",
                        "returnType": "Date[]",
                        "line": 189
                    }
                }
            },
            "templateData": "<!-- checked table -->\r\n<div\r\n  *ngIf=\"variant === 'primary'\"\r\n  class=\"primary-table overflow-visible mt-8 px-1 pb-2\"\r\n>\r\n  <table\r\n    mat-table\r\n    [dataSource]=\"couponsData\"\r\n    matSort\r\n    (matSortChange)=\"announceSortChange($event)\"\r\n  >\r\n    <!--- Note that these columns can be defined in any order.\r\n              The actual rendered columns are set as a property on the row definition\" -->\r\n    <ng-container matColumnDef=\"select\">\r\n      <th mat-header-cell *matHeaderCellDef>\r\n        <mat-checkbox\r\n          color=\"primary\"\r\n          (click)=\"selectAll(couponsData)\"\r\n          (change)=\"$event ? toggleAllRows() : null\"\r\n          [checked]=\"selection.hasValue() && isAllSelected()\"\r\n          [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n          [aria-label]=\"checkboxLabel()\"\r\n        >\r\n        </mat-checkbox>\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let row\">\r\n        <mat-checkbox\r\n          color=\"primary\"\r\n          (click)=\"selectedRow(row.id, $event)\"\r\n          (change)=\"$event ? selection.toggle(row) : null\"\r\n          [checked]=\"selection.isSelected(row)\"\r\n          [aria-label]=\"checkboxLabel(row)\"\r\n        >\r\n        </mat-checkbox>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <!-- ID Column -->\r\n    <ng-container matColumnDef=\"coupon_id\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>#Coupon ID</th>\r\n      <td mat-cell *matCellDef=\"let element\">{{ element.coupon_id }}</td>\r\n    </ng-container>\r\n\r\n    <!-- Product Name Column -->\r\n    <ng-container matColumnDef=\"coupon_name\">\r\n      <th\r\n        mat-header-cell\r\n        *matHeaderCellDef\r\n        mat-sort-header\r\n        sortActionDescription=\"Sort by title\"\r\n      >Name\r\n        Coupon \r\n      </th>\r\n      <td mat-cell *matCellDef=\"let element\">{{ element.coupon_name }}</td>\r\n    </ng-container>\r\n\r\n    <!-- Description Column -->\r\n    <ng-container matColumnDef=\"description\">\r\n      <th mat-header-cell *matHeaderCellDef>Description</th>\r\n      <td\r\n        mat-cell\r\n        *matCellDef=\"let element\"\r\n        class=\"description-col td-ellipsis\"\r\n        [ngxTippy]=\"fullDescription\"\r\n        [tippyProps]=\"{ placement: 'right', interactive: true }\"\r\n        tippyName=\"content2\"\r\n      >\r\n        <p>{{ element.description }}</p>\r\n        <ng-template #fullDescription let-name class=\"t-template\">\r\n          <div class=\"help-info-tooltip\">\r\n            <div class=\"heading-with-background\">Description</div>\r\n            <p class=\"py-3 black-text\">{{ element.description }}</p>\r\n            <button mat-button color=\"primary\" class=\"px-0\">Learn more</button>\r\n          </div>\r\n        </ng-template>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <!-- Created Date Column -->\r\n    <ng-container matColumnDef=\"created_at\">\r\n      <th mat-header-cell *matHeaderCellDef>Created On</th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        {{ element.created_at }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <!-- Created Date Column -->\r\n    <ng-container matColumnDef=\"status\">\r\n      <th mat-header-cell *matHeaderCellDef>Status</th>\r\n      <td mat-cell *matCellDef=\"let element\" [ngClass]=\"element.status\">\r\n        {{ element.status }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <!-- Created Date Column -->\r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef class=\"text-right\">Action</th>\r\n      <td mat-cell *matCellDef=\"let element\" class=\"text-right\">\r\n        <mat-icon\r\n          class=\"material-symbols-outlined\"\r\n          [matMenuTriggerFor]=\"actionsMenu\"\r\n        >\r\n          more_vert\r\n        </mat-icon>\r\n        <mat-menu\r\n          #actionsMenu=\"matMenu\"\r\n          class=\"actions-menu\"\r\n          backdropClass=\"edit-menu\"\r\n        >\r\n          <button mat-menu-item disableRipple>Edit</button>\r\n          <button\r\n            mat-menu-item\r\n            disableRipple\r\n            (click)=\"openDelete(element.productId)\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </mat-menu>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr\r\n      mat-row\r\n      *matRowDef=\"let row; columns: displayedColumns\"\r\n      [id]=\"row.id\"\r\n    ></tr>\r\n  </table>\r\n</div>\r\n\r\n<!-- simple table -->\r\n<div *ngIf=\"variant === 'secondary' \">\r\n<div\r\n  *ngIf=\"LogsData.length == 0\"\r\n  class=\"relative main-bg border-2 w-full h-full p-7 overflow-scroll\"\r\n>\r\n  <app-empty-listing [items]=\"emptyCoupons\"></app-empty-listing>\r\n</div>\r\n<div\r\n  *ngIf=\"LogsData.length > 0\"\r\n  class=\"relative main-bg border-2 w-full h-full py-6 pl-5 pr-6 overflow-scroll logs-list\"\r\n>\r\n  <!-- </div> -->\r\n  <div class=\"primary-table overflow-visible mt-8 px-1 pb-2 table-wrapper\">\r\n    <table mat-table [dataSource]=\"LogsData\">\r\n      <!-- TimestampColumn -->\r\n      <ng-container matColumnDef=\"Timestamp\">\r\n        <th mat-header-cell *matHeaderCellDef>Timestamp</th>\r\n        <td mat-cell *matCellDef=\"let element\">{{ element.Timestamp }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Events Column -->\r\n      <ng-container matColumnDef=\"Events\">\r\n        <th mat-header-cell *matHeaderCellDef>Events</th>\r\n        <td mat-cell *matCellDef=\"let element\">{{ element.Events }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Description Column -->\r\n      <ng-container matColumnDef=\"Customer_Info\">\r\n        <th mat-header-cell *matHeaderCellDef>Customer Info</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          <p>{{ element.Customer_Info }}</p>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Created Date Column -->\r\n      <ng-container matColumnDef=\"Event_Source\">\r\n        <th mat-header-cell *matHeaderCellDef>Event Source</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          <span class=\"primary-light-6-bg p-1 border-1 text-primary\">\r\n            {{ element.Event_Source }}\r\n          </span>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns1\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns1\"></tr>\r\n    </table>\r\n  </div>\r\n</div>\r\n</div>"
        },
        {
            "name": "TabsComponent",
            "id": "component-TabsComponent-b5d40f1d7198bf05e887585bc7fa131b03d24014d15acdc03e84601ddc80a275bf4a09542fad88b993c3b26d0361e1363cb5415af42953dbaa0a137633858246",
            "file": "src/stories/softobiz-ui/tabs/tabs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tabs",
            "styleUrls": [
                "./tabs.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tabs.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-tabs',\r\n  templateUrl: './tabs.component.html',\r\n  styleUrls: ['./tabs.component.scss'],\r\n})\r\nexport class TabsComponent {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./tabs.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-tab-group\r\n  class=\"pricing-tabs mb-6\"\r\n  mat-stretch-tabs=\"false\"\r\n  mat-align-tabs=\"start\"\r\n>\r\n  <mat-tab label=\"Tab 1\"> Content 1 </mat-tab>\r\n  <mat-tab label=\"Tab 2\"> Content 2 </mat-tab>\r\n  <mat-tab label=\"Tab 3\"> Content 3 </mat-tab>\r\n</mat-tab-group>\r\n"
        },
        {
            "name": "TextareaComponent",
            "id": "component-TextareaComponent-4003cbef90c49d9733c5c61e965ca3b6f23e8fa4f839c729a1338a7ec275146e4862a32bd9dfc04d2e6da4a2cd27fe3dc0eb7042b7a2e6b168db4b97875f2aa2",
            "file": "src/stories/softobiz-ui/Textarea/textarea.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sft-textarea",
            "styleUrls": [
                "./textarea.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./textarea.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "appearance",
                    "defaultValue": "'outline'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hint",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "'Enter here...'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "readonly",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "rows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "errorState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 38
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation, Input } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NgxTippyModule } from 'ngx-tippy-wrapper';\r\n// import { ButtonVariant } from './types';\r\n\r\n@Component({\r\n  selector: 'sft-textarea',\r\n  templateUrl: './textarea.component.html',\r\n  styleUrls: ['./textarea.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class TextareaComponent {\r\n  @Input() label: string = 'Label';\r\n\r\n  @Input() readonly: boolean = false;\r\n\r\n  @Input() type: string;\r\n\r\n  @Input() placeholder: string = 'Enter here...';\r\n\r\n  @Input() appearance: string = 'outline';\r\n\r\n  @Input() hint?: string = '';\r\n\r\n  @Input() disable: boolean = false;\r\n\r\n  @Input() required: boolean = false;\r\n\r\n  @Input() value: string = '';\r\n\r\n  @Input() class: string = '';\r\n\r\n  @Input() id: string = '';\r\n\r\n  @Input() rows: number ;\r\n\r\n  errorState: boolean;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./textarea.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"input-wrapper\">\r\n  <div class=\"flex align-center mb-2\">\r\n    <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n      {{label}}\r\n    </p>\r\n  </div>\r\n  <mat-form-field *ngIf=\"appearance === 'outline'\" appearance=\"outline\" [class]=\"class\" [id]=\"id\">\r\n    <textarea\r\n      [required]=\"required\"\r\n      [rows]=\"rows\"\r\n      matInput\r\n      [placeholder]=\"placeholder\"\r\n      [readonly]=\"readonly\"\r\n      [disabled]=\"disable\"\r\n    ></textarea>\r\n    <mat-hint>{{hint}}</mat-hint>\r\n  </mat-form-field>\r\n  <mat-form-field *ngIf=\"appearance === 'fill'\" appearance=\"fill\" [class]=\"class\" [id]=\"id\">\r\n    <textarea\r\n      [required]=\"required\"\r\n      [rows]=\"rows\"\r\n      matInput\r\n      [placeholder]=\"placeholder\"\r\n      [readonly]=\"readonly\"\r\n      [disabled]=\"disable\"\r\n    ></textarea>\r\n    <mat-hint>{{hint}}</mat-hint>\r\n  </mat-form-field>\r\n</div>"
        },
        {
            "name": "TooltipComponent",
            "id": "component-TooltipComponent-1fe327e37ef6cb51cc18aed58f250032a47d600857214ffcc9d31a6a19be1cb337784f22ed173941b7919830efce09461873673a8cf0759003c25ff197ddc700",
            "file": "src/stories/softobiz-ui/Tooltip/Tooltip.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-Tooltip",
            "styleUrls": [
                "./Tooltip.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./Tooltip.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "infoDetail",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "infoTitle",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-Tooltip',\r\n  templateUrl: './Tooltip.component.html',\r\n  styleUrls: ['./Tooltip.component.scss']\r\n})\r\nexport class TooltipComponent {\r\n  \r\n  @Input() infoTitle: string = '';\r\n  @Input() infoDetail: string = '';\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./Tooltip.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-icon class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\" [ngxTippy]=\"productnameinfo\"\r\n  [tippyProps]=\"{ placement: 'right', interactive: true }\" tippyName=\"content\">help</mat-icon>\r\n<ng-template #productnameinfo let-name class=\"t-template\">\r\n  <div class=\"help-info-tooltip\">\r\n    <div class=\"heading-with-background\"> {{infoTitle}} </div>\r\n    <div class=\"details\">\r\n       {{infoDetail}}\r\n    </div>\r\n    <button mat-button color=\"primary\">\r\n      Learn more\r\n    </button>\r\n  </div>\r\n</ng-template>"
        },
        {
            "name": "TransactionListComponent",
            "id": "component-TransactionListComponent-33d11bf10da8db8c6bb97e4404be0465502a7d12ab7667c9f93679f19b02fd7ebc7924ea8e8f6f255d9a4c884ed9ec3ab5b2a30bd8da15b6940f068d02284152",
            "file": "src/app/modules/payment-history/transactions/components/transaction-list/transaction-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-transaction-list",
            "styleUrls": [
                "./transaction-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./transaction-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "[\r\n    'select',\r\n    'id',\r\n    'customer_info',\r\n    'payment_method',\r\n    'occured_on',\r\n    'status',\r\n    'amount',\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "emptyCoupons",
                    "defaultValue": "nocoupons",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "noContent",
                    "defaultValue": "noTransactions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "selection",
                    "defaultValue": "new SelectionModel<coupon>(true, [])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "transactionData",
                    "defaultValue": "TransactionList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "methodsClass": [
                {
                    "name": "announceSortChange",
                    "args": [
                        {
                            "name": "sortState",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nAnnounce the change in sort state for assistive technology.",
                    "description": "<p>Announce the change in sort state for assistive technology.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "sortState",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "checkboxLabel",
                    "args": [
                        {
                            "name": "row",
                            "type": "coupon",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nThe label for the checkbox on the passed row",
                    "description": "<p>The label for the checkbox on the passed row</p>\n",
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "coupon",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isAllSelected",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhether the number of selected elements matches the total number of rows.",
                    "description": "<p>Whether the number of selected elements matches the total number of rows.</p>\n"
                },
                {
                    "name": "openDelete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectAll",
                    "args": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectedRow",
                    "args": [
                        {
                            "name": "selectedID",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "selectedID",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sendElementId",
                    "args": [
                        {
                            "name": "elementId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "elementId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleAllRows",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSelects all rows if they are not all selected; otherwise clear selection.",
                    "description": "<p>Selects all rows if they are not all selected; otherwise clear selection.</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewChild } from '@angular/core';\r\nimport { DeleteConfirmationComponent } from 'src/app/shared/components/dialog-box/delete-confirmation/delete-confirmation.component';\r\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\n\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport {\r\n  Coupon_Data,\r\n  coupon,\r\n  nocoupons,\r\n  noTransactions,\r\n  TransactionList,\r\n} from 'src/app/shared/constants/consants';\r\n@Component({\r\n  selector: 'app-transaction-list',\r\n  templateUrl: './transaction-list.component.html',\r\n  styleUrls: ['./transaction-list.component.scss'],\r\n})\r\nexport class TransactionListComponent {\r\n  noContent = noTransactions;\r\n  displayedColumns: string[] = [\r\n    'select',\r\n    'id',\r\n    'customer_info',\r\n    'payment_method',\r\n    'occured_on',\r\n    'status',\r\n    'amount',\r\n  ];\r\n  transactionData: any = TransactionList;\r\n  selection = new SelectionModel<coupon>(true, []);\r\n  emptyCoupons = nocoupons;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  dialogRef: any;\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.transactionData.length;\r\n    return numSelected === numRows;\r\n  }\r\n  constructor(\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    public dialog: MatDialog\r\n  ) {}\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  toggleAllRows() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n    // console.log(this.selection.select)\r\n    this.selection.select(...this.transactionData);\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: coupon): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${\r\n      row.coupon_id + 1\r\n    }`;\r\n  }\r\n\r\n  // ngAfterViewInit() {\r\n  //   this.featuresData.sort = this.sort;\r\n  // }\r\n\r\n  /** Announce the change in sort state for assistive technology. */\r\n  announceSortChange(sortState: Sort) {\r\n    // This example uses English messages. If your application supports\r\n    // multiple language, you would internationalize these strings.\r\n    // Furthermore, you can customize the message to add additional\r\n    // details about the values being sorted.\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n  selectedRow(selectedID: string, event: any) {\r\n    const selectedRow = document.getElementById(`${selectedID}`);\r\n    if (selectedRow != null) {\r\n      selectedRow.classList.toggle('selected-row');\r\n    }\r\n    event.stopPropagation();\r\n  }\r\n  selectAll(data: any[]) {\r\n    if (this.isAllSelected()) {\r\n      data.map((element: any) => {\r\n        document.getElementById(element.id)?.classList.add('selected-row');\r\n      });\r\n    } else {\r\n      data.map((element: any) => {\r\n        document.getElementById(element.id)?.classList.remove('selected-row');\r\n      });\r\n    }\r\n  }\r\n  sendElementId(elementId: string) {\r\n    console.log(elementId);\r\n  }\r\n  openDelete(id: any) {\r\n    this.dialogRef = this.dialog.open(DeleteConfirmationComponent, {\r\n      width: '422px',\r\n      panelClass: 'dialog-curved',\r\n    });\r\n\r\n    this.dialogRef.afterClosed().subscribe((res: any) => {\r\n      if (res) {\r\n        console.log(res);\r\n\r\n        this.sendElementId(id);\r\n      } else {\r\n        console.log('Delete canceled');\r\n      }\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./transaction-list.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_liveAnnouncer",
                        "type": "LiveAnnouncer",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 42,
                "jsdoctags": [
                    {
                        "name": "_liveAnnouncer",
                        "type": "LiveAnnouncer",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div\r\n  class=\"relative main-bg border-2 w-full h-full py-6 pl-5 pr-6 overflow-scroll\"\r\n  *ngIf=\"transactionData.length == 0\"\r\n>\r\n  <app-empty-listing [items]=\"noContent\"></app-empty-listing>\r\n</div>\r\n<div\r\n  class=\"relative main-bg border-2 w-full h-full py-6 pl-5 pr-6 overflow-scroll\"\r\n  *ngIf=\"transactionData.length > 0\"\r\n>\r\n  <div class=\"flex justify-between align-center px-1\">\r\n    <div class=\"flex align-center\">\r\n      <h1 class=\"text-text text-dark\">Transaction</h1>\r\n    </div>\r\n    <div class=\"flex align-center\">\r\n      <div class=\"global-search light mr-6 border-2\">\r\n        <span class=\"search-icon pointer\">\r\n          <img\r\n            src=\"../../../../assets/images/icons/search.svg\"\r\n            alt=\"search-icon\"\r\n          />\r\n        </span>\r\n        <input type=\"text\" placeholder=\"Search anything...\" />\r\n        <!-- <div class=\"loader\" *ngIf=\"loading\">\r\n          <mat-spinner></mat-spinner>\r\n        </div> -->\r\n      </div>\r\n      <button mat-flat-button color=\"primary\" class=\"create-btn\">\r\n        <img\r\n          src=\"../../../../../../assets/images/icons/file-download.svg\"\r\n          alt=\"download\"\r\n        />\r\n        <span class=\"text-nowrap block ml-2 letter-spacing-0\">Export Data</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"primary-table overflow-visible mt-8 px-1 pb-2\">\r\n    <table\r\n      mat-table\r\n      [dataSource]=\"transactionData\"\r\n      matSort\r\n      (matSortChange)=\"announceSortChange($event)\"\r\n    >\r\n      <!--- Note that these columns can be defined in any order.\r\n                The actual rendered columns are set as a property on the row definition\" -->\r\n      <ng-container matColumnDef=\"select\">\r\n        <th mat-header-cell *matHeaderCellDef>\r\n          <mat-checkbox\r\n            color=\"primary\"\r\n            (click)=\"selectAll(transactionData)\"\r\n            (change)=\"$event ? toggleAllRows() : null\"\r\n            [checked]=\"selection.hasValue() && isAllSelected()\"\r\n            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n            [aria-label]=\"checkboxLabel()\"\r\n          >\r\n          </mat-checkbox>\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let row\">\r\n          <mat-checkbox\r\n            color=\"primary\"\r\n            (click)=\"selectedRow(row.id, $event)\"\r\n            (change)=\"$event ? selection.toggle(row) : null\"\r\n            [checked]=\"selection.isSelected(row)\"\r\n            [aria-label]=\"checkboxLabel(row)\"\r\n          >\r\n          </mat-checkbox>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- ID Column -->\r\n      <ng-container matColumnDef=\"id\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>#ID</th>\r\n        <td mat-cell *matCellDef=\"let element\">{{ element.id }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Product Name Column -->\r\n      <ng-container matColumnDef=\"customer_info\">\r\n        <th\r\n          mat-header-cell\r\n          *matHeaderCellDef\r\n          mat-sort-header\r\n          sortActionDescription=\"Sort by title\"\r\n        >\r\n          Coupon Name\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let element\">{{ element.customerInfo }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Description Column -->\r\n      <ng-container matColumnDef=\"payment_method\">\r\n        <th mat-header-cell *matHeaderCellDef>Payment Method</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          <div class=\"flex align-center\">\r\n            <mat-icon\r\n              class=\"material-symbols-outlined mr-2 grey-text text-darken-6\"\r\n              >credit_card</mat-icon\r\n            >\r\n            <p>{{ element.paymentMethod }}</p>\r\n          </div>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Created Date Column -->\r\n      <ng-container matColumnDef=\"occured_on\">\r\n        <th mat-header-cell *matHeaderCellDef>Occured On</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          {{ element.occuredOn }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Created Date Column -->\r\n      <ng-container matColumnDef=\"status\">\r\n        <th mat-header-cell *matHeaderCellDef>Status</th>\r\n        <td mat-cell *matCellDef=\"let element\" [ngClass]=\"element.status\">\r\n          {{ element.status }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Created Date Column -->\r\n      <ng-container matColumnDef=\"amount\">\r\n        <th mat-header-cell *matHeaderCellDef class=\"text-right\">Amount</th>\r\n        <td mat-cell *matCellDef=\"let element\" class=\"text-right\">\r\n          $ {{ element.amount }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr\r\n        mat-row\r\n        *matRowDef=\"let row; columns: displayedColumns\"\r\n        [id]=\"row.id\"\r\n      ></tr>\r\n    </table>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "TransactionViewComponent",
            "id": "component-TransactionViewComponent-3f287ec76ff638ea25d3be732f283b1acc4604c859ca355fa5d28413e38b53bdc64b6426ea9f3a5f35b2888561e043bfd0f24fe0f644b24494864139f577e214",
            "file": "src/app/modules/payment-history/transactions/components/transaction-view/transaction-view.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-transaction-view",
            "styleUrls": [
                "./transaction-view.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./transaction-view.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-transaction-view',\r\n  templateUrl: './transaction-view.component.html',\r\n  styleUrls: ['./transaction-view.component.scss']\r\n})\r\nexport class TransactionViewComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./transaction-view.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"transaction-view main-bg border-2 overflow-auto border-2 w-full h-full pb-4\">\r\n<div class=\"flex align-center title\">\r\n    <mat-icon\r\n    class=\"material-symbols-outlined pointer text-headline-dark mr-2\"\r\n    [routerLink]=\"'/coupons'\"\r\n    >keyboard_backspace</mat-icon\r\n  >\r\n  <h2 class=\"mat-headline-5 text-headline-dark\">Transaction</h2>\r\n</div>\r\n<div class=\"px-4\">\r\n<div class=\"transaction-details\">\r\n    <h2 class=\"mat-headline-5 text-black table-heading\">Transaction Details</h2>\r\n        <table class=\"dashed-table border-2 overflow-hidden\">\r\n          <tr>\r\n            <th class=\"mat-subtitle-2 text-dark\">\r\n              Customer Name :  \r\n              </th>\r\n              <th class=\"mat-subtitle-2 text-grey-darken-6\">\r\n                Green Enterprises\r\n                </th>\r\n          </tr>\r\n          <tr>\r\n            <td class=\"mat-subtitle-2 text-dark\">\r\n              Transaction Id :\r\n          </td>\r\n          <td class=\"mat-subtitle-2 text-grey-darken-6\">\r\n            SO - 001\r\n          </td>\r\n          </tr>\r\n          <tr>\r\n            <td class=\"mat-subtitle-2 text-dark\">\r\n              Transaction Type :\r\n          </td>\r\n          <td class=\"mat-subtitle-2 text-grey-darken-6\">\r\n            Payment\r\n          </td>\r\n          </tr>\r\n          <tr>\r\n            <td class=\"mat-subtitle-2 text-dark\">\r\n              Status :\r\n          </td>\r\n          <td class=\"mat-subtitle-2 green-text text-darken-3\">\r\n            <div\r\n            class=\"active-text flex align-center \"\r\n          >\r\n            <mat-icon\r\n              class=\"material-symbols-outlined mr-2 green-text text-darken-3\"\r\n              color=\"primary\"\r\n              >check_circle</mat-icon\r\n            ><span>Success</span>\r\n          </div>\r\n        \r\n          </td>\r\n          </tr>\r\n          <tr>\r\n            <td class=\"mat-subtitle-2 text-dark\">\r\n              Timestamp :\r\n          </td>\r\n          <td class=\"mat-subtitle-2 text-grey-darken-6\">\r\n            <div\r\n            class=\"active-text flex align-center \"\r\n          >\r\n            <mat-icon\r\n              class=\"material-symbols-filled mr-2 text-grey-darken-6\"\r\n              >schedule</mat-icon\r\n            ><span> 55 mins ago (Jan 08, 2023 10:20:35 AM)</span>\r\n          </div>\r\n          </td>\r\n          </tr>\r\n          <tr>\r\n            <td class=\"mat-subtitle-2 text-dark\">\r\n              Payment Method :\r\n          </td>\r\n          <td class=\"mat-subtitle-2 text-grey-darken-6\">\r\n            <div\r\n            class=\"active-text flex align-center \"\r\n          >\r\n            <mat-icon\r\n              class=\"material-symbols-outlined mr-2 text-grey-darken-6\"\r\n              >credit_card</mat-icon\r\n            ><span>2341</span>\r\n          </div>\r\n          </td>\r\n          </tr>\r\n          <tr>\r\n            <td class=\"mat-subtitle-2 text-dark\">\r\n              Subscription :\r\n          </td>\r\n          <td class=\"mat-subtitle-2 text-grey-darken-6\">\r\n            cbdemo_non_renewing_sub.\r\n          </td>\r\n          </tr>\r\n          <tr>\r\n            <td class=\"mat-subtitle-2 text-dark\">\r\n              Invoice :\r\n          </td>\r\n          <td class=\"mat-subtitle-2 text-grey-darken-6\">\r\n            cbdemo_inv_003\r\n          </td>\r\n          </tr>\r\n          </table>\r\n    </div>\r\n</div>\r\n</div>\r\n"
        },
        {
            "name": "TypographyComponent",
            "id": "component-TypographyComponent-090a15a231d270147a0da75892eedfe19fcff8f063caa6a44c6e1995e60fbe9d1b5c95ae74a093ad7329222a2816dcaaaa2baaafa344daf36f84395342bca789",
            "file": "src/stories/softobiz-ui/Typography/typography.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-typography",
            "styleUrls": [
                "./typography.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./typography.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-typography',\r\n  templateUrl: './typography.component.html',\r\n  styleUrls: ['./typography.component.scss'],\r\n})\r\nexport class TypographyComponent {\r\n  /**\r\n   * Just put the classes inside tag and you will get the variant of typography.\r\n   */\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./typography.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p class=\"mat-headline-5 mt-3\">Roboto /headline &nbsp; &nbsp;  &nbsp; &nbsp;  24  &nbsp; &nbsp;  &nbsp; &nbsp;  Medium &nbsp; &nbsp;  &nbsp; &nbsp; It’s best to use good to know that</p>\r\n<p class=\"mat-subtitle-1 mt-3\">Roboto /Subheading   &nbsp; &nbsp;  &nbsp; &nbsp; 18   &nbsp; &nbsp;  &nbsp; &nbsp; Medium  &nbsp; &nbsp;  &nbsp; &nbsp; It’s best to use good to know that</p>\r\n<p class=\"mat-subtitle-2\">Roboto /headline   &nbsp; &nbsp;  &nbsp; &nbsp; 16  &nbsp; &nbsp;  &nbsp; &nbsp; Medium  &nbsp; &nbsp;  &nbsp; &nbsp; It’s best to use good to know that</p>\r\n<p class=\"mat-body-1 mt-3\">Roboto /headline   &nbsp; &nbsp;  &nbsp; &nbsp; 14   &nbsp; &nbsp;  &nbsp; &nbsp; Medium  &nbsp; &nbsp;  &nbsp; &nbsp; It’s best to use good to know that</p>\r\n<p class=\"mat-caption mt-3\">Roboto /headline   &nbsp; &nbsp;  &nbsp; &nbsp; 12   &nbsp; &nbsp;  &nbsp; &nbsp; Medium  &nbsp; &nbsp;  &nbsp; &nbsp; It’s best to use good to know that</p>"
        },
        {
            "name": "UploadLogoComponent",
            "id": "component-UploadLogoComponent-d4fc1b56577ccb81222ca3ba102e90f664c6d1488f7efd222afab18264104aee441669e86bd62c2044ed7575c03d25dd7d7b8fb72a7ab7a3c25762ad87bfc170",
            "file": "src/stories/softobiz-ui/uploadLogo/uploadLogo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-uploadLogo",
            "styleUrls": [
                "./uploadLogo.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./uploadLogo.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "withIcon",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-uploadLogo',\r\n  templateUrl: './uploadLogo.component.html',\r\n  styleUrls: ['./uploadLogo.component.scss']\r\n})\r\nexport class UploadLogoComponent {\r\n  \r\n  @Input() withIcon: boolean = false;\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./uploadLogo.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"image-upload-dialog\">\r\n  <h4 class=\"text-dark mat-subtitle-2 mb-2 font-weight-500\">Upload Logo</h4>\r\n  <p class=\"mat-caption grey-text text-darken-6\">\r\n    Allowed JPG, GIF or PNG. Max size of 800K\r\n  </p>\r\n  <div>\r\n    <input type=\"file\" name=\"logo\" id=\"logo\" accept=\"image/*\" (change)=\"handleFileInput($event)\" />\r\n    <label for=\"logo\" class=\"upload-field border-2 pointer\" id=\"file-label\"  (dragenter)=\"handleDragEnter()\"\r\n    (dragleave)=\"handleDragLeave()\"\r\n    (drop)=\"handleDrop($event)\">\r\n     <img \r\n        [src]=\"imageSrc\" \r\n        [class.loaded]=\"imageLoaded\"\r\n        (load)=\"handleImageLoad()\"\r\n        class=\"w-full\" />\r\n      <div class=\"file-thumbnail\" [style.display]=\"imageLoaded ? 'none' : 'block'\">\r\n        <mat-icon class=\"material-symbols-outlined m-0\">imagesmode</mat-icon>\r\n        <h3 id=\"filename\" class=\"mat-body-1 font-weight-500 text-text text-primary\">\r\n          <a href=\"\" class=\"mr-1 primary-text text-main text-underline\">Click here to upload</a\r\n          >or drag & drop\r\n        </h3>\r\n      </div>\r\n    </label>\r\n  </div>\r\n  <div class=\"action-btns flex align-center justify-end\">\r\n    <button mat-stroked-button color=\"primary\" class=\"mr-2\" mat-dialog-close (click)=\"cancel()\">Dismiss</button>\r\n    <button mat-flat-button color=\"primary\" class=\"\" mat-dialog-close (click)=\"handleSave()\" >Save</button>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ViewCouponsComponent",
            "id": "component-ViewCouponsComponent-bdc75da5c4e4173faa05551b7c9da2fa80314d84e76516573caeb6af31fdc11fddec013becd54ef4f2346726c3f138684f1c3c94ef1e04a8aadd8c54d132337b",
            "file": "src/app/modules/coupons/components/view-coupons/view-coupons.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-view-coupons",
            "styleUrls": [
                "./view-coupons.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./view-coupons.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "clickedRows",
                    "defaultValue": "new Set<DiscountElement>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "dataDuration",
                    "defaultValue": "Duration_DATA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "dataSource",
                    "defaultValue": "ELEMENT_DATA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "dataValidity",
                    "defaultValue": "Validity_DATA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['Discount', 'Amount']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "displayedColumns2",
                    "defaultValue": "['Duration','time']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "displayedColumns3",
                    "defaultValue": "['Validity','time']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 41
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\nexport interface DiscountElement {\r\n  Discount : string;\r\n  Amount: any;\r\n}\r\nexport interface DurationElement {\r\n  Duration : string;\r\n  time: any;\r\n}\r\n\r\nexport interface ValidityElement {\r\n  Validity : string;\r\n  time: any;\r\n}\r\n\r\nconst ELEMENT_DATA: DiscountElement[] = [\r\n  {  Discount : 'Discount Type', Amount: 'Fixed Amount' },\r\n  { Discount : 'Applied on', Amount: 'Fixed Amount' },\r\n  {  Discount : 'Discount Type', Amount: 'Invoice Amount' },\r\n];\r\n\r\nconst Duration_DATA: DurationElement[] = [\r\n  {  Duration : 'Discount Type', time: 'Forever' },\r\n  { Duration : 'Applied on', time: 'All Plans' },\r\n  {  Duration : 'Discount Type', time: 'All Addons' },\r\n];\r\n\r\nconst Validity_DATA: ValidityElement[] = [\r\n  {  Validity : 'Valid Till', time: 'Forever' },\r\n  { Validity : 'Maximum Redemptions', time: '0 to unlimited' },\r\n];\r\n@Component({\r\n  selector: 'app-view-coupons',\r\n  templateUrl: './view-coupons.component.html',\r\n  styleUrls: ['./view-coupons.component.scss']\r\n})\r\nexport class ViewCouponsComponent {\r\n  displayedColumns: string[] = ['Discount', 'Amount'];\r\n  displayedColumns2: string[] = ['Duration','time'];\r\n  displayedColumns3: string[] = ['Validity','time'];\r\n  dataSource = ELEMENT_DATA;\r\n  dataDuration = Duration_DATA;\r\n  dataValidity = Validity_DATA;\r\n  clickedRows = new Set<DiscountElement>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./view-coupons.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"view-plan-wrapper overflow-auto border-2 w-full h-full\">\r\n    <div class=\"header-block border-2\">\r\n      <h3 class=\"mat-headline-5 heading text-text text-primary\">View Coupon</h3>\r\n  \r\n      <div class=\"brand-info flex align-center justify-between\">\r\n        <div class=\"\">\r\n        <div class=\"flex align-center\">\r\n          <p class=\"mat-headline-5 text-text text-dark title mb-1\">INR 100 Off</p>\r\n          <div\r\n            class=\"active-text flex align-center green-text text-darken-3 ml-4\"\r\n          >\r\n            <mat-icon\r\n              class=\"material-symbols-outlined mr-1 green-text text-darken-3\"\r\n              color=\"primary\"\r\n              >check_circle</mat-icon\r\n            ><span>Active</span>\r\n          </div>\r\n        </div>\r\n        <span class=\"mat-subtitle-2 subtitle font-weight-500 block\">#S0-001</span>  \r\n        <span class=\"mat-subtitle-2 subtitle block\">Invoice Name : Discount</span>\r\n        </div>\r\n        <div class=\"btn-section flex align-center\">\r\n            <button mat-stroked-button color=\"primary\" class=\"mr-2 large\">\r\n              Edit\r\n            </button>\r\n            <button mat-flat-button color=\"primary\" class=\"large\">\r\n              Back to list\r\n            </button>\r\n          </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"inner-wrapper\">\r\n      <div class=\"flex mb-8\">\r\n        <div class=\"flex align-center pr-6 calendar-box\">\r\n          <mat-icon class=\"material-symbols-outlined mr-3 text-lighten-2\"\r\n            >calendar_today</mat-icon\r\n          >\r\n          <span class=\"mat-subtitle-2 text-dark\">Created 24 March, 2023</span>\r\n        </div>\r\n        <div class=\"flex align-center pl-6\">\r\n          <mat-icon class=\"material-symbols-outlined mr-3 text-lighten-2\"\r\n            >calendar_today</mat-icon\r\n          >\r\n          <span class=\"mat-subtitle-2 text-dark\">Created 24 March, 2023</span>\r\n        </div>\r\n      </div>\r\n      <div class=\"Plan-Description\">\r\n        <p class=\"mat-subtitle-2 text-text text-dark font-weight-500 mb-3\">\r\n            Description\r\n        </p>\r\n        <p class=\"mat-subtitle-2 text-dark\">\r\n            Rs. 100.00 for Forever get it today and enjoy it forever. \r\n        </p>\r\n      </div>\r\n      <div class=\"my-10\">\r\n        <div class=\"coupon-table-details mb-6\">\r\n          <table mat-table [dataSource]=\"dataSource\" class=\"primary-lighten-bg border-2 overflow-hidden py-4\">\r\n            <!-- Discount Column -->\r\n            <ng-container matColumnDef=\"Discount\">\r\n              <th\r\n                mat-header-cell\r\n                *matHeaderCellDef\r\n                class=\"mat-subtitle-2 text-text text-dark font-weight-500\"\r\n              >\r\n              Discount \r\n              </th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let element\"\r\n                class=\"mat-subtitle-2 text-headline-light\"\r\n              >\r\n                {{ element.Discount}}\r\n              </td>\r\n            </ng-container>\r\n  \r\n            <!-- Amount Column -->\r\n            <ng-container matColumnDef=\"Amount\">\r\n              <th\r\n                mat-header-cell\r\n                *matHeaderCellDef\r\n                class=\"mat-subtitle-2 text-headline-dark\"\r\n              >\r\n              </th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let element\"\r\n                class=\"mat-subtitle-2 text-dark\"\r\n              >\r\n                {{ element.Amount }}\r\n              </td>\r\n            </ng-container>\r\n  \r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr\r\n              mat-row\r\n              (click)=\"clickedRows.add(row)\"\r\n              [class.demo-row-is-clicked]=\"clickedRows.has(row)\"\r\n              *matRowDef=\"let row; columns: displayedColumns\"\r\n            ></tr>\r\n          </table>\r\n        </div>\r\n        <div class=\"coupon-table-details mb-6\">\r\n            <table mat-table [dataSource]=\"dataDuration\" class=\"primary-lighten-bg border-2 overflow-hidden py-4\">\r\n              <!-- Duration Column -->\r\n              <ng-container matColumnDef=\"Duration\">\r\n                <th\r\n                  mat-header-cell\r\n                  *matHeaderCellDef\r\n                  class=\"mat-subtitle-2 text-text text-dark font-weight-500\"\r\n                >\r\n                Duration \r\n                </th>\r\n                <td\r\n                  mat-cell\r\n                  *matCellDef=\"let element\"\r\n                  class=\"mat-subtitle-2 text-headline-light\"\r\n                >\r\n                  {{ element.Duration}}\r\n                </td>\r\n              </ng-container>\r\n    \r\n              <!-- time Column -->\r\n              <ng-container matColumnDef=\"time\">\r\n                <th\r\n                  mat-header-cell\r\n                  *matHeaderCellDef\r\n                  class=\"mat-subtitle-2 text-headline-dark\"\r\n                >\r\n                </th>\r\n                <td\r\n                  mat-cell\r\n                  *matCellDef=\"let element\"\r\n                  class=\"mat-subtitle-2 text-dark\"\r\n                >\r\n                  {{ element.time }}\r\n                </td>\r\n              </ng-container>\r\n    \r\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns2\"></tr>\r\n              <tr\r\n                mat-row\r\n                (click)=\"clickedRows.add(row)\"\r\n                [class.demo-row-is-clicked]=\"clickedRows.has(row)\"\r\n                *matRowDef=\"let row; columns: displayedColumns2\"\r\n              ></tr>\r\n            </table>\r\n          </div>\r\n          <div class=\"coupon-table-details mb-6\">\r\n            <table mat-table [dataSource]=\"dataValidity\" class=\"primary-lighten-bg border-2 overflow-hidden py-4\">\r\n              <!-- Validity Column -->\r\n              <ng-container matColumnDef=\"Validity\">\r\n                <th\r\n                  mat-header-cell\r\n                  *matHeaderCellDef\r\n                  class=\"mat-subtitle-2 text-text text-dark font-weight-500\"\r\n                >\r\n                Validity \r\n                </th>\r\n                <td\r\n                  mat-cell\r\n                  *matCellDef=\"let element\"\r\n                  class=\"mat-subtitle-2 text-headline-light\"\r\n                >\r\n                  {{ element.Validity}}\r\n                </td>\r\n              </ng-container>\r\n    \r\n              <!-- time Column -->\r\n              <ng-container matColumnDef=\"time\">\r\n                <th\r\n                  mat-header-cell\r\n                  *matHeaderCellDef\r\n                  class=\"mat-subtitle-2 text-headline-dark\"\r\n                >\r\n                </th>\r\n                <td\r\n                  mat-cell\r\n                  *matCellDef=\"let element\"\r\n                  class=\"mat-subtitle-2 text-dark\"\r\n                >\r\n                  {{ element.time }}\r\n                </td>\r\n              </ng-container>\r\n    \r\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns3\"></tr>\r\n              <tr\r\n                mat-row\r\n                (click)=\"clickedRows.add(row)\"\r\n                [class.demo-row-is-clicked]=\"clickedRows.has(row)\"\r\n                *matRowDef=\"let row; columns: displayedColumns3\"\r\n              ></tr>\r\n            </table>\r\n          </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n  "
        },
        {
            "name": "ViewFeatureComponent",
            "id": "component-ViewFeatureComponent-a954f7c4ecf737664cb8ffad1a680d5d30e0be32153a7a36554a0cf84b91128a3dcb71d85e7fa09bcbf24a0449484ee44a56179770eaabd9639acf00540bf3f9",
            "file": "src/app/modules/features/components/view-feature/view-feature.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-view-feature",
            "styleUrls": [
                "./view-feature.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./view-feature.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "clickedRows",
                    "defaultValue": "new Set<PeriodicElement>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "createdOn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "dataSource",
                    "defaultValue": "ELEMENT_DATA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['name', 'weight']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "displayName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "displayNameArray",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "environment",
                    "defaultValue": "environment",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "featureDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "featureId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "featureName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "featureType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "featureTypes",
                    "defaultValue": "FEATURE_TYPE",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "imagePath",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "imageUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "isUnlimited",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "level",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "levelsArray",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "modifiedOn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "productId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "productName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "productStatus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "unit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "valueArray",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "valueOne",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "valueTwo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 49
                }
            ],
            "methodsClass": [
                {
                    "name": "editFeature",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FeatureService } from '../../services/feature.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  weight: number;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  { name: 'Hydrogen', weight: 1.0079 },\r\n  { name: 'Helium', weight: 4.0026 },\r\n];\r\n\r\nconst FEATURE_TYPE = 'custom';\r\n\r\n@Component({\r\n  selector: 'app-view-feature',\r\n  templateUrl: './view-feature.component.html',\r\n  styleUrls: ['./view-feature.component.scss'],\r\n})\r\nexport class ViewFeatureComponent implements OnInit {\r\n  displayedColumns: string[] = ['name', 'weight'];\r\n  dataSource = ELEMENT_DATA;\r\n  featureTypes = FEATURE_TYPE;\r\n  clickedRows = new Set<PeriodicElement>();\r\n  featureDetails: any;\r\n  productName: string;\r\n  productStatus: string;\r\n  productId: string;\r\n  featureName: string;\r\n  featureType: string;\r\n  description: string;\r\n  unit: string;\r\n  status: string;\r\n  id: string;\r\n  levelsArray: any = [];\r\n  isUnlimited: string;\r\n  displayName: string;\r\n  displayNameArray: any = [];\r\n  valueArray: any = [];\r\n  level: number;\r\n  value: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  featureId: string;\r\n  valueOne: string;\r\n  valueTwo: string;\r\n  imageUrl: string;\r\n  imagePath: string;\r\n  environment = environment;\r\n\r\n  constructor(\r\n    private featureService: FeatureService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.id = this.route.snapshot.params['id'];\r\n    this.featureService.getFeatureById(this.id).subscribe((res) => {\r\n      this.featureDetails = res;\r\n      this.featureName = this.featureDetails?.name;\r\n      this.featureId = this.featureDetails?.featureId;\r\n      this.featureType = this.featureDetails?.type;\r\n      this.status = this.featureDetails?.status;\r\n      this.description = this.featureDetails?.description;\r\n      this.unit = this.featureDetails?.unit;\r\n      this.productId = this.featureDetails?.product.productId;\r\n      this.productName = this.featureDetails?.product.name;\r\n      this.imageUrl = this.featureDetails?.product.imageUrl;\r\n      this.imagePath = this.environment.blobStorage;\r\n      this.productStatus = this.featureDetails?.product.status;\r\n      this.createdOn = this.featureDetails?.createdOn;\r\n      this.modifiedOn = this.featureDetails?.modifiedOn;\r\n      this.levelsArray = Object.values(this.featureDetails?.levels);\r\n      this.levelsArray.forEach((data: any, index: number) => {\r\n        this.isUnlimited = data.isUnlimited;\r\n        this.displayName = data.name;\r\n        this.level = data.level;\r\n        this.value = data.value;\r\n        this.valueArray[index] = this.value;\r\n        this.valueOne = this.valueArray[0];\r\n        this.valueTwo = this.valueArray[1];\r\n        this.displayNameArray[index] = this.displayName;\r\n      });\r\n    });\r\n  }\r\n\r\n  editFeature() {\r\n    this.router.navigate([`/features/edit-feature/${this.id}`]);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./view-feature.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "featureService",
                        "type": "FeatureService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 52,
                "jsdoctags": [
                    {
                        "name": "featureService",
                        "type": "FeatureService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"view-feature-wrapper\">\r\n  <div class=\"header-block border-2\">\r\n    <h3 class=\"mat-headline-5 heading text-text text-primary\">View Feature</h3>\r\n    <div class=\"flex align-center justify-between\">\r\n      <div class=\"brand-info flex align-end\">\r\n        <div>\r\n          <div class=\"flex align-center\">\r\n            <p class=\"mat-headline-5 text-text text-dark title mb-1\">\r\n              {{ featureName }}\r\n            </p>\r\n            <div\r\n              class=\"active-text flex align-center green-text text-darken-3 ml-4\"\r\n            >\r\n              <mat-icon\r\n                class=\"material-symbols-outlined mr-1 green-text text-darken-3\"\r\n                color=\"primary\"\r\n                >check_circle</mat-icon\r\n              ><span>{{ status }}</span>\r\n            </div>\r\n          </div>\r\n          <span class=\"mat-subtitle-2 subtitle font-weight-500 block\">{{\r\n            featureId\r\n          }}</span>\r\n        </div>\r\n      </div>\r\n      <div class=\"btn-section flex align-center\">\r\n        <button\r\n          mat-stroked-button\r\n          color=\"primary\"\r\n          class=\"mr-2 large\"\r\n          (click)=\"editFeature()\"\r\n        >\r\n          Edit\r\n        </button>\r\n        <button\r\n          mat-flat-button\r\n          color=\"primary\"\r\n          class=\"large\"\r\n          [routerLink]=\"'/features'\"\r\n        >\r\n          Back to list\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"content-block p-6\">\r\n    <div class=\"date-block flex align-center mb-8\">\r\n      <div class=\"flex align-center\">\r\n        <mat-icon class=\"material-symbols-outlined mr-3\"\r\n          >calendar_today</mat-icon\r\n        >\r\n        <p class=\"mat-subtitle-2 text-dark\">\r\n          Created {{ createdOn | date : \"d MMMM y\" }}\r\n        </p>\r\n      </div>\r\n      <div class=\"vertical-divider mx-6\"></div>\r\n      <div class=\"flex align-center\">\r\n        <mat-icon class=\"material-symbols-outlined mr-3\"\r\n          >calendar_today</mat-icon\r\n        >\r\n        <p class=\"mat-subtitle-2 text-dark\">\r\n          modified {{ modifiedOn | date : \"d MMMM y\" }}\r\n        </p>\r\n      </div>\r\n    </div>\r\n    <div class=\"product-desc\">\r\n      <h4 class=\"mat-subtitle-2 font-weight-500 mb-4 text-headline-dark\">\r\n        Product\r\n      </h4>\r\n      <div class=\"brand-info flex align-start\">\r\n        <div\r\n          class=\"product-img mr-4 border-2\"\r\n          *ngIf=\"\r\n            featureDetails?.product.imageUrl &&\r\n              featureDetails?.product.imageUrl.length > 0;\r\n            else uploadImage\r\n          \"\r\n        >\r\n          <img src=\"{{ imagePath + imageUrl }}\" />\r\n        </div>\r\n        <ng-template #uploadImage>\r\n          <div class=\"product-img mr-4 border-2\">\r\n            <img\r\n              src=\"../.././../../assets/images/no-image.logo.jpg\"\r\n              alt=\"product-img\"\r\n            />\r\n          </div>\r\n        </ng-template>\r\n        <div>\r\n          <p\r\n            class=\"mat-subtitle-2 text-text text-dark title mb-1 font-weight-600\"\r\n          >\r\n            {{ productName }}\r\n          </p>\r\n          <span class=\"mat-body-1 subtitle font-weight-500 block\">{{\r\n            productId\r\n          }}</span>\r\n          <div\r\n            class=\"active-text flex align-center green-text text-darken-3 mt-1\"\r\n          >\r\n            <mat-icon\r\n              class=\"material-symbols-outlined mr-1 green-text text-darken-3\"\r\n              color=\"primary\"\r\n              >check_circle</mat-icon\r\n            ><span>{{ productStatus }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"feature-type mt-8\">\r\n      <h4 class=\"mat-subtitle-2 font-weight-500 mb-4 text-headline-dark\">\r\n        Feature Type\r\n      </h4>\r\n\r\n      <!-- -----------------------switch type-------------------- -->\r\n\r\n      <!-- ----------------range type--------------------------- -->\r\n      <div class=\"switch-type pt-4 border-2 flex align-center\">\r\n        <mat-icon\r\n          *ngIf=\"featureType === 'range'\"\r\n          class=\"material-symbols-outlined text-darken-3\"\r\n          >arrow_range</mat-icon\r\n        >\r\n\r\n        <img\r\n          *ngIf=\"featureType === 'switch'\"\r\n          src=\"../../../../assets/images/icons/toggle-left.svg\"\r\n          alt=\"toggle-left\"\r\n        />\r\n\r\n        <mat-icon\r\n          *ngIf=\"featureType === 'quantity' || featureType === 'custom'\"\r\n          class=\"material-symbols-outlined text-darken-3\"\r\n          >production_quantity_limits</mat-icon\r\n        >\r\n\r\n        <div>\r\n          <span class=\"mat-body-1 text-headline-light font-weight-500\">{{\r\n            (featureType === \"switch\" && \"Switch\") ||\r\n              (featureType === \"range\" && \"Range\") ||\r\n              (featureType === \"quantity\" && \"Quantity\") ||\r\n              (featureType === \"custom\" && \"Custom\")\r\n          }}</span>\r\n          <p class=\"mat-body-1 text-dark mt-2\">\r\n            {{\r\n              (featureType === \"switch\" &&\r\n                \"This feature type has 2 entitlement levels- “available” and “not\r\n              available”.\") ||\r\n                (featureType === \"range\" &&\r\n                  \"This feature supports range based entitlements.\r\n              For eg : Customer’s access can be between 100 and 300 API / minute.\") ||\r\n                (featureType === \"quantity\" &&\r\n                  \"This feature type has numbered entitlement levels-\r\n                For eg : 2,3,4 or 10 user license's.\") ||\r\n                (featureType === \"custom\" &&\r\n                  \"This feature supports range based entitlements. For eg : Customer’s\r\n                  access can be between 100 and 300 API / minute.\")\r\n            }}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <!-- ----------------range type--------------------------- -->\r\n    </div>\r\n\r\n    <!-- ----------------range detail--------------------------- -->\r\n    <div *ngIf=\"featureType === 'range'\" class=\"mt-8 range-detail-wrapper\">\r\n      <h4 class=\"mat-subtitle-2 font-weight-500 mb-4 text-headline-dark\">\r\n        Range Details\r\n      </h4>\r\n      <div class=\"range-detail py-2 px-3 border-2 mb-4\">\r\n        <p class=\"mat-body-1 text-headline-dark\">Entitlements Units</p>\r\n        <span class=\"mat-body-1 font-weight-500 text-primary\">{{ unit }}</span>\r\n      </div>\r\n      <div class=\"detail-info border-2\">\r\n        <table class=\"w-full odd-bg-color\">\r\n          <th class=\"font-weight-500 text-darken-1\">Entitlement Range</th>\r\n          <th class=\"font-weight-500 text-darken-1\">Display Name</th>\r\n          <tr class=\"text-headline-light\">\r\n            <td>{{ valueOne }} to {{ valueTwo }}</td>\r\n            <td class=\"range-td\">Range</td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <!-- ----------------range detail--------------------------- -->\r\n\r\n    <!-- ----------------quantity and custom details--------------------------- -->\r\n    <div *ngIf=\"featureType === 'quantity'\" class=\"mt-8 range-detail-wrapper\">\r\n      <h4 class=\"mat-subtitle-2 font-weight-500 mb-4 text-headline-dark\">\r\n        Quantity Details\r\n      </h4>\r\n      <div class=\"range-detail py-2 px-3 border-2 mb-4\">\r\n        <p class=\"mat-body-1 text-headline-dark\">Entitlements Units</p>\r\n        <span class=\"mat-body-1 font-weight-500 text-primary\">{{ unit }}</span>\r\n      </div>\r\n      <div class=\"detail-info border-2\">\r\n        <table class=\"w-full odd-bg-color\">\r\n          <th class=\"font-weight-500 text-darken-1\">Entitlement Levels</th>\r\n          <tr\r\n            class=\"text-headline-light\"\r\n            *ngFor=\"let displayName of displayNameArray\"\r\n          >\r\n            <td>{{ displayName }}</td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"featureType === 'custom'\" class=\"mt-8 range-detail-wrapper\">\r\n      <h4 class=\"mat-subtitle-2 font-weight-500 mb-4 text-headline-dark\">\r\n        Quantity Details\r\n      </h4>\r\n      <div class=\"detail-info border-2\">\r\n        <table class=\"w-full odd-bg-color\">\r\n          <th class=\"font-weight-500 text-darken-1\">Entitlement Levels</th>\r\n          <tr\r\n            class=\"text-headline-light\"\r\n            *ngFor=\"let displayName of displayNameArray\"\r\n          >\r\n            <td>{{ displayName }}</td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <!-- ----------------quantity details--------------------------- -->\r\n\r\n    <!-- ----------------range type--------------------------- -->\r\n\r\n    <div class=\"product-desc mt-8\">\r\n      <h4 class=\"mat-subtitle-2 font-weight-500 mb-4 text-headline-dark\">\r\n        Description\r\n      </h4>\r\n      <p class=\"mat-body-1\">\r\n        {{ description }}\r\n      </p>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ViewPlansComponent",
            "id": "component-ViewPlansComponent-e2b854e73187fbc5e90d430a7df8000997f191d8aaf88750a4c212dfff3fe16d5a172afd1854a36c1026b4f716df17c2d05362674e33e1c0311b7b2b1604fd11",
            "file": "src/app/modules/plans/components/view-plans/view-plans.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-view-plans",
            "styleUrls": [
                "./view-plans.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./view-plans.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "clickedRows",
                    "defaultValue": "new Set<PeriodicElement>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "dataSource",
                    "defaultValue": "ELEMENT_DATA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['Currency', 'PricingCycle', 'Price']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "panelOpenState",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "toggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\nexport interface PeriodicElement {\r\n  PricingCycle: string;\r\n  Price: any;\r\n  Currency: any;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  { Currency: '', PricingCycle: 'Daily', Price: '$100/Unit' },\r\n  { Currency: '', PricingCycle: 'Weekly', Price: '$100/Unit' },\r\n  { Currency: '', PricingCycle: 'Monthly', Price: '$100/Unit' },\r\n  { Currency: '', PricingCycle: 'Yearly', Price: '$100/Unit' },\r\n];\r\n\r\n@Component({\r\n  selector: 'app-view-plans',\r\n  templateUrl: './view-plans.component.html',\r\n  styleUrls: ['./view-plans.component.scss'],\r\n})\r\nexport class ViewPlansComponent {\r\n  displayedColumns: string[] = ['Currency', 'PricingCycle', 'Price'];\r\n  dataSource = ELEMENT_DATA;\r\n  clickedRows = new Set<PeriodicElement>();\r\n  panelOpenState = false;\r\n  toggle() {\r\n    this.panelOpenState = !this.panelOpenState;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./view-plans.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"view-plan-wrapper overflow-auto border-2 w-full h-full\">\r\n  <div class=\"header-block border-2\">\r\n    <h3 class=\"mat-headline-5 heading text-text text-primary\">View Plan</h3>\r\n\r\n    <div class=\"brand-info\">\r\n      <div class=\"flex align-center\">\r\n        <p class=\"mat-headline-5 text-text text-dark title mb-1\">Premium</p>\r\n        <div\r\n          class=\"active-text flex align-center green-text text-darken-3 ml-4\"\r\n        >\r\n          <mat-icon\r\n            class=\"material-symbols-outlined mr-1 green-text text-darken-3\"\r\n            color=\"primary\"\r\n            >check_circle</mat-icon\r\n          ><span>Active</span>\r\n        </div>\r\n      </div>\r\n      <span class=\"mat-subtitle-2 subtitle font-weight-500 block\"\r\n        >#AS- 012P</span\r\n      >\r\n    </div>\r\n    <div class=\"flex align-center justify-between mt-8\">\r\n      <div class=\"flex\">\r\n        <div class=\"pricing-box\">\r\n          <span class=\"mat-subtitle-2 text-headline-light\">Pricing Model</span>\r\n          <span class=\"block mat-subtitle-2 text-headline-dark font-weight-500\"\r\n            >Tiered</span\r\n          >\r\n        </div>\r\n        <div class=\"pricing-box\">\r\n          <span class=\"mat-subtitle-2 text-headline-light\">Billing Cycle</span>\r\n          <span class=\"block mat-subtitle-2 text-headline-dark font-weight-500\"\r\n            >Fixed</span\r\n          >\r\n        </div>\r\n        <div class=\"pricing-box\">\r\n          <span class=\"mat-subtitle-2 text-headline-light\">Setup Fee</span>\r\n          <span class=\"block mat-subtitle-2 text-headline-dark font-weight-500\"\r\n            >INR. 0.00</span\r\n          >\r\n        </div>\r\n        <div class=\"pricing-box\">\r\n          <span class=\"mat-subtitle-2 text-headline-light\">Activation Fee</span>\r\n          <span class=\"block mat-subtitle-2 text-headline-dark font-weight-500\"\r\n            >INR. 0.00</span\r\n          >\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"btn-section flex align-center\">\r\n        <button mat-stroked-button color=\"primary\" class=\"mr-2 large\">\r\n          Edit\r\n        </button>\r\n        <button mat-flat-button color=\"primary\" class=\"large\">\r\n          Back to list\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"inner-wrapper\">\r\n    <div class=\"flex mb-8\">\r\n      <div class=\"flex align-center pr-6 calendar-box\">\r\n        <mat-icon class=\"material-symbols-outlined mr-3 text-lighten-2\"\r\n          >calendar_today</mat-icon\r\n        >\r\n        <span class=\"mat-subtitle-2 text-dark\">Created 24 March, 2023</span>\r\n      </div>\r\n      <div class=\"flex align-center pl-6\">\r\n        <mat-icon class=\"material-symbols-outlined mr-3 text-lighten-2\"\r\n          >calendar_today</mat-icon\r\n        >\r\n        <span class=\"mat-subtitle-2 text-dark\">Created 24 March, 2023</span>\r\n      </div>\r\n    </div>\r\n    <div class=\"Plan-Description\">\r\n      <p class=\"mat-subtitle-2 text-headline-dark font-weight-500 mb-3\">\r\n        Plan Description\r\n      </p>\r\n      <p class=\"mat-subtitle-2 text-dark\">\r\n        Smart plan with the right mix of basic and slightly advanced tools to\r\n        help you with all marketing and sales requirements.\r\n      </p>\r\n    </div>\r\n    <div class=\"my-10\">\r\n      <h6 class=\"mat-subtitle-2 text-headline-dark font-weight-500\">\r\n        Pricing Details\r\n      </h6>\r\n      <div class=\"table-priceing-details\">\r\n        <table mat-table [dataSource]=\"dataSource\">\r\n          <!-- Currency Column -->\r\n          <ng-container matColumnDef=\"Currency\">\r\n            <th\r\n              mat-header-cell\r\n              *matHeaderCellDef\r\n              class=\"mat-subtitle-2 text-headline-dark action-header\"\r\n            >\r\n              Currency\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n              <div class=\"flex\">\r\n                <div class=\"flags mr-3\">\r\n                  <img\r\n                    src=\"../../../../../../assets/images/flags.png\"\r\n                    alt=\"flags\"\r\n                  />\r\n                </div>\r\n                <span class=\"mat-subtitle-2 text-headline-dark\">USD</span>\r\n              </div>\r\n            </td>\r\n          </ng-container>\r\n          <!-- PricingCycle Column -->\r\n          <ng-container matColumnDef=\"PricingCycle\">\r\n            <th\r\n              mat-header-cell\r\n              *matHeaderCellDef\r\n              class=\"mat-subtitle-2 text-headline-dark\"\r\n            >\r\n              Pricing Cycle\r\n            </th>\r\n            <td\r\n              mat-cell\r\n              *matCellDef=\"let element\"\r\n              class=\"mat-subtitle-2 text-headline-light\"\r\n            >\r\n              {{ element.PricingCycle }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <!-- Price Column -->\r\n          <ng-container matColumnDef=\"Price\">\r\n            <th\r\n              mat-header-cell\r\n              *matHeaderCellDef\r\n              class=\"mat-subtitle-2 text-headline-dark\"\r\n            >\r\n              Price\r\n            </th>\r\n            <td\r\n              mat-cell\r\n              *matCellDef=\"let element\"\r\n              class=\"mat-subtitle-2 text-headline-light\"\r\n            >\r\n              {{ element.Price }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr\r\n            mat-row\r\n            (click)=\"clickedRows.add(row)\"\r\n            [class.demo-row-is-clicked]=\"clickedRows.has(row)\"\r\n            *matRowDef=\"let row; columns: displayedColumns\"\r\n          ></tr>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div class=\"product-wrapper\">\r\n      <div class=\"product-inner mb-4\">\r\n        <h2 class=\"mat-subtitle-2 text-headline-dark font-weight-500 mb-4\">\r\n          Associated Product\r\n        </h2>\r\n        <div class=\"product-box mb-4 flex\">\r\n          <div class=\"product-img p-2 mr-4\">\r\n            <img\r\n              src=\"../.././../../assets/images/teams.png\"\r\n              alt=\"product-img\"\r\n            />\r\n          </div>\r\n          <div class=\"\">\r\n            <mat-accordion class=\"product-info\">\r\n              <mat-expansion-panel\r\n                hideToggle\r\n                #panelH\r\n                (click)=\"panelH.toggle()\"\r\n              >\r\n                <mat-expansion-panel-header>\r\n                  <mat-panel-title>\r\n                    <h6\r\n                      class=\"mat-subtitle-2 text-headline-light font-weight-500 mb-1\"\r\n                    >\r\n                      MS Teams\r\n                    </h6>\r\n                  </mat-panel-title>\r\n                  <mat-panel-description>\r\n                    <p class=\"mat-subtitle-2 text-dark\">\r\n                      Microsoft Teams is a proprietary business communication\r\n                      platform developed by Microsoft, as part of the Microsoft\r\n                      365 family of products. Teams primarily competes with the\r\n                      similar service Slack, offering workspace chat and\r\n                      videoconferencing, file storage, and application\r\n                      integration.\r\n                      <button\r\n                        mat-button\r\n                        disableRipple\r\n                        class=\"link-text\"\r\n                        (click)=\"panelH.toggle()\"\r\n                      >\r\n                        Explore features\r\n                      </button>\r\n                    </p>\r\n                  </mat-panel-description>\r\n                </mat-expansion-panel-header>\r\n                <h6 class=\"mat-subtitle-2 text-headline-light my-2\">\r\n                  Assigned features to product\r\n                </h6>\r\n                <ul class=\"green-dot\">\r\n                  <li class=\"mat-subtitle-2 text-dark\">\r\n                    <span class=\"ml-n-1\">Whiteboard</span\r\n                    ><span class=\"text-lighten-4 ml-1\"\r\n                      >(Switch\r\n                      <span class=\"text-headline-light\">ON</span> )</span\r\n                    >\r\n                  </li>\r\n                  <li class=\"mat-subtitle-2 text-dark\">\r\n                    <span class=\"ml-n-1\">Email Support</span\r\n                    ><span class=\"text-lighten-4 ml-1\"\r\n                      >(Custom\r\n                      <span class=\"text-headline-light\">All Week</span> )</span\r\n                    >\r\n                  </li>\r\n                  <li class=\"mat-subtitle-2 text-dark\">\r\n                    <span class=\"ml-n-1\">User License</span\r\n                    ><span class=\"text-lighten-4 ml-1\"\r\n                      >(Quantity 10\r\n                      <span class=\"text-headline-light\">License</span> )</span\r\n                    >\r\n                  </li>\r\n                </ul>\r\n              </mat-expansion-panel>\r\n            </mat-accordion>\r\n          </div>\r\n        </div>\r\n        <div class=\"product-box mb-4 flex\">\r\n          <div class=\"product-img p-2 mr-4\">\r\n            <img\r\n              src=\"../.././../../assets/images/excel.png\"\r\n              alt=\"product-img\"\r\n            />\r\n          </div>\r\n          <div class=\"\">\r\n            <mat-accordion class=\"product-info\">\r\n              <mat-expansion-panel hideToggle #panelH (click)=\"panelH.toggle()\">\r\n                <mat-expansion-panel-header>\r\n                  <mat-panel-title>\r\n                    <h6\r\n                      class=\"mat-subtitle-2 text-headline-light font-weight-500 mb-1\"\r\n                    >\r\n                      MS Excel\r\n                    </h6>\r\n                  </mat-panel-title>\r\n                  <mat-panel-description>\r\n                    <p class=\"mat-subtitle-2 text-dark\">\r\n                      MS Excel is a powerful spreadsheet program included mainly\r\n                      used to record data in tables. as part of the Microsoft\r\n                      365 family of products. Teams primarily competes with the\r\n                      similar service Slack, offering workspace chat and\r\n                      videoconferencing, file storage, and application\r\n                      integration.\r\n                      <button\r\n                        mat-button\r\n                        disableRipple\r\n                        class=\"link-text\"\r\n                        (click)=\"panelH.toggle()\"\r\n                      >\r\n                        Explore features\r\n                      </button>\r\n                    </p>\r\n                  </mat-panel-description>\r\n                </mat-expansion-panel-header>\r\n                <h6 class=\"mat-subtitle-2 text-headline-light my-2\">\r\n                  Assigned features to product\r\n                </h6>\r\n                <ul class=\"green-dot\">\r\n                  <li class=\"mat-subtitle-2 text-dark\">\r\n                    <span class=\"ml-n-1\">Data Base</span\r\n                    ><span class=\"text-lighten-4 ml-1\"\r\n                      >(Range\r\n                      <span class=\"text-headline-light\">1-50</span> )</span\r\n                    >\r\n                  </li>\r\n                  <li class=\"mat-subtitle-2 text-dark\">\r\n                    <span class=\"ml-n-1\">Data clearly</span\r\n                    ><span class=\"text-lighten-4 ml-1\"\r\n                      >(Volume\r\n                      <span class=\"text-headline-light\">50-100</span> )</span\r\n                    >\r\n                  </li>\r\n                  <li class=\"mat-subtitle-2 text-dark\">\r\n                    <span class=\"ml-n-1\">Data merger</span\r\n                    ><span class=\"text-lighten-4 ml-1\"\r\n                      >(Switch\r\n                      <span class=\"text-headline-light\">ON</span> )</span\r\n                    >\r\n                  </li>\r\n                </ul>\r\n              </mat-expansion-panel>\r\n            </mat-accordion>\r\n          </div>\r\n        </div>\r\n        <div class=\"product-box mb-4 flex\">\r\n          <div class=\"product-img p-2 mr-4\">\r\n            <img src=\"../.././../../assets/images/word.png\" alt=\"product-img\" />\r\n          </div>\r\n          <div class=\"\">\r\n            <mat-accordion class=\"product-info\">\r\n              <mat-expansion-panel hideToggle #panelH (click)=\"panelH.toggle()\">\r\n                <mat-expansion-panel-header>\r\n                  <mat-panel-title>\r\n                    <h6\r\n                      class=\"mat-subtitle-2 text-headline-light font-weight-500 mb-1\"\r\n                    >\r\n                      MS Word\r\n                    </h6>\r\n                  </mat-panel-title>\r\n                  <mat-panel-description>\r\n                    <p class=\"mat-subtitle-2 text-dark\">\r\n                      Microsoft Word is a word processing program that allows\r\n                      for the creation of both simple and complex documents. 365\r\n                      family of products. Teams primarily competes with the\r\n                      similar service Slack, offering workspace chat and\r\n                      videoconferencing, file storage, and application\r\n                      integration.\r\n                      <button\r\n                        mat-button\r\n                        disableRipple\r\n                        class=\"link-text\"\r\n                        (click)=\"panelH.toggle()\"\r\n                      >\r\n                        Explore features\r\n                      </button>\r\n                    </p>\r\n                  </mat-panel-description>\r\n                </mat-expansion-panel-header>\r\n                <h6 class=\"mat-subtitle-2 text-headline-light my-2\">\r\n                  Assigned features to product\r\n                </h6>\r\n                <ul class=\"green-dot\">\r\n                  <li class=\"mat-subtitle-2 text-dark\">\r\n                    <span class=\"ml-n-1\">Create team sites</span\r\n                    ><span class=\"text-lighten-4 ml-1\"\r\n                      >(Range\r\n                      <span class=\"text-headline-light\">1-50</span> )</span\r\n                    >\r\n                  </li>\r\n                  <li class=\"mat-subtitle-2 text-dark\">\r\n                    <span class=\"ml-n-1\">Huge Files</span\r\n                    ><span class=\"text-lighten-4 ml-1\"\r\n                      >(Volume\r\n                      <span class=\"text-headline-light\">50-100</span> )</span\r\n                    >\r\n                  </li>\r\n                  <li class=\"mat-subtitle-2 text-dark\">\r\n                    <span class=\"ml-n-1\">Mail Merge</span\r\n                    ><span class=\"text-lighten-4 ml-1\"\r\n                      >(Switch\r\n                      <span class=\"text-headline-light\">ON</span> )</span\r\n                    >\r\n                  </li>\r\n                </ul>\r\n              </mat-expansion-panel>\r\n            </mat-accordion>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"addon-wrapper mt-8\">\r\n      <div class=\"product-inner mb-4\">\r\n        <h2 class=\"mat-subtitle-2 text-headline-dark font-weight-500 mb-4\">\r\n          Associated Addon\r\n        </h2>\r\n        <div class=\"product-box mb-4 flex\">\r\n          <div class=\"\">\r\n            <mat-accordion class=\"product-info\">\r\n              <mat-expansion-panel hideToggle #panelH (click)=\"panelH.toggle()\">\r\n                <mat-expansion-panel-header>\r\n                  <mat-panel-title>\r\n                    <h6\r\n                      class=\"mat-subtitle-2 text-headline-light font-weight-500 mb-1 mr-5\"\r\n                    >\r\n                      Teamwork and communication\r\n                    </h6>\r\n                    <mat-chip class=\"success-chip mb-1\" color=\"success\">\r\n                      <span class=\"mat-caption\">$100.00 USD</span>\r\n                    </mat-chip>\r\n                  </mat-panel-title>\r\n                  <mat-panel-description>\r\n                    <p class=\"mat-subtitle-2 text-dark\">\r\n                      We have 3 features which are clubbed in this addon.\r\n                      <button\r\n                        mat-button\r\n                        disableRipple\r\n                        class=\"link-text\"\r\n                        (click)=\"panelH.toggle()\"\r\n                      >\r\n                        Explore features\r\n                      </button>\r\n                    </p>\r\n                  </mat-panel-description>\r\n                </mat-expansion-panel-header>\r\n                <h6 class=\"mat-subtitle-2 text-headline-light my-2\">\r\n                  Assigned features to product\r\n                </h6>\r\n                <ul class=\"green-dot\">\r\n                  <li class=\"mat-subtitle-2 text-dark\">\r\n                    <span class=\"ml-n-1\">Host online calls</span\r\n                    ><span class=\"text-lighten-4 ml-1\"\r\n                      >(Switch\r\n                      <span class=\"text-headline-light\">ON</span> )</span\r\n                    >\r\n                  </li>\r\n                  <li class=\"mat-subtitle-2 text-dark\">\r\n                    <span class=\"ml-n-1\">Host webinars</span\r\n                    ><span class=\"text-lighten-4 ml-1\"\r\n                      >(Volume\r\n                      <span class=\"text-headline-light\">51</span> )</span\r\n                    >\r\n                  </li>\r\n                  <li class=\"mat-subtitle-2 text-dark\">\r\n                    <span class=\"ml-n-1\">Create team sites</span\r\n                    ><span class=\"text-lighten-4 ml-1\"\r\n                      >(Range\r\n                      <span class=\"text-headline-light\">1-50</span> )</span\r\n                    >\r\n                  </li>\r\n                </ul>\r\n              </mat-expansion-panel>\r\n            </mat-accordion>\r\n          </div>\r\n        </div>\r\n        <div class=\"product-box mb-4 flex\">\r\n          <div class=\"\">\r\n            <mat-accordion class=\"product-info\">\r\n              <mat-expansion-panel hideToggle #panelH (click)=\"panelH.toggle()\">\r\n                <mat-expansion-panel-header>\r\n                  <mat-panel-title>\r\n                    <h6\r\n                      class=\"mat-subtitle-2 text-headline-light font-weight-500 mb-1 mr-5\"\r\n                    >\r\n                      Security and compliance\r\n                    </h6>\r\n                    <mat-chip class=\"success-chip mb-1\" color=\"success\">\r\n                      <span class=\"mat-caption\">$100.00 USD</span>\r\n                    </mat-chip>\r\n                  </mat-panel-title>\r\n                  <mat-panel-description>\r\n                    <p class=\"mat-subtitle-2 text-dark\">\r\n                      We have 3 features which are clubbed in this addon.\r\n                      <button\r\n                        mat-button\r\n                        disableRipple\r\n                        class=\"link-text\"\r\n                        (click)=\"panelH.toggle()\"\r\n                      >\r\n                        Explore features\r\n                      </button>\r\n                    </p>\r\n                  </mat-panel-description>\r\n                </mat-expansion-panel-header>\r\n                <h6 class=\"mat-subtitle-2 text-headline-light my-2\">\r\n                  Assigned features to product\r\n                </h6>\r\n                <ul class=\"green-dot\">\r\n                  <li class=\"mat-subtitle-2 text-dark\">\r\n                    <span class=\"ml-n-1\">Online Protection</span\r\n                    ><span class=\"text-lighten-4 ml-1\"\r\n                      >(Switch\r\n                      <span class=\"text-headline-light\">ON</span> )</span\r\n                    >\r\n                  </li>\r\n                  <li class=\"mat-subtitle-2 text-dark\">\r\n                    <span class=\"ml-n-1\">Password policies</span\r\n                    ><span class=\"text-lighten-4 ml-1\"\r\n                      >(Volume\r\n                      <span class=\"text-headline-light\">51</span> )</span\r\n                    >\r\n                  </li>\r\n                  <li class=\"mat-subtitle-2 text-dark\">\r\n                    <span class=\"ml-n-1\">Defender for business</span\r\n                    ><span class=\"text-lighten-4 ml-1\"\r\n                      >(Range\r\n                      <span class=\"text-headline-light\">1-50</span> )</span\r\n                    >\r\n                  </li>\r\n                </ul>\r\n              </mat-expansion-panel>\r\n            </mat-accordion>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ViewProductComponent",
            "id": "component-ViewProductComponent-1531b5f4cbc834dc7e40fe15c4009cb8123f4dd9c6531f23ab0a40909039a7fe2fa786d855998dd7c42c6043e272a67d350289d3f614ca96b685d977d78179f6",
            "file": "src/app/modules/products/components/view-product/view-product.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-view-product",
            "styleUrls": [
                "./view-product.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./view-product.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "createdOn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "environment",
                    "defaultValue": "environment",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "feature",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "imageName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "imagePath",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "imageUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "modifiedOn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "product$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "productDetail",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "productId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteElementById",
                    "args": [
                        {
                            "name": "elementId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "elementId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteSuccess",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "navigateToFeatures",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openDelete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { ProductsService } from '../../services/products.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { FeatureService } from 'src/app/modules/features/services/feature.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { CouponsDeleteSuccessComponent } from 'src/app/shared/components/dialog-box/coupons-delete-success/coupons-delete-success.component';\r\nimport { DeleteConfirmationComponent } from 'src/app/shared/components/dialog-box/delete-confirmation/delete-confirmation.component';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n@Component({\r\n  selector: 'app-view-product',\r\n  templateUrl: './view-product.component.html',\r\n  styleUrls: ['./view-product.component.scss'],\r\n})\r\nexport class ViewProductComponent {\r\n  product$: Observable<any>;\r\n  subscription: Subscription;\r\n  productDetail: any;\r\n  productId: string;\r\n  name: string;\r\n  dialogRef: any;\r\n  description: string;\r\n  modifiedOn: string;\r\n  createdOn: string;\r\n  status: string;\r\n  environment = environment;\r\n  imageUrl: string;\r\n  imagePath: string;\r\n  imageName: string;\r\n  feature: any;\r\n  id: string;\r\n  \r\n  constructor(\r\n    private productService: ProductsService,\r\n    private featureService: FeatureService,\r\n    private route: ActivatedRoute,\r\n    public dialog: MatDialog,\r\n    private router: Router,\r\n    private snackBar: MatSnackBar,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.id = this.route.snapshot.params['id'];\r\n    this.productService.getProductById(this.id).subscribe((res) => {\r\n      this.productDetail = res;\r\n      this.productId = this.productDetail?.productId;\r\n      this.name = this.productDetail?.name;\r\n      this.description = this.productDetail?.description;\r\n      this.createdOn = this.productDetail?.createdOn;\r\n      this.modifiedOn = this.productDetail?.modifiedOn;\r\n      this.status = this.productDetail?.status;\r\n      (this.imageUrl = this.productDetail?.imageUrl),\r\n        (this.imageName = this.imageUrl?.substring(\r\n          this.imageUrl.lastIndexOf('/') + 1\r\n        ));\r\n      this.imagePath = this.environment.blobStorage;\r\n      this.feature = this.productDetail?.feature || [];\r\n    });\r\n  }\r\n\r\n  navigateToFeatures() {\r\n    this.router.navigate(['/features/create/products/', this.id]);\r\n  }\r\n  \r\n  deleteElementById(elementId: number) {\r\n    this.featureService.deleteFeature(elementId).subscribe({\r\n      next: (res) => {\r\n        this.deleteSuccess(elementId);\r\n      },\r\n      error: (error: any) => {\r\n        this.snackBar.open(error.error.message, '', {\r\n          duration: 5000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        })\r\n      },\r\n    });\r\n  }\r\n\r\n  deleteSuccess(id: any) {\r\n    const dialogRef = this.dialog.open(CouponsDeleteSuccessComponent, {\r\n      width: '422px',\r\n      panelClass: 'dialog-curved',\r\n      data: {\r\n        module: 'Feature',\r\n        deleteId: id,\r\n      },\r\n    });\r\n    this.router.navigate(['/features']);\r\n  }\r\n\r\n  openDelete(id: any) {\r\n    this.dialogRef = this.dialog.open(DeleteConfirmationComponent, {\r\n      width: '420px',\r\n      panelClass: 'dialog-curved',\r\n      data: {\r\n        module: 'Feature',\r\n        deleteId: id,\r\n      },\r\n    });\r\n\r\n    this.dialogRef.afterClosed().subscribe((res) => {\r\n      if (res) {\r\n        this.deleteElementById(id);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./view-product.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "featureService",
                        "type": "FeatureService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 32,
                "jsdoctags": [
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "featureService",
                        "type": "FeatureService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"view-product-wrapper\">\r\n  <div class=\"header-block border-2\">\r\n    <h3 class=\"mat-headline-5 heading text-text text-primary\">View Product</h3>\r\n    <div class=\"flex align-center justify-between\">\r\n      <div class=\"brand-info flex align-end\">\r\n        <div class=\"product-img mr-4 border-2\" *ngIf=\"productDetail?.imageUrl && productDetail.imageUrl.length > 0;else uploadImage\" >\r\n          <img src=\"{{ imagePath + imageUrl }}\" alt=\"{{imageName}}\" />\r\n        </div>\r\n        <ng-template #uploadImage>\r\n          <div class=\"product-img mr-4 border-2\">\r\n           <img src=\"../.././../../assets/images/no-image.logo.jpg\" alt=\"product-img\" />\r\n        </div>\r\n        </ng-template>\r\n        <div>\r\n          <div class=\"flex align-center\">\r\n            <p class=\"mat-headline-5 text-text text-dark title mb-1\">\r\n              {{name}}\r\n            </p>\r\n            <div\r\n              class=\"active-text flex align-center green-text text-darken-3 ml-4\"\r\n            >\r\n              <mat-icon\r\n                class=\"material-symbols-outlined mr-1 green-text text-darken-3\"\r\n                color=\"primary\"\r\n                >check_circle</mat-icon\r\n              ><span>{{status}}</span>\r\n            </div>\r\n          </div>\r\n          <span class=\"mat-subtitle-2 subtitle font-weight-500 block\"\r\n            >{{productId}}</span\r\n          >\r\n        </div>\r\n      </div>\r\n      <div class=\"btn-section flex align-center\">\r\n        <button mat-stroked-button color=\"primary\" class=\"mr-2 large\" [routerLink]=\"['/products/edit-product/'+productId]\" >\r\n          Edit\r\n        </button>\r\n        <button mat-flat-button color=\"primary\" class=\"large\" [routerLink]=\"['/products']\">\r\n          Back to list\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"content-block p-6\">\r\n    <div class=\"date-block flex align-center mb-8\">\r\n      <div class=\"flex align-center\">\r\n        <mat-icon class=\"material-symbols-outlined mr-3\"\r\n          >calendar_today</mat-icon\r\n        >\r\n         <p class=\"mat-subtitle-2 text-dark\">Created {{createdOn | date: 'd MMMM y'}}</p> \r\n      </div>\r\n      <div class=\"vertical-divider mx-6\"></div>\r\n      <div class=\"flex align-center\">\r\n        <mat-icon class=\"material-symbols-outlined mr-3\"\r\n          >calendar_today</mat-icon\r\n        >\r\n       <p class=\"mat-subtitle-2 text-dark\"> modified {{modifiedOn | date: 'd MMMM y'}}</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"product-desc\">\r\n      <h4 class=\"mat-subtitle-2 font-weight-500 mb-4\">Description</h4>\r\n      <p class=\"mat-subtitle-2\">\r\n        {{description}}\r\n      </p>\r\n    </div>\r\n    <div class=\"product-features mt-8\">\r\n      <div class=\"flex align-center justify-between\">\r\n        <h4 class=\"mat-subtitle-2 font-weight-500 mb-4\">Features</h4>\r\n        <!-- below button will show only when added a feature  -->\r\n        <button mat-button color=\"primary\" (click)=\"navigateToFeatures()\">Create feature</button>\r\n      </div>\r\n      <!-- with feature added -->\r\n      <div class=\"features-wrapper\">\r\n       <div *ngIf=\"productDetail?.feature && productDetail.feature.length > 0; else noFeaturesBlock\">\r\n        <div class=\"feature-item flex border-2\" *ngFor=\"let feature of productDetail.feature; let i = index\">\r\n          <div\r\n            class=\"feature-logo border-2 flex-center font-weight-500 primary-text text-main\"\r\n          >\r\n            <span>{{ feature.featureId}}</span>\r\n          </div>\r\n          <div class=\"details ml-8\">\r\n            <div class=\"flex align-center mb-2\">\r\n              <span\r\n                class=\"mat-subtitle-2 font-weight-500 text-text text-primary\"\r\n                >{{ feature.name }}</span\r\n              >\r\n              <div\r\n                class=\"active-text flex align-center green-text text-darken-3 ml-6\"\r\n              >\r\n                <mat-icon\r\n                  class=\"material-symbols-outlined mr-1 green-text text-darken-3\"\r\n                  color=\"primary\"\r\n                  >check_circle</mat-icon\r\n                ><span>{{feature.status}}</span>\r\n              </div>\r\n            </div>\r\n            <p class=\"mat-body-1 text-dark mb-2\">\r\n                   {{ feature.description }}\r\n            </p>\r\n            <span class=\"text-dark\">Feature type : </span>\r\n            <span class=\"text-text text-primary ml-3\">{{feature.type}}</span>\r\n          </div>\r\n          <div class=\"action-btns flex align-center\">\r\n            <button mat-button color=\"primary\"  [routerLink]=\"['/features/edit-feature/'+feature.featureId]\">\r\n              <mat-icon\r\n                class=\"material-symbols-outlined mb-1 small edit-icon\"\r\n                color=\"primary\" \r\n              >\r\n                edit </mat-icon\r\n              >Edit\r\n            </button>\r\n            <button\r\n              mat-icon-button\r\n              class=\"mb-1 ml-4\"\r\n              color=\"warn\"\r\n              aria-label=\"Example icon button with a vertical three dot icon\"\r\n              (click)=\"openDelete(feature.featureId)\"\r\n            >\r\n              <mat-icon class=\"material-symbols-outlined\" color=\"warn\"\r\n                >close</mat-icon\r\n              >\r\n            </button>\r\n          </div>\r\n        </div>\r\n        </div>\r\n\r\n         <!-- No features block -->\r\n  <ng-template #noFeaturesBlock>\r\n    <div class=\"feature-add-block flex align-center justify-center p-6\">\r\n      <div class=\"text-center flex align-center flex vertical\">\r\n        <div class=\"icon-with-bg\">\r\n          <div class=\"bg-box\"></div>\r\n          <div class=\"icon inherit\">\r\n            <mat-icon class=\"material-symbols-outlined mb-1\">featured_play_list</mat-icon>\r\n          </div>\r\n        </div>\r\n        <p class=\"mat-subtitle-2 text-dark-1 mb-3 font-weight-500\">\r\n          You have not added any features\r\n        </p>\r\n        <button mat-button color=\"primary\" class=\"small\" (click)=\"navigateToFeatures()\">\r\n          Create Features\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        }
    ],
    "modules": [
        {
            "name": "AngularMaterialModule",
            "id": "module-AngularMaterialModule-2017c538237bf6d1773c1e55574736c6f6ddbd4e1050888d87fa30cf35a4ced4b7c1712d4d9bcda373014aa9780d8f34cf3b08e7ddf8b4d8c79049c5788ac6c9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/modules/angular-material/angular-material.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkAccordionModule } from '@angular/cdk/accordion';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { BidiModule } from '@angular/cdk/bidi';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { PlatformModule } from '@angular/cdk/platform';\r\nimport { ObserversModule } from '@angular/cdk/observers';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\n@NgModule({\r\n  declarations: [],\r\n  exports: [\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatBottomSheetModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatTableModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatBadgeModule,\r\n    MatSidenavModule,\r\n    MatSlideToggleModule,\r\n    MatSliderModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatStepperModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatNativeDateModule,\r\n    CdkTableModule,\r\n    A11yModule,\r\n    BidiModule,\r\n    CdkAccordionModule,\r\n    ObserversModule,\r\n    OverlayModule,\r\n    PlatformModule,\r\n    PortalModule\r\n  ]\r\n})\r\nexport class AngularMaterialModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-3f392bbe9e10cf82713f2e00032ee3f7f597853ff3762d64f4034546acc0f764d5f3e768c20ed4d0371621a6fe6ecba893a85c1d02d26673cb03258e187e2c10",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AngularMaterialModule } from './shared/modules/angular-material/angular-material.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SharedModule } from './shared/modules/shared/shared.module';\r\nimport { LayoutComponent } from './core/layouts/layout/layout.component';\r\nimport { SidebarComponent } from './core/layouts/sidebar/sidebar.component';\r\nimport { SuccessDialogComponent } from './shared/components/dialog-box/success-dialog/success-dialog.component';\r\nimport { DeleteConfirmationComponent } from './shared/components/dialog-box/delete-confirmation/delete-confirmation.component';\r\nimport { PageNotFoundComponent } from './shared/components/page-not-found/page-not-found.component';\r\nimport { FeatureDetailsPopupComponent } from './shared/components/dialog-box/feature-details-popup/feature-details-popup.component';\r\nimport { CouponsDeleteSuccessComponent } from './shared/components/dialog-box/coupons-delete-success/coupons-delete-success.component';\r\nimport { SignInComponent } from './modules/sign-in/components/sign-in.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LayoutComponent,\r\n    SidebarComponent,\r\n    SuccessDialogComponent,\r\n    DeleteConfirmationComponent,\r\n    PageNotFoundComponent,\r\n    FeatureDetailsPopupComponent,\r\n    CouponsDeleteSuccessComponent,\r\n    SignInComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AngularMaterialModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    FormsModule,\r\n    SharedModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "CouponsDeleteSuccessComponent"
                        },
                        {
                            "name": "DeleteConfirmationComponent"
                        },
                        {
                            "name": "FeatureDetailsPopupComponent"
                        },
                        {
                            "name": "LayoutComponent"
                        },
                        {
                            "name": "PageNotFoundComponent"
                        },
                        {
                            "name": "SidebarComponent"
                        },
                        {
                            "name": "SignInComponent"
                        },
                        {
                            "name": "SuccessDialogComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AngularMaterialModule"
                        },
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-e6d16ca171b26f3d3c6dfb1ad323f5b874bf00417a64d1397d20b4a9ef403052f8a26f1d47ee35809cb01ece9d8908135abdde939cf676e38bbdafc5c7f07cef",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LayoutComponent } from './core/layouts/layout/layout.component';\r\nimport { PageNotFoundComponent } from './shared/components/page-not-found/page-not-found.component';\r\nimport { SignInComponent } from './modules/sign-in/components/sign-in.component';\r\nimport { AuthGuard } from './modules/sign-in/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LayoutComponent,\r\n    // canActivate: [AuthGuard],\r\n    children: [\r\n      {\r\n        path: '',\r\n        loadChildren: () =>\r\n          \"import('../app/modules/dashboard/dashboard.module').then(\\\n            (mod) => mod.DashboardModule\\\n          )\",\r\n      },\r\n      {\r\n        path: 'products',\r\n        loadChildren: () =>\r\n          \"import('../app/modules/products/products.module').then(\\\n            (mod) => mod.ProductsModule\\\n          )\",\r\n      },\r\n      {\r\n        path: 'features',\r\n        loadChildren: () =>\r\n          \"import('../app/modules/features/features.module').then(\\\n            (mod) => mod.FeaturesModule\\\n          )\",\r\n      },\r\n      {\r\n        path: 'plans',\r\n        loadChildren: () =>\r\n          \"import('../app/modules/plans/plans.module').then(\\\n            (mod) => mod.PlansModule\\\n          )\",\r\n      },\r\n      {\r\n        path: 'coupons',\r\n        loadChildren: () =>\r\n          \"import('../app/modules/coupons/coupons.module').then(\\\n            (mod) => mod.CouponsModule\\\n          )\",\r\n      },\r\n      {\r\n        path: 'payment',\r\n        loadChildren: () =>\r\n          \"import('./modules/payment-history/payment-history.module').then(\\\n            (m) => m.PaymentHistoryModule\\\n          )\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: 'sign-in', component: SignInComponent\r\n  },\r\n  { path: '**', component: PageNotFoundComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CouponsModule",
            "id": "module-CouponsModule-e504517ff2ef74d6e152829d36f0257b0cc9c4a4f2a971a02f6ad7700078aae315dfa2b1330016251e7e20487025808dba5d7d4aae1acffcfb3c65b0876593bc",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/coupons/coupons.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CouponsRoutingModule } from './coupons-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AngularMaterialModule } from 'src/app/shared/modules/angular-material/angular-material.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared/shared.module';\r\nimport { ViewCouponsComponent } from './components/view-coupons/view-coupons.component';\r\nimport { CouponsListingComponent } from './components/coupons-listing/coupons-listing.component';\r\nimport { CreateCouponsComponent } from './components/create-coupons/create-coupons.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ViewCouponsComponent,\r\n    CouponsListingComponent,\r\n    CreateCouponsComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    CouponsRoutingModule,\r\n    HttpClientModule,\r\n    AngularMaterialModule,\r\n    SharedModule,\r\n  ],\r\n})\r\nexport class CouponsModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CouponsListingComponent"
                        },
                        {
                            "name": "CreateCouponsComponent"
                        },
                        {
                            "name": "ViewCouponsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AngularMaterialModule"
                        },
                        {
                            "name": "CouponsRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CouponsRoutingModule",
            "id": "module-CouponsRoutingModule-810504d09b6c4ab8de4e71ef43084892db6e1d554baccc0d140edb163beaf4bb19cb46ea287b4a460875c779967008797918bca7de5414691e04b58479e8fcb1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/coupons/coupons-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CouponsListingComponent } from './components/coupons-listing/coupons-listing.component';\r\nimport { CreateCouponsComponent } from './components/create-coupons/create-coupons.component';\r\nimport { ViewCouponsComponent } from './components/view-coupons/view-coupons.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: CouponsListingComponent },\r\n  { path: 'create', component: CreateCouponsComponent },\r\n  { path: 'view', component: ViewCouponsComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CouponsRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DashboardLayoutModule",
            "id": "module-DashboardLayoutModule-ca74aa7258da47671d098f8cb3484027d0f193189abe0397da629e84428efaa86c351d6f14675e800a224340166ee9aec838779a5406b0da920a7f0ea277e958",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/softobiz-ui/dashboardLayout/dashboardLayout.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DashboardLayoutComponent } from './dashboardLayout.component';\r\nimport { AngularMaterialModule } from 'src/app/shared/modules/angular-material/angular-material.module';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { ProfileComponent } from '../profile/profile.component';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { SearchbarComponent } from '../searchbar/searchbar.component';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { SidebarComponent } from 'src/app/core/layouts/sidebar/sidebar.component';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { RouterTestingModule } from '@angular/router/testing';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { HeaderComponent } from '../header/header.component';\r\nimport { HeaderModule } from '../header/header.module';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\n// import { LeftNavigationComponent } from '../leftNavigation/leftNavigation.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DashboardLayoutComponent,\r\n    SidebarComponent,\r\n    HeaderComponent,\r\n  ],\r\n  imports: [\r\n    AngularMaterialModule,\r\n    BrowserAnimationsModule,\r\n    // SidebarComponent,\r\n    // HeaderComponent,\r\n    // ProfileComponent,\r\n    // SearchbarComponent,\r\n    RouterTestingModule,\r\n    AngularMaterialModule\r\n  ],\r\n  exports: [DashboardLayoutComponent],\r\n})\r\nexport class DashboardLayoutModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DashboardLayoutComponent"
                        },
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "SidebarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AngularMaterialModule"
                        },
                        {
                            "name": "AngularMaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "DashboardLayoutComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DashboardModule",
            "id": "module-DashboardModule-1f588633e1c765b15784620db5dff7d1a962c5afe1b3bffdbc9bc2f6a32ab3fd0585bac7ebca098dff827be09f69054d48a15199e8dbab70ec021655021ef8d5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/dashboard/dashboard.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { DashboardRoutingModule } from './dashboard-routing.module';\r\nimport { CustomerViewComponent } from './customer/components/customer-view/customer-view.component';\r\nimport { CustomerListingComponent } from './customer/components/customer-listing/customer-listing.component';\r\nimport { SharedModule } from 'src/app/shared/modules/shared/shared.module';\r\nimport { AngularMaterialModule } from 'src/app/shared/modules/angular-material/angular-material.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CustomerListingComponent,\r\n    CustomerViewComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    DashboardRoutingModule,\r\n    SharedModule,\r\n    AngularMaterialModule\r\n  ]\r\n})\r\nexport class DashboardModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CustomerListingComponent"
                        },
                        {
                            "name": "CustomerViewComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AngularMaterialModule"
                        },
                        {
                            "name": "DashboardRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DashboardRoutingModule",
            "id": "module-DashboardRoutingModule-69bb95d10c935016f3b6dffcc83195d3d664976011f1270ad8e5e1e4ea13b269e4223400d8facbe8507b30891edd1007c0820f4bb30c759af38278d9fc3f7bfc",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/dashboard/dashboard-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule, OnInit } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CustomerListingComponent } from './customer/components/customer-listing/customer-listing.component';\r\nimport { CustomerViewComponent } from './customer/components/customer-view/customer-view.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'customers', component: CustomerListingComponent },\r\n  { path: 'customers/view', component: CustomerViewComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DashboardRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FeaturesModule",
            "id": "module-FeaturesModule-9b5f7f21813ac723d3bfea2045d541c20682bc98da48396b74e114f0064745204224d41ee84c8869ebd9372837ffe4588711d6cd65cdd2287afcdd01364f346e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/features/features.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FeaturesRoutingModule } from './features-routing.module';\r\nimport { FeaturesListingComponent } from './components/features-listing/features-listing.component';\r\nimport { AngularMaterialModule } from 'src/app/shared/modules/angular-material/angular-material.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared/shared.module';\r\nimport { CreateFeatureComponent } from './components/create-feature/create-feature.component';\r\nimport { ViewFeatureComponent } from './components/view-feature/view-feature.component';\r\nimport { EditFeatureComponent } from './components/edit-feature/edit-feature.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FeaturesListingComponent,\r\n    CreateFeatureComponent,\r\n    ViewFeatureComponent,\r\n    EditFeatureComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FeaturesRoutingModule,\r\n    AngularMaterialModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class FeaturesModule {\r\n  constructor() {\r\n    console.log('this is features module');\r\n  }\r\n}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CreateFeatureComponent"
                        },
                        {
                            "name": "EditFeatureComponent"
                        },
                        {
                            "name": "FeaturesListingComponent"
                        },
                        {
                            "name": "ViewFeatureComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AngularMaterialModule"
                        },
                        {
                            "name": "FeaturesRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FeaturesRoutingModule",
            "id": "module-FeaturesRoutingModule-1b31546603c7cf1c0b16d9ac49603f095de1dce2bfa0809ebdf2eec7569a776b0c19049a47945d9dbec0570b9bfb2037ce39443838e0dfc157d5b899dba00989",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/features/features-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FeaturesListingComponent } from './components/features-listing/features-listing.component';\r\nimport { CreateFeatureComponent } from './components/create-feature/create-feature.component';\r\nimport { ViewFeatureComponent } from './components/view-feature/view-feature.component';\r\nimport { EditFeatureComponent } from './components/edit-feature/edit-feature.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: FeaturesListingComponent,\r\n  },\r\n  {\r\n    path: 'create',\r\n    component: CreateFeatureComponent,\r\n  },\r\n  {\r\n    path: 'create/products/:id',\r\n    component: CreateFeatureComponent,\r\n  },\r\n  { path: 'view/:id', component: ViewFeatureComponent },\r\n  {\r\n    path: 'edit-feature/:id',\r\n    component: EditFeatureComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class FeaturesRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HeaderModule",
            "id": "module-HeaderModule-520b642e31cf5cca36314060e9a15805de96bb1f14f5a87fb08087e582b69c7e9b723bddfe483745b1742565f3bb171375968d9d8b744d71d42bffec61cad403",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/softobiz-ui/header/header.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './header.component';\nimport { AngularMaterialModule } from 'src/app/shared/modules/angular-material/angular-material.module';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { ProfileComponent } from '../profile/profile.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SearchbarComponent } from '../searchbar/searchbar.component';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  declarations: [ProfileComponent, SearchbarComponent],\n  imports: [\n    CommonModule,\n    AngularMaterialModule,\n    MatMenuModule,\n    MatMenuModule,\n    MatIconModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatDialogModule,\n    MatTabsModule,\n    MatChipsModule,\n  ],\n  exports: [HeaderComponent],\n})\nexport class HeaderModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ProfileComponent"
                        },
                        {
                            "name": "SearchbarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AngularMaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "HeaderComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LeftNavigationModule",
            "id": "module-LeftNavigationModule-631e8a62e3f549801aaeeecc934574c575abfc070ed6477333f918bf9b1513f752549a03f865c187827b2c794165f1bedee37a3d624c8c6d301ab250e755d706",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/softobiz-ui/leftNavigation/leftNavigation.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LeftNavigationComponent } from './leftNavigation.component';\nimport { AngularMaterialModule } from 'src/app/shared/modules/angular-material/angular-material.module';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { ProfileComponent } from '../profile/profile.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SearchbarComponent } from '../searchbar/searchbar.component';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { SidebarComponent } from 'src/app/core/layouts/sidebar/sidebar.component';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { MatListModule } from '@angular/material/list';\nimport { MatButtonModule } from '@angular/material/button';\nimport { HeaderComponent } from '../header/header.component';\n\n@NgModule({\n  declarations: [\n    LeftNavigationComponent,\n    SidebarComponent,\n    HeaderComponent,\n    ProfileComponent,\n    SearchbarComponent,\n  ],\n  imports: [\n    CommonModule,\n    MatMenuModule,\n    MatIconModule,\n    BrowserAnimationsModule,\n    MatDialogModule,\n    MatSidenavModule,\n    MatTabsModule,\n    MatChipsModule,\n    // ActivatedRoute,\n    MatSlideToggleModule,\n    RouterTestingModule,\n    MatListModule,\n    MatButtonModule,\n  ],\n  exports: [LeftNavigationComponent],\n})\nexport class LeftNavigationModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "LeftNavigationComponent"
                        },
                        {
                            "name": "ProfileComponent"
                        },
                        {
                            "name": "SearchbarComponent"
                        },
                        {
                            "name": "SidebarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "LeftNavigationComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MenuModule",
            "id": "module-MenuModule-342b91ebd655dcb52a45488e52dc90b9b5292cb016925a7e6a12d35197daecff7b53c9bb1ecd06c0e94b134c27a3624cdca7b88c3ae549e95fa9c4ca877ac6ed",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/softobiz-ui/menu/menu.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MenuComponent } from './menu.component';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n@NgModule({\r\n  declarations: [MenuComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatMenuModule,\r\n    PortalModule,\r\n    MatFormFieldModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    BrowserAnimationsModule,\r\n    MatIconModule,\r\n  ],\r\n})\r\nexport class MenuModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "MenuComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MenuModule",
            "id": "module-MenuModule-c22c236c6b7372eb6c5c25ca29046931158d679930d83debce5a6c37ad703613a8e412e4f42371c182e7ac87e8918c02ce6c388512b33903a585ca86fb75794f-1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/softobiz-ui/notification/notification.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NotificationComponent } from './notification.component';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\n@NgModule({\r\n  declarations: [NotificationComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatMenuModule,\r\n    MatButtonModule,\r\n    BrowserAnimationsModule,\r\n    MatIconModule,\r\n    MatBadgeModule\r\n  ],\r\n})\r\nexport class MenuModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "NotificationComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MenuModule",
            "id": "module-MenuModule-38c38836fbdd2c1ba747d45cc6821f29e44f2e7f93830ad362b93d3183c055b12087dfc749a661d7f0853eca4b34b0173d872881605c8ab4b9a9f2ef27970413-2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/softobiz-ui/Tooltip/Tooltip.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TooltipComponent } from './Tooltip.component';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AngularMaterialModule } from 'src/app/shared/modules/angular-material/angular-material.module';\r\nimport { NgxTippyModule } from 'ngx-tippy-wrapper';\r\n\r\n@NgModule({\r\n  declarations: [TooltipComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatMenuModule,\r\n    PortalModule,\r\n    MatFormFieldModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    BrowserAnimationsModule,\r\n    MatIconModule,\r\n    AngularMaterialModule,\r\n    NgxTippyModule,\r\n  ],\r\n})\r\nexport class MenuModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TooltipComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AngularMaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MenuModule",
            "id": "module-MenuModule-ef1402901507e90fc4d83548b1a1bda0a34cc96e27390224d03fd0473eb5a6be49981f8adfc75fd719e0a9cc78a3f4a2bb6e5c83c7e097a882e2f10c79a733ae-3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/softobiz-ui/uploadLogo/uploadLogo.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UploadLogoComponent } from './uploadLogo.component';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AngularMaterialModule } from 'src/app/shared/modules/angular-material/angular-material.module';\r\n@NgModule({\r\n  declarations: [UploadLogoComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatMenuModule,\r\n    PortalModule,\r\n    MatFormFieldModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    BrowserAnimationsModule,\r\n    MatIconModule,\r\n    AngularMaterialModule,\r\n  ],\r\n})\r\nexport class MenuModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UploadLogoComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AngularMaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PaymentHistoryModule",
            "id": "module-PaymentHistoryModule-79b3029405126c73daf802846a1184c6e7d732031e82a0f0dca4397232ddb11581154491c2f53a26275fc4202be591a41471b2d5f8e46ba1e81febb5f43700f7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/payment-history/payment-history.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PaymentHistoryRoutingModule } from './payment-history-routing.module';\r\nimport { TransactionListComponent } from './transactions/components/transaction-list/transaction-list.component';\r\nimport { TransactionViewComponent } from './transactions/components/transaction-view/transaction-view.component';\r\nimport { LogsListComponent } from './logs/components/logs-list/logs-list.component';\r\nimport { LogViewComponent } from './logs/components/log-view/log-view.component';\r\nimport { InvoiceListComponent } from './invoices/components/invoice-list/invoice-list.component';\r\nimport { InvoiceViewComponent } from './invoices/components/invoice-view/invoice-view.component';\r\nimport { SharedModule } from 'src/app/shared/modules/shared/shared.module';\r\nimport { AngularMaterialModule } from 'src/app/shared/modules/angular-material/angular-material.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TransactionListComponent,\r\n    TransactionViewComponent,\r\n    LogsListComponent,\r\n    LogViewComponent,\r\n    InvoiceListComponent,\r\n    InvoiceViewComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PaymentHistoryRoutingModule,\r\n    SharedModule,\r\n    AngularMaterialModule\r\n  ]\r\n})\r\nexport class PaymentHistoryModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "InvoiceListComponent"
                        },
                        {
                            "name": "InvoiceViewComponent"
                        },
                        {
                            "name": "LogViewComponent"
                        },
                        {
                            "name": "LogsListComponent"
                        },
                        {
                            "name": "TransactionListComponent"
                        },
                        {
                            "name": "TransactionViewComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AngularMaterialModule"
                        },
                        {
                            "name": "PaymentHistoryRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PaymentHistoryRoutingModule",
            "id": "module-PaymentHistoryRoutingModule-a15ab6317f7cede9f187de160d362a50eb0ba15bb5fa57cabf66065faea29c58575845aa2923b448cf37a07d7506678d9c588d4b0b99f96ee12f990fd9895260",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/payment-history/payment-history-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TransactionListComponent } from './transactions/components/transaction-list/transaction-list.component';\r\nimport { TransactionViewComponent } from './transactions/components/transaction-view/transaction-view.component';\r\nimport { InvoiceListComponent } from './invoices/components/invoice-list/invoice-list.component';\r\nimport { InvoiceViewComponent } from './invoices/components/invoice-view/invoice-view.component';\r\nimport { LogsListComponent } from './logs/components/logs-list/logs-list.component';\r\nimport { LogViewComponent } from './logs/components/log-view/log-view.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'transactions',\r\n    component: TransactionListComponent,\r\n  },\r\n  {\r\n    path: 'transactions/view',\r\n    component: TransactionViewComponent,\r\n  },\r\n  {\r\n    path: 'invoices',\r\n    component: InvoiceListComponent\r\n  },\r\n  {\r\n    path: 'invoices/view',\r\n    component: InvoiceViewComponent\r\n  },\r\n  {\r\n    path: 'logs',\r\n    component: LogsListComponent\r\n  },\r\n  {\r\n    path: 'logs/view',\r\n    component: LogViewComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class PaymentHistoryRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PlansModule",
            "id": "module-PlansModule-d433fbc8cc47c2574201be058a2e9374b5c1f1204e2e2cdc2a34c17b9bd6e2eb6f01bc69431adcf1b63c252ee4f159f701dae96794f125aca6cc74ec21ba6fcc",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/plans/plans.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PlansRoutingModule } from './plans-routing.module';\r\nimport { AngularMaterialModule } from 'src/app/shared/modules/angular-material/angular-material.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared/shared.module';\r\nimport { PlansListingComponent } from './components/plans-listing/plans-listing.component';\r\nimport { ViewPlansComponent } from './components/view-plans/view-plans.component';\r\nimport { CreatePlanComponent } from './components/create-plan/create-plan.component';\r\nimport { SetPriceComponent } from './components/set-price/set-price.component';\r\nimport { ProductDetailsComponent } from './components/product-details/product-details.component';\r\nimport { AddOnsDetailsComponent } from './components/add-ons-details/add-ons-details.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { EditProductDetailsComponent } from './components/edit-product-details/edit-product-details.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PlansListingComponent,\r\n    ViewPlansComponent,\r\n    CreatePlanComponent,\r\n    SetPriceComponent,\r\n    ProductDetailsComponent,\r\n    AddOnsDetailsComponent,\r\n    EditProductDetailsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PlansRoutingModule,\r\n    HttpClientModule,\r\n    AngularMaterialModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class PlansModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AddOnsDetailsComponent"
                        },
                        {
                            "name": "CreatePlanComponent"
                        },
                        {
                            "name": "EditProductDetailsComponent"
                        },
                        {
                            "name": "PlansListingComponent"
                        },
                        {
                            "name": "ProductDetailsComponent"
                        },
                        {
                            "name": "SetPriceComponent"
                        },
                        {
                            "name": "ViewPlansComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AngularMaterialModule"
                        },
                        {
                            "name": "PlansRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PlansRoutingModule",
            "id": "module-PlansRoutingModule-69770e99b9b1d7398851dfbc4cff9cc2b1b91d35c7466c1c8930d75d50d6179084987656e31e61576a6fb9f1aef3c5b27437975e26e3e9f17348fdc3a3f1a100",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/plans/plans-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { PlansListingComponent } from './components/plans-listing/plans-listing.component';\r\nimport { ViewPlansComponent } from './components/view-plans/view-plans.component';\r\nimport { CreatePlanComponent } from './components/create-plan/create-plan.component';\r\nimport { SetPriceComponent } from './components/set-price/set-price.component';\r\nimport { ProductDetailsComponent } from './components/product-details/product-details.component';\r\nimport { AddOnsDetailsComponent } from './components/add-ons-details/add-ons-details.component';\r\nimport { FeatureDetailsPopupComponent } from 'src/app/shared/components/dialog-box/feature-details-popup/feature-details-popup.component';\r\nimport { EditProductDetailsComponent } from './components/edit-product-details/edit-product-details.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PlansListingComponent },\r\n  { path: 'view/:id', component: ViewPlansComponent },\r\n  { path: 'create', component: CreatePlanComponent },\r\n  { path: 'create/set-price', component: SetPriceComponent},\r\n  { path: 'create/product-variant', component: ProductDetailsComponent},\r\n  { path: 'create/edit-product-variant/:id', component: EditProductDetailsComponent},\r\n  { path: 'create/:id', component: CreatePlanComponent },\r\n  { path: 'create/set-price/:id', component: SetPriceComponent},\r\n  { path: 'create/set-price/:id/:id', component: SetPriceComponent},\r\n  { path: 'create/product-variant/:id', component: ProductDetailsComponent},\r\n  { path: 'create/add-ons', component:AddOnsDetailsComponent},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\n\r\nexport class PlansRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProductsModule",
            "id": "module-ProductsModule-7926079249fb0438d61ef91a6092f35c305442ab5a95a9feaf6c94bb47a697bfc2409a6cf75a8856cd051af1b24891f1353aba0b7043acc497dd5c0915948e18",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/products/products.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProductsRoutingModule } from './products-routing.module';\r\nimport { ProductListingComponent } from './components/product-listing/product-listing.component';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\n\r\nimport { AngularMaterialModule } from 'src/app/shared/modules/angular-material/angular-material.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared/shared.module';\r\nimport { CreateProductComponent, DialogAnimationsDialog } from './components/create-product/create-product.component';\r\nimport { ViewProductComponent } from './components/view-product/view-product.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { EditProductComponent } from './components/edit-product/edit-product.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CreateProductComponent,\r\n    ProductListingComponent,\r\n    DialogAnimationsDialog,\r\n    ViewProductComponent,\r\n    EditProductComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    ProductsRoutingModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    AngularMaterialModule,\r\n    SharedModule,\r\n    MatDividerModule\r\n  ],\r\n})\r\nexport class ProductsModule { }",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CreateProductComponent"
                        },
                        {
                            "name": "DialogAnimationsDialog"
                        },
                        {
                            "name": "EditProductComponent"
                        },
                        {
                            "name": "ProductListingComponent"
                        },
                        {
                            "name": "ViewProductComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AngularMaterialModule"
                        },
                        {
                            "name": "ProductsRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProductsRoutingModule",
            "id": "module-ProductsRoutingModule-8dfed7bb122d68bcc6716f3b8611196b8ffe6618dab2f522b3be4d04ad4f5849e782660730e695827da99b134e48df7f6cbeff927153749261ad8a64baee2f62",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/products/products-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ProductListingComponent } from './components/product-listing/product-listing.component';\r\nimport { CreateProductComponent } from './components/create-product/create-product.component';\r\nimport { ViewProductComponent } from './components/view-product/view-product.component';\r\nimport { EditProductComponent } from './components/edit-product/edit-product.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProductListingComponent\r\n  },\r\n  {\r\n    path: 'create',\r\n    component: CreateProductComponent\r\n  },\r\n\r\n  {\r\n    path: 'edit-product/:id',\r\n    component: EditProductComponent\r\n  },\r\n  {\r\n    path: 'view-product/:id',\r\n    component: ViewProductComponent\r\n  },\r\n  {\r\n    path: 'view-product',\r\n    component: ViewProductComponent\r\n  },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProductsRoutingModule { }",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SftBreadcrumbModule",
            "id": "module-SftBreadcrumbModule-0e93e743aa4d15b37e427a115f885afb6d57b49272cba45e30b3eb195cbdb40bb29f5622c28bd5bfbf2867f3c9d632961aecd3126c7c89db0c0fecf7024a4349",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/softobiz-ui/breadcrumb/breadcrumb.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Breadcrumb } from './breadcrumb.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    BrowserAnimationsModule,\r\n  ],\r\n  declarations: [Breadcrumb],\r\n  exports: [Breadcrumb],\r\n})\r\nexport class SftBreadcrumbModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "Breadcrumb"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "Breadcrumb"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SftButtonModule",
            "id": "module-SftButtonModule-c0772d301344b03fa3f94916108da11b549475999d0e60036196ae9ec64b679c945e6ef9a0538e1cecb8b135fea614052ecff3c42fd85a6835f4dd6cdf2a45a2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/softobiz-ui/button/button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { ButtonComponent } from './button.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MatButtonModule, MatIconModule],\r\n  declarations: [ButtonComponent],\r\n  exports: [ButtonComponent],\r\n})\r\nexport class SftButtonModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SftCalendarModule",
            "id": "module-SftCalendarModule-da045090b8a424dc10dc8d2b15bdfe4a18c91fd348613e5152f1ca68bca6a825abe9b4da4be7cfdfb9967e5f9aef0ddb57e28cb0d52c123085262e9449ef1969",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/softobiz-ui/calendar/calendar.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormGroup, FormControl, FormsModule } from '@angular/forms';\r\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDatepicker } from '@angular/material/datepicker';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport { CalendarComponent } from './calendar.component';\r\nimport { CustomDateHeaderComponent } from 'src/app/shared/components/custom-date-header/custom-date-header.component';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\n// See the Moment.js docs for the meaning of these formats:\r\n// https://momentjs.com/docs/#/displaying/format/\r\n\r\n@NgModule({\r\n  imports: [  \r\n    CommonModule,\r\n    MatDatepickerModule,\r\n    FormsModule,\r\n    FormGroup,\r\n    FormControl,\r\n    MatNativeDateModule,\r\n    BrowserAnimationsModule,\r\n    MatDatepickerInputEvent,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatSelectModule,\r\n    MatNativeDateModule,\r\n    CustomDateHeaderComponent,\r\n    MatFormFieldModule,\r\n    MatTabsModule\r\n  ],\r\n  declarations: [CalendarComponent],\r\n  exports: [CalendarComponent, MatDatepickerModule],\r\n  // providers: [\r\n  //   // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n  //   // application's root module. We provide it at the component level here, due to limitations of\r\n  //   // our example generation script.\r\n  //   {\r\n  //     provide: DateAdapter,\r\n  //     useClass: MomentDateAdapter,\r\n  //     deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS],\r\n  //   },\r\n  // ],\r\n})\r\nexport class SftCalendarModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CalendarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CustomDateHeaderComponent"
                        },
                        {
                            "name": "FormControl"
                        },
                        {
                            "name": "FormGroup"
                        },
                        {
                            "name": "MatDatepickerInputEvent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CalendarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SftCheckboxModule",
            "id": "module-SftCheckboxModule-8b1feb798c70b8582eb98ccaed055c34af37f0b9c57cc487b67c5038e1bb27b01f184a96baa3695f7576114583f90fac2c0e049a87075709f68b5cd2a3f76de2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/softobiz-ui/Checkbox/checkbox.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CheckboxComponent } from './checkbox.component';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MatCheckboxModule],\r\n  declarations: [CheckboxComponent],\r\n  schemas: [\r\n    NO_ERRORS_SCHEMA\r\n  ],\r\n  exports: [CheckboxComponent],\r\n})\r\nexport class SftCheckboxModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CheckboxComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CheckboxComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SftChipModule",
            "id": "module-SftChipModule-2e7fc3142e8df1c53bb7603b30bef64ec91cbd0aa092138334486844091ba571d6d22b545c23846075cec1d1c7f1a672a363c3b4e05cd8797ecfd7a198645a06",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/softobiz-ui/Chip/chip.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ChipComponent } from './chip.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MatChipsModule, MatIconModule],\r\n  declarations: [ChipComponent],\r\n  exports: [ChipComponent],\r\n})\r\nexport class SftChipModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ChipComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ChipComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SftDialogInfoModule",
            "id": "module-SftDialogInfoModule-12180352e5ae48f68c8b99318a162861fed256052db929f0724ef44b015a4ce5c1ddc488b0bef7f1087ae441e518593318a15c2f6fb35d16aae1ed0f1dfadebb",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/softobiz-ui/dialog-info/dialog-info.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  DialogInfoComponent,\r\n  DialogInfoDeleteSuccess,\r\n} from './dialog-info.component';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AngularMaterialModule } from 'src/app/shared/modules/angular-material/angular-material.module';\r\n@NgModule({\r\n  declarations: [DialogInfoComponent, DialogInfoDeleteSuccess],\r\n  imports: [\r\n    CommonModule,\r\n    MatMenuModule,\r\n    PortalModule,\r\n    MatFormFieldModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    BrowserAnimationsModule,\r\n    MatIconModule,\r\n    AngularMaterialModule,\r\n  ],\r\n})\r\nexport class SftDialogInfoModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DialogInfoComponent"
                        },
                        {
                            "name": "DialogInfoDeleteSuccess"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AngularMaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SftErrorLayoutModule",
            "id": "module-SftErrorLayoutModule-df5e8c4eda010ed16f9b13612018afcb0eba3b6fc7cf6b7ce41c99119ad02b185d930c5f57e7c19763a9ae10e63cc21c697fa45fe93960dffe5898f21e8660c8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/softobiz-ui/errorLayout/errorLayout.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { AngularMaterialModule } from 'src/app/shared/modules/angular-material/angular-material.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ErrorLayoutComponent } from './errorLayout.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ButtonComponent } from '../button/button.component';\r\nimport { SftButtonModule } from '../button/button.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ErrorLayoutComponent,\r\n    ButtonComponent,\r\n  ],\r\n  imports: [\r\n    AngularMaterialModule,\r\n    BrowserAnimationsModule,\r\n    CommonModule,\r\n    NgModule,\r\n    SftButtonModule\r\n  ],\r\n  exports: [ErrorLayoutComponent],\r\n})\r\nexport class SftErrorLayoutModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "ErrorLayoutComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AngularMaterialModule"
                        },
                        {
                            "name": "SftButtonModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ErrorLayoutComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SftInputModule",
            "id": "module-SftInputModule-db86d87cfddf5e054e9f2081d7e7e4b1cf85bd9ba6767968b52d4858214ba7aff22dfa42fef515d6f57dd2ab17a60df4c43da04b201efd1bbea925e95a9d95b6",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/softobiz-ui/Input/input.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { InputComponent } from './input.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport { NgxTippyModule } from 'ngx-tippy-wrapper';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MatButtonModule, MatIconModule, MatFormFieldModule, MatInputModule, NgxTippyModule, BrowserAnimationsModule],\r\n  declarations: [InputComponent],\r\n  exports: [InputComponent ],\r\n})\r\nexport class SftInputModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "InputComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "InputComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SftPaginatorModule",
            "id": "module-SftPaginatorModule-9bebefed1c00dbf68433f8b0c543dd14ff6ce70ff5ae333d9313206d9e6bc93f1afd942414f278396c6e13ee50f212728e8efb993b60cddc38024cbaae43bb36",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/softobiz-ui/dialog/dialog.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { DialogComponent } from './dialog.component';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { AngularMaterialModule } from 'src/app/shared/modules/angular-material/angular-material.module';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    BrowserAnimationsModule,\r\n    MatStepperModule,\r\n    AngularMaterialModule,\r\n    MatButtonModule\r\n  ],\r\n  declarations: [DialogComponent],\r\n  exports: [DialogComponent],\r\n})\r\nexport class SftPaginatorModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DialogComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AngularMaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "DialogComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SftPaginatorModule",
            "id": "module-SftPaginatorModule-53544c5fdc596edd756dbdf17907e2314af6dcc0c350033dcc04ceb964e3ca29a1a9ac6c61568e04ad00a8496ac2aad49b7f10520de37db534250cb6ba3af943-1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/softobiz-ui/paginator/paginator.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { PaginatorComponent } from './paginator.component';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { AngularMaterialModule } from 'src/app/shared/modules/angular-material/angular-material.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    BrowserAnimationsModule,\r\n    MatStepperModule,\r\n    AngularMaterialModule\r\n  ],\r\n  declarations: [PaginatorComponent],\r\n  exports: [PaginatorComponent],\r\n})\r\nexport class SftPaginatorModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "PaginatorComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AngularMaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "PaginatorComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SftProfileModule",
            "id": "module-SftProfileModule-1ca755cde91eaea9267beb36d3b1549b02bdfc454dbc302df003e29c880578b6aa004db368a4b90160fc060ece8c5a18009b1addc369e878efc6f9674cfcea60",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/softobiz-ui/profile/profile.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProfileComponent } from './profile.component';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    BrowserAnimationsModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n  ],\r\n  declarations: [ProfileComponent],\r\n  schemas: [NO_ERRORS_SCHEMA],\r\n  exports: [ProfileComponent],\r\n})\r\nexport class SftProfileModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ProfileComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ProfileComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SftRadioButtonModule",
            "id": "module-SftRadioButtonModule-e4e9b16b1aeaeb6280e98cb5b7d1dc51636a5821e6c7a98a03eeae36c35f850ca0a8be00d1a519aba5c8e0e7d0bbcff4f9f74b5ce84f531992db47c8289cae35",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/softobiz-ui/radiobutton/radio.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RadioButtonComponent } from './radio.component';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MatRadioModule],\r\n  declarations: [RadioButtonComponent],\r\n  schemas: [NO_ERRORS_SCHEMA],\r\n  exports: [RadioButtonComponent],\r\n})\r\nexport class SftRadioButtonModule {}\r\n ",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "RadioButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "RadioButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SftRadioButtonModule",
            "id": "module-SftRadioButtonModule-26b46831481e226fbd81b8a87055d89b2d5261d7ccdccd31fdd3ed42ce094311c8932037d84544f2b7b8b041dd9b2fb7df3b43c49a43ccd4c1edfed55df7ae07-1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/softobiz-ui/switch/switch.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SwitchButtonComponent } from './switch.component';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MatSlideToggleModule],\r\n  declarations: [SwitchButtonComponent],\r\n  schemas: [NO_ERRORS_SCHEMA],\r\n  exports: [SwitchButtonComponent],\r\n})\r\nexport class SftRadioButtonModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SwitchButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SwitchButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SftSearchbarModule",
            "id": "module-SftSearchbarModule-29f9794d3768509c3b3f32d8ff701185b6c94587ec0d5e69bfa39b8e2a2a66a103539f69c26252e0844b21c779854d335ae6e111a10fa357d7626402d21291da",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/softobiz-ui/searchbar/searchbar.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { SearchbarComponent } from './searchbar.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    BrowserAnimationsModule,\r\n  ],\r\n  declarations: [SearchbarComponent],\r\n  exports: [SearchbarComponent],\r\n})\r\nexport class SftSearchbarModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SearchbarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SearchbarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SftStepperModule",
            "id": "module-SftStepperModule-19892d45dc4c29aa497abfbffb92ae031b4e244d3efb1daa9f026b655cd004a574d7ea73366d2cf9491fe00b7e63c915472992a097b2e6cff9260564978534b2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/softobiz-ui/stepper/stepper.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { StepperComponent } from './stepper.component';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    BrowserAnimationsModule,\r\n    MatStepperModule,\r\n  ],\r\n  declarations: [StepperComponent],\r\n  exports: [StepperComponent],\r\n})\r\nexport class SftStepperModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "StepperComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "StepperComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SftTabsModule",
            "id": "module-SftTabsModule-e7d106586cc871803b8b6edfb9861020ddf1d1bbe892aad8fc2e170a3c05562c3d46e1c0fb05b8ff80a8e91e451afcd8c4a580fef06acdcc27e761a5b89b0f2f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/softobiz-ui/tabs/tabs.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TabsComponent } from './tabs.component';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MatTabsModule],\r\n  declarations: [TabsComponent],\r\n  exports: [TabsComponent],\r\n})\r\nexport class SftTabsModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TabsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TabsComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SftTextareaModule",
            "id": "module-SftTextareaModule-59b980d8a6aa15639943e4c7c402c3b07105813cd65d2fd59c49c471fd09377790aa9f932e51ced32c51c19f5e2af9e28be466e019b3741f8fd7917b29cfad11",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/softobiz-ui/Textarea/textarea.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { TextareaComponent } from './textarea.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport { NgxTippyModule } from 'ngx-tippy-wrapper';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MatButtonModule, MatIconModule, MatFormFieldModule, MatInputModule, NgxTippyModule, BrowserAnimationsModule],\r\n  declarations: [TextareaComponent],\r\n  exports: [TextareaComponent, MatIconModule, NgxTippyModule ],\r\n})\r\nexport class SftTextareaModule {}\r\n\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TextareaComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TextareaComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "id": "module-SharedModule-b0b02241c080c05e7ef97fe103fae0378c17d38e739a4a67b0064ddb6dae5999f9af8250173020f233f682c94df505e4d4c0842c667fc501493b082b8003bf38",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/modules/shared/shared.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgxTippyModule } from 'ngx-tippy-wrapper';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { EmptyListingComponent } from '../../components/empty-listing/empty-listing.component';\r\nimport { AngularMaterialModule } from '../angular-material/angular-material.module';\r\nimport { CustomDateHeaderComponent } from '../../components/custom-date-header/custom-date-header.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { EditCustomerDetailsComponent } from '../../components/dialog-box/edit-customer-details/edit-customer-details.component';\r\nimport { NoItemFoundComponent } from '../../components/no-item-found/no-item-found.component';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\n\r\n@NgModule({\r\n  declarations: [EmptyListingComponent, CustomDateHeaderComponent, EditCustomerDetailsComponent, NoItemFoundComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    HttpClientModule,\r\n    MatSnackBarModule\r\n  ],\r\n  exports: [\r\n    NgxTippyModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    EmptyListingComponent,\r\n    CustomDateHeaderComponent,\r\n    EditCustomerDetailsComponent,\r\n    NoItemFoundComponent\r\n  ],\r\n})\r\nexport class SharedModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CustomDateHeaderComponent"
                        },
                        {
                            "name": "EditCustomerDetailsComponent"
                        },
                        {
                            "name": "EmptyListingComponent"
                        },
                        {
                            "name": "NoItemFoundComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AngularMaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CustomDateHeaderComponent"
                        },
                        {
                            "name": "EditCustomerDetailsComponent"
                        },
                        {
                            "name": "EmptyListingComponent"
                        },
                        {
                            "name": "NoItemFoundComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SoftobizUiModule",
            "id": "module-SoftobizUiModule-18c2732e8cf11c593504a1b670e8fa715a000283559e2b67abeef04e56a2832d246e95431dfcb53a07fceeed6afc7e5ae6db61c8c41aeb2ae140ff9c3cd7bd3d",
            "description": "<p>HumaUI shared modules</p>\n",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/softobiz-ui/softobiz-ui.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { SftButtonModule } from './button/button.module';\r\n// import { SftProgressbarModule } from './ProgressBar/progressbar.module';\r\n// import { SftButtonToggleModule } from './ButtonToggle/buttonToggle.module';\r\n// import { SftCardModule } from './Card/card.module';\r\n// import { SftDividerModule } from './divider/divider.module';\r\n// import { SftExpensionModule } from './expansion-panel/expansion.module';\r\nimport { NgxTippyModule } from 'ngx-tippy-wrapper';\r\nimport { TypographyComponent } from './Typography/typography.component';\r\nimport { DashboardLayoutModule } from './dashboardLayout/dashboardLayout.module';\r\n\r\nconst SFT_UI_MODULES = [SftButtonModule, NgxTippyModule, DashboardLayoutModule];\r\n\r\n/**\r\n * HumaUI shared modules\r\n */\r\n@NgModule({\r\n  imports: SFT_UI_MODULES,\r\n  exports: SFT_UI_MODULES,\r\n  declarations: [TypographyComponent],\r\n})\r\nexport class SoftobizUiModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TypographyComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "DashboardLayoutModule"
                        },
                        {
                            "name": "SftButtonModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "DashboardLayoutModule"
                        },
                        {
                            "name": "SftButtonModule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TableModule",
            "id": "module-TableModule-22b6c234997de201c78234635ef50cb473a1130631b9a5512c72cebdcead37bb28fa2bf30c12953ede2aa6d23c3114849d590ade2ee50e12e1145d9ab982897f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/softobiz-ui/table/table.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TableComponent } from './table.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { AngularMaterialModule } from 'src/app/shared/modules/angular-material/angular-material.module';\nimport {\n  MatDialog,\n  MatDialogModule,\n  MatDialogRef,\n} from '@angular/material/dialog';\nimport { SharedModule } from 'src/app/shared/modules/shared/shared.module';\n\n@NgModule({\n  declarations: [TableComponent],\n  imports: [\n    CommonModule,\n    MatTableModule,\n    AngularMaterialModule,\n    // MatDialog,\n    MatDialogModule,\n    SharedModule\n    // MatDialogRef,\n  ],\n  exports: [TableComponent],\n})\nexport class TableModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TableComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AngularMaterialModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TableComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "breadcrumb",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/breadcrumb/stories/breadcrumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    items: [\r\n      { label: 'Home', link: '/' },\r\n      { label: 'Products', link: '/products' },\r\n      { label: 'Category', link: '/products/category' },\r\n      { label: 'Current Page' },\r\n    ]\r\n  },\r\n}"
            },
            {
                "name": "Button",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/button/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    variant: 'flat',\r\n    color: 'primary',\r\n    label: 'Button',\r\n    size: 'medium',\r\n    disable: false,\r\n    disableRipple: false,\r\n    onClick: 'funtion()',\r\n  },\r\n}"
            },
            {
                "name": "Calendar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/calendar/stories/calendar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n}"
            },
            {
                "name": "Checkbox",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/Checkbox/stories/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    indeterminate: false,\r\n    label: 'Click Me!',\r\n    checked: false,\r\n    disable:false,\r\n    disableRipple: false,\r\n    labelPosition: 'after',\r\n  },\r\n}"
            },
            {
                "name": "Chip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/Chip/stories/chip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    highlighted: true,\r\n    withIcon: false,\r\n    disabled: false,\r\n    label: 'chip',\r\n  },\r\n}"
            },
            {
                "name": "Color",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/color/stories/color.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n}"
            },
            {
                "name": "Config_Menu",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Settings',\r\n    icon: 'settings',\r\n    category: 'Config',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'LogOut ',\r\n    icon: 'logout',\r\n    category: 'Confog',\r\n  },\r\n]"
            },
            {
                "name": "Coupon_Data",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    id: 'coupon_id_459',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'coupon_id_460',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n]"
            },
            {
                "name": "CustomerList",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    id: '#S0-001',\r\n    name: 'Alex C',\r\n    companyName: 'Greenplus Enterprises',\r\n    email: 'alex@example.com',\r\n    workPhone: '9876778865',\r\n    website: 'www.greenplus.com',\r\n    subscription: '2 subscripton (Available)',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    name: 'Zen D',\r\n    companyName: 'Zencorporation',\r\n    email: 'zen@example.com',\r\n    workPhone: '839103113',\r\n    website: 'www.zencorporation.com',\r\n    subscription: '1 subscripton (Available)',\r\n  },\r\n]"
            },
            {
                "name": "DashboardLayout",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/dashboardLayout/stories/dashboardLayout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n}"
            },
            {
                "name": "Dialog",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/dialog/stories/dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n}"
            },
            {
                "name": "DialogInfo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/dialog-info/stories/dialog-info.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    withIcon: false,\r\n  },\r\n}"
            },
            {
                "name": "Duration_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/coupons/components/view-coupons/view-coupons.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "DurationElement[]",
                "defaultValue": "[\r\n  {  Duration : 'Discount Type', time: 'Forever' },\r\n  { Duration : 'Applied on', time: 'All Plans' },\r\n  {  Duration : 'Discount Type', time: 'All Addons' },\r\n]"
            },
            {
                "name": "ELEMENT_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/coupons/components/view-coupons/view-coupons.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "DiscountElement[]",
                "defaultValue": "[\r\n  {  Discount : 'Discount Type', Amount: 'Fixed Amount' },\r\n  { Discount : 'Applied on', Amount: 'Fixed Amount' },\r\n  {  Discount : 'Discount Type', Amount: 'Invoice Amount' },\r\n]"
            },
            {
                "name": "ELEMENT_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/features/components/view-feature/view-feature.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "PeriodicElement[]",
                "defaultValue": "[\r\n  { name: 'Hydrogen', weight: 1.0079 },\r\n  { name: 'Helium', weight: 4.0026 },\r\n]"
            },
            {
                "name": "ELEMENT_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/plans/components/add-ons-details/add-ons-details.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "PeriodicElement[]",
                "defaultValue": "[\r\n  { id:'element123456', name: 'Host online calls', status: \"Active\",Product: 'Microsoft Teams', type: 'Switch' },\r\n  {  id:'element1234', name: 'Union all information', status: \"Active\",Product: 'Microsoft Teams', type: 'Range' },\r\n  {  id:'element12', name: 'Create team sites', status: \"Active\",Product: 'Microsoft Teams', type: 'Custom' },\r\n]"
            },
            {
                "name": "ELEMENT_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/plans/components/create-plan/create-plan.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "PeriodicElement[]",
                "defaultValue": "[\r\n  { PricingCycle: 'Daily', Price: 'Set Price' },\r\n  { PricingCycle: 'Weekly', Price: 'Set Price' },\r\n  { PricingCycle: 'Monthly', Price: 'Set Price' },\r\n  { PricingCycle: 'Yearly', Price: 'Set Price' },\r\n]"
            },
            {
                "name": "ELEMENT_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/plans/components/view-plans/view-plans.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "PeriodicElement[]",
                "defaultValue": "[\r\n  { Currency: '', PricingCycle: 'Daily', Price: '$100/Unit' },\r\n  { Currency: '', PricingCycle: 'Weekly', Price: '$100/Unit' },\r\n  { Currency: '', PricingCycle: 'Monthly', Price: '$100/Unit' },\r\n  { Currency: '', PricingCycle: 'Yearly', Price: '$100/Unit' },\r\n]"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.dev.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false,\r\n   apiUrl: 'https://dev-kong-saasframework.symple.co.in/pcm/api/v1',\r\n  blobStorage: 'https://saasframeworkuploads.blob.core.windows.net',\r\n  kratosUrl: 'http://127.0.0.1:4433/self-service',\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true,  \r\n  apiUrl: 'https://dev-kong-saasframework.symple.co.in/pcm/api/v1',\r\n  blobStorage:'https://saasframeworkuploads.blob.core.windows.net',\r\n  kratosUrl:'http://127.0.0.1:4433/self-service',\r\n\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.uat.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false,\r\n  apiUrl: 'https://dev-kong-saasframework.symple.co.in/pcm/api/v1',\r\n  blobStorage: 'https://saasframeworkuploads.blob.core.windows.net',\r\n  kratosUrl: 'http://127.0.0.1:4433/self-service',\r\n}"
            },
            {
                "name": "Error404",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/errorLayout/stories/errorLayout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n      variant: 'E404',\r\n    },\r\n}"
            },
            {
                "name": "Error505",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/errorLayout/stories/errorLayout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n      variant: 'E505',\r\n    },\r\n    parameters: {\r\n      storybook: {\r\n        hideNoControlsWarning: true,\r\n      },\r\n      docs: {\r\n        source: {\r\n          code: `\r\n          <div>\r\n          <div class=\"absolute position-center text-center\">\r\n            <div class=\"\">\r\n              <img src=\"505-page.png\" alt=\"No Page Found\" />\r\n              <div class=\"my-10\">\r\n                <p class=\"mat-h1 purple-text text-darken-1\">Gateway Timeout Error</p>\r\n                <p class=\"desc-info mt-6 text-text text-lighten-2\">\r\n                We are very sorry for inconvenience. It looks like some how our server did not receive a timely response.\r\n                </p>\r\n              </div>\r\n              <a href=\"\">\r\n                <sft-button [label]=\"'Back To Home'\" [color]=\"'primary'\" [variant]=\"'flat'\" [disable]=\"false\"\r\n                  [disableRipple]=\"false\" [size]=\"'medium'\" [onClick]=\"'funtion()'\"></sft-button>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n           `,\r\n        },\r\n      },\r\n\r\n    },\r\n}"
            },
            {
                "name": "FEATURE_TYPE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/features/components/view-feature/view-feature.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'custom'"
            },
            {
                "name": "feature_types",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  { value: 1, title: 'switch' },\r\n  { value: 2, title: 'range' },\r\n  { value: 3, title: 'quantity' },\r\n  { value: 4, title: 'custom' },\r\n]"
            },
            {
                "name": "Features_Data",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    id: 'feature_id_459',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'feature_id_4591',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n]"
            },
            {
                "name": "Header",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/header/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n}"
            },
            {
                "name": "Input",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/Input/stories/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    readonly: false,\r\n    placeholder: 'Enter here...',\r\n    disable: false,\r\n    required: true,\r\n    label: 'Label',\r\n    infoIcon: false,\r\n    infoTitle: 'Title',\r\n    infoDetail:\r\n      'Microsoft Teams is the ultimate messaging app for your organization—a workspace for real-time collaboration and communication, meetings, file and app sharing, and even the occasional emoji! All in one place, all in the open, all accessible to everyone.',\r\n  },\r\n}"
            },
            {
                "name": "InvoiceList",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-003',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Payment Due',\r\n    amount: '199.00',\r\n  },\r\n]"
            },
            {
                "name": "LeftNavigation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/leftNavigation/stories/leftNavigation.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n}"
            },
            {
                "name": "listFilterOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  'Yesterday',\r\n  'Last 7 days',\r\n  'Last Week',\r\n  'Last 30 days',\r\n  'Last 4 weeks',\r\n  'Last 12 weeks',\r\n  'Current month',\r\n  'Last calendar month',\r\n]"
            },
            {
                "name": "Logs_Data",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Subscription has been created for the Plan.',\r\n    Customer_Info: 'Greenplus Enterprises',\r\n    Event_Source: 'Via Portal',\r\n  },\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Active  subscription created for demo',\r\n    Customer_Info: 'Zencorporation',\r\n    Event_Source: 'Via Interface',\r\n  },\r\n]"
            },
            {
                "name": "MATERIAL_DATEPICKER_FORMATS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/coupons/components/create-coupons/create-coupons.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  parse: {\r\n    dateInput: 'DD/MMM/YYYY',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MMM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'DD/MMM/YYYY',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n}"
            },
            {
                "name": "MATERIAL_DATEPICKER_FORMATS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/payment-history/logs/components/logs-list/logs-list.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  parse: {\r\n    dateInput: 'DD/MMM/YYYY',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MMM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'DD/MMM/YYYY',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n}"
            },
            {
                "name": "Menu",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/menu/stories/menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    withIcon: false,\r\n  },\r\n}"
            },
            {
                "name": "Menu_Headings",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Dashboard',\r\n    icon: 'settings',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Product Catalog ',\r\n    icon: 'logout',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Payment History ',\r\n    icon: 'logout',\r\n    category: 'Payment History',\r\n  },\r\n]"
            },
            {
                "name": "MENUITEMS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    state: '/overview',\r\n    type: 'link',\r\n    name: 'Overview',\r\n    icon: 'space_dashboard',\r\n    category: 'Dashboard'\r\n  },\r\n  {\r\n    state: '/customers',\r\n    type: 'link',\r\n    name: 'Customer',\r\n    icon: 'account_box',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/subscription',\r\n    type: 'link',\r\n    name: 'Subscription',\r\n    icon: 'card_membership',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/products',\r\n    type: 'link',\r\n    name: 'Products',\r\n    icon: 'local_mall',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/features',\r\n    type: 'link',\r\n    name: 'Features',\r\n    icon: 'featured_play_list',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/plans',\r\n    type: 'link',\r\n    name: 'Plans',\r\n    icon: 'quick_reference_all',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/stepper',\r\n    type: 'link',\r\n    name: 'Add Ons',\r\n    icon: 'add_notes',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/coupons',\r\n    type: 'link',\r\n    name: 'Coupons',\r\n    icon: 'confirmation_number',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/payment/transactions',\r\n    type: 'link',\r\n    name: 'Transactions',\r\n    icon: 'compare_arrows',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/invoices',\r\n    type: 'link',\r\n    name: 'Invoices',\r\n    icon: 'receipt_long',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/logs',\r\n    type: 'link',\r\n    name: 'Logs',\r\n    icon: 'list_alt',\r\n    category: 'Payment History',\r\n  },\r\n]"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/breadcrumb/stories/breadcrumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<Breadcrumb>",
                "defaultValue": "{\r\n  component: Breadcrumb,\r\n  title: 'softobiz-ui/Atom/Breadcrumb',\r\n  tags: ['autodocs'],\r\n  render: (args: Breadcrumb) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    id: { control: 'text' },\r\n    class: { control: 'text' }\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [MatIconModule, BrowserAnimationsModule],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/button/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ButtonComponent>",
                "defaultValue": "{\r\n  component: ButtonComponent,\r\n  title: 'softobiz-ui/Atom/Button',\r\n  tags: ['autodocs'],\r\n  render: (args: ButtonComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    variant: {\r\n      control: 'select',\r\n      options: [\r\n        'default',\r\n        'raised',\r\n        'flat',\r\n        'stroked',\r\n        'icon',\r\n        'fab',\r\n        'mini-fab',\r\n      ],\r\n    },\r\n    color: {\r\n      options: ['primary', 'accent', 'warn'],\r\n      control: { type: 'radio' },\r\n    },\r\n    label: { control: 'text' },\r\n    id: { control: 'text' },\r\n    class: { control: 'text' },\r\n    onClick: { control: 'text', defaultValue: 'clickfuntion()' },\r\n    disable: {\r\n      control: 'boolean',\r\n      defaultValue: false,\r\n    },\r\n    disableRipple: {\r\n      control: 'boolean',\r\n    },\r\n    size: {\r\n      control: 'select',\r\n      options: ['small', 'medium', 'large', 'link-text', 'icon-text'],\r\n    },\r\n    type: {\r\n      control: 'select',\r\n      options: ['button', 'submit', 'reset'],\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [MatButtonModule, BrowserAnimationsModule, MatIconModule],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/calendar/stories/calendar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CalendarComponent>",
                "defaultValue": "{\r\n  component: CalendarComponent,\r\n  title: 'softobiz-ui/Molecules/Calendar',\r\n  tags: ['autodocs'],\r\n  render: (args: CalendarComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {},\r\n  decorators: [\r\n    componentWrapperDecorator((story) => `<div class=\"storybook-calendar\" >${story}</div>`),\r\n    moduleMetadata({\r\n      imports: [\r\n        MatMenuModule,\r\n        MatButtonModule,\r\n        MatDialogModule,\r\n        MatButtonModule,\r\n        BrowserAnimationsModule,\r\n        MatIconModule,\r\n        MatDatepickerModule,\r\n        MatNativeDateModule,\r\n        FormsModule,\r\n        MatFormFieldModule,\r\n        MatInputModule ,\r\n        MatTabsModule\r\n      ],\r\n    }),\r\n  ],\r\n  parameters: {\r\n    docs: {\r\n      source: {\r\n        code: `\r\n        <div class=\"py-2 px-6\">\r\n        <div class=\"flex align-center input-wrapper px-2\">\r\n          <div class=\"block filter-input mr-4\">\r\n            <span class=\"block mat-body-1 pl-2 mb-1\"> Start </span>\r\n            <mat-form-field>\r\n              <input\r\n                matInput\r\n                placeholder=\"Start Date\"\r\n                [(ngModel)]=\"startDate\"\r\n\r\n\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"block filter-input\">\r\n            <span class=\"block mat-body-1 pl-2 mb-1\"> End </span>\r\n            <mat-form-field>\r\n              <input matInput type=\"text\" placeholder=\"end Date\" />\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n        <mat-calendar></mat-calendar>\r\n        <div class=\"w-full flex justify-end align-center\">\r\n          <button mat-stroked-button color=\"primary\" class=\"mr-3\">Cancel</button>\r\n          <button mat-flat-button color=\"primary\">Apply</button>\r\n        </div>\r\n        </div>\r\n        `,\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/Checkbox/stories/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CheckboxComponent>",
                "defaultValue": "{\r\n  component: CheckboxComponent,\r\n  title: 'softobiz-ui/Atom/Checkbox',\r\n  tags: ['autodocs'],\r\n  render: (args: CheckboxComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    disable: {\r\n      control: 'boolean',\r\n    },\r\n    checked: {\r\n      control: 'boolean',\r\n    },\r\n    disableRipple: {\r\n      control: 'boolean',\r\n    },\r\n    color: {\r\n      options: ['primary', 'accent', 'warn'],\r\n      control: { type: 'radio' },\r\n    },\r\n    indeterminate: {\r\n      control: 'boolean',\r\n      option: [true, false]\r\n    },\r\n    label: {\r\n      control:'text'\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [MatCheckboxModule],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/Chip/stories/chip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ChipComponent>",
                "defaultValue": "{\r\n  component: ChipComponent,\r\n  title: 'softobiz-ui/Atom/Chip',\r\n  tags: ['autodocs'],\r\n  render: (args: ChipComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    // color: {\r\n    //   options: ['primary', 'accent', 'warn', 'primary-light'],\r\n    //   control: { type: 'radio' },\r\n    // },\r\n\r\n    ariaDescription: {\r\n      control: 'text',\r\n    },\r\n\r\n    ariaLabel: {\r\n      control: 'text',\r\n    },\r\n\r\n    disableRipple: {\r\n      control: 'boolean',\r\n    },\r\n\r\n    disabled: {\r\n      control: 'boolean',\r\n    },\r\n\r\n    // selected: {\r\n    //   control: 'boolean',\r\n    // },\r\n\r\n    highlighted: {\r\n      control: 'boolean',\r\n    },\r\n\r\n    withIcon: {\r\n      control: 'boolean',\r\n    },\r\n\r\n    label: { control: 'text' },\r\n\r\n    class: {\r\n      control: 'text',\r\n    },\r\n    id: {\r\n      control: 'text',\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [MatChipsModule, MatIconModule],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/color/stories/color.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ColorComponent>",
                "defaultValue": "{\r\n  component: ColorComponent,\r\n  title: 'softobiz-ui/Atom/Color',\r\n  tags: ['autodocs'],\r\n  render: (args: ColorComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [],\r\n    }),\r\n  ],\r\n  parameters: {\r\n    docs: {\r\n      source: {\r\n        code: `\r\n        <div class=\"mb-3\">\r\n    <p class=\"mat-headline-5 mb-3\">Primary</p>\r\n    <div class=\"flex\">\r\n        <div class=\"color-box large-box primary-bg mr-2\"></div>\r\n        <div class=\"color-box medium primary-light-bg mr-2\"></div>\r\n        <div class=\"color-box medium primary-dark-1-bg\"></div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"mb-3\">\r\n    <p class=\"mat-headline-5 mb-3\">Neutral</p>\r\n    <div class=\"flex\">\r\n        <div class=\"color-box small neutral-black-bg mr-2\"></div>\r\n        <div class=\"color-box small neutral-dark-gray-bg mr-2\"></div>\r\n        <div class=\"color-box small neutral-gray-bg mr-2\"></div>\r\n        <div class=\"color-box small neutral-gray-Outline-bg mr-2\"></div>\r\n        <div class=\"color-box small neutral-gray-light-bg mr-2\"></div>\r\n        <div class=\"color-box small neutral-gray-off-bg mr-2\"></div>\r\n        <div class=\"color-box small neutral-gray-stroke-bg mr-2\"></div>\r\n        <div class=\"color-box small neutral-gray-off-white-bg mr-2\"></div>\r\n        <div class=\"color-box small main-bg mr-2 border-outline\"></div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"mb-3\">\r\n    <p class=\"mat-headline-5 mb-3\">Utility</p>\r\n    <div class=\"flex mb-3\">\r\n        <div class=\"color-box small green-success-bg mr-2\"></div>\r\n        <div class=\"color-box small green-lighten-100-bg mr-2\"></div>\r\n        <div class=\"color-box small green-lighten-200-bg mr-2\"></div>\r\n        <div class=\"color-box small green-lighten-300-bg mr-2\"></div>\r\n        <div class=\"color-box small green-lighten-400-bg mr-2\"></div>\r\n        <div class=\"color-box small green-lighten-500-bg mr-2\"></div>\r\n        <div class=\"color-box small green-lighten-600-bg mr-2\"></div>\r\n        <div class=\"color-box small green-lighten-700-bg mr-2\"></div>\r\n        <div class=\"color-box small extent green-success-bg mr-2\"></div>\r\n        <div class=\"color-box small green-lighten-900-bg mr-2\"></div>\r\n        <div class=\"color-box small green-lighten-1000-bg mr-2\"></div>\r\n    </div>\r\n    <div class=\"flex mb-3\">\r\n        <div class=\"color-box small blue-bg mr-2\"></div>\r\n        <div class=\"color-box small blue-lighten-100-bg mr-2\"></div>\r\n        <div class=\"color-box small blue-lighten-200-bg mr-2\"></div>\r\n        <div class=\"color-box small blue-lighten-300-bg mr-2\"></div>\r\n        <div class=\"color-box small blue-lighten-400-bg mr-2\"></div>\r\n        <div class=\"color-box small blue-lighten-500-bg mr-2\"></div>\r\n        <div class=\"color-box small blue-lighten-600-bg mr-2\"></div>\r\n        <div class=\"color-box small extent blue-bg mr-2\"></div>\r\n        <div class=\"color-box small blue-lighten-800-bg mr-2\"></div>\r\n        <div class=\"color-box small blue-lighten-900-bg mr-2\"></div>\r\n        <div class=\"color-box small blue-lighten-1000-bg mr-2\"></div>\r\n    </div>\r\n    <div class=\"flex mb-3\">\r\n        <div class=\"color-box small orange-bg mr-2\"></div>\r\n        <div class=\"color-box small orange-lighten-100-bg mr-2\"></div>\r\n        <div class=\"color-box small orange-lighten-200-bg mr-2\"></div>\r\n        <div class=\"color-box small orange-lighten-300-bg mr-2\"></div>\r\n        <div class=\"color-box small orange-lighten-400-bg mr-2\"></div>\r\n        <div class=\"color-box small orange-lighten-500-bg mr-2\"></div>\r\n        <div class=\"color-box small extent orange-lighten-600-bg mr-2\"></div>\r\n        <div class=\"color-box small orange-lighten-700-bg mr-2\"></div>\r\n        <div class=\"color-box small orange-lighten-800-bg mr-2\"></div>\r\n        <div class=\"color-box small orange-lighten-900-bg mr-2\"></div>\r\n        <div class=\"color-box small orange-lighten-1000-bg mr-2\"></div>\r\n    </div>\r\n    <div class=\"flex\">\r\n        <div class=\"color-box small red-bg mr-2\"></div>\r\n        <div class=\"color-box small red-lighten-100-bg mr-2\"></div>\r\n        <div class=\"color-box small red-lighten-200-bg mr-2\"></div>\r\n        <div class=\"color-box small red-lighten-300-bg mr-2\"></div>\r\n        <div class=\"color-box small red-lighten-400-bg mr-2\"></div>\r\n        <div class=\"color-box small red-lighten-500-bg mr-2\"></div>\r\n        <div class=\"color-box small red-lighten-600-bg mr-2\"></div>\r\n        <div class=\"color-box small red-lighten-700-bg mr-2\"></div>\r\n        <div class=\"color-box small extent red-lighten-800-bg mr-2\"></div>\r\n        <div class=\"color-box small red-lighten-900-bg mr-2\"></div>\r\n        <div class=\"color-box small red-lighten-1000-bg mr-2\"></div>\r\n    </div>\r\n</div>\r\n        `,\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/dashboardLayout/stories/dashboardLayout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DashboardLayoutComponent>",
                "defaultValue": "{\r\n  component: DashboardLayoutComponent,\r\n  title: 'softobiz-ui/Layout/Dashboard Layout',\r\n  tags: ['autodocs'],\r\n  render: (args: DashboardLayoutComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    menuItems: { table: { disable: true } },\r\n    configOptions: { table: { disable: true } },\r\n    Menu_Headings: { table: { disable: true } },\r\n    userProfile: { table: { disable: true } },\r\n    notificationsData: { table: { disable: true } },\r\n    activeRoute: { table: { disable: true } },\r\n    currentRoute: { table: { disable: true } },\r\n    globalService: { table: { disable: true } },\r\n    opened: { table: { disable: true } },\r\n    newItemEvent: { table: { disable: true } },\r\n    toggleSidenav: { table: { disable: true } },\r\n    route: { table: { disable: true } },\r\n    getList: { table: { disable: true } },\r\n    sidenav: { table: { disable: true } },\r\n  },\r\n  decorators: [\r\n    componentWrapperDecorator(\r\n      (story) => `<div class=\"left-navigation\" >${story}</div>`\r\n    ),\r\n    moduleMetadata({\r\n      imports: [\r\n        CommonModule,\r\n        AngularMaterialModule,\r\n        BrowserAnimationsModule,\r\n        RouterTestingModule, \r\n      ],\r\n      declarations: [\r\n        SidebarComponent,\r\n      ],\r\n    }),\r\n  ],\r\n\r\n  parameters: {\r\n    docs: {\r\n      source: {\r\n        code: `\r\n        <div class=\"outer-layout\">\r\n        <mat-sidenav-container [ngClass]=\"opened ? 'sidenav-open' : 'sidenav-closed'\">\r\n          <mat-sidenav #sidenav mode=\"side\" opened=\"true\" class=\"sidenav-slider\">\r\n            <!-- <app-sidebar (newItemEvent)=\"toggleSidenav($event)\"></app-sidebar> -->\r\n            <!-- <sft-leftNavigation></sft-leftNavigation> -->\r\n            <div class=\"sidenav-wrapper border-2\">\r\n              <div class=\"sidebar-toggle\">\r\n                <button\r\n                  mat-mini-fab\r\n                  color=\"accent\"\r\n                  class=\"toggle-sidenav\"\r\n                  (click)=\"toggleSidenav()\"\r\n                >\r\n                  <svg\r\n                    width=\"8\"\r\n                    height=\"14\"\r\n                    viewBox=\"0 0 8 14\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path\r\n                      d=\"M0.269968 12.3681L1.42697 13.5186L7.85547 7.08355L1.42047 0.648554L0.269969 1.79905L5.55447 7.08355L0.269968 12.3681V12.3681Z\"\r\n                      fill=\"white\"\r\n                    />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n              <div class=\"sidebar-wrapper\">\r\n                <div class=\"logo pointer\">\r\n                  <div class=\"logo-img pointer\">\r\n                    <img src=\"/framework-logo.png\" alt=\"logo\" />\r\n                  </div>\r\n                  <div class=\"text-wrapper\">\r\n                    <h3>Digital</h3>\r\n                    <span class=\"logo-text\">Framework</span>\r\n                  </div>\r\n                </div>\r\n                <div class=\"sidebar-scrollable mt-11\">\r\n                  <mat-nav-list class=\"sidebar p-0\">\r\n                    <div *ngFor=\"let element of Menu_Headings\" class=\"transition-400\">\r\n                      <div\r\n                        *ngIf=\"element.name != 'Dashboard'\"\r\n                        class=\"category-heading\"\r\n                      >\r\n                        <h1>{{ element.name }}</h1>\r\n                      </div>\r\n                      <mat-list-item\r\n                        class=\"nav-list-item p-0 w-full\"\r\n                        *ngFor=\"let item of getList(element.category)\"\r\n                      >\r\n                        <a\r\n                          class=\"icon-wrapper flex align-center\"\r\n                        >\r\n                          <div class=\"flex justify-center sidebar-icon-wraper\">\r\n                            <mat-icon\r\n                              class=\"material-symbols-outlined m-0 sidebar-icon\"\r\n                              >{{ item.icon }}</mat-icon\r\n                            >\r\n                          </div>\r\n                          <div class=\"content-wrapper\">\r\n                            <span class=\"content\">{{ item.name }}</span>\r\n                          </div>\r\n                        </a>\r\n                      </mat-list-item>\r\n                    </div>\r\n                  </mat-nav-list>\r\n                  <div class=\"image-wrapper\">\r\n                    <div class=\"img\">\r\n                      <img src=\"/dashboard-cat.png\" alt=\"Dashboard Get Started\" />\r\n                    </div>\r\n                    <div class=\"text\">\r\n                      <h3>First steps</h3>\r\n                      <p class=\"description\">\r\n                        Customize your dashboard and lean <br />about out features\r\n                      </p>\r\n                      <span class=\"pointer\">Get Started</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <mat-nav-list class=\"config-section sidebar\">\r\n                  <mat-list-item\r\n                    class=\"nav-list-item p-0\"\r\n                    *ngFor=\"let item of configOptions\"\r\n                  >\r\n                    <a\r\n                      class=\"icon-wrapper flex align-center\"\r\n                      [routerLink]=\"['/', item.state]\"\r\n                    >\r\n                      <mat-icon class=\"material-symbols-outlined m-0 sidebar-icon\">{{\r\n                        item.icon\r\n                      }}</mat-icon>\r\n                      <div class=\"content-wrapper\">\r\n                        <span class=\"content\">{{ item.name }}</span>\r\n                      </div>\r\n                    </a>\r\n                  </mat-list-item>\r\n                </mat-nav-list>\r\n              </div>\r\n            </div>\r\n          </mat-sidenav>\r\n          <mat-sidenav-content>\r\n            <!-- Header for application starts here! -->\r\n            <div class=\"header-wrapper border-2\">\r\n              <div class=\"global-search basic mr-6 border-2\">\r\n                <span class=\"search-icon pointer\">\r\n                  <img src=\"/icons/search.svg\" alt=\"search-icon\" />\r\n                </span>\r\n                <input type=\"text\" placeholder=\"Search...\" />\r\n              </div>\r\n              <div class=\"header-right\">\r\n                <div\r\n                  class=\"notifications-section pointer\"\r\n                  [matMenuTriggerFor]=\"notificationsMenu\"\r\n                  matBadge=\"3\"\r\n                  matBadgeSize=\"small\"\r\n                  matBadgeColor=\"warn\"\r\n                >\r\n                  <img src=\"/icons/notifications.svg\" alt=\"notifications-icon\" />\r\n                </div>\r\n                <mat-menu\r\n                  #notificationsMenu=\"matMenu\"\r\n                  class=\"notifications-menu border-2\"\r\n                  backdropClass=\"right-menu\"\r\n                >\r\n                  <div class=\"notifications-header\">\r\n                    <div class=\"flex align-center justify-between\">\r\n                      <div class=\"label\">Notifications</div>\r\n                      <mat-chip class=\"basic-chip\"> 4 New </mat-chip>\r\n                    </div>\r\n                    <div class=\"tab-panel\" (click)=\"preventClose($event)\">\r\n                      <mat-tab-group mat-stretch-tabs=\"false\" mat-align-tabs=\"start\">\r\n                        <mat-tab label=\"All (4)\">\r\n                          <div\r\n                            class=\"relative h-55\"\r\n                            *ngIf=\"notificationsData.length == 0\"\r\n                          >\r\n                            <div class=\"absolute position-center text-center w-full\">\r\n                              <img src=\"/notifications-icon.png\" alt=\"no data\" />\r\n                              <span class=\"block mt-6\">\r\n                                Hey! You have no notifications.\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                          <div\r\n                            class=\"notification-list\"\r\n                            (click)=\"preventClose($event)\"\r\n                            *ngIf=\"notificationsData.length > 0\"\r\n                          ></div>\r\n                        </mat-tab>\r\n                        <mat-tab label=\"Messages\">\r\n                          <div\r\n                            class=\"relative h-55\"\r\n                            *ngIf=\"notificationsData.length == 0\"\r\n                          >\r\n                            <div class=\"absolute position-center text-center w-full\">\r\n                              <img src=\"/notifications-icon.png\" alt=\"no data\" />\r\n                              <span class=\"block mt-6\">\r\n                                Hey! You have no notifications.\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                          <div\r\n                            class=\"message-list\"\r\n                            (click)=\"preventClose($event)\"\r\n                            *ngIf=\"notificationsData.length > 0\"\r\n                          >\r\n                            My Messages\r\n                          </div>\r\n                        </mat-tab>\r\n                        <mat-tab label=\"Alerts\">\r\n                          <div\r\n                            class=\"relative h-55\"\r\n                            *ngIf=\"notificationsData.length == 0\"\r\n                          >\r\n                            <div class=\"absolute position-center text-center w-full\">\r\n                              <img src=\"/notifications-icon.png\" alt=\"no data\" />\r\n                              <span class=\"block mt-6\">\r\n                                Hey! You have no notifications.\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                          <div\r\n                            class=\"message-list\"\r\n                            (click)=\"preventClose($event)\"\r\n                            *ngIf=\"notificationsData.length > 0\"\r\n                          >\r\n                            Alerts\r\n                          </div>\r\n                        </mat-tab>\r\n                      </mat-tab-group>\r\n                    </div>\r\n                    <div\r\n                      class=\"text-center modal-footer pointer\"\r\n                      (click)=\"preventClose($event)\"\r\n                    >\r\n                      <span class=\"block py-4\"> View All </span>\r\n                    </div>\r\n                  </div>\r\n                </mat-menu>\r\n                <div class=\"user-profile pointer\" [matMenuTriggerFor]=\"menu\">\r\n                  <div class=\"user-image\">\r\n                    <img src=\"/profile-avatar-1.png\" />\r\n                  </div>\r\n                  <div class=\"user-info\">\r\n                    <span class=\"name\">John Smith</span>\r\n                    <span class=\"role\">Founder</span>\r\n                  </div>\r\n                </div>\r\n                <mat-menu\r\n                  #menu=\"matMenu\"\r\n                  class=\"profile-menu\"\r\n                  backdropClass=\"alert-menu\"\r\n                >\r\n                  <div class=\"profile-menu-outer\">\r\n                    <div class=\"grad-bg\">\r\n                      <div class=\"user-initials\">JS</div>\r\n                    </div>\r\n                    <div class=\"profile-inner\">\r\n                      <p class=\"mat-h1 fw-600 m-0\">John Smith</p>\r\n                      <p class=\"m-0 mt-1\">Founder</p>\r\n                    </div>\r\n                    <div class=\"profile-paths\">\r\n                      <a\r\n                        class=\"flex align-center justify-between user-link\"\r\n                        *ngFor=\"let element of userProfile\"\r\n                      >\r\n                        <div class=\"flex align-center\">\r\n                          <mat-icon class=\"material-symbols-outlined\">{{\r\n                            element.icon\r\n                          }}</mat-icon>\r\n                          <span class=\"ml-3\">{{ element.name }}</span>\r\n                        </div>\r\n                        <div *ngIf=\"element.toggle\">\r\n                          <mat-slide-toggle\r\n                            color=\"primary\"\r\n                            (click)=\"preventClose($event)\"\r\n                          ></mat-slide-toggle>\r\n                        </div>\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </mat-menu>\r\n              </div>\r\n            </div>\r\n            <div class=\"pt-6 main-content-height\">\r\n              <router-outlet></router-outlet>\r\n            </div>\r\n          </mat-sidenav-content>\r\n        </mat-sidenav-container>\r\n      </div>\r\n      \r\n        `,\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/dialog/stories/dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DialogComponent>",
                "defaultValue": "{\r\n  component: DialogComponent,\r\n  title: 'softobiz-ui/Organism/Dialog',\r\n  tags: ['autodocs'],\r\n  render: (args: DialogComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {},\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [BrowserAnimationsModule, MatIconModule, AngularMaterialModule],\r\n      declarations: [DialogInfoComponent,DialogInfoDeleteSuccess],\r\n    }),\r\n  ],\r\n  parameters: {\r\n    docs: {\r\n      source: {\r\n        code: `\r\n        <button mat-menu-item disableRipple (click)=\"openDelete()\">\r\n        Delete\r\n       </button>\r\n        `,\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/dialog-info/stories/dialog-info.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DialogInfoComponent>",
                "defaultValue": "{\r\n  component: DialogInfoComponent,\r\n  title: 'softobiz-ui/Molecules/Dialog-info',\r\n  tags: ['autodocs'],\r\n  render: (args: DialogInfoComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        MatMenuModule,\r\n        MatButtonModule,\r\n        MatDialogModule,\r\n        BrowserAnimationsModule,\r\n        MatIconModule,\r\n        AngularMaterialModule,\r\n        SftErrorLayoutModule,\r\n      ],\r\n      declarations: [DialogInfoComponent,DialogInfoDeleteSuccess],\r\n    }),\r\n  ],\r\n\r\n  parameters: {\r\n    docs: {\r\n      source: {\r\n        code: `\r\n        <div class=\"border-2 text-center coupons-dialog\">\r\n        <div class=\"close-dialog-icon\">\r\n            <mat-icon (click)=\"onCancelClick()\" class=\"material-symbols-outlined\">close</mat-icon>\r\n        </div>\r\n        <div class=\"mb-6\">\r\n            <img src=\"/coupons-delete-confirmation.png\" alt=\"delete-confirmation\">\r\n        </div>\r\n        <h1 class=\"mb-4\">Confirmation</h1>\r\n        <span class=\"mat-body-1 mb-8 block\">Are you sure you want to delete plan</span\r\n        >\r\n        <div class=\"flex-center\">\r\n          <button mat-stroked-button color=\"primary\" mat-dialog-close (click)=\"onCancelClick()\" class=\"px-6 medium\">Cancel</button>\r\n          <button mat-flat-button color=\"primary\" class=\"medium ml-2\" [mat-dialog-close]=\"true\" (click)=\"onYesClick()\">Yes</button>\r\n        </div>\r\n      </div>\r\n      `\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/errorLayout/stories/errorLayout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ErrorLayoutComponent>",
                "defaultValue": "{\r\n  component: ErrorLayoutComponent,\r\n  title: 'softobiz-ui/Pages/Error',\r\n  tags: ['autodocs'],\r\n  render: (args: ErrorLayoutComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    variant: {\r\n      control: 'select',\r\n      options: ['E404', 'E505'],\r\n    },\r\n  },\r\n  decorators: [\r\n    componentWrapperDecorator(\r\n      (story) => `<div class=\"error-page\">${story}</div>`\r\n    ),\r\n    moduleMetadata({\r\n      imports: [\r\n        CommonModule,\r\n        AngularMaterialModule,\r\n        BrowserAnimationsModule,\r\n      ],\r\n      declarations: [\r\n        ButtonComponent,\r\n      ],\r\n    }),\r\n  ],\r\n\r\n  parameters: {\r\n    docs: {\r\n      source: {\r\n        code: `\r\n        \r\n        <div class=\"absolute position-center text-center\">\r\n        <div class=\"\">\r\n          <img src=\"404-page.png\" alt=\"No Page Found\" />\r\n          <div class=\"my-10\">\r\n            <p class=\"mat-h1 purple-text text-darken-1\"> Oops! Why you’re here?</p>\r\n            <p class=\"desc-info mt-6 text-text text-lighten-2\">\r\n            We are very sorry for inconvenience. It looks like you’re try to access a page that either has been deleted or never existed.\r\n            </p>\r\n          </div>\r\n          <a href=\"\">\r\n            <sft-button [label]=\"'Back To Home'\" [color]=\"'primary'\" [variant]=\"'flat'\" [disable]=\"false\"\r\n              [disableRipple]=\"false\" [size]=\"'medium'\" [onClick]=\"'funtion()'\"></sft-button>\r\n          </a>\r\n        </div>\r\n      </div>\r\n        `,\r\n      },\r\n    },\r\n  },  \r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/header/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<HeaderComponent>",
                "defaultValue": "{\r\n  component: HeaderComponent,\r\n  title: 'softobiz-ui/Molecules/Header',\r\n  tags: ['autodocs'],\r\n  render: (args: HeaderComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {},\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        AngularMaterialModule,\r\n        BrowserAnimationsModule,\r\n      ],\r\n      declarations: [ProfileComponent, SearchbarComponent],\r\n    }),\r\n  ],\r\n\r\n  parameters: {\r\n    docs: {\r\n      source: {\r\n        code: `\r\n          <div class=\"header-wrapper border-2\">\r\n            <sft-searchbar></sft-searchbar>\r\n            <div class=\"header-right\">\r\n              <div\r\n                class=\"notifications-section pointer\"\r\n                [matMenuTriggerFor]=\"notificationsMenu\"\r\n                matBadge=\"3\"\r\n                matBadgeSize=\"small\"\r\n                matBadgeColor=\"warn\"\r\n              >\r\n                <img src=\"/icons/notifications.svg\" alt=\"notifications-icon\" />\r\n              </div>\r\n              <mat-menu\r\n                #notificationsMenu=\"matMenu\"\r\n                class=\"notifications-menu border-2\"\r\n                backdropClass=\"right-menu\"\r\n              >\r\n                <div class=\"notifications-header\">\r\n                  <div class=\"flex align-center justify-between\">\r\n                    <div class=\"label\">Notifications</div>\r\n                    <mat-chip class=\"basic-chip\"> 4 New </mat-chip>\r\n                  </div>\r\n                  <div class=\"tab-panel\" (click)=\"preventClose($event)\">\r\n                    <mat-tab-group mat-stretch-tabs=\"false\" mat-align-tabs=\"start\">\r\n                      <mat-tab label=\"All (4)\">\r\n                        <div\r\n                          class=\"relative h-55\"\r\n                          *ngIf=\"notificationsData.length == 0\"\r\n                        >\r\n                          <div class=\"absolute position-center text-center w-full\">\r\n                            <img src=\"/notifications-icon.png\" alt=\"no data\" />\r\n                            <span class=\"block mt-6\">\r\n                              Hey! You have no notifications.\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                        <div\r\n                          class=\"notification-list\"\r\n                          (click)=\"preventClose($event)\"\r\n                          *ngIf=\"notificationsData.length > 0\"\r\n                        ></div>\r\n                      </mat-tab>\r\n                      <mat-tab label=\"Messages\">\r\n                        <div\r\n                          class=\"relative h-55\"\r\n                          *ngIf=\"notificationsData.length == 0\"\r\n                        >\r\n                          <div class=\"absolute position-center text-center w-full\">\r\n                            <img src=\"/notifications-icon.png\" alt=\"no data\" />\r\n                            <span class=\"block mt-6\">\r\n                              Hey! You have no notifications.\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                        <div\r\n                          class=\"message-list\"\r\n                          (click)=\"preventClose($event)\"\r\n                          *ngIf=\"notificationsData.length > 0\"\r\n                        >\r\n                          My Messages\r\n                        </div>\r\n                      </mat-tab>\r\n                      <mat-tab label=\"Alerts\">\r\n                        <div\r\n                          class=\"relative h-55\"\r\n                          *ngIf=\"notificationsData.length == 0\"\r\n                        >\r\n                          <div class=\"absolute position-center text-center w-full\">\r\n                            <img src=\"/notifications-icon.png\" alt=\"no data\" />\r\n                            <span class=\"block mt-6\">\r\n                              Hey! You have no notifications.\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                        <div\r\n                          class=\"message-list\"\r\n                          (click)=\"preventClose($event)\"\r\n                          *ngIf=\"notificationsData.length > 0\"\r\n                        >\r\n                          Alerts\r\n                        </div>\r\n                      </mat-tab>\r\n                    </mat-tab-group>\r\n                  </div>\r\n                  <div\r\n                    class=\"text-center modal-footer pointer\"\r\n                    (click)=\"preventClose($event)\"\r\n                  >\r\n                    <span class=\"block py-4\"> View All </span>\r\n                  </div>\r\n                </div>\r\n              </mat-menu>\r\n              <sft-profile></sft-profile>\r\n            </div>\r\n          </div>\r\n        `,\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/Input/stories/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<InputComponent>",
                "defaultValue": "{\r\n  component: InputComponent,\r\n  title: 'softobiz-ui/Atom/Input',\r\n  tags: ['autodocs'],\r\n  render: (args: InputComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    hint: { control: 'text' },\r\n    class: { control: 'text' },\r\n    infoIcon: {\r\n      control: 'boolean',\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        BrowserAnimationsModule,\r\n        MatIconModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        NgxTippyModule,\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/leftNavigation/stories/leftNavigation.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<LeftNavigationComponent>",
                "defaultValue": "{\r\n  component: LeftNavigationComponent,\r\n  title: 'softobiz-ui/Organism/Left Navigation',\r\n  tags: ['autodocs'],\r\n  render: (args: LeftNavigationComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    menuItems: { table: { disable: true } },\r\n    configOptions: { table: { disable: true } },\r\n    Menu_Headings: { table: { disable: true } },\r\n    userProfile: { table: { disable: true } },\r\n    notificationsData: { table: { disable: true } },\r\n    activeRoute: { table: { disable: true } },\r\n    currentRoute: { table: { disable: true } },\r\n    globalService: { table: { disable: true } },\r\n    opened: { table: { disable: true } },\r\n    newItemEvent: { table: { disable: true } },\r\n    toggleSidenav: { table: { disable: true } },\r\n    route: { table: { disable: true } },\r\n    getList: { table: { disable: true } },\r\n    sidenav: { table: { disable: true } },\r\n  },\r\n  decorators: [\r\n    componentWrapperDecorator(\r\n      (story) => `<div class=\"left-navigation\" >${story}</div>`\r\n    ),\r\n    moduleMetadata({\r\n      imports: [\r\n        MatMenuModule,\r\n        MatMenuModule,\r\n        MatIconModule,\r\n        BrowserAnimationsModule,\r\n        MatChipsModule,\r\n        MatSidenavModule,\r\n        // ActivatedRoute,\r\n        MatChipsModule,\r\n        MatSlideToggleModule,\r\n        RouterTestingModule,\r\n        MatListModule,\r\n        MatButtonModule,\r\n      ],\r\n      declarations: [SidebarComponent],\r\n    }),\r\n  ],\r\n\r\n  parameters: {\r\n    docs: {\r\n      source: {\r\n        code: `\r\n          <div class=\"outer-layout\">\r\n            <mat-sidenav-container [ngClass]=\"opened ? 'sidenav-open' : 'sidenav-closed'\">\r\n              <mat-sidenav #sidenav mode=\"side\" opened=\"true\" class=\"sidenav-slider\">\r\n                <div class=\"sidenav-wrapper border-2\">\r\n                  <div class=\"sidebar-toggle\">\r\n                    <button\r\n                      mat-mini-fab\r\n                      color=\"accent\"\r\n                      class=\"toggle-sidenav\"\r\n                      (click)=\"toggleSidenav()\"\r\n                    >\r\n                      <svg\r\n                        width=\"8\"\r\n                        height=\"14\"\r\n                        viewBox=\"0 0 8 14\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          d=\"M0.269968 12.3681L1.42697 13.5186L7.85547 7.08355L1.42047 0.648554L0.269969 1.79905L5.55447 7.08355L0.269968 12.3681V12.3681Z\"\r\n                          fill=\"white\"\r\n                        />\r\n                      </svg>\r\n                    </button>\r\n                  </div>\r\n                  <div class=\"sidebar-wrapper\">\r\n                    <div class=\"logo pointer\">\r\n                      <div class=\"logo-img pointer\">\r\n                        <img src=\"/framework-logo.png\" alt=\"logo\" />\r\n                      </div>\r\n                      <div class=\"text-wrapper\">\r\n                        <h3>Digital</h3>\r\n                        <span class=\"logo-text\">Framework</span>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"sidebar-scrollable mt-11\">\r\n                      <mat-nav-list class=\"sidebar p-0\">\r\n                        <div *ngFor=\"let element of Menu_Headings\" class=\"transition-400\">\r\n                          <div\r\n                            *ngIf=\"element.name != 'Dashboard'\"\r\n                            class=\"category-heading\"\r\n                          >\r\n                            <h1>{{ element.name }}</h1>\r\n                          </div>\r\n                          <mat-list-item\r\n                            class=\"nav-list-item p-0 w-full\"\r\n                            *ngFor=\"let item of getList(element.category)\"\r\n                          >\r\n                            <a\r\n                              class=\"icon-wrapper flex align-center\"\r\n                            >\r\n                              <div class=\"flex justify-center sidebar-icon-wraper\">\r\n                                <mat-icon\r\n                                  class=\"material-symbols-outlined m-0 sidebar-icon\"\r\n                                  >{{ item.icon }}</mat-icon\r\n                                >\r\n                              </div>\r\n                              <div class=\"content-wrapper\">\r\n                                <span class=\"content\">{{ item.name }}</span>\r\n                              </div>\r\n                            </a>\r\n                          </mat-list-item>\r\n                        </div>\r\n                      </mat-nav-list>\r\n                      <div class=\"image-wrapper\">\r\n                        <div class=\"img\">\r\n                          <img src=\"/dashboard-cat.png\" alt=\"Dashboard Get Started\" />\r\n                        </div>\r\n                        <div class=\"text\">\r\n                          <h3>First steps</h3>\r\n                          <p class=\"description\">\r\n                            Customize your dashboard and lean <br />about out features\r\n                          </p>\r\n                          <span class=\"pointer\">Get Started</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <mat-nav-list class=\"config-section sidebar\">\r\n                      <mat-list-item\r\n                        class=\"nav-list-item p-0\"\r\n                        *ngFor=\"let item of configOptions\"\r\n                      >\r\n                        <a\r\n                          class=\"icon-wrapper flex align-center\"\r\n                          [routerLink]=\"['/', item.state]\"\r\n                        >\r\n                          <mat-icon class=\"material-symbols-outlined m-0 sidebar-icon\">{{\r\n                            item.icon\r\n                          }}</mat-icon>\r\n                          <div class=\"content-wrapper\">\r\n                            <span class=\"content\">{{ item.name }}</span>\r\n                          </div>\r\n                        </a>\r\n                      </mat-list-item>\r\n                    </mat-nav-list>\r\n                  </div>\r\n                </div>\r\n              </mat-sidenav>\r\n              <mat-sidenav-content>\r\n                <div class=\"pt-6 main-content-height\">\r\n                  <router-outlet></router-outlet>\r\n                </div>\r\n              </mat-sidenav-content>\r\n            </mat-sidenav-container>\r\n          </div>\r\n        `,\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/menu/stories/menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<MenuComponent>",
                "defaultValue": "{\r\n  component: MenuComponent,\r\n  title: 'softobiz-ui/Molecules/Menu',\r\n  tags: ['autodocs'],\r\n  render: (args: MenuComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    withIcon: {\r\n      control: 'boolean',\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        MatMenuModule,\r\n        MatButtonModule,\r\n        MatDialogModule,\r\n        MatButtonModule,\r\n        BrowserAnimationsModule,\r\n        MatIconModule,\r\n      ],\r\n    }),\r\n  ],\r\n\r\n  parameters: {\r\n    docs: {\r\n      source: {\r\n        code: `\r\n        <mat-icon class=\"material-symbols-outlined\" [matMenuTriggerFor]=\"actionsMenu\">\r\n          more_vert\r\n        </mat-icon>\r\n        <mat-menu #actionsMenu=\"matMenu\" class=\"actions-menu\" backdropClass=\"edit-menu\">\r\n          <button mat-menu-item disableRipple>\r\n            <mat-icon class=\"material-symbols-outlined\"\r\n              ><img src=\"/icons/bunny.svg\" alt=\"bunny-icon\" class=\"mr-3\"\r\n            /></mat-icon>\r\n            Edit\r\n          </button>\r\n          <button mat-menu-item disableRipple>\r\n            <mat-icon class=\"material-symbols-outlined\"\r\n              ><img src=\"/icons/bunny.svg\" alt=\"bunny-icon\" class=\"mr-3\"\r\n            /></mat-icon>\r\n            Delete\r\n          </button>\r\n        </mat-menu>\r\n      `,\r\n        // code: ({ withIcon }: MenuComponent) => {\r\n        //   const codeWithIcon = `\r\n        //     // Source code with icon\r\n        //   `;\r\n\r\n        //   const codeWithoutIcon = `\r\n        //     // Source code without icon\r\n        //   `;\r\n\r\n        //   return withIcon ? codeWithIcon : codeWithoutIcon;\r\n        // },\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/notification/stories/notification.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NotificationComponent>",
                "defaultValue": "{\r\n  component: NotificationComponent,\r\n  title: 'softobiz-ui/Atom/Notification',\r\n  tags: ['autodocs'],\r\n  render: (args: NotificationComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    badgeCount: {\r\n      control: 'number',\r\n    },\r\n    size: {\r\n      control: 'select',\r\n      options: ['small', 'medium', 'large'],\r\n    },\r\n    color: {\r\n      options: ['primary', 'accent', 'warn'],\r\n      control: { type: 'radio' },\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        MatMenuModule,\r\n        MatButtonModule,\r\n        MatDialogModule,\r\n        MatButtonModule,\r\n        BrowserAnimationsModule,\r\n        MatIconModule,\r\n        MatBadgeModule,\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/paginator/stories/paginator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<PaginatorComponent>",
                "defaultValue": "{\r\n  component: PaginatorComponent,\r\n  title: 'softobiz-ui/Organism/Paginator',\r\n  tags: ['autodocs'],\r\n  render: (args: PaginatorComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {},\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [BrowserAnimationsModule, MatIconModule, MatPaginatorModule,]\r\n    }),\r\n  ],\r\n  parameters: {\r\n    docs: {\r\n      source: {\r\n        code: `\r\n        <mat-paginator\r\n        (page)=\"handlePageEvent($event)\"\r\n        [length]=\"length\"\r\n        [pageSize]=\"pageSize\"\r\n        [pageSizeOptions]=\"pageSizeOptions\"\r\n        [pageIndex]=\"pageIndex\"\r\n        aria-label=\"Select page\">\r\n        </mat-paginator>\r\n\r\n        `,\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/profile/stories/profile.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ProfileComponent>",
                "defaultValue": "{\r\n  component: ProfileComponent,\r\n  title: 'softobiz-ui/Molecules/Profile',\r\n  tags: ['autodocs'],\r\n  render: (args: ProfileComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {},\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        MatMenuModule,\r\n        MatCardModule,\r\n        MatDialogModule,\r\n        MatDialogModule,\r\n        MatButtonModule,\r\n        BrowserAnimationsModule,\r\n        MatIconModule,\r\n      ],\r\n    }),\r\n  ],\r\n  parameters: {\r\n    docs: {\r\n      source: {\r\n        code: `\r\n        <div class=\"user-profile pointer\" [matMenuTriggerFor]=\"menu\">\r\n          <div class=\"user-image\">\r\n            <img src=\"/profile-avatar-1.png\" />\r\n          </div>\r\n          <div class=\"user-info\">\r\n            <span class=\"name\">John Smith</span>\r\n            <span class=\"role\">Founder</span>\r\n          </div>\r\n        </div>\r\n        <mat-menu\r\n          #menu=\"matMenu\"\r\n          class=\"profile-menu\"\r\n          backdropClass=\"alert-menu\"\r\n        >\r\n          <div class=\"profile-menu-outer\">\r\n            <div class=\"grad-bg\">\r\n              <div class=\"user-initials\">JS</div>\r\n            </div>\r\n            <div class=\"profile-inner\">\r\n              <p class=\"mat-h1 fw-600 m-0\">John Smith</p>\r\n              <p class=\"m-0 mt-1\">Founder</p>\r\n            </div>\r\n            <div class=\"profile-paths\">\r\n              <a\r\n                class=\"flex align-center justify-between user-link\"\r\n              >\r\n                <div class=\"flex align-center\">\r\n                  <mat-icon class=\"material-symbols-outlined\">account_circle</mat-icon>\r\n                  <span class=\"ml-3\">John</span>\r\n                </div>\r\n                <div >\r\n                  <mat-slide-toggle\r\n                    color=\"primary\"\r\n                  ></mat-slide-toggle>\r\n                </div>\r\n              </a>\r\n              <a\r\n                class=\"flex align-center justify-between user-link\"\r\n              >\r\n                <div class=\"flex align-center\">\r\n                  <mat-icon class=\"material-symbols-outlined\">inbox_outline</mat-icon>\r\n                  <span class=\"ml-3\">My Inbox</span>\r\n                </div>\r\n              </a>\r\n              <a\r\n                class=\"flex align-center justify-between user-link\"\r\n              >\r\n                <div class=\"flex align-center\">\r\n                  <mat-icon class=\"material-symbols-outlined\">clear_day</mat-icon>\r\n                  <span class=\"ml-3\">Dark Mode</span>\r\n                </div>\r\n              </a>\r\n              <a\r\n                class=\"flex align-center justify-between user-link\"\r\n              >\r\n                <div class=\"flex align-center\">\r\n                  <mat-icon class=\"material-symbols-outlined\">live_help</mat-icon>\r\n                  <span class=\"ml-3\">Help</span>\r\n                </div>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </mat-menu>\r\n        `,\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/radiobutton/stories/radio.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RadioButtonComponent>",
                "defaultValue": "{\r\n  component: RadioButtonComponent,\r\n  title: 'softobiz-ui/Atom/Radio',\r\n  tags: ['autodocs'],\r\n  render: (args: RadioButtonComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    disable: {\r\n      control: 'boolean',\r\n    },\r\n    checked: {\r\n      control: 'boolean',\r\n    },\r\n    disableRipple: {\r\n      control: 'boolean',\r\n    },\r\n    color: {\r\n      options: ['primary', 'accent', 'warn'],\r\n      control: { type: 'radio' },\r\n    },\r\n    indeterminate: {\r\n      control: 'boolean',\r\n      option: [true, false],\r\n    },\r\n    label: {\r\n      control: 'text',\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [MatRadioModule],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/searchbar/stories/searchbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SearchbarComponent>",
                "defaultValue": "{\r\n  component: SearchbarComponent,\r\n  title: 'softobiz-ui/Atom/Searchbar',\r\n  tags: ['autodocs'],\r\n  render: (args: SearchbarComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        BrowserAnimationsModule,\r\n        MatIconModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/stepper/stories/stepper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<StepperComponent>",
                "defaultValue": "{\r\n  component: StepperComponent,\r\n  title: 'softobiz-ui/Organism/Stepper',\r\n  tags: ['autodocs'],\r\n  render: (args: StepperComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        BrowserAnimationsModule,\r\n        MatIconModule,\r\n        MatStepperModule\r\n      ],\r\n    }),\r\n  ],\r\n  parameters: {\r\n    docs: {\r\n      source: {\r\n        code: `\r\n        <div class=\"stepper-wrapper\">\r\n        <mat-stepper orientation=\"vertical\" #stepper [disableRipple]=\"true\">\r\n          <mat-step id=\"foo-bar\">\r\n            <ng-template matStepLabel>\r\n              <div >\r\n                <span id=\"step-id1\" class=\"block text-dark font-weight-500\">step 1</span>\r\n                <span\r\n                  class=\"block font-weight-600 mat-subtitle-2 text-headline-light\"\r\n                  >Plan Information</span\r\n                >\r\n              </div>\r\n            </ng-template>\r\n          </mat-step>\r\n          <mat-step id=\"foo-bar\">\r\n            <ng-template matStepLabel>\r\n              <div >\r\n                <span id=\"step-id2\" class=\"block text-dark font-weight-500\">step 2</span>\r\n                <span\r\n                  class=\"block font-weight-600 mat-subtitle-2 text-headline-light\"\r\n                  >Plan Information</span\r\n                >\r\n              </div>\r\n            </ng-template>\r\n          </mat-step>\r\n          <mat-step id=\"foo-bar\">\r\n            <ng-template matStepLabel>\r\n              <div >\r\n                <span id=\"step-id3\" class=\"block text-dark font-weight-500\">step 3</span>\r\n                <span\r\n                  class=\"block font-weight-600 mat-subtitle-2 text-headline-light\"\r\n                  >Plan Information</span\r\n                >\r\n              </div>\r\n            </ng-template>\r\n          </mat-step>\r\n          <mat-step id=\"foo-bar\">\r\n            <ng-template matStepLabel>\r\n              <div >\r\n                <span id=\"step-id4\" class=\"block text-dark font-weight-500\">step 4</span>\r\n                <span\r\n                  class=\"block font-weight-600 mat-subtitle-2 text-headline-light\"\r\n                  >Plan Information</span\r\n                >\r\n              </div>\r\n            </ng-template>\r\n          </mat-step>\r\n          <mat-step id=\"foo-bar\">\r\n            <ng-template matStepLabel>\r\n              <div >\r\n                <span id=\"step-id5\" class=\"block text-dark font-weight-500\">step 5</span>\r\n                <span\r\n                  class=\"block font-weight-600 mat-subtitle-2 text-headline-light\"\r\n                  >Plan Information</span\r\n                >\r\n              </div>\r\n            </ng-template>\r\n          </mat-step>\r\n        </mat-stepper>\r\n      </div>      \r\n        `,\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/switch/stories/switch.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SwitchButtonComponent>",
                "defaultValue": "{\r\n  component: SwitchButtonComponent,\r\n  title: 'softobiz-ui/Atom/switch',\r\n  tags: ['autodocs'],\r\n  render: (args: SwitchButtonComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    disable: {\r\n      control: 'boolean',\r\n    },\r\n    checked: {\r\n      control: 'boolean',\r\n    },\r\n    disableRipple: {\r\n      control: 'boolean',\r\n    },\r\n    color: {\r\n      options: ['primary', 'accent', 'warn'],\r\n      control: { type: 'radio' },\r\n    },\r\n    indeterminate: {\r\n      control: 'boolean',\r\n      option: [true, false],\r\n    },\r\n    label: {\r\n      control: 'text',\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [MatSlideToggleModule],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/table/stories/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TableComponent>",
                "defaultValue": "{\r\n  component: TableComponent,\r\n  title: 'softobiz-ui/Organism/Table',\r\n  tags: ['autodocs'],\r\n  render: (args: TableComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    variant: {\r\n      control: 'select',\r\n      options: ['primary', 'secondary'],\r\n    },\r\n\r\n    couponsData: { table: { disable: true } },\r\n    dialog: { table: { disable: true } },\r\n    dialogRef: { table: { disable: true } },\r\n    displayedColumns1: { table: { disable: true } },\r\n    selection: { table: { disable: true } },\r\n    announceSortChange: { table: { disable: true } },\r\n    checkboxLabel: { table: { disable: true } },\r\n    isAllSelected: { table: { disable: true } },\r\n    openDelete: { table: { disable: true } },\r\n    selectAll: { table: { disable: true } },\r\n    selectedRow: { table: { disable: true } },\r\n    sendElementId: { table: { disable: true } },\r\n    toggleAllRows: { table: { disable: true } },\r\n    sort: { table: { disable: true } },\r\n    customHeader: { table: { disable: true } },\r\n    displayedColumns: { table: { disable: true } },\r\n    emptyCoupons: { table: { disable: true } },\r\n    endDate: { table: { disable: true } },\r\n    filterOptions: { table: { disable: true } },\r\n    isOpened: { table: { disable: true } },\r\n    LogsData: { table: { disable: true } },\r\n    startDate: { table: { disable: true } },\r\n    handleDateRangeSelection: { table: { disable: true } },\r\n    openDatePicker: { table: { disable: true } },\r\n    preventClose: { table: { disable: true } },\r\n    setFilter: { table: { disable: true } },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        MatMenuModule,\r\n        MatMenuModule,\r\n        MatIconModule,\r\n        BrowserAnimationsModule,\r\n        MatChipsModule,\r\n        MatChipsModule,\r\n        MatTableModule,\r\n        AngularMaterialModule,\r\n        // MatDialog,\r\n        MatDialogModule,\r\n        SharedModule\r\n        // MatDialogRef\r\n      ],\r\n      declarations: [],\r\n    }),\r\n  ],\r\n\r\n  parameters: {\r\n    docs: {\r\n      source: {\r\n        code: `\r\n          <div class=\"primary-table overflow-visible mt-8 px-1 pb-2\">\r\n          <table\r\n            mat-table\r\n            [dataSource]=\"couponsData\"\r\n            matSort\r\n            (matSortChange)=\"announceSortChange($event)\"\r\n          >\r\n            <!--- Note that these columns can be defined in any order.\r\n                      The actual rendered columns are set as a property on the row definition\" -->\r\n            <ng-container matColumnDef=\"select\">\r\n              <th mat-header-cell *matHeaderCellDef>\r\n                <mat-checkbox\r\n                  color=\"primary\"\r\n                  (click)=\"selectAll(couponsData)\"\r\n                  (change)=\"$event ? toggleAllRows() : null\"\r\n                  [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                  [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                  [aria-label]=\"checkboxLabel()\"\r\n                >\r\n                </mat-checkbox>\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let row\">\r\n                <mat-checkbox\r\n                  color=\"primary\"\r\n                  (click)=\"selectedRow(row.id, $event)\"\r\n                  (change)=\"$event ? selection.toggle(row) : null\"\r\n                  [checked]=\"selection.isSelected(row)\"\r\n                  [aria-label]=\"checkboxLabel(row)\"\r\n                >\r\n                </mat-checkbox>\r\n              </td>\r\n            </ng-container>\r\n        \r\n            <!-- ID Column -->\r\n            <ng-container matColumnDef=\"coupon_id\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#Coupon ID</th>\r\n              <td mat-cell *matCellDef=\"let element\">{{ element.coupon_id }}</td>\r\n            </ng-container>\r\n        \r\n            <!-- Product Name Column -->\r\n            <ng-container matColumnDef=\"coupon_name\">\r\n              <th\r\n                mat-header-cell\r\n                *matHeaderCellDef\r\n                mat-sort-header\r\n                sortActionDescription=\"Sort by title\"\r\n              >\r\n              Coupon Name\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let element\">{{ element.coupon_name }}</td>\r\n            </ng-container>\r\n        \r\n            <!-- Description Column -->\r\n            <ng-container matColumnDef=\"description\">\r\n              <th mat-header-cell *matHeaderCellDef>Description</th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let element\"\r\n                class=\"description-col td-ellipsis\"\r\n                [ngxTippy]=\"fullDescription\"\r\n                [tippyProps]=\"{ placement: 'right', interactive: true }\"\r\n                tippyName=\"content2\"\r\n              >\r\n                <p>{{ element.description }}</p>\r\n                <ng-template #fullDescription let-name class=\"t-template\">\r\n                  <div class=\"help-info-tooltip\">\r\n                    <div class=\"heading-with-background\">Description</div>\r\n                    <p class=\"py-3 black-text\">{{ element.description }}</p>\r\n                    <button mat-button color=\"primary\" class=\"px-0\">\r\n                      Learn more\r\n                    </button>\r\n                  </div>\r\n                </ng-template>\r\n              </td>\r\n            </ng-container>\r\n        \r\n            <!-- Created Date Column -->\r\n            <ng-container matColumnDef=\"created_at\">\r\n              <th mat-header-cell *matHeaderCellDef>Created On</th>\r\n              <td mat-cell *matCellDef=\"let element\">\r\n                {{ element.created_at }}\r\n              </td>\r\n            </ng-container>\r\n        \r\n            <!-- Created Date Column -->\r\n            <ng-container matColumnDef=\"status\">\r\n              <th mat-header-cell *matHeaderCellDef>Status</th>\r\n              <td mat-cell *matCellDef=\"let element\" [ngClass]=\"element.status\">\r\n                {{ element.status }}\r\n              </td>\r\n            </ng-container>\r\n        \r\n            <!-- Created Date Column -->\r\n            <ng-container matColumnDef=\"action\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"text-right\">Action</th>\r\n              <td mat-cell *matCellDef=\"let element\" class=\"text-right\">\r\n                <mat-icon\r\n                  class=\"material-symbols-outlined\"\r\n                  [matMenuTriggerFor]=\"actionsMenu\"\r\n                >\r\n                  more_vert\r\n                </mat-icon>\r\n                <mat-menu\r\n                  #actionsMenu=\"matMenu\"\r\n                  class=\"actions-menu\"\r\n                  backdropClass=\"edit-menu\"\r\n                >\r\n                  <button mat-menu-item disableRipple>Edit</button>\r\n                  <button\r\n                    mat-menu-item\r\n                    disableRipple\r\n                    (click)=\"openDelete(element.productId)\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </mat-menu>\r\n              </td>\r\n            </ng-container>\r\n        \r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr\r\n              mat-row\r\n              *matRowDef=\"let row; columns: displayedColumns\"\r\n              [id]=\"row.id\"\r\n            ></tr>\r\n          </table>\r\n        </div>\r\n        `,\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/tabs/stories/tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TabsComponent>",
                "defaultValue": "{\r\n  component: TabsComponent,\r\n  title: 'softobiz-ui/Molecules/Tabs',\r\n  tags: ['autodocs'],\r\n  render: (args: TabsComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [MatTabsModule],\r\n    }),\r\n  ],\r\n  parameters: {\r\n    docs: {\r\n      source: {\r\n        code: `\r\n        <mat-tab-group\r\n          class=\"pricing-tabs mb-6\"\r\n          mat-stretch-tabs=\"false\"\r\n          mat-align-tabs=\"start\"\r\n        >\r\n          <mat-tab label=\"First\"> Content 1 </mat-tab>\r\n          <mat-tab label=\"Second\"> Content 2 </mat-tab>\r\n          <mat-tab label=\"Third\"> Content 3 </mat-tab>\r\n        </mat-tab-group>\r\n        `,\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/Textarea/stories/textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TextareaComponent>",
                "defaultValue": "{\r\n  component: TextareaComponent,\r\n  title: 'softobiz-ui/Atom/Textarea',\r\n  tags: ['autodocs'],\r\n  render: (args: TextareaComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    hint: { control: 'text' },\r\n    class: { control: 'text' },\r\n    appearance: {\r\n      control: 'select',\r\n      options: [\r\n        'outline',\r\n        'fill'\r\n      ],\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        BrowserAnimationsModule,\r\n        MatIconModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        NgxTippyModule\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/Tooltip/stories/Tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TooltipComponent>",
                "defaultValue": "{\r\n  component: TooltipComponent,\r\n  title: 'softobiz-ui/Molecules/Tooltip',\r\n  tags: ['autodocs'],\r\n  render: (args: TooltipComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    infoTitle: { control: 'text' },\r\n    infoDetail: { control: 'text' },\r\n  },\r\n  decorators: [\r\n    componentWrapperDecorator(\r\n      (story) => `<div class=\"tooltip-wrapper\" >${story}</div>`\r\n    ),\r\n    moduleMetadata({\r\n      imports: [\r\n        MatMenuModule,\r\n        MatButtonModule,\r\n        MatDialogModule,\r\n        MatButtonModule,\r\n        BrowserAnimationsModule,\r\n        MatIconModule,\r\n        AngularMaterialModule,\r\n        NgxTippyModule,\r\n      ],\r\n    }),\r\n  ],\r\n\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/Typography/stories/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TypographyComponent>",
                "defaultValue": "{\r\n  component: TypographyComponent,\r\n  title: 'softobiz-ui/Atom/Typography',\r\n  tags: ['autodocs'],\r\n  render: (args: TypographyComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [],\r\n    }),\r\n  ],\r\n  parameters: {\r\n    docs: {\r\n      source: {\r\n        code: `\r\n        <p class=\"mat-headline-5\">Roboto /headline   24   Medium  It’s best to use good to know that</p>\r\n        <p class=\"mat-subtitle-1\">Roboto /Subheading   18   Medium  It’s best to use good to know that</p>\r\n        <p class=\"mat-subtitle-2\">Roboto /headline   16  Medium  It’s best to use good to know that</p>\r\n        <p class=\"Roboto /table content\">Roboto /headline   14   Medium  It’s best to use good to know that</p>\r\n        <p class=\"mat-caption\">Roboto /headline   12   Medium  It’s best to use good to know that</p>\r\n        `,\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/uploadLogo/stories/uploadLogo.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<UploadLogoComponent>",
                "defaultValue": "{\r\n  component: UploadLogoComponent,\r\n  title: 'softobiz-ui/Molecules/UploadLogo',\r\n  tags: ['autodocs'],\r\n  render: (args: UploadLogoComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        MatMenuModule,\r\n        MatButtonModule,\r\n        MatDialogModule,\r\n        MatButtonModule,\r\n        BrowserAnimationsModule,\r\n        MatIconModule,\r\n        AngularMaterialModule,\r\n      ],\r\n    }),\r\n  ],\r\n\r\n  parameters: {\r\n    docs: {\r\n      source: {\r\n        code: `\r\n        <div class=\"image-upload-dialog\">\r\n        <h4 class=\"text-dark mat-subtitle-2 mb-2 font-weight-500\">Upload Logo</h4>\r\n        <p class=\"mat-caption grey-text text-darken-6\">\r\n          Allowed JPG, GIF or PNG. Max size of 800K\r\n        </p>\r\n        <div>\r\n          <input type=\"file\" name=\"logo\" id=\"logo\" accept=\"image/*\" (change)=\"handleFileInput($event)\" />\r\n          <label for=\"logo\" class=\"upload-field border-2 pointer\" id=\"file-label\"  (dragenter)=\"handleDragEnter()\"\r\n          (dragleave)=\"handleDragLeave()\"\r\n          (drop)=\"handleDrop($event)\">\r\n           <img \r\n              [src]=\"imageSrc\" \r\n              [class.loaded]=\"imageLoaded\"\r\n              (load)=\"handleImageLoad()\"\r\n              class=\"w-full\" />\r\n            <div class=\"file-thumbnail\" [style.display]=\"imageLoaded ? 'none' : 'block'\">\r\n              <mat-icon class=\"material-symbols-outlined m-0\">imagesmode</mat-icon>\r\n              <h3 id=\"filename\" class=\"mat-body-1 font-weight-500 text-text text-primary\">\r\n                <a href=\"\" class=\"mr-1 primary-text text-main text-underline\">Click here to upload</a\r\n                >or drag & drop\r\n              </h3>\r\n            </div>\r\n          </label>\r\n        </div>\r\n        <div class=\"action-btns flex align-center justify-end\">\r\n          <button mat-stroked-button color=\"primary\" class=\"mr-2\" mat-dialog-close (click)=\"cancel()\">Dismiss</button>\r\n          <button mat-flat-button color=\"primary\" class=\"\" mat-dialog-close (click)=\"handleSave()\" >Save</button>\r\n        </div>\r\n      </div>\r\n     \r\n      `\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "nocoupons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n]"
            },
            {
                "name": "noCustomers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    heading: 'Customers',\r\n    imgPath: '../../../../assets/images/empty-illustrations-6.png',\r\n    alt: 'no customers',\r\n    subtext: 'No customer yet',\r\n    text: 'Customers No customer yet After your first customer you will be able to view it here.',\r\n    showButton: false,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n]"
            },
            {
                "name": "noFeatures",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    heading: 'Features',\r\n    imgPath: '../../../../assets/images/empty-illustrations-2.png',\r\n    alt: 'no features available',\r\n    subtext: 'Looking for Features',\r\n    text: \"Seems like you haven't added any feature. Start adding feature by click on “Create Feature” button \",\r\n    showButton: true,\r\n    buttonTxt: 'Create Feature',\r\n    path: '/features/create',\r\n  },\r\n]"
            },
            {
                "name": "noInvoice",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    heading: 'Invoice',\r\n    imgPath: '../../../../assets/images/invoice-empty.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'No invoice yet',\r\n    text: 'After your first transaction you will be able to view invoice here.',\r\n    showButton: false,\r\n  },\r\n]"
            },
            {
                "name": "noLogs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n]"
            },
            {
                "name": "noPageFound",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/404-page.png',\r\n    alt: 'No Page Found',\r\n    subtext: \"Oops! Why you're here?\",\r\n    text: \"We are very sorry for inconvenience. It looks like you're try to access a page that either has been deleted or never existed.\",\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n]"
            },
            {
                "name": "noPlans",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    heading: 'Plans',\r\n    imgPath: '../../../../assets/images/empty-illustrations-4.png',\r\n    alt: 'no Plans available',\r\n    subtext: 'Looking for Plans',\r\n    text: \"Seems like you haven't added any Plan. Start adding plan by click on “Create Plan” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Plan',\r\n    path: '/plans/create',\r\n  },\r\n]"
            },
            {
                "name": "noProducts",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    heading: 'Products',\r\n    imgPath: '../../../../assets/images/empty-illustrations.png',\r\n    alt: 'no proudcts available',\r\n    subtext: 'Looking for Product',\r\n    text: \"Seems like you haven't added any Product. Start adding products by click on “Create Product” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Product',\r\n    path: '/products/create',\r\n  },\r\n]"
            },
            {
                "name": "Notification",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/notification/stories/notification.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    badgeCount: 23,\r\n    color: 'warn',\r\n    size: 'small',\r\n  },\r\n}"
            },
            {
                "name": "Notifications_Data",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  // {\r\n  //   user: 'John Smith' ,\r\n  //   message: 'subscriptione_created',\r\n  //   created_at: 'Aug 7th, 2023'\r\n  // }\r\n]"
            },
            {
                "name": "noTransactions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    heading: 'Transaction',\r\n    imgPath: '../../../../assets/images/empty-illustrations-5.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'NO transaction yet',\r\n    text: 'After your first transaction you will be able to view it here.',\r\n    showButton: false,\r\n  },\r\n]"
            },
            {
                "name": "Paginator",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/paginator/stories/paginator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n}"
            },
            {
                "name": "periodUnit",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "['Daily', 'Weekly', 'Monthly', 'Yearly']"
            },
            {
                "name": "plan_add_empty_data",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    titleIcon:\r\n      '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n    iconAlt: 'invoice-outline-icon',\r\n    title: 'Product Details',\r\n    subtitle:\r\n      'Please click the “Add” button below to add a new product. Once you clicked the button, you will be prompted to enter the name of product, description and additional details.',\r\n    btnTitle: 'Add product',\r\n    btnPath: '/#',\r\n  },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Pricing Plans',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new pricing plans. Once you clicked the button, you will be prompted to enter pricing and additional details.',\r\n  //   btnTitle: 'Add Pricing',\r\n  //   btnPath: '/#',\r\n  // },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Add-ons Details',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new add-on. Once you have click button, you will be prompted to select add-on.',\r\n  //   btnTitle: 'Add Add-on',\r\n  //   btnPath: '/#',\r\n  // },\r\n]"
            },
            {
                "name": "Plans_Data",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    id: 'ychvjbknk1',\r\n    plan_ID: 'As-012P',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.3',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: '1i23op1j2eo',\r\n    plan_ID: 'As-099G',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.2',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n]"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\r\n  decorators: [\r\n    withThemeByDataAttribute({\r\n      themes: {\r\n        light: 'light',\r\n        dark: 'dark',\r\n      },\r\n      defaultTheme: 'light',\r\n      attributeName: 'data-app-theme',\r\n    }),\r\n  ],\r\n  parameters: {\r\n    actions: { argTypesRegex: '^on[A-Z].*' },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/,\r\n      },\r\n    },\r\n    // storySort: {\r\n    //   order: ['Atom', 'Molecules', 'Organism', 'Pages', 'Layout'],\r\n    // },\r\n    // docs: {\r\n    //   theme: themes.light,\r\n    // },\r\n    // global: {\r\n    //   css: `\r\n    //     .sidebar-header {\r\n    //       background-color: #f2f2f2 !important;\r\n    //     }\r\n  \r\n    //     .myButton {\r\n    //       background-color: blue;\r\n    //       color: white;\r\n    //       padding: 10px 20px;\r\n    //       border-radius: 4px;\r\n    //     }\r\n    //   `,\r\n    // },\r\n    // options: {\r\n    //   storySort: (a: any, b: any) =>\r\n    //     a.id === b.id\r\n    //       ? 0\r\n    //       : a.id.localeCompare(b.id, undefined, { numeric: true }),\r\n    // },\r\n  },\r\n}"
            },
            {
                "name": "pricingModels",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  { value: 1, title: 'Flat fee' },\r\n  { value: 2, title: 'Per unit' },\r\n  { value: 3, title: 'Tiered' },\r\n  { value: 4, title: 'Volume' },\r\n  { value: 5, title: 'Stairstep' },\r\n]"
            },
            {
                "name": "Profile",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/profile/stories/profile.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n}"
            },
            {
                "name": "RadioButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/radiobutton/stories/radio.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    indeterminate: false,\r\n    label: 'Click Me!',\r\n    checked: false,\r\n    disable: false,\r\n    disableRipple: false,\r\n    labelPosition: 'after',\r\n  },\r\n}"
            },
            {
                "name": "Searchbar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/searchbar/stories/searchbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    placeholder: 'Enter here...',\r\n    disable: false,\r\n  },\r\n}"
            },
            {
                "name": "SFT_UI_MODULES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/softobiz-ui.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[SftButtonModule, NgxTippyModule, DashboardLayoutModule]"
            },
            {
                "name": "StaticRoutes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  features: ['features'],\r\n  products: ['products'],\r\n}"
            },
            {
                "name": "Stepper",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    id: 1,\r\n    title: 'Step 1',\r\n    caption: 'Plan Information',\r\n    isVisible: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Step 2',\r\n    caption: 'Add Plan Pricing',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Step 3',\r\n    caption: 'Product Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Step 4',\r\n    caption: 'Add-on Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Step 5',\r\n    caption: 'Charges',\r\n    isVisible: false,\r\n  },\r\n]"
            },
            {
                "name": "Stepper",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/stepper/stories/stepper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n  },\r\n}"
            },
            {
                "name": "SwitchButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/switch/stories/switch.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    indeterminate: false,\r\n    label: 'Click Me!',\r\n    checked: false,\r\n    disable: false,\r\n    disableRipple: false,\r\n    color: \"primary\",\r\n    labelPosition: 'after',\r\n  },\r\n}"
            },
            {
                "name": "Table",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/table/stories/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    variant: 'primary',\r\n  },\r\n}"
            },
            {
                "name": "TableSecondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/table/stories/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    variant: 'secondary',\r\n  },\r\n  parameters: {\r\n    storybook: {\r\n      hideNoControlsWarning: true,\r\n    },\r\n    docs: {\r\n      source: {\r\n        code: `\r\n        <div>\r\n        <div\r\n          *ngIf=\"LogsData.length == 0\"\r\n          class=\"relative main-bg border-2 w-full h-full p-7 overflow-scroll\"\r\n        >\r\n          <app-empty-listing [items]=\"emptyCoupons\"></app-empty-listing>\r\n        </div>\r\n        <div\r\n          *ngIf=\"LogsData.length > 0\"\r\n          class=\"relative main-bg border-2 w-full h-full py-6 pl-5 pr-6 overflow-scroll logs-list\"\r\n        >\r\n          <!-- </div> -->\r\n          <div class=\"primary-table overflow-visible mt-8 px-1 pb-2 table-wrapper\">\r\n            <table mat-table [dataSource]=\"LogsData\">\r\n              <!-- TimestampColumn -->\r\n              <ng-container matColumnDef=\"Timestamp\">\r\n                <th mat-header-cell *matHeaderCellDef>Timestamp</th>\r\n                <td mat-cell *matCellDef=\"let element\">{{ element.Timestamp }}</td>\r\n              </ng-container>\r\n        \r\n              <!-- Events Column -->\r\n              <ng-container matColumnDef=\"Events\">\r\n                <th mat-header-cell *matHeaderCellDef>Events</th>\r\n                <td mat-cell *matCellDef=\"let element\">{{ element.Events }}</td>\r\n              </ng-container>\r\n        \r\n              <!-- Description Column -->\r\n              <ng-container matColumnDef=\"Customer_Info\">\r\n                <th mat-header-cell *matHeaderCellDef>Customer Info</th>\r\n                <td mat-cell *matCellDef=\"let element\">\r\n                  <p>{{ element.Customer_Info }}</p>\r\n                </td>\r\n              </ng-container>\r\n        \r\n              <!-- Created Date Column -->\r\n              <ng-container matColumnDef=\"Event_Source\">\r\n                <th mat-header-cell *matHeaderCellDef>Event Source</th>\r\n                <td mat-cell *matCellDef=\"let element\">\r\n                  <span class=\"primary-light-6-bg p-1 border-1 text-primary\">\r\n                    {{ element.Event_Source }}\r\n                  </span>\r\n                </td>\r\n              </ng-container>\r\n        \r\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns1\"></tr>\r\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns1\"></tr>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        </div>\r\n         `,\r\n      },\r\n    },\r\n    // sidebar: { disable: true },\r\n    // sidebarHide: ['TableSecondary']\r\n    // 'storybook-addon-storyshots': {\r\n    //   variantLabel: '',\r\n    // },\r\n  },\r\n}"
            },
            {
                "name": "Tabs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/tabs/stories/tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n}"
            },
            {
                "name": "Textarea",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/Textarea/stories/textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    readonly: false,\r\n    placeholder: 'Enter here...',\r\n    disable: false,\r\n    required: true,\r\n    label: 'Label',\r\n  },\r\n}"
            },
            {
                "name": "Tooltip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/Tooltip/stories/Tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\nargs: {\r\n  infoTitle: 'Coupon id',\r\n  infoDetail: `Enter a Customized Id. If user do not enter this field, the system will generate a Customized Human-Readable-id' based on the Name field.`,\r\n}\r\n}"
            },
            {
                "name": "TransactionList",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n]"
            },
            {
                "name": "Typography",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/Typography/stories/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n}"
            },
            {
                "name": "UploadLogo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/uploadLogo/stories/uploadLogo.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n}"
            },
            {
                "name": "User_Data",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    id: 'random_id_1234',\r\n    product_ID: '#O365ProPlusRetail',\r\n    title: 'Microsoft Teams',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Host Online Calls', 'Unlimited Internet', 'Conference Calls'],\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_555',\r\n    product_ID: '#Or65SuperSupreme',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: [\r\n      'Unlimited Repos',\r\n      'Upto 50 Team Members',\r\n      'Host Online Calls',\r\n      'Unlimited Internet',\r\n      'Conference Calls',\r\n    ],\r\n    created_at: 'June 11th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_6969',\r\n    product_ID: '#Ow65Basic',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Conference Calls'],\r\n    created_at: 'June 18th, 2020',\r\n    status: 'Active',\r\n  },\r\n]"
            },
            {
                "name": "User_Options",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    path: '/user:id',\r\n    icon: 'account_circle',\r\n    name: 'My Account',\r\n    toggle: false,\r\n  },\r\n  { path: '/inbox', icon: 'inbox_outline', name: 'My Inbox', toggle: false },\r\n  { path: '', icon: 'clear_day', name: 'Dark Mode', toggle: true },\r\n  { path: '/help', icon: 'live_help', name: 'Help', toggle: false },\r\n]"
            },
            {
                "name": "Validity_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/coupons/components/view-coupons/view-coupons.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ValidityElement[]",
                "defaultValue": "[\r\n  {  Validity : 'Valid Till', time: 'Forever' },\r\n  { Validity : 'Maximum Redemptions', time: '0 to unlimited' },\r\n]"
            }
        ],
        "functions": [
            {
                "name": "genUniqueId",
                "file": "src/app/core/utils/functions/getUniqueId.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "string"
            }
        ],
        "typealiases": [
            {
                "name": "ButtonVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"basic\" | \"raised\" | \"flat\" | \"icon\" | \"stroked\"",
                "file": "src/stories/softobiz-ui/button/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "ButtonVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"basic\" | \"raised\" | \"flat\" | \"icon\" | \"stroked\"",
                "file": "src/stories/softobiz-ui/Input/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "ButtonVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"basic\" | \"raised\" | \"flat\" | \"icon\" | \"stroked\"",
                "file": "src/stories/softobiz-ui/Textarea/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<Breadcrumb>",
                "file": "src/stories/softobiz-ui/breadcrumb/stories/breadcrumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonComponent>",
                "file": "src/stories/softobiz-ui/button/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CalendarComponent>",
                "file": "src/stories/softobiz-ui/calendar/stories/calendar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CheckboxComponent>",
                "file": "src/stories/softobiz-ui/Checkbox/stories/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ChipComponent>",
                "file": "src/stories/softobiz-ui/Chip/stories/chip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ColorComponent>",
                "file": "src/stories/softobiz-ui/color/stories/color.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DashboardLayoutComponent>",
                "file": "src/stories/softobiz-ui/dashboardLayout/stories/dashboardLayout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DialogComponent>",
                "file": "src/stories/softobiz-ui/dialog/stories/dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DialogInfoComponent>",
                "file": "src/stories/softobiz-ui/dialog-info/stories/dialog-info.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ErrorLayoutComponent>",
                "file": "src/stories/softobiz-ui/errorLayout/stories/errorLayout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<HeaderComponent>",
                "file": "src/stories/softobiz-ui/header/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<InputComponent>",
                "file": "src/stories/softobiz-ui/Input/stories/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<LeftNavigationComponent>",
                "file": "src/stories/softobiz-ui/leftNavigation/stories/leftNavigation.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<MenuComponent>",
                "file": "src/stories/softobiz-ui/menu/stories/menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NotificationComponent>",
                "file": "src/stories/softobiz-ui/notification/stories/notification.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<PaginatorComponent>",
                "file": "src/stories/softobiz-ui/paginator/stories/paginator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ProfileComponent>",
                "file": "src/stories/softobiz-ui/profile/stories/profile.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RadioButtonComponent>",
                "file": "src/stories/softobiz-ui/radiobutton/stories/radio.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SearchbarComponent>",
                "file": "src/stories/softobiz-ui/searchbar/stories/searchbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<StepperComponent>",
                "file": "src/stories/softobiz-ui/stepper/stories/stepper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SwitchButtonComponent>",
                "file": "src/stories/softobiz-ui/switch/stories/switch.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TableComponent>",
                "file": "src/stories/softobiz-ui/table/stories/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TabsComponent>",
                "file": "src/stories/softobiz-ui/tabs/stories/tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TextareaComponent>",
                "file": "src/stories/softobiz-ui/Textarea/stories/textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TooltipComponent>",
                "file": "src/stories/softobiz-ui/Tooltip/stories/Tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TypographyComponent>",
                "file": "src/stories/softobiz-ui/Typography/stories/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<UploadLogoComponent>",
                "file": "src/stories/softobiz-ui/uploadLogo/stories/uploadLogo.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/stories/softobiz-ui/breadcrumb/stories/breadcrumb.stories.ts": [
                {
                    "name": "breadcrumb",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/breadcrumb/stories/breadcrumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    items: [\r\n      { label: 'Home', link: '/' },\r\n      { label: 'Products', link: '/products' },\r\n      { label: 'Category', link: '/products/category' },\r\n      { label: 'Current Page' },\r\n    ]\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/breadcrumb/stories/breadcrumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<Breadcrumb>",
                    "defaultValue": "{\r\n  component: Breadcrumb,\r\n  title: 'softobiz-ui/Atom/Breadcrumb',\r\n  tags: ['autodocs'],\r\n  render: (args: Breadcrumb) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    id: { control: 'text' },\r\n    class: { control: 'text' }\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [MatIconModule, BrowserAnimationsModule],\r\n    }),\r\n  ],\r\n}"
                }
            ],
            "src/stories/softobiz-ui/button/stories/button.stories.ts": [
                {
                    "name": "Button",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/button/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    variant: 'flat',\r\n    color: 'primary',\r\n    label: 'Button',\r\n    size: 'medium',\r\n    disable: false,\r\n    disableRipple: false,\r\n    onClick: 'funtion()',\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/button/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ButtonComponent>",
                    "defaultValue": "{\r\n  component: ButtonComponent,\r\n  title: 'softobiz-ui/Atom/Button',\r\n  tags: ['autodocs'],\r\n  render: (args: ButtonComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    variant: {\r\n      control: 'select',\r\n      options: [\r\n        'default',\r\n        'raised',\r\n        'flat',\r\n        'stroked',\r\n        'icon',\r\n        'fab',\r\n        'mini-fab',\r\n      ],\r\n    },\r\n    color: {\r\n      options: ['primary', 'accent', 'warn'],\r\n      control: { type: 'radio' },\r\n    },\r\n    label: { control: 'text' },\r\n    id: { control: 'text' },\r\n    class: { control: 'text' },\r\n    onClick: { control: 'text', defaultValue: 'clickfuntion()' },\r\n    disable: {\r\n      control: 'boolean',\r\n      defaultValue: false,\r\n    },\r\n    disableRipple: {\r\n      control: 'boolean',\r\n    },\r\n    size: {\r\n      control: 'select',\r\n      options: ['small', 'medium', 'large', 'link-text', 'icon-text'],\r\n    },\r\n    type: {\r\n      control: 'select',\r\n      options: ['button', 'submit', 'reset'],\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [MatButtonModule, BrowserAnimationsModule, MatIconModule],\r\n    }),\r\n  ],\r\n}"
                }
            ],
            "src/stories/softobiz-ui/calendar/stories/calendar.stories.ts": [
                {
                    "name": "Calendar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/calendar/stories/calendar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/calendar/stories/calendar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CalendarComponent>",
                    "defaultValue": "{\r\n  component: CalendarComponent,\r\n  title: 'softobiz-ui/Molecules/Calendar',\r\n  tags: ['autodocs'],\r\n  render: (args: CalendarComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {},\r\n  decorators: [\r\n    componentWrapperDecorator((story) => `<div class=\"storybook-calendar\" >${story}</div>`),\r\n    moduleMetadata({\r\n      imports: [\r\n        MatMenuModule,\r\n        MatButtonModule,\r\n        MatDialogModule,\r\n        MatButtonModule,\r\n        BrowserAnimationsModule,\r\n        MatIconModule,\r\n        MatDatepickerModule,\r\n        MatNativeDateModule,\r\n        FormsModule,\r\n        MatFormFieldModule,\r\n        MatInputModule ,\r\n        MatTabsModule\r\n      ],\r\n    }),\r\n  ],\r\n  parameters: {\r\n    docs: {\r\n      source: {\r\n        code: `\r\n        <div class=\"py-2 px-6\">\r\n        <div class=\"flex align-center input-wrapper px-2\">\r\n          <div class=\"block filter-input mr-4\">\r\n            <span class=\"block mat-body-1 pl-2 mb-1\"> Start </span>\r\n            <mat-form-field>\r\n              <input\r\n                matInput\r\n                placeholder=\"Start Date\"\r\n                [(ngModel)]=\"startDate\"\r\n\r\n\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"block filter-input\">\r\n            <span class=\"block mat-body-1 pl-2 mb-1\"> End </span>\r\n            <mat-form-field>\r\n              <input matInput type=\"text\" placeholder=\"end Date\" />\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n        <mat-calendar></mat-calendar>\r\n        <div class=\"w-full flex justify-end align-center\">\r\n          <button mat-stroked-button color=\"primary\" class=\"mr-3\">Cancel</button>\r\n          <button mat-flat-button color=\"primary\">Apply</button>\r\n        </div>\r\n        </div>\r\n        `,\r\n      },\r\n    },\r\n  },\r\n}"
                }
            ],
            "src/stories/softobiz-ui/Checkbox/stories/checkbox.stories.ts": [
                {
                    "name": "Checkbox",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/Checkbox/stories/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    indeterminate: false,\r\n    label: 'Click Me!',\r\n    checked: false,\r\n    disable:false,\r\n    disableRipple: false,\r\n    labelPosition: 'after',\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/Checkbox/stories/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CheckboxComponent>",
                    "defaultValue": "{\r\n  component: CheckboxComponent,\r\n  title: 'softobiz-ui/Atom/Checkbox',\r\n  tags: ['autodocs'],\r\n  render: (args: CheckboxComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    disable: {\r\n      control: 'boolean',\r\n    },\r\n    checked: {\r\n      control: 'boolean',\r\n    },\r\n    disableRipple: {\r\n      control: 'boolean',\r\n    },\r\n    color: {\r\n      options: ['primary', 'accent', 'warn'],\r\n      control: { type: 'radio' },\r\n    },\r\n    indeterminate: {\r\n      control: 'boolean',\r\n      option: [true, false]\r\n    },\r\n    label: {\r\n      control:'text'\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [MatCheckboxModule],\r\n    }),\r\n  ],\r\n}"
                }
            ],
            "src/stories/softobiz-ui/Chip/stories/chip.stories.ts": [
                {
                    "name": "Chip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/Chip/stories/chip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    highlighted: true,\r\n    withIcon: false,\r\n    disabled: false,\r\n    label: 'chip',\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/Chip/stories/chip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ChipComponent>",
                    "defaultValue": "{\r\n  component: ChipComponent,\r\n  title: 'softobiz-ui/Atom/Chip',\r\n  tags: ['autodocs'],\r\n  render: (args: ChipComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    // color: {\r\n    //   options: ['primary', 'accent', 'warn', 'primary-light'],\r\n    //   control: { type: 'radio' },\r\n    // },\r\n\r\n    ariaDescription: {\r\n      control: 'text',\r\n    },\r\n\r\n    ariaLabel: {\r\n      control: 'text',\r\n    },\r\n\r\n    disableRipple: {\r\n      control: 'boolean',\r\n    },\r\n\r\n    disabled: {\r\n      control: 'boolean',\r\n    },\r\n\r\n    // selected: {\r\n    //   control: 'boolean',\r\n    // },\r\n\r\n    highlighted: {\r\n      control: 'boolean',\r\n    },\r\n\r\n    withIcon: {\r\n      control: 'boolean',\r\n    },\r\n\r\n    label: { control: 'text' },\r\n\r\n    class: {\r\n      control: 'text',\r\n    },\r\n    id: {\r\n      control: 'text',\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [MatChipsModule, MatIconModule],\r\n    }),\r\n  ],\r\n}"
                }
            ],
            "src/stories/softobiz-ui/color/stories/color.stories.ts": [
                {
                    "name": "Color",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/color/stories/color.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/color/stories/color.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ColorComponent>",
                    "defaultValue": "{\r\n  component: ColorComponent,\r\n  title: 'softobiz-ui/Atom/Color',\r\n  tags: ['autodocs'],\r\n  render: (args: ColorComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [],\r\n    }),\r\n  ],\r\n  parameters: {\r\n    docs: {\r\n      source: {\r\n        code: `\r\n        <div class=\"mb-3\">\r\n    <p class=\"mat-headline-5 mb-3\">Primary</p>\r\n    <div class=\"flex\">\r\n        <div class=\"color-box large-box primary-bg mr-2\"></div>\r\n        <div class=\"color-box medium primary-light-bg mr-2\"></div>\r\n        <div class=\"color-box medium primary-dark-1-bg\"></div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"mb-3\">\r\n    <p class=\"mat-headline-5 mb-3\">Neutral</p>\r\n    <div class=\"flex\">\r\n        <div class=\"color-box small neutral-black-bg mr-2\"></div>\r\n        <div class=\"color-box small neutral-dark-gray-bg mr-2\"></div>\r\n        <div class=\"color-box small neutral-gray-bg mr-2\"></div>\r\n        <div class=\"color-box small neutral-gray-Outline-bg mr-2\"></div>\r\n        <div class=\"color-box small neutral-gray-light-bg mr-2\"></div>\r\n        <div class=\"color-box small neutral-gray-off-bg mr-2\"></div>\r\n        <div class=\"color-box small neutral-gray-stroke-bg mr-2\"></div>\r\n        <div class=\"color-box small neutral-gray-off-white-bg mr-2\"></div>\r\n        <div class=\"color-box small main-bg mr-2 border-outline\"></div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"mb-3\">\r\n    <p class=\"mat-headline-5 mb-3\">Utility</p>\r\n    <div class=\"flex mb-3\">\r\n        <div class=\"color-box small green-success-bg mr-2\"></div>\r\n        <div class=\"color-box small green-lighten-100-bg mr-2\"></div>\r\n        <div class=\"color-box small green-lighten-200-bg mr-2\"></div>\r\n        <div class=\"color-box small green-lighten-300-bg mr-2\"></div>\r\n        <div class=\"color-box small green-lighten-400-bg mr-2\"></div>\r\n        <div class=\"color-box small green-lighten-500-bg mr-2\"></div>\r\n        <div class=\"color-box small green-lighten-600-bg mr-2\"></div>\r\n        <div class=\"color-box small green-lighten-700-bg mr-2\"></div>\r\n        <div class=\"color-box small extent green-success-bg mr-2\"></div>\r\n        <div class=\"color-box small green-lighten-900-bg mr-2\"></div>\r\n        <div class=\"color-box small green-lighten-1000-bg mr-2\"></div>\r\n    </div>\r\n    <div class=\"flex mb-3\">\r\n        <div class=\"color-box small blue-bg mr-2\"></div>\r\n        <div class=\"color-box small blue-lighten-100-bg mr-2\"></div>\r\n        <div class=\"color-box small blue-lighten-200-bg mr-2\"></div>\r\n        <div class=\"color-box small blue-lighten-300-bg mr-2\"></div>\r\n        <div class=\"color-box small blue-lighten-400-bg mr-2\"></div>\r\n        <div class=\"color-box small blue-lighten-500-bg mr-2\"></div>\r\n        <div class=\"color-box small blue-lighten-600-bg mr-2\"></div>\r\n        <div class=\"color-box small extent blue-bg mr-2\"></div>\r\n        <div class=\"color-box small blue-lighten-800-bg mr-2\"></div>\r\n        <div class=\"color-box small blue-lighten-900-bg mr-2\"></div>\r\n        <div class=\"color-box small blue-lighten-1000-bg mr-2\"></div>\r\n    </div>\r\n    <div class=\"flex mb-3\">\r\n        <div class=\"color-box small orange-bg mr-2\"></div>\r\n        <div class=\"color-box small orange-lighten-100-bg mr-2\"></div>\r\n        <div class=\"color-box small orange-lighten-200-bg mr-2\"></div>\r\n        <div class=\"color-box small orange-lighten-300-bg mr-2\"></div>\r\n        <div class=\"color-box small orange-lighten-400-bg mr-2\"></div>\r\n        <div class=\"color-box small orange-lighten-500-bg mr-2\"></div>\r\n        <div class=\"color-box small extent orange-lighten-600-bg mr-2\"></div>\r\n        <div class=\"color-box small orange-lighten-700-bg mr-2\"></div>\r\n        <div class=\"color-box small orange-lighten-800-bg mr-2\"></div>\r\n        <div class=\"color-box small orange-lighten-900-bg mr-2\"></div>\r\n        <div class=\"color-box small orange-lighten-1000-bg mr-2\"></div>\r\n    </div>\r\n    <div class=\"flex\">\r\n        <div class=\"color-box small red-bg mr-2\"></div>\r\n        <div class=\"color-box small red-lighten-100-bg mr-2\"></div>\r\n        <div class=\"color-box small red-lighten-200-bg mr-2\"></div>\r\n        <div class=\"color-box small red-lighten-300-bg mr-2\"></div>\r\n        <div class=\"color-box small red-lighten-400-bg mr-2\"></div>\r\n        <div class=\"color-box small red-lighten-500-bg mr-2\"></div>\r\n        <div class=\"color-box small red-lighten-600-bg mr-2\"></div>\r\n        <div class=\"color-box small red-lighten-700-bg mr-2\"></div>\r\n        <div class=\"color-box small extent red-lighten-800-bg mr-2\"></div>\r\n        <div class=\"color-box small red-lighten-900-bg mr-2\"></div>\r\n        <div class=\"color-box small red-lighten-1000-bg mr-2\"></div>\r\n    </div>\r\n</div>\r\n        `,\r\n      },\r\n    },\r\n  },\r\n}"
                }
            ],
            "src/app/shared/constants/consants.ts": [
                {
                    "name": "Config_Menu",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Settings',\r\n    icon: 'settings',\r\n    category: 'Config',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'LogOut ',\r\n    icon: 'logout',\r\n    category: 'Confog',\r\n  },\r\n]"
                },
                {
                    "name": "Coupon_Data",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    id: 'coupon_id_459',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'coupon_id_460',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n]"
                },
                {
                    "name": "CustomerList",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    id: '#S0-001',\r\n    name: 'Alex C',\r\n    companyName: 'Greenplus Enterprises',\r\n    email: 'alex@example.com',\r\n    workPhone: '9876778865',\r\n    website: 'www.greenplus.com',\r\n    subscription: '2 subscripton (Available)',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    name: 'Zen D',\r\n    companyName: 'Zencorporation',\r\n    email: 'zen@example.com',\r\n    workPhone: '839103113',\r\n    website: 'www.zencorporation.com',\r\n    subscription: '1 subscripton (Available)',\r\n  },\r\n]"
                },
                {
                    "name": "feature_types",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  { value: 1, title: 'switch' },\r\n  { value: 2, title: 'range' },\r\n  { value: 3, title: 'quantity' },\r\n  { value: 4, title: 'custom' },\r\n]"
                },
                {
                    "name": "Features_Data",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    id: 'feature_id_459',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'feature_id_4591',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n]"
                },
                {
                    "name": "InvoiceList",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-003',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    issuedOn: 'Jan 14, 2023',\r\n    voidedOn: '-',\r\n    paidOn: 'Jan 16, 2023',\r\n    status: 'Payment Due',\r\n    amount: '199.00',\r\n  },\r\n]"
                },
                {
                    "name": "listFilterOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  'Yesterday',\r\n  'Last 7 days',\r\n  'Last Week',\r\n  'Last 30 days',\r\n  'Last 4 weeks',\r\n  'Last 12 weeks',\r\n  'Current month',\r\n  'Last calendar month',\r\n]"
                },
                {
                    "name": "Logs_Data",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Subscription has been created for the Plan.',\r\n    Customer_Info: 'Greenplus Enterprises',\r\n    Event_Source: 'Via Portal',\r\n  },\r\n  {\r\n    Timestamp: 'Aug 7th, 2022 9:09am',\r\n    Events: 'Active  subscription created for demo',\r\n    Customer_Info: 'Zencorporation',\r\n    Event_Source: 'Via Interface',\r\n  },\r\n]"
                },
                {
                    "name": "Menu_Headings",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Dashboard',\r\n    icon: 'settings',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Product Catalog ',\r\n    icon: 'logout',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Payment History ',\r\n    icon: 'logout',\r\n    category: 'Payment History',\r\n  },\r\n]"
                },
                {
                    "name": "MENUITEMS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    state: '/overview',\r\n    type: 'link',\r\n    name: 'Overview',\r\n    icon: 'space_dashboard',\r\n    category: 'Dashboard'\r\n  },\r\n  {\r\n    state: '/customers',\r\n    type: 'link',\r\n    name: 'Customer',\r\n    icon: 'account_box',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/subscription',\r\n    type: 'link',\r\n    name: 'Subscription',\r\n    icon: 'card_membership',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: '/products',\r\n    type: 'link',\r\n    name: 'Products',\r\n    icon: 'local_mall',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/features',\r\n    type: 'link',\r\n    name: 'Features',\r\n    icon: 'featured_play_list',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/plans',\r\n    type: 'link',\r\n    name: 'Plans',\r\n    icon: 'quick_reference_all',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/stepper',\r\n    type: 'link',\r\n    name: 'Add Ons',\r\n    icon: 'add_notes',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/coupons',\r\n    type: 'link',\r\n    name: 'Coupons',\r\n    icon: 'confirmation_number',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: '/payment/transactions',\r\n    type: 'link',\r\n    name: 'Transactions',\r\n    icon: 'compare_arrows',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/invoices',\r\n    type: 'link',\r\n    name: 'Invoices',\r\n    icon: 'receipt_long',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: '/payment/logs',\r\n    type: 'link',\r\n    name: 'Logs',\r\n    icon: 'list_alt',\r\n    category: 'Payment History',\r\n  },\r\n]"
                },
                {
                    "name": "nocoupons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n]"
                },
                {
                    "name": "noCustomers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    heading: 'Customers',\r\n    imgPath: '../../../../assets/images/empty-illustrations-6.png',\r\n    alt: 'no customers',\r\n    subtext: 'No customer yet',\r\n    text: 'Customers No customer yet After your first customer you will be able to view it here.',\r\n    showButton: false,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n]"
                },
                {
                    "name": "noFeatures",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    heading: 'Features',\r\n    imgPath: '../../../../assets/images/empty-illustrations-2.png',\r\n    alt: 'no features available',\r\n    subtext: 'Looking for Features',\r\n    text: \"Seems like you haven't added any feature. Start adding feature by click on “Create Feature” button \",\r\n    showButton: true,\r\n    buttonTxt: 'Create Feature',\r\n    path: '/features/create',\r\n  },\r\n]"
                },
                {
                    "name": "noInvoice",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    heading: 'Invoice',\r\n    imgPath: '../../../../assets/images/invoice-empty.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'No invoice yet',\r\n    text: 'After your first transaction you will be able to view invoice here.',\r\n    showButton: false,\r\n  },\r\n]"
                },
                {
                    "name": "noLogs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n]"
                },
                {
                    "name": "noPageFound",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/404-page.png',\r\n    alt: 'No Page Found',\r\n    subtext: \"Oops! Why you're here?\",\r\n    text: \"We are very sorry for inconvenience. It looks like you're try to access a page that either has been deleted or never existed.\",\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n]"
                },
                {
                    "name": "noPlans",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    heading: 'Plans',\r\n    imgPath: '../../../../assets/images/empty-illustrations-4.png',\r\n    alt: 'no Plans available',\r\n    subtext: 'Looking for Plans',\r\n    text: \"Seems like you haven't added any Plan. Start adding plan by click on “Create Plan” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Plan',\r\n    path: '/plans/create',\r\n  },\r\n]"
                },
                {
                    "name": "noProducts",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    heading: 'Products',\r\n    imgPath: '../../../../assets/images/empty-illustrations.png',\r\n    alt: 'no proudcts available',\r\n    subtext: 'Looking for Product',\r\n    text: \"Seems like you haven't added any Product. Start adding products by click on “Create Product” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Product',\r\n    path: '/products/create',\r\n  },\r\n]"
                },
                {
                    "name": "Notifications_Data",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  // {\r\n  //   user: 'John Smith' ,\r\n  //   message: 'subscriptione_created',\r\n  //   created_at: 'Aug 7th, 2023'\r\n  // }\r\n]"
                },
                {
                    "name": "noTransactions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    heading: 'Transaction',\r\n    imgPath: '../../../../assets/images/empty-illustrations-5.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'NO transaction yet',\r\n    text: 'After your first transaction you will be able to view it here.',\r\n    showButton: false,\r\n  },\r\n]"
                },
                {
                    "name": "periodUnit",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "['Daily', 'Weekly', 'Monthly', 'Yearly']"
                },
                {
                    "name": "plan_add_empty_data",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    titleIcon:\r\n      '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n    iconAlt: 'invoice-outline-icon',\r\n    title: 'Product Details',\r\n    subtitle:\r\n      'Please click the “Add” button below to add a new product. Once you clicked the button, you will be prompted to enter the name of product, description and additional details.',\r\n    btnTitle: 'Add product',\r\n    btnPath: '/#',\r\n  },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Pricing Plans',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new pricing plans. Once you clicked the button, you will be prompted to enter pricing and additional details.',\r\n  //   btnTitle: 'Add Pricing',\r\n  //   btnPath: '/#',\r\n  // },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Add-ons Details',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new add-on. Once you have click button, you will be prompted to select add-on.',\r\n  //   btnTitle: 'Add Add-on',\r\n  //   btnPath: '/#',\r\n  // },\r\n]"
                },
                {
                    "name": "Plans_Data",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    id: 'ychvjbknk1',\r\n    plan_ID: 'As-012P',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.3',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: '1i23op1j2eo',\r\n    plan_ID: 'As-099G',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.2',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n]"
                },
                {
                    "name": "pricingModels",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  { value: 1, title: 'Flat fee' },\r\n  { value: 2, title: 'Per unit' },\r\n  { value: 3, title: 'Tiered' },\r\n  { value: 4, title: 'Volume' },\r\n  { value: 5, title: 'Stairstep' },\r\n]"
                },
                {
                    "name": "StaticRoutes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  features: ['features'],\r\n  products: ['products'],\r\n}"
                },
                {
                    "name": "Stepper",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    id: 1,\r\n    title: 'Step 1',\r\n    caption: 'Plan Information',\r\n    isVisible: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Step 2',\r\n    caption: 'Add Plan Pricing',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Step 3',\r\n    caption: 'Product Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Step 4',\r\n    caption: 'Add-on Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Step 5',\r\n    caption: 'Charges',\r\n    isVisible: false,\r\n  },\r\n]"
                },
                {
                    "name": "TransactionList",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n]"
                },
                {
                    "name": "User_Data",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    id: 'random_id_1234',\r\n    product_ID: '#O365ProPlusRetail',\r\n    title: 'Microsoft Teams',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Host Online Calls', 'Unlimited Internet', 'Conference Calls'],\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_555',\r\n    product_ID: '#Or65SuperSupreme',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: [\r\n      'Unlimited Repos',\r\n      'Upto 50 Team Members',\r\n      'Host Online Calls',\r\n      'Unlimited Internet',\r\n      'Conference Calls',\r\n    ],\r\n    created_at: 'June 11th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_6969',\r\n    product_ID: '#Ow65Basic',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Conference Calls'],\r\n    created_at: 'June 18th, 2020',\r\n    status: 'Active',\r\n  },\r\n]"
                },
                {
                    "name": "User_Options",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    path: '/user:id',\r\n    icon: 'account_circle',\r\n    name: 'My Account',\r\n    toggle: false,\r\n  },\r\n  { path: '/inbox', icon: 'inbox_outline', name: 'My Inbox', toggle: false },\r\n  { path: '', icon: 'clear_day', name: 'Dark Mode', toggle: true },\r\n  { path: '/help', icon: 'live_help', name: 'Help', toggle: false },\r\n]"
                }
            ],
            "src/stories/softobiz-ui/dashboardLayout/stories/dashboardLayout.stories.ts": [
                {
                    "name": "DashboardLayout",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/dashboardLayout/stories/dashboardLayout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/dashboardLayout/stories/dashboardLayout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DashboardLayoutComponent>",
                    "defaultValue": "{\r\n  component: DashboardLayoutComponent,\r\n  title: 'softobiz-ui/Layout/Dashboard Layout',\r\n  tags: ['autodocs'],\r\n  render: (args: DashboardLayoutComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    menuItems: { table: { disable: true } },\r\n    configOptions: { table: { disable: true } },\r\n    Menu_Headings: { table: { disable: true } },\r\n    userProfile: { table: { disable: true } },\r\n    notificationsData: { table: { disable: true } },\r\n    activeRoute: { table: { disable: true } },\r\n    currentRoute: { table: { disable: true } },\r\n    globalService: { table: { disable: true } },\r\n    opened: { table: { disable: true } },\r\n    newItemEvent: { table: { disable: true } },\r\n    toggleSidenav: { table: { disable: true } },\r\n    route: { table: { disable: true } },\r\n    getList: { table: { disable: true } },\r\n    sidenav: { table: { disable: true } },\r\n  },\r\n  decorators: [\r\n    componentWrapperDecorator(\r\n      (story) => `<div class=\"left-navigation\" >${story}</div>`\r\n    ),\r\n    moduleMetadata({\r\n      imports: [\r\n        CommonModule,\r\n        AngularMaterialModule,\r\n        BrowserAnimationsModule,\r\n        RouterTestingModule, \r\n      ],\r\n      declarations: [\r\n        SidebarComponent,\r\n      ],\r\n    }),\r\n  ],\r\n\r\n  parameters: {\r\n    docs: {\r\n      source: {\r\n        code: `\r\n        <div class=\"outer-layout\">\r\n        <mat-sidenav-container [ngClass]=\"opened ? 'sidenav-open' : 'sidenav-closed'\">\r\n          <mat-sidenav #sidenav mode=\"side\" opened=\"true\" class=\"sidenav-slider\">\r\n            <!-- <app-sidebar (newItemEvent)=\"toggleSidenav($event)\"></app-sidebar> -->\r\n            <!-- <sft-leftNavigation></sft-leftNavigation> -->\r\n            <div class=\"sidenav-wrapper border-2\">\r\n              <div class=\"sidebar-toggle\">\r\n                <button\r\n                  mat-mini-fab\r\n                  color=\"accent\"\r\n                  class=\"toggle-sidenav\"\r\n                  (click)=\"toggleSidenav()\"\r\n                >\r\n                  <svg\r\n                    width=\"8\"\r\n                    height=\"14\"\r\n                    viewBox=\"0 0 8 14\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path\r\n                      d=\"M0.269968 12.3681L1.42697 13.5186L7.85547 7.08355L1.42047 0.648554L0.269969 1.79905L5.55447 7.08355L0.269968 12.3681V12.3681Z\"\r\n                      fill=\"white\"\r\n                    />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n              <div class=\"sidebar-wrapper\">\r\n                <div class=\"logo pointer\">\r\n                  <div class=\"logo-img pointer\">\r\n                    <img src=\"/framework-logo.png\" alt=\"logo\" />\r\n                  </div>\r\n                  <div class=\"text-wrapper\">\r\n                    <h3>Digital</h3>\r\n                    <span class=\"logo-text\">Framework</span>\r\n                  </div>\r\n                </div>\r\n                <div class=\"sidebar-scrollable mt-11\">\r\n                  <mat-nav-list class=\"sidebar p-0\">\r\n                    <div *ngFor=\"let element of Menu_Headings\" class=\"transition-400\">\r\n                      <div\r\n                        *ngIf=\"element.name != 'Dashboard'\"\r\n                        class=\"category-heading\"\r\n                      >\r\n                        <h1>{{ element.name }}</h1>\r\n                      </div>\r\n                      <mat-list-item\r\n                        class=\"nav-list-item p-0 w-full\"\r\n                        *ngFor=\"let item of getList(element.category)\"\r\n                      >\r\n                        <a\r\n                          class=\"icon-wrapper flex align-center\"\r\n                        >\r\n                          <div class=\"flex justify-center sidebar-icon-wraper\">\r\n                            <mat-icon\r\n                              class=\"material-symbols-outlined m-0 sidebar-icon\"\r\n                              >{{ item.icon }}</mat-icon\r\n                            >\r\n                          </div>\r\n                          <div class=\"content-wrapper\">\r\n                            <span class=\"content\">{{ item.name }}</span>\r\n                          </div>\r\n                        </a>\r\n                      </mat-list-item>\r\n                    </div>\r\n                  </mat-nav-list>\r\n                  <div class=\"image-wrapper\">\r\n                    <div class=\"img\">\r\n                      <img src=\"/dashboard-cat.png\" alt=\"Dashboard Get Started\" />\r\n                    </div>\r\n                    <div class=\"text\">\r\n                      <h3>First steps</h3>\r\n                      <p class=\"description\">\r\n                        Customize your dashboard and lean <br />about out features\r\n                      </p>\r\n                      <span class=\"pointer\">Get Started</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <mat-nav-list class=\"config-section sidebar\">\r\n                  <mat-list-item\r\n                    class=\"nav-list-item p-0\"\r\n                    *ngFor=\"let item of configOptions\"\r\n                  >\r\n                    <a\r\n                      class=\"icon-wrapper flex align-center\"\r\n                      [routerLink]=\"['/', item.state]\"\r\n                    >\r\n                      <mat-icon class=\"material-symbols-outlined m-0 sidebar-icon\">{{\r\n                        item.icon\r\n                      }}</mat-icon>\r\n                      <div class=\"content-wrapper\">\r\n                        <span class=\"content\">{{ item.name }}</span>\r\n                      </div>\r\n                    </a>\r\n                  </mat-list-item>\r\n                </mat-nav-list>\r\n              </div>\r\n            </div>\r\n          </mat-sidenav>\r\n          <mat-sidenav-content>\r\n            <!-- Header for application starts here! -->\r\n            <div class=\"header-wrapper border-2\">\r\n              <div class=\"global-search basic mr-6 border-2\">\r\n                <span class=\"search-icon pointer\">\r\n                  <img src=\"/icons/search.svg\" alt=\"search-icon\" />\r\n                </span>\r\n                <input type=\"text\" placeholder=\"Search...\" />\r\n              </div>\r\n              <div class=\"header-right\">\r\n                <div\r\n                  class=\"notifications-section pointer\"\r\n                  [matMenuTriggerFor]=\"notificationsMenu\"\r\n                  matBadge=\"3\"\r\n                  matBadgeSize=\"small\"\r\n                  matBadgeColor=\"warn\"\r\n                >\r\n                  <img src=\"/icons/notifications.svg\" alt=\"notifications-icon\" />\r\n                </div>\r\n                <mat-menu\r\n                  #notificationsMenu=\"matMenu\"\r\n                  class=\"notifications-menu border-2\"\r\n                  backdropClass=\"right-menu\"\r\n                >\r\n                  <div class=\"notifications-header\">\r\n                    <div class=\"flex align-center justify-between\">\r\n                      <div class=\"label\">Notifications</div>\r\n                      <mat-chip class=\"basic-chip\"> 4 New </mat-chip>\r\n                    </div>\r\n                    <div class=\"tab-panel\" (click)=\"preventClose($event)\">\r\n                      <mat-tab-group mat-stretch-tabs=\"false\" mat-align-tabs=\"start\">\r\n                        <mat-tab label=\"All (4)\">\r\n                          <div\r\n                            class=\"relative h-55\"\r\n                            *ngIf=\"notificationsData.length == 0\"\r\n                          >\r\n                            <div class=\"absolute position-center text-center w-full\">\r\n                              <img src=\"/notifications-icon.png\" alt=\"no data\" />\r\n                              <span class=\"block mt-6\">\r\n                                Hey! You have no notifications.\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                          <div\r\n                            class=\"notification-list\"\r\n                            (click)=\"preventClose($event)\"\r\n                            *ngIf=\"notificationsData.length > 0\"\r\n                          ></div>\r\n                        </mat-tab>\r\n                        <mat-tab label=\"Messages\">\r\n                          <div\r\n                            class=\"relative h-55\"\r\n                            *ngIf=\"notificationsData.length == 0\"\r\n                          >\r\n                            <div class=\"absolute position-center text-center w-full\">\r\n                              <img src=\"/notifications-icon.png\" alt=\"no data\" />\r\n                              <span class=\"block mt-6\">\r\n                                Hey! You have no notifications.\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                          <div\r\n                            class=\"message-list\"\r\n                            (click)=\"preventClose($event)\"\r\n                            *ngIf=\"notificationsData.length > 0\"\r\n                          >\r\n                            My Messages\r\n                          </div>\r\n                        </mat-tab>\r\n                        <mat-tab label=\"Alerts\">\r\n                          <div\r\n                            class=\"relative h-55\"\r\n                            *ngIf=\"notificationsData.length == 0\"\r\n                          >\r\n                            <div class=\"absolute position-center text-center w-full\">\r\n                              <img src=\"/notifications-icon.png\" alt=\"no data\" />\r\n                              <span class=\"block mt-6\">\r\n                                Hey! You have no notifications.\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                          <div\r\n                            class=\"message-list\"\r\n                            (click)=\"preventClose($event)\"\r\n                            *ngIf=\"notificationsData.length > 0\"\r\n                          >\r\n                            Alerts\r\n                          </div>\r\n                        </mat-tab>\r\n                      </mat-tab-group>\r\n                    </div>\r\n                    <div\r\n                      class=\"text-center modal-footer pointer\"\r\n                      (click)=\"preventClose($event)\"\r\n                    >\r\n                      <span class=\"block py-4\"> View All </span>\r\n                    </div>\r\n                  </div>\r\n                </mat-menu>\r\n                <div class=\"user-profile pointer\" [matMenuTriggerFor]=\"menu\">\r\n                  <div class=\"user-image\">\r\n                    <img src=\"/profile-avatar-1.png\" />\r\n                  </div>\r\n                  <div class=\"user-info\">\r\n                    <span class=\"name\">John Smith</span>\r\n                    <span class=\"role\">Founder</span>\r\n                  </div>\r\n                </div>\r\n                <mat-menu\r\n                  #menu=\"matMenu\"\r\n                  class=\"profile-menu\"\r\n                  backdropClass=\"alert-menu\"\r\n                >\r\n                  <div class=\"profile-menu-outer\">\r\n                    <div class=\"grad-bg\">\r\n                      <div class=\"user-initials\">JS</div>\r\n                    </div>\r\n                    <div class=\"profile-inner\">\r\n                      <p class=\"mat-h1 fw-600 m-0\">John Smith</p>\r\n                      <p class=\"m-0 mt-1\">Founder</p>\r\n                    </div>\r\n                    <div class=\"profile-paths\">\r\n                      <a\r\n                        class=\"flex align-center justify-between user-link\"\r\n                        *ngFor=\"let element of userProfile\"\r\n                      >\r\n                        <div class=\"flex align-center\">\r\n                          <mat-icon class=\"material-symbols-outlined\">{{\r\n                            element.icon\r\n                          }}</mat-icon>\r\n                          <span class=\"ml-3\">{{ element.name }}</span>\r\n                        </div>\r\n                        <div *ngIf=\"element.toggle\">\r\n                          <mat-slide-toggle\r\n                            color=\"primary\"\r\n                            (click)=\"preventClose($event)\"\r\n                          ></mat-slide-toggle>\r\n                        </div>\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </mat-menu>\r\n              </div>\r\n            </div>\r\n            <div class=\"pt-6 main-content-height\">\r\n              <router-outlet></router-outlet>\r\n            </div>\r\n          </mat-sidenav-content>\r\n        </mat-sidenav-container>\r\n      </div>\r\n      \r\n        `,\r\n      },\r\n    },\r\n  },\r\n}"
                }
            ],
            "src/stories/softobiz-ui/dialog/stories/dialog.stories.ts": [
                {
                    "name": "Dialog",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/dialog/stories/dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/dialog/stories/dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DialogComponent>",
                    "defaultValue": "{\r\n  component: DialogComponent,\r\n  title: 'softobiz-ui/Organism/Dialog',\r\n  tags: ['autodocs'],\r\n  render: (args: DialogComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {},\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [BrowserAnimationsModule, MatIconModule, AngularMaterialModule],\r\n      declarations: [DialogInfoComponent,DialogInfoDeleteSuccess],\r\n    }),\r\n  ],\r\n  parameters: {\r\n    docs: {\r\n      source: {\r\n        code: `\r\n        <button mat-menu-item disableRipple (click)=\"openDelete()\">\r\n        Delete\r\n       </button>\r\n        `,\r\n      },\r\n    },\r\n  },\r\n}"
                }
            ],
            "src/stories/softobiz-ui/dialog-info/stories/dialog-info.stories.ts": [
                {
                    "name": "DialogInfo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/dialog-info/stories/dialog-info.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    withIcon: false,\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/dialog-info/stories/dialog-info.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DialogInfoComponent>",
                    "defaultValue": "{\r\n  component: DialogInfoComponent,\r\n  title: 'softobiz-ui/Molecules/Dialog-info',\r\n  tags: ['autodocs'],\r\n  render: (args: DialogInfoComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        MatMenuModule,\r\n        MatButtonModule,\r\n        MatDialogModule,\r\n        BrowserAnimationsModule,\r\n        MatIconModule,\r\n        AngularMaterialModule,\r\n        SftErrorLayoutModule,\r\n      ],\r\n      declarations: [DialogInfoComponent,DialogInfoDeleteSuccess],\r\n    }),\r\n  ],\r\n\r\n  parameters: {\r\n    docs: {\r\n      source: {\r\n        code: `\r\n        <div class=\"border-2 text-center coupons-dialog\">\r\n        <div class=\"close-dialog-icon\">\r\n            <mat-icon (click)=\"onCancelClick()\" class=\"material-symbols-outlined\">close</mat-icon>\r\n        </div>\r\n        <div class=\"mb-6\">\r\n            <img src=\"/coupons-delete-confirmation.png\" alt=\"delete-confirmation\">\r\n        </div>\r\n        <h1 class=\"mb-4\">Confirmation</h1>\r\n        <span class=\"mat-body-1 mb-8 block\">Are you sure you want to delete plan</span\r\n        >\r\n        <div class=\"flex-center\">\r\n          <button mat-stroked-button color=\"primary\" mat-dialog-close (click)=\"onCancelClick()\" class=\"px-6 medium\">Cancel</button>\r\n          <button mat-flat-button color=\"primary\" class=\"medium ml-2\" [mat-dialog-close]=\"true\" (click)=\"onYesClick()\">Yes</button>\r\n        </div>\r\n      </div>\r\n      `\r\n      },\r\n    },\r\n  },\r\n}"
                }
            ],
            "src/app/modules/coupons/components/view-coupons/view-coupons.component.ts": [
                {
                    "name": "Duration_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/coupons/components/view-coupons/view-coupons.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DurationElement[]",
                    "defaultValue": "[\r\n  {  Duration : 'Discount Type', time: 'Forever' },\r\n  { Duration : 'Applied on', time: 'All Plans' },\r\n  {  Duration : 'Discount Type', time: 'All Addons' },\r\n]"
                },
                {
                    "name": "ELEMENT_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/coupons/components/view-coupons/view-coupons.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DiscountElement[]",
                    "defaultValue": "[\r\n  {  Discount : 'Discount Type', Amount: 'Fixed Amount' },\r\n  { Discount : 'Applied on', Amount: 'Fixed Amount' },\r\n  {  Discount : 'Discount Type', Amount: 'Invoice Amount' },\r\n]"
                },
                {
                    "name": "Validity_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/coupons/components/view-coupons/view-coupons.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidityElement[]",
                    "defaultValue": "[\r\n  {  Validity : 'Valid Till', time: 'Forever' },\r\n  { Validity : 'Maximum Redemptions', time: '0 to unlimited' },\r\n]"
                }
            ],
            "src/app/modules/features/components/view-feature/view-feature.component.ts": [
                {
                    "name": "ELEMENT_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/features/components/view-feature/view-feature.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PeriodicElement[]",
                    "defaultValue": "[\r\n  { name: 'Hydrogen', weight: 1.0079 },\r\n  { name: 'Helium', weight: 4.0026 },\r\n]"
                },
                {
                    "name": "FEATURE_TYPE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/features/components/view-feature/view-feature.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'custom'"
                }
            ],
            "src/app/modules/plans/components/add-ons-details/add-ons-details.component.ts": [
                {
                    "name": "ELEMENT_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/plans/components/add-ons-details/add-ons-details.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PeriodicElement[]",
                    "defaultValue": "[\r\n  { id:'element123456', name: 'Host online calls', status: \"Active\",Product: 'Microsoft Teams', type: 'Switch' },\r\n  {  id:'element1234', name: 'Union all information', status: \"Active\",Product: 'Microsoft Teams', type: 'Range' },\r\n  {  id:'element12', name: 'Create team sites', status: \"Active\",Product: 'Microsoft Teams', type: 'Custom' },\r\n]"
                }
            ],
            "src/app/modules/plans/components/create-plan/create-plan.component.ts": [
                {
                    "name": "ELEMENT_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/plans/components/create-plan/create-plan.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PeriodicElement[]",
                    "defaultValue": "[\r\n  { PricingCycle: 'Daily', Price: 'Set Price' },\r\n  { PricingCycle: 'Weekly', Price: 'Set Price' },\r\n  { PricingCycle: 'Monthly', Price: 'Set Price' },\r\n  { PricingCycle: 'Yearly', Price: 'Set Price' },\r\n]"
                }
            ],
            "src/app/modules/plans/components/view-plans/view-plans.component.ts": [
                {
                    "name": "ELEMENT_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/plans/components/view-plans/view-plans.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PeriodicElement[]",
                    "defaultValue": "[\r\n  { Currency: '', PricingCycle: 'Daily', Price: '$100/Unit' },\r\n  { Currency: '', PricingCycle: 'Weekly', Price: '$100/Unit' },\r\n  { Currency: '', PricingCycle: 'Monthly', Price: '$100/Unit' },\r\n  { Currency: '', PricingCycle: 'Yearly', Price: '$100/Unit' },\r\n]"
                }
            ],
            "src/environments/environment.dev.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.dev.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false,\r\n   apiUrl: 'https://dev-kong-saasframework.symple.co.in/pcm/api/v1',\r\n  blobStorage: 'https://saasframeworkuploads.blob.core.windows.net',\r\n  kratosUrl: 'http://127.0.0.1:4433/self-service',\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,  \r\n  apiUrl: 'https://dev-kong-saasframework.symple.co.in/pcm/api/v1',\r\n  blobStorage:'https://saasframeworkuploads.blob.core.windows.net',\r\n  kratosUrl:'http://127.0.0.1:4433/self-service',\r\n\r\n}"
                }
            ],
            "src/environments/environment.uat.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.uat.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false,\r\n  apiUrl: 'https://dev-kong-saasframework.symple.co.in/pcm/api/v1',\r\n  blobStorage: 'https://saasframeworkuploads.blob.core.windows.net',\r\n  kratosUrl: 'http://127.0.0.1:4433/self-service',\r\n}"
                }
            ],
            "src/stories/softobiz-ui/errorLayout/stories/errorLayout.stories.ts": [
                {
                    "name": "Error404",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/errorLayout/stories/errorLayout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n      variant: 'E404',\r\n    },\r\n}"
                },
                {
                    "name": "Error505",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/errorLayout/stories/errorLayout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n      variant: 'E505',\r\n    },\r\n    parameters: {\r\n      storybook: {\r\n        hideNoControlsWarning: true,\r\n      },\r\n      docs: {\r\n        source: {\r\n          code: `\r\n          <div>\r\n          <div class=\"absolute position-center text-center\">\r\n            <div class=\"\">\r\n              <img src=\"505-page.png\" alt=\"No Page Found\" />\r\n              <div class=\"my-10\">\r\n                <p class=\"mat-h1 purple-text text-darken-1\">Gateway Timeout Error</p>\r\n                <p class=\"desc-info mt-6 text-text text-lighten-2\">\r\n                We are very sorry for inconvenience. It looks like some how our server did not receive a timely response.\r\n                </p>\r\n              </div>\r\n              <a href=\"\">\r\n                <sft-button [label]=\"'Back To Home'\" [color]=\"'primary'\" [variant]=\"'flat'\" [disable]=\"false\"\r\n                  [disableRipple]=\"false\" [size]=\"'medium'\" [onClick]=\"'funtion()'\"></sft-button>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n           `,\r\n        },\r\n      },\r\n\r\n    },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/errorLayout/stories/errorLayout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ErrorLayoutComponent>",
                    "defaultValue": "{\r\n  component: ErrorLayoutComponent,\r\n  title: 'softobiz-ui/Pages/Error',\r\n  tags: ['autodocs'],\r\n  render: (args: ErrorLayoutComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    variant: {\r\n      control: 'select',\r\n      options: ['E404', 'E505'],\r\n    },\r\n  },\r\n  decorators: [\r\n    componentWrapperDecorator(\r\n      (story) => `<div class=\"error-page\">${story}</div>`\r\n    ),\r\n    moduleMetadata({\r\n      imports: [\r\n        CommonModule,\r\n        AngularMaterialModule,\r\n        BrowserAnimationsModule,\r\n      ],\r\n      declarations: [\r\n        ButtonComponent,\r\n      ],\r\n    }),\r\n  ],\r\n\r\n  parameters: {\r\n    docs: {\r\n      source: {\r\n        code: `\r\n        \r\n        <div class=\"absolute position-center text-center\">\r\n        <div class=\"\">\r\n          <img src=\"404-page.png\" alt=\"No Page Found\" />\r\n          <div class=\"my-10\">\r\n            <p class=\"mat-h1 purple-text text-darken-1\"> Oops! Why you’re here?</p>\r\n            <p class=\"desc-info mt-6 text-text text-lighten-2\">\r\n            We are very sorry for inconvenience. It looks like you’re try to access a page that either has been deleted or never existed.\r\n            </p>\r\n          </div>\r\n          <a href=\"\">\r\n            <sft-button [label]=\"'Back To Home'\" [color]=\"'primary'\" [variant]=\"'flat'\" [disable]=\"false\"\r\n              [disableRipple]=\"false\" [size]=\"'medium'\" [onClick]=\"'funtion()'\"></sft-button>\r\n          </a>\r\n        </div>\r\n      </div>\r\n        `,\r\n      },\r\n    },\r\n  },  \r\n}"
                }
            ],
            "src/stories/softobiz-ui/header/stories/header.stories.ts": [
                {
                    "name": "Header",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/header/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/header/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<HeaderComponent>",
                    "defaultValue": "{\r\n  component: HeaderComponent,\r\n  title: 'softobiz-ui/Molecules/Header',\r\n  tags: ['autodocs'],\r\n  render: (args: HeaderComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {},\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        AngularMaterialModule,\r\n        BrowserAnimationsModule,\r\n      ],\r\n      declarations: [ProfileComponent, SearchbarComponent],\r\n    }),\r\n  ],\r\n\r\n  parameters: {\r\n    docs: {\r\n      source: {\r\n        code: `\r\n          <div class=\"header-wrapper border-2\">\r\n            <sft-searchbar></sft-searchbar>\r\n            <div class=\"header-right\">\r\n              <div\r\n                class=\"notifications-section pointer\"\r\n                [matMenuTriggerFor]=\"notificationsMenu\"\r\n                matBadge=\"3\"\r\n                matBadgeSize=\"small\"\r\n                matBadgeColor=\"warn\"\r\n              >\r\n                <img src=\"/icons/notifications.svg\" alt=\"notifications-icon\" />\r\n              </div>\r\n              <mat-menu\r\n                #notificationsMenu=\"matMenu\"\r\n                class=\"notifications-menu border-2\"\r\n                backdropClass=\"right-menu\"\r\n              >\r\n                <div class=\"notifications-header\">\r\n                  <div class=\"flex align-center justify-between\">\r\n                    <div class=\"label\">Notifications</div>\r\n                    <mat-chip class=\"basic-chip\"> 4 New </mat-chip>\r\n                  </div>\r\n                  <div class=\"tab-panel\" (click)=\"preventClose($event)\">\r\n                    <mat-tab-group mat-stretch-tabs=\"false\" mat-align-tabs=\"start\">\r\n                      <mat-tab label=\"All (4)\">\r\n                        <div\r\n                          class=\"relative h-55\"\r\n                          *ngIf=\"notificationsData.length == 0\"\r\n                        >\r\n                          <div class=\"absolute position-center text-center w-full\">\r\n                            <img src=\"/notifications-icon.png\" alt=\"no data\" />\r\n                            <span class=\"block mt-6\">\r\n                              Hey! You have no notifications.\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                        <div\r\n                          class=\"notification-list\"\r\n                          (click)=\"preventClose($event)\"\r\n                          *ngIf=\"notificationsData.length > 0\"\r\n                        ></div>\r\n                      </mat-tab>\r\n                      <mat-tab label=\"Messages\">\r\n                        <div\r\n                          class=\"relative h-55\"\r\n                          *ngIf=\"notificationsData.length == 0\"\r\n                        >\r\n                          <div class=\"absolute position-center text-center w-full\">\r\n                            <img src=\"/notifications-icon.png\" alt=\"no data\" />\r\n                            <span class=\"block mt-6\">\r\n                              Hey! You have no notifications.\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                        <div\r\n                          class=\"message-list\"\r\n                          (click)=\"preventClose($event)\"\r\n                          *ngIf=\"notificationsData.length > 0\"\r\n                        >\r\n                          My Messages\r\n                        </div>\r\n                      </mat-tab>\r\n                      <mat-tab label=\"Alerts\">\r\n                        <div\r\n                          class=\"relative h-55\"\r\n                          *ngIf=\"notificationsData.length == 0\"\r\n                        >\r\n                          <div class=\"absolute position-center text-center w-full\">\r\n                            <img src=\"/notifications-icon.png\" alt=\"no data\" />\r\n                            <span class=\"block mt-6\">\r\n                              Hey! You have no notifications.\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                        <div\r\n                          class=\"message-list\"\r\n                          (click)=\"preventClose($event)\"\r\n                          *ngIf=\"notificationsData.length > 0\"\r\n                        >\r\n                          Alerts\r\n                        </div>\r\n                      </mat-tab>\r\n                    </mat-tab-group>\r\n                  </div>\r\n                  <div\r\n                    class=\"text-center modal-footer pointer\"\r\n                    (click)=\"preventClose($event)\"\r\n                  >\r\n                    <span class=\"block py-4\"> View All </span>\r\n                  </div>\r\n                </div>\r\n              </mat-menu>\r\n              <sft-profile></sft-profile>\r\n            </div>\r\n          </div>\r\n        `,\r\n      },\r\n    },\r\n  },\r\n}"
                }
            ],
            "src/stories/softobiz-ui/Input/stories/input.stories.ts": [
                {
                    "name": "Input",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/Input/stories/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    readonly: false,\r\n    placeholder: 'Enter here...',\r\n    disable: false,\r\n    required: true,\r\n    label: 'Label',\r\n    infoIcon: false,\r\n    infoTitle: 'Title',\r\n    infoDetail:\r\n      'Microsoft Teams is the ultimate messaging app for your organization—a workspace for real-time collaboration and communication, meetings, file and app sharing, and even the occasional emoji! All in one place, all in the open, all accessible to everyone.',\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/Input/stories/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<InputComponent>",
                    "defaultValue": "{\r\n  component: InputComponent,\r\n  title: 'softobiz-ui/Atom/Input',\r\n  tags: ['autodocs'],\r\n  render: (args: InputComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    hint: { control: 'text' },\r\n    class: { control: 'text' },\r\n    infoIcon: {\r\n      control: 'boolean',\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        BrowserAnimationsModule,\r\n        MatIconModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        NgxTippyModule,\r\n      ],\r\n    }),\r\n  ],\r\n}"
                }
            ],
            "src/stories/softobiz-ui/leftNavigation/stories/leftNavigation.stories.ts": [
                {
                    "name": "LeftNavigation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/leftNavigation/stories/leftNavigation.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/leftNavigation/stories/leftNavigation.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<LeftNavigationComponent>",
                    "defaultValue": "{\r\n  component: LeftNavigationComponent,\r\n  title: 'softobiz-ui/Organism/Left Navigation',\r\n  tags: ['autodocs'],\r\n  render: (args: LeftNavigationComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    menuItems: { table: { disable: true } },\r\n    configOptions: { table: { disable: true } },\r\n    Menu_Headings: { table: { disable: true } },\r\n    userProfile: { table: { disable: true } },\r\n    notificationsData: { table: { disable: true } },\r\n    activeRoute: { table: { disable: true } },\r\n    currentRoute: { table: { disable: true } },\r\n    globalService: { table: { disable: true } },\r\n    opened: { table: { disable: true } },\r\n    newItemEvent: { table: { disable: true } },\r\n    toggleSidenav: { table: { disable: true } },\r\n    route: { table: { disable: true } },\r\n    getList: { table: { disable: true } },\r\n    sidenav: { table: { disable: true } },\r\n  },\r\n  decorators: [\r\n    componentWrapperDecorator(\r\n      (story) => `<div class=\"left-navigation\" >${story}</div>`\r\n    ),\r\n    moduleMetadata({\r\n      imports: [\r\n        MatMenuModule,\r\n        MatMenuModule,\r\n        MatIconModule,\r\n        BrowserAnimationsModule,\r\n        MatChipsModule,\r\n        MatSidenavModule,\r\n        // ActivatedRoute,\r\n        MatChipsModule,\r\n        MatSlideToggleModule,\r\n        RouterTestingModule,\r\n        MatListModule,\r\n        MatButtonModule,\r\n      ],\r\n      declarations: [SidebarComponent],\r\n    }),\r\n  ],\r\n\r\n  parameters: {\r\n    docs: {\r\n      source: {\r\n        code: `\r\n          <div class=\"outer-layout\">\r\n            <mat-sidenav-container [ngClass]=\"opened ? 'sidenav-open' : 'sidenav-closed'\">\r\n              <mat-sidenav #sidenav mode=\"side\" opened=\"true\" class=\"sidenav-slider\">\r\n                <div class=\"sidenav-wrapper border-2\">\r\n                  <div class=\"sidebar-toggle\">\r\n                    <button\r\n                      mat-mini-fab\r\n                      color=\"accent\"\r\n                      class=\"toggle-sidenav\"\r\n                      (click)=\"toggleSidenav()\"\r\n                    >\r\n                      <svg\r\n                        width=\"8\"\r\n                        height=\"14\"\r\n                        viewBox=\"0 0 8 14\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          d=\"M0.269968 12.3681L1.42697 13.5186L7.85547 7.08355L1.42047 0.648554L0.269969 1.79905L5.55447 7.08355L0.269968 12.3681V12.3681Z\"\r\n                          fill=\"white\"\r\n                        />\r\n                      </svg>\r\n                    </button>\r\n                  </div>\r\n                  <div class=\"sidebar-wrapper\">\r\n                    <div class=\"logo pointer\">\r\n                      <div class=\"logo-img pointer\">\r\n                        <img src=\"/framework-logo.png\" alt=\"logo\" />\r\n                      </div>\r\n                      <div class=\"text-wrapper\">\r\n                        <h3>Digital</h3>\r\n                        <span class=\"logo-text\">Framework</span>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"sidebar-scrollable mt-11\">\r\n                      <mat-nav-list class=\"sidebar p-0\">\r\n                        <div *ngFor=\"let element of Menu_Headings\" class=\"transition-400\">\r\n                          <div\r\n                            *ngIf=\"element.name != 'Dashboard'\"\r\n                            class=\"category-heading\"\r\n                          >\r\n                            <h1>{{ element.name }}</h1>\r\n                          </div>\r\n                          <mat-list-item\r\n                            class=\"nav-list-item p-0 w-full\"\r\n                            *ngFor=\"let item of getList(element.category)\"\r\n                          >\r\n                            <a\r\n                              class=\"icon-wrapper flex align-center\"\r\n                            >\r\n                              <div class=\"flex justify-center sidebar-icon-wraper\">\r\n                                <mat-icon\r\n                                  class=\"material-symbols-outlined m-0 sidebar-icon\"\r\n                                  >{{ item.icon }}</mat-icon\r\n                                >\r\n                              </div>\r\n                              <div class=\"content-wrapper\">\r\n                                <span class=\"content\">{{ item.name }}</span>\r\n                              </div>\r\n                            </a>\r\n                          </mat-list-item>\r\n                        </div>\r\n                      </mat-nav-list>\r\n                      <div class=\"image-wrapper\">\r\n                        <div class=\"img\">\r\n                          <img src=\"/dashboard-cat.png\" alt=\"Dashboard Get Started\" />\r\n                        </div>\r\n                        <div class=\"text\">\r\n                          <h3>First steps</h3>\r\n                          <p class=\"description\">\r\n                            Customize your dashboard and lean <br />about out features\r\n                          </p>\r\n                          <span class=\"pointer\">Get Started</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <mat-nav-list class=\"config-section sidebar\">\r\n                      <mat-list-item\r\n                        class=\"nav-list-item p-0\"\r\n                        *ngFor=\"let item of configOptions\"\r\n                      >\r\n                        <a\r\n                          class=\"icon-wrapper flex align-center\"\r\n                          [routerLink]=\"['/', item.state]\"\r\n                        >\r\n                          <mat-icon class=\"material-symbols-outlined m-0 sidebar-icon\">{{\r\n                            item.icon\r\n                          }}</mat-icon>\r\n                          <div class=\"content-wrapper\">\r\n                            <span class=\"content\">{{ item.name }}</span>\r\n                          </div>\r\n                        </a>\r\n                      </mat-list-item>\r\n                    </mat-nav-list>\r\n                  </div>\r\n                </div>\r\n              </mat-sidenav>\r\n              <mat-sidenav-content>\r\n                <div class=\"pt-6 main-content-height\">\r\n                  <router-outlet></router-outlet>\r\n                </div>\r\n              </mat-sidenav-content>\r\n            </mat-sidenav-container>\r\n          </div>\r\n        `,\r\n      },\r\n    },\r\n  },\r\n}"
                }
            ],
            "src/app/modules/coupons/components/create-coupons/create-coupons.component.ts": [
                {
                    "name": "MATERIAL_DATEPICKER_FORMATS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/coupons/components/create-coupons/create-coupons.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  parse: {\r\n    dateInput: 'DD/MMM/YYYY',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MMM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'DD/MMM/YYYY',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n}"
                }
            ],
            "src/app/modules/payment-history/logs/components/logs-list/logs-list.component.ts": [
                {
                    "name": "MATERIAL_DATEPICKER_FORMATS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/payment-history/logs/components/logs-list/logs-list.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  parse: {\r\n    dateInput: 'DD/MMM/YYYY',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MMM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'DD/MMM/YYYY',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n}"
                }
            ],
            "src/stories/softobiz-ui/menu/stories/menu.stories.ts": [
                {
                    "name": "Menu",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/menu/stories/menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    withIcon: false,\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/menu/stories/menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<MenuComponent>",
                    "defaultValue": "{\r\n  component: MenuComponent,\r\n  title: 'softobiz-ui/Molecules/Menu',\r\n  tags: ['autodocs'],\r\n  render: (args: MenuComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    withIcon: {\r\n      control: 'boolean',\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        MatMenuModule,\r\n        MatButtonModule,\r\n        MatDialogModule,\r\n        MatButtonModule,\r\n        BrowserAnimationsModule,\r\n        MatIconModule,\r\n      ],\r\n    }),\r\n  ],\r\n\r\n  parameters: {\r\n    docs: {\r\n      source: {\r\n        code: `\r\n        <mat-icon class=\"material-symbols-outlined\" [matMenuTriggerFor]=\"actionsMenu\">\r\n          more_vert\r\n        </mat-icon>\r\n        <mat-menu #actionsMenu=\"matMenu\" class=\"actions-menu\" backdropClass=\"edit-menu\">\r\n          <button mat-menu-item disableRipple>\r\n            <mat-icon class=\"material-symbols-outlined\"\r\n              ><img src=\"/icons/bunny.svg\" alt=\"bunny-icon\" class=\"mr-3\"\r\n            /></mat-icon>\r\n            Edit\r\n          </button>\r\n          <button mat-menu-item disableRipple>\r\n            <mat-icon class=\"material-symbols-outlined\"\r\n              ><img src=\"/icons/bunny.svg\" alt=\"bunny-icon\" class=\"mr-3\"\r\n            /></mat-icon>\r\n            Delete\r\n          </button>\r\n        </mat-menu>\r\n      `,\r\n        // code: ({ withIcon }: MenuComponent) => {\r\n        //   const codeWithIcon = `\r\n        //     // Source code with icon\r\n        //   `;\r\n\r\n        //   const codeWithoutIcon = `\r\n        //     // Source code without icon\r\n        //   `;\r\n\r\n        //   return withIcon ? codeWithIcon : codeWithoutIcon;\r\n        // },\r\n      },\r\n    },\r\n  },\r\n}"
                }
            ],
            "src/stories/softobiz-ui/notification/stories/notification.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/notification/stories/notification.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NotificationComponent>",
                    "defaultValue": "{\r\n  component: NotificationComponent,\r\n  title: 'softobiz-ui/Atom/Notification',\r\n  tags: ['autodocs'],\r\n  render: (args: NotificationComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    badgeCount: {\r\n      control: 'number',\r\n    },\r\n    size: {\r\n      control: 'select',\r\n      options: ['small', 'medium', 'large'],\r\n    },\r\n    color: {\r\n      options: ['primary', 'accent', 'warn'],\r\n      control: { type: 'radio' },\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        MatMenuModule,\r\n        MatButtonModule,\r\n        MatDialogModule,\r\n        MatButtonModule,\r\n        BrowserAnimationsModule,\r\n        MatIconModule,\r\n        MatBadgeModule,\r\n      ],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Notification",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/notification/stories/notification.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    badgeCount: 23,\r\n    color: 'warn',\r\n    size: 'small',\r\n  },\r\n}"
                }
            ],
            "src/stories/softobiz-ui/paginator/stories/paginator.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/paginator/stories/paginator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<PaginatorComponent>",
                    "defaultValue": "{\r\n  component: PaginatorComponent,\r\n  title: 'softobiz-ui/Organism/Paginator',\r\n  tags: ['autodocs'],\r\n  render: (args: PaginatorComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {},\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [BrowserAnimationsModule, MatIconModule, MatPaginatorModule,]\r\n    }),\r\n  ],\r\n  parameters: {\r\n    docs: {\r\n      source: {\r\n        code: `\r\n        <mat-paginator\r\n        (page)=\"handlePageEvent($event)\"\r\n        [length]=\"length\"\r\n        [pageSize]=\"pageSize\"\r\n        [pageSizeOptions]=\"pageSizeOptions\"\r\n        [pageIndex]=\"pageIndex\"\r\n        aria-label=\"Select page\">\r\n        </mat-paginator>\r\n\r\n        `,\r\n      },\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Paginator",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/paginator/stories/paginator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n}"
                }
            ],
            "src/stories/softobiz-ui/profile/stories/profile.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/profile/stories/profile.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ProfileComponent>",
                    "defaultValue": "{\r\n  component: ProfileComponent,\r\n  title: 'softobiz-ui/Molecules/Profile',\r\n  tags: ['autodocs'],\r\n  render: (args: ProfileComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {},\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        MatMenuModule,\r\n        MatCardModule,\r\n        MatDialogModule,\r\n        MatDialogModule,\r\n        MatButtonModule,\r\n        BrowserAnimationsModule,\r\n        MatIconModule,\r\n      ],\r\n    }),\r\n  ],\r\n  parameters: {\r\n    docs: {\r\n      source: {\r\n        code: `\r\n        <div class=\"user-profile pointer\" [matMenuTriggerFor]=\"menu\">\r\n          <div class=\"user-image\">\r\n            <img src=\"/profile-avatar-1.png\" />\r\n          </div>\r\n          <div class=\"user-info\">\r\n            <span class=\"name\">John Smith</span>\r\n            <span class=\"role\">Founder</span>\r\n          </div>\r\n        </div>\r\n        <mat-menu\r\n          #menu=\"matMenu\"\r\n          class=\"profile-menu\"\r\n          backdropClass=\"alert-menu\"\r\n        >\r\n          <div class=\"profile-menu-outer\">\r\n            <div class=\"grad-bg\">\r\n              <div class=\"user-initials\">JS</div>\r\n            </div>\r\n            <div class=\"profile-inner\">\r\n              <p class=\"mat-h1 fw-600 m-0\">John Smith</p>\r\n              <p class=\"m-0 mt-1\">Founder</p>\r\n            </div>\r\n            <div class=\"profile-paths\">\r\n              <a\r\n                class=\"flex align-center justify-between user-link\"\r\n              >\r\n                <div class=\"flex align-center\">\r\n                  <mat-icon class=\"material-symbols-outlined\">account_circle</mat-icon>\r\n                  <span class=\"ml-3\">John</span>\r\n                </div>\r\n                <div >\r\n                  <mat-slide-toggle\r\n                    color=\"primary\"\r\n                  ></mat-slide-toggle>\r\n                </div>\r\n              </a>\r\n              <a\r\n                class=\"flex align-center justify-between user-link\"\r\n              >\r\n                <div class=\"flex align-center\">\r\n                  <mat-icon class=\"material-symbols-outlined\">inbox_outline</mat-icon>\r\n                  <span class=\"ml-3\">My Inbox</span>\r\n                </div>\r\n              </a>\r\n              <a\r\n                class=\"flex align-center justify-between user-link\"\r\n              >\r\n                <div class=\"flex align-center\">\r\n                  <mat-icon class=\"material-symbols-outlined\">clear_day</mat-icon>\r\n                  <span class=\"ml-3\">Dark Mode</span>\r\n                </div>\r\n              </a>\r\n              <a\r\n                class=\"flex align-center justify-between user-link\"\r\n              >\r\n                <div class=\"flex align-center\">\r\n                  <mat-icon class=\"material-symbols-outlined\">live_help</mat-icon>\r\n                  <span class=\"ml-3\">Help</span>\r\n                </div>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </mat-menu>\r\n        `,\r\n      },\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Profile",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/profile/stories/profile.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n}"
                }
            ],
            "src/stories/softobiz-ui/radiobutton/stories/radio.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/radiobutton/stories/radio.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RadioButtonComponent>",
                    "defaultValue": "{\r\n  component: RadioButtonComponent,\r\n  title: 'softobiz-ui/Atom/Radio',\r\n  tags: ['autodocs'],\r\n  render: (args: RadioButtonComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    disable: {\r\n      control: 'boolean',\r\n    },\r\n    checked: {\r\n      control: 'boolean',\r\n    },\r\n    disableRipple: {\r\n      control: 'boolean',\r\n    },\r\n    color: {\r\n      options: ['primary', 'accent', 'warn'],\r\n      control: { type: 'radio' },\r\n    },\r\n    indeterminate: {\r\n      control: 'boolean',\r\n      option: [true, false],\r\n    },\r\n    label: {\r\n      control: 'text',\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [MatRadioModule],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "RadioButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/radiobutton/stories/radio.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    indeterminate: false,\r\n    label: 'Click Me!',\r\n    checked: false,\r\n    disable: false,\r\n    disableRipple: false,\r\n    labelPosition: 'after',\r\n  },\r\n}"
                }
            ],
            "src/stories/softobiz-ui/searchbar/stories/searchbar.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/searchbar/stories/searchbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SearchbarComponent>",
                    "defaultValue": "{\r\n  component: SearchbarComponent,\r\n  title: 'softobiz-ui/Atom/Searchbar',\r\n  tags: ['autodocs'],\r\n  render: (args: SearchbarComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        BrowserAnimationsModule,\r\n        MatIconModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n      ],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Searchbar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/searchbar/stories/searchbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    placeholder: 'Enter here...',\r\n    disable: false,\r\n  },\r\n}"
                }
            ],
            "src/stories/softobiz-ui/stepper/stories/stepper.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/stepper/stories/stepper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<StepperComponent>",
                    "defaultValue": "{\r\n  component: StepperComponent,\r\n  title: 'softobiz-ui/Organism/Stepper',\r\n  tags: ['autodocs'],\r\n  render: (args: StepperComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        BrowserAnimationsModule,\r\n        MatIconModule,\r\n        MatStepperModule\r\n      ],\r\n    }),\r\n  ],\r\n  parameters: {\r\n    docs: {\r\n      source: {\r\n        code: `\r\n        <div class=\"stepper-wrapper\">\r\n        <mat-stepper orientation=\"vertical\" #stepper [disableRipple]=\"true\">\r\n          <mat-step id=\"foo-bar\">\r\n            <ng-template matStepLabel>\r\n              <div >\r\n                <span id=\"step-id1\" class=\"block text-dark font-weight-500\">step 1</span>\r\n                <span\r\n                  class=\"block font-weight-600 mat-subtitle-2 text-headline-light\"\r\n                  >Plan Information</span\r\n                >\r\n              </div>\r\n            </ng-template>\r\n          </mat-step>\r\n          <mat-step id=\"foo-bar\">\r\n            <ng-template matStepLabel>\r\n              <div >\r\n                <span id=\"step-id2\" class=\"block text-dark font-weight-500\">step 2</span>\r\n                <span\r\n                  class=\"block font-weight-600 mat-subtitle-2 text-headline-light\"\r\n                  >Plan Information</span\r\n                >\r\n              </div>\r\n            </ng-template>\r\n          </mat-step>\r\n          <mat-step id=\"foo-bar\">\r\n            <ng-template matStepLabel>\r\n              <div >\r\n                <span id=\"step-id3\" class=\"block text-dark font-weight-500\">step 3</span>\r\n                <span\r\n                  class=\"block font-weight-600 mat-subtitle-2 text-headline-light\"\r\n                  >Plan Information</span\r\n                >\r\n              </div>\r\n            </ng-template>\r\n          </mat-step>\r\n          <mat-step id=\"foo-bar\">\r\n            <ng-template matStepLabel>\r\n              <div >\r\n                <span id=\"step-id4\" class=\"block text-dark font-weight-500\">step 4</span>\r\n                <span\r\n                  class=\"block font-weight-600 mat-subtitle-2 text-headline-light\"\r\n                  >Plan Information</span\r\n                >\r\n              </div>\r\n            </ng-template>\r\n          </mat-step>\r\n          <mat-step id=\"foo-bar\">\r\n            <ng-template matStepLabel>\r\n              <div >\r\n                <span id=\"step-id5\" class=\"block text-dark font-weight-500\">step 5</span>\r\n                <span\r\n                  class=\"block font-weight-600 mat-subtitle-2 text-headline-light\"\r\n                  >Plan Information</span\r\n                >\r\n              </div>\r\n            </ng-template>\r\n          </mat-step>\r\n        </mat-stepper>\r\n      </div>      \r\n        `,\r\n      },\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Stepper",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/stepper/stories/stepper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n  },\r\n}"
                }
            ],
            "src/stories/softobiz-ui/switch/stories/switch.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/switch/stories/switch.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SwitchButtonComponent>",
                    "defaultValue": "{\r\n  component: SwitchButtonComponent,\r\n  title: 'softobiz-ui/Atom/switch',\r\n  tags: ['autodocs'],\r\n  render: (args: SwitchButtonComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    disable: {\r\n      control: 'boolean',\r\n    },\r\n    checked: {\r\n      control: 'boolean',\r\n    },\r\n    disableRipple: {\r\n      control: 'boolean',\r\n    },\r\n    color: {\r\n      options: ['primary', 'accent', 'warn'],\r\n      control: { type: 'radio' },\r\n    },\r\n    indeterminate: {\r\n      control: 'boolean',\r\n      option: [true, false],\r\n    },\r\n    label: {\r\n      control: 'text',\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [MatSlideToggleModule],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "SwitchButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/switch/stories/switch.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    indeterminate: false,\r\n    label: 'Click Me!',\r\n    checked: false,\r\n    disable: false,\r\n    disableRipple: false,\r\n    color: \"primary\",\r\n    labelPosition: 'after',\r\n  },\r\n}"
                }
            ],
            "src/stories/softobiz-ui/table/stories/table.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/table/stories/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TableComponent>",
                    "defaultValue": "{\r\n  component: TableComponent,\r\n  title: 'softobiz-ui/Organism/Table',\r\n  tags: ['autodocs'],\r\n  render: (args: TableComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    variant: {\r\n      control: 'select',\r\n      options: ['primary', 'secondary'],\r\n    },\r\n\r\n    couponsData: { table: { disable: true } },\r\n    dialog: { table: { disable: true } },\r\n    dialogRef: { table: { disable: true } },\r\n    displayedColumns1: { table: { disable: true } },\r\n    selection: { table: { disable: true } },\r\n    announceSortChange: { table: { disable: true } },\r\n    checkboxLabel: { table: { disable: true } },\r\n    isAllSelected: { table: { disable: true } },\r\n    openDelete: { table: { disable: true } },\r\n    selectAll: { table: { disable: true } },\r\n    selectedRow: { table: { disable: true } },\r\n    sendElementId: { table: { disable: true } },\r\n    toggleAllRows: { table: { disable: true } },\r\n    sort: { table: { disable: true } },\r\n    customHeader: { table: { disable: true } },\r\n    displayedColumns: { table: { disable: true } },\r\n    emptyCoupons: { table: { disable: true } },\r\n    endDate: { table: { disable: true } },\r\n    filterOptions: { table: { disable: true } },\r\n    isOpened: { table: { disable: true } },\r\n    LogsData: { table: { disable: true } },\r\n    startDate: { table: { disable: true } },\r\n    handleDateRangeSelection: { table: { disable: true } },\r\n    openDatePicker: { table: { disable: true } },\r\n    preventClose: { table: { disable: true } },\r\n    setFilter: { table: { disable: true } },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        MatMenuModule,\r\n        MatMenuModule,\r\n        MatIconModule,\r\n        BrowserAnimationsModule,\r\n        MatChipsModule,\r\n        MatChipsModule,\r\n        MatTableModule,\r\n        AngularMaterialModule,\r\n        // MatDialog,\r\n        MatDialogModule,\r\n        SharedModule\r\n        // MatDialogRef\r\n      ],\r\n      declarations: [],\r\n    }),\r\n  ],\r\n\r\n  parameters: {\r\n    docs: {\r\n      source: {\r\n        code: `\r\n          <div class=\"primary-table overflow-visible mt-8 px-1 pb-2\">\r\n          <table\r\n            mat-table\r\n            [dataSource]=\"couponsData\"\r\n            matSort\r\n            (matSortChange)=\"announceSortChange($event)\"\r\n          >\r\n            <!--- Note that these columns can be defined in any order.\r\n                      The actual rendered columns are set as a property on the row definition\" -->\r\n            <ng-container matColumnDef=\"select\">\r\n              <th mat-header-cell *matHeaderCellDef>\r\n                <mat-checkbox\r\n                  color=\"primary\"\r\n                  (click)=\"selectAll(couponsData)\"\r\n                  (change)=\"$event ? toggleAllRows() : null\"\r\n                  [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                  [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                  [aria-label]=\"checkboxLabel()\"\r\n                >\r\n                </mat-checkbox>\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let row\">\r\n                <mat-checkbox\r\n                  color=\"primary\"\r\n                  (click)=\"selectedRow(row.id, $event)\"\r\n                  (change)=\"$event ? selection.toggle(row) : null\"\r\n                  [checked]=\"selection.isSelected(row)\"\r\n                  [aria-label]=\"checkboxLabel(row)\"\r\n                >\r\n                </mat-checkbox>\r\n              </td>\r\n            </ng-container>\r\n        \r\n            <!-- ID Column -->\r\n            <ng-container matColumnDef=\"coupon_id\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#Coupon ID</th>\r\n              <td mat-cell *matCellDef=\"let element\">{{ element.coupon_id }}</td>\r\n            </ng-container>\r\n        \r\n            <!-- Product Name Column -->\r\n            <ng-container matColumnDef=\"coupon_name\">\r\n              <th\r\n                mat-header-cell\r\n                *matHeaderCellDef\r\n                mat-sort-header\r\n                sortActionDescription=\"Sort by title\"\r\n              >\r\n              Coupon Name\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let element\">{{ element.coupon_name }}</td>\r\n            </ng-container>\r\n        \r\n            <!-- Description Column -->\r\n            <ng-container matColumnDef=\"description\">\r\n              <th mat-header-cell *matHeaderCellDef>Description</th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let element\"\r\n                class=\"description-col td-ellipsis\"\r\n                [ngxTippy]=\"fullDescription\"\r\n                [tippyProps]=\"{ placement: 'right', interactive: true }\"\r\n                tippyName=\"content2\"\r\n              >\r\n                <p>{{ element.description }}</p>\r\n                <ng-template #fullDescription let-name class=\"t-template\">\r\n                  <div class=\"help-info-tooltip\">\r\n                    <div class=\"heading-with-background\">Description</div>\r\n                    <p class=\"py-3 black-text\">{{ element.description }}</p>\r\n                    <button mat-button color=\"primary\" class=\"px-0\">\r\n                      Learn more\r\n                    </button>\r\n                  </div>\r\n                </ng-template>\r\n              </td>\r\n            </ng-container>\r\n        \r\n            <!-- Created Date Column -->\r\n            <ng-container matColumnDef=\"created_at\">\r\n              <th mat-header-cell *matHeaderCellDef>Created On</th>\r\n              <td mat-cell *matCellDef=\"let element\">\r\n                {{ element.created_at }}\r\n              </td>\r\n            </ng-container>\r\n        \r\n            <!-- Created Date Column -->\r\n            <ng-container matColumnDef=\"status\">\r\n              <th mat-header-cell *matHeaderCellDef>Status</th>\r\n              <td mat-cell *matCellDef=\"let element\" [ngClass]=\"element.status\">\r\n                {{ element.status }}\r\n              </td>\r\n            </ng-container>\r\n        \r\n            <!-- Created Date Column -->\r\n            <ng-container matColumnDef=\"action\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"text-right\">Action</th>\r\n              <td mat-cell *matCellDef=\"let element\" class=\"text-right\">\r\n                <mat-icon\r\n                  class=\"material-symbols-outlined\"\r\n                  [matMenuTriggerFor]=\"actionsMenu\"\r\n                >\r\n                  more_vert\r\n                </mat-icon>\r\n                <mat-menu\r\n                  #actionsMenu=\"matMenu\"\r\n                  class=\"actions-menu\"\r\n                  backdropClass=\"edit-menu\"\r\n                >\r\n                  <button mat-menu-item disableRipple>Edit</button>\r\n                  <button\r\n                    mat-menu-item\r\n                    disableRipple\r\n                    (click)=\"openDelete(element.productId)\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </mat-menu>\r\n              </td>\r\n            </ng-container>\r\n        \r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr\r\n              mat-row\r\n              *matRowDef=\"let row; columns: displayedColumns\"\r\n              [id]=\"row.id\"\r\n            ></tr>\r\n          </table>\r\n        </div>\r\n        `,\r\n      },\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Table",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/table/stories/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    variant: 'primary',\r\n  },\r\n}"
                },
                {
                    "name": "TableSecondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/table/stories/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    variant: 'secondary',\r\n  },\r\n  parameters: {\r\n    storybook: {\r\n      hideNoControlsWarning: true,\r\n    },\r\n    docs: {\r\n      source: {\r\n        code: `\r\n        <div>\r\n        <div\r\n          *ngIf=\"LogsData.length == 0\"\r\n          class=\"relative main-bg border-2 w-full h-full p-7 overflow-scroll\"\r\n        >\r\n          <app-empty-listing [items]=\"emptyCoupons\"></app-empty-listing>\r\n        </div>\r\n        <div\r\n          *ngIf=\"LogsData.length > 0\"\r\n          class=\"relative main-bg border-2 w-full h-full py-6 pl-5 pr-6 overflow-scroll logs-list\"\r\n        >\r\n          <!-- </div> -->\r\n          <div class=\"primary-table overflow-visible mt-8 px-1 pb-2 table-wrapper\">\r\n            <table mat-table [dataSource]=\"LogsData\">\r\n              <!-- TimestampColumn -->\r\n              <ng-container matColumnDef=\"Timestamp\">\r\n                <th mat-header-cell *matHeaderCellDef>Timestamp</th>\r\n                <td mat-cell *matCellDef=\"let element\">{{ element.Timestamp }}</td>\r\n              </ng-container>\r\n        \r\n              <!-- Events Column -->\r\n              <ng-container matColumnDef=\"Events\">\r\n                <th mat-header-cell *matHeaderCellDef>Events</th>\r\n                <td mat-cell *matCellDef=\"let element\">{{ element.Events }}</td>\r\n              </ng-container>\r\n        \r\n              <!-- Description Column -->\r\n              <ng-container matColumnDef=\"Customer_Info\">\r\n                <th mat-header-cell *matHeaderCellDef>Customer Info</th>\r\n                <td mat-cell *matCellDef=\"let element\">\r\n                  <p>{{ element.Customer_Info }}</p>\r\n                </td>\r\n              </ng-container>\r\n        \r\n              <!-- Created Date Column -->\r\n              <ng-container matColumnDef=\"Event_Source\">\r\n                <th mat-header-cell *matHeaderCellDef>Event Source</th>\r\n                <td mat-cell *matCellDef=\"let element\">\r\n                  <span class=\"primary-light-6-bg p-1 border-1 text-primary\">\r\n                    {{ element.Event_Source }}\r\n                  </span>\r\n                </td>\r\n              </ng-container>\r\n        \r\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns1\"></tr>\r\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns1\"></tr>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        </div>\r\n         `,\r\n      },\r\n    },\r\n    // sidebar: { disable: true },\r\n    // sidebarHide: ['TableSecondary']\r\n    // 'storybook-addon-storyshots': {\r\n    //   variantLabel: '',\r\n    // },\r\n  },\r\n}"
                }
            ],
            "src/stories/softobiz-ui/tabs/stories/tabs.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/tabs/stories/tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TabsComponent>",
                    "defaultValue": "{\r\n  component: TabsComponent,\r\n  title: 'softobiz-ui/Molecules/Tabs',\r\n  tags: ['autodocs'],\r\n  render: (args: TabsComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [MatTabsModule],\r\n    }),\r\n  ],\r\n  parameters: {\r\n    docs: {\r\n      source: {\r\n        code: `\r\n        <mat-tab-group\r\n          class=\"pricing-tabs mb-6\"\r\n          mat-stretch-tabs=\"false\"\r\n          mat-align-tabs=\"start\"\r\n        >\r\n          <mat-tab label=\"First\"> Content 1 </mat-tab>\r\n          <mat-tab label=\"Second\"> Content 2 </mat-tab>\r\n          <mat-tab label=\"Third\"> Content 3 </mat-tab>\r\n        </mat-tab-group>\r\n        `,\r\n      },\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Tabs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/tabs/stories/tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n}"
                }
            ],
            "src/stories/softobiz-ui/Textarea/stories/textarea.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/Textarea/stories/textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TextareaComponent>",
                    "defaultValue": "{\r\n  component: TextareaComponent,\r\n  title: 'softobiz-ui/Atom/Textarea',\r\n  tags: ['autodocs'],\r\n  render: (args: TextareaComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    hint: { control: 'text' },\r\n    class: { control: 'text' },\r\n    appearance: {\r\n      control: 'select',\r\n      options: [\r\n        'outline',\r\n        'fill'\r\n      ],\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        BrowserAnimationsModule,\r\n        MatIconModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        NgxTippyModule\r\n      ],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Textarea",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/Textarea/stories/textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    readonly: false,\r\n    placeholder: 'Enter here...',\r\n    disable: false,\r\n    required: true,\r\n    label: 'Label',\r\n  },\r\n}"
                }
            ],
            "src/stories/softobiz-ui/Tooltip/stories/Tooltip.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/Tooltip/stories/Tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TooltipComponent>",
                    "defaultValue": "{\r\n  component: TooltipComponent,\r\n  title: 'softobiz-ui/Molecules/Tooltip',\r\n  tags: ['autodocs'],\r\n  render: (args: TooltipComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    infoTitle: { control: 'text' },\r\n    infoDetail: { control: 'text' },\r\n  },\r\n  decorators: [\r\n    componentWrapperDecorator(\r\n      (story) => `<div class=\"tooltip-wrapper\" >${story}</div>`\r\n    ),\r\n    moduleMetadata({\r\n      imports: [\r\n        MatMenuModule,\r\n        MatButtonModule,\r\n        MatDialogModule,\r\n        MatButtonModule,\r\n        BrowserAnimationsModule,\r\n        MatIconModule,\r\n        AngularMaterialModule,\r\n        NgxTippyModule,\r\n      ],\r\n    }),\r\n  ],\r\n\r\n}"
                },
                {
                    "name": "Tooltip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/Tooltip/stories/Tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\nargs: {\r\n  infoTitle: 'Coupon id',\r\n  infoDetail: `Enter a Customized Id. If user do not enter this field, the system will generate a Customized Human-Readable-id' based on the Name field.`,\r\n}\r\n}"
                }
            ],
            "src/stories/softobiz-ui/Typography/stories/typography.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/Typography/stories/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TypographyComponent>",
                    "defaultValue": "{\r\n  component: TypographyComponent,\r\n  title: 'softobiz-ui/Atom/Typography',\r\n  tags: ['autodocs'],\r\n  render: (args: TypographyComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [],\r\n    }),\r\n  ],\r\n  parameters: {\r\n    docs: {\r\n      source: {\r\n        code: `\r\n        <p class=\"mat-headline-5\">Roboto /headline   24   Medium  It’s best to use good to know that</p>\r\n        <p class=\"mat-subtitle-1\">Roboto /Subheading   18   Medium  It’s best to use good to know that</p>\r\n        <p class=\"mat-subtitle-2\">Roboto /headline   16  Medium  It’s best to use good to know that</p>\r\n        <p class=\"Roboto /table content\">Roboto /headline   14   Medium  It’s best to use good to know that</p>\r\n        <p class=\"mat-caption\">Roboto /headline   12   Medium  It’s best to use good to know that</p>\r\n        `,\r\n      },\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Typography",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/Typography/stories/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n}"
                }
            ],
            "src/stories/softobiz-ui/uploadLogo/stories/uploadLogo.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/uploadLogo/stories/uploadLogo.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<UploadLogoComponent>",
                    "defaultValue": "{\r\n  component: UploadLogoComponent,\r\n  title: 'softobiz-ui/Molecules/UploadLogo',\r\n  tags: ['autodocs'],\r\n  render: (args: UploadLogoComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        MatMenuModule,\r\n        MatButtonModule,\r\n        MatDialogModule,\r\n        MatButtonModule,\r\n        BrowserAnimationsModule,\r\n        MatIconModule,\r\n        AngularMaterialModule,\r\n      ],\r\n    }),\r\n  ],\r\n\r\n  parameters: {\r\n    docs: {\r\n      source: {\r\n        code: `\r\n        <div class=\"image-upload-dialog\">\r\n        <h4 class=\"text-dark mat-subtitle-2 mb-2 font-weight-500\">Upload Logo</h4>\r\n        <p class=\"mat-caption grey-text text-darken-6\">\r\n          Allowed JPG, GIF or PNG. Max size of 800K\r\n        </p>\r\n        <div>\r\n          <input type=\"file\" name=\"logo\" id=\"logo\" accept=\"image/*\" (change)=\"handleFileInput($event)\" />\r\n          <label for=\"logo\" class=\"upload-field border-2 pointer\" id=\"file-label\"  (dragenter)=\"handleDragEnter()\"\r\n          (dragleave)=\"handleDragLeave()\"\r\n          (drop)=\"handleDrop($event)\">\r\n           <img \r\n              [src]=\"imageSrc\" \r\n              [class.loaded]=\"imageLoaded\"\r\n              (load)=\"handleImageLoad()\"\r\n              class=\"w-full\" />\r\n            <div class=\"file-thumbnail\" [style.display]=\"imageLoaded ? 'none' : 'block'\">\r\n              <mat-icon class=\"material-symbols-outlined m-0\">imagesmode</mat-icon>\r\n              <h3 id=\"filename\" class=\"mat-body-1 font-weight-500 text-text text-primary\">\r\n                <a href=\"\" class=\"mr-1 primary-text text-main text-underline\">Click here to upload</a\r\n                >or drag & drop\r\n              </h3>\r\n            </div>\r\n          </label>\r\n        </div>\r\n        <div class=\"action-btns flex align-center justify-end\">\r\n          <button mat-stroked-button color=\"primary\" class=\"mr-2\" mat-dialog-close (click)=\"cancel()\">Dismiss</button>\r\n          <button mat-flat-button color=\"primary\" class=\"\" mat-dialog-close (click)=\"handleSave()\" >Save</button>\r\n        </div>\r\n      </div>\r\n     \r\n      `\r\n      },\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "UploadLogo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/uploadLogo/stories/uploadLogo.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n}"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\r\n  decorators: [\r\n    withThemeByDataAttribute({\r\n      themes: {\r\n        light: 'light',\r\n        dark: 'dark',\r\n      },\r\n      defaultTheme: 'light',\r\n      attributeName: 'data-app-theme',\r\n    }),\r\n  ],\r\n  parameters: {\r\n    actions: { argTypesRegex: '^on[A-Z].*' },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/,\r\n      },\r\n    },\r\n    // storySort: {\r\n    //   order: ['Atom', 'Molecules', 'Organism', 'Pages', 'Layout'],\r\n    // },\r\n    // docs: {\r\n    //   theme: themes.light,\r\n    // },\r\n    // global: {\r\n    //   css: `\r\n    //     .sidebar-header {\r\n    //       background-color: #f2f2f2 !important;\r\n    //     }\r\n  \r\n    //     .myButton {\r\n    //       background-color: blue;\r\n    //       color: white;\r\n    //       padding: 10px 20px;\r\n    //       border-radius: 4px;\r\n    //     }\r\n    //   `,\r\n    // },\r\n    // options: {\r\n    //   storySort: (a: any, b: any) =>\r\n    //     a.id === b.id\r\n    //       ? 0\r\n    //       : a.id.localeCompare(b.id, undefined, { numeric: true }),\r\n    // },\r\n  },\r\n}"
                }
            ],
            "src/stories/softobiz-ui/softobiz-ui.module.ts": [
                {
                    "name": "SFT_UI_MODULES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/softobiz-ui.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[SftButtonModule, NgxTippyModule, DashboardLayoutModule]"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/core/utils/functions/getUniqueId.ts": [
                {
                    "name": "genUniqueId",
                    "file": "src/app/core/utils/functions/getUniqueId.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "string"
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/stories/softobiz-ui/button/types.ts": [
                {
                    "name": "ButtonVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"basic\" | \"raised\" | \"flat\" | \"icon\" | \"stroked\"",
                    "file": "src/stories/softobiz-ui/button/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                }
            ],
            "src/stories/softobiz-ui/Input/types.ts": [
                {
                    "name": "ButtonVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"basic\" | \"raised\" | \"flat\" | \"icon\" | \"stroked\"",
                    "file": "src/stories/softobiz-ui/Input/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                }
            ],
            "src/stories/softobiz-ui/Textarea/types.ts": [
                {
                    "name": "ButtonVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"basic\" | \"raised\" | \"flat\" | \"icon\" | \"stroked\"",
                    "file": "src/stories/softobiz-ui/Textarea/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                }
            ],
            "src/stories/softobiz-ui/breadcrumb/stories/breadcrumb.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<Breadcrumb>",
                    "file": "src/stories/softobiz-ui/breadcrumb/stories/breadcrumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/softobiz-ui/button/stories/button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonComponent>",
                    "file": "src/stories/softobiz-ui/button/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/softobiz-ui/calendar/stories/calendar.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CalendarComponent>",
                    "file": "src/stories/softobiz-ui/calendar/stories/calendar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/softobiz-ui/Checkbox/stories/checkbox.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CheckboxComponent>",
                    "file": "src/stories/softobiz-ui/Checkbox/stories/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/softobiz-ui/Chip/stories/chip.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ChipComponent>",
                    "file": "src/stories/softobiz-ui/Chip/stories/chip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/softobiz-ui/color/stories/color.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ColorComponent>",
                    "file": "src/stories/softobiz-ui/color/stories/color.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/softobiz-ui/dashboardLayout/stories/dashboardLayout.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DashboardLayoutComponent>",
                    "file": "src/stories/softobiz-ui/dashboardLayout/stories/dashboardLayout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/softobiz-ui/dialog/stories/dialog.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DialogComponent>",
                    "file": "src/stories/softobiz-ui/dialog/stories/dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/softobiz-ui/dialog-info/stories/dialog-info.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DialogInfoComponent>",
                    "file": "src/stories/softobiz-ui/dialog-info/stories/dialog-info.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/softobiz-ui/errorLayout/stories/errorLayout.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ErrorLayoutComponent>",
                    "file": "src/stories/softobiz-ui/errorLayout/stories/errorLayout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/softobiz-ui/header/stories/header.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<HeaderComponent>",
                    "file": "src/stories/softobiz-ui/header/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/softobiz-ui/Input/stories/input.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<InputComponent>",
                    "file": "src/stories/softobiz-ui/Input/stories/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/softobiz-ui/leftNavigation/stories/leftNavigation.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<LeftNavigationComponent>",
                    "file": "src/stories/softobiz-ui/leftNavigation/stories/leftNavigation.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/softobiz-ui/menu/stories/menu.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<MenuComponent>",
                    "file": "src/stories/softobiz-ui/menu/stories/menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/softobiz-ui/notification/stories/notification.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NotificationComponent>",
                    "file": "src/stories/softobiz-ui/notification/stories/notification.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/softobiz-ui/paginator/stories/paginator.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<PaginatorComponent>",
                    "file": "src/stories/softobiz-ui/paginator/stories/paginator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/softobiz-ui/profile/stories/profile.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ProfileComponent>",
                    "file": "src/stories/softobiz-ui/profile/stories/profile.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/softobiz-ui/radiobutton/stories/radio.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RadioButtonComponent>",
                    "file": "src/stories/softobiz-ui/radiobutton/stories/radio.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/softobiz-ui/searchbar/stories/searchbar.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SearchbarComponent>",
                    "file": "src/stories/softobiz-ui/searchbar/stories/searchbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/softobiz-ui/stepper/stories/stepper.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<StepperComponent>",
                    "file": "src/stories/softobiz-ui/stepper/stories/stepper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/softobiz-ui/switch/stories/switch.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SwitchButtonComponent>",
                    "file": "src/stories/softobiz-ui/switch/stories/switch.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/softobiz-ui/table/stories/table.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TableComponent>",
                    "file": "src/stories/softobiz-ui/table/stories/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/softobiz-ui/tabs/stories/tabs.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TabsComponent>",
                    "file": "src/stories/softobiz-ui/tabs/stories/tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/softobiz-ui/Textarea/stories/textarea.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TextareaComponent>",
                    "file": "src/stories/softobiz-ui/Textarea/stories/textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/softobiz-ui/Tooltip/stories/Tooltip.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TooltipComponent>",
                    "file": "src/stories/softobiz-ui/Tooltip/stories/Tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/softobiz-ui/Typography/stories/typography.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TypographyComponent>",
                    "file": "src/stories/softobiz-ui/Typography/stories/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/softobiz-ui/uploadLogo/stories/uploadLogo.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<UploadLogoComponent>",
                    "file": "src/stories/softobiz-ui/uploadLogo/stories/uploadLogo.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "component": "LayoutComponent",
                        "children": [
                            {
                                "path": "",
                                "loadChildren": "../app/modules/dashboard/dashboard.module#DashboardModule",
                                "children": [
                                    {
                                        "kind": "module",
                                        "children": [
                                            {
                                                "name": "routes",
                                                "filename": "src/app/modules/dashboard/dashboard-routing.module.ts",
                                                "module": "DashboardRoutingModule",
                                                "children": [
                                                    {
                                                        "path": "customers",
                                                        "component": "CustomerListingComponent"
                                                    },
                                                    {
                                                        "path": "customers/view",
                                                        "component": "CustomerViewComponent"
                                                    }
                                                ],
                                                "kind": "module"
                                            }
                                        ],
                                        "module": "DashboardModule"
                                    }
                                ]
                            },
                            {
                                "path": "products",
                                "loadChildren": "../app/modules/products/products.module#ProductsModule",
                                "children": [
                                    {
                                        "kind": "module",
                                        "children": [
                                            {
                                                "name": "routes",
                                                "filename": "src/app/modules/products/products-routing.module.ts",
                                                "module": "ProductsRoutingModule",
                                                "children": [
                                                    {
                                                        "path": "",
                                                        "component": "ProductListingComponent"
                                                    },
                                                    {
                                                        "path": "create",
                                                        "component": "CreateProductComponent"
                                                    },
                                                    {
                                                        "path": "edit-product/:id",
                                                        "component": "EditProductComponent"
                                                    },
                                                    {
                                                        "path": "view-product/:id",
                                                        "component": "ViewProductComponent"
                                                    },
                                                    {
                                                        "path": "view-product",
                                                        "component": "ViewProductComponent"
                                                    }
                                                ],
                                                "kind": "module"
                                            }
                                        ],
                                        "module": "ProductsModule"
                                    }
                                ]
                            },
                            {
                                "path": "features",
                                "loadChildren": "../app/modules/features/features.module#FeaturesModule",
                                "children": [
                                    {
                                        "kind": "module",
                                        "children": [
                                            {
                                                "name": "routes",
                                                "filename": "src/app/modules/features/features-routing.module.ts",
                                                "module": "FeaturesRoutingModule",
                                                "children": [
                                                    {
                                                        "path": "",
                                                        "component": "FeaturesListingComponent"
                                                    },
                                                    {
                                                        "path": "create",
                                                        "component": "CreateFeatureComponent"
                                                    },
                                                    {
                                                        "path": "create/products/:id",
                                                        "component": "CreateFeatureComponent"
                                                    },
                                                    {
                                                        "path": "view/:id",
                                                        "component": "ViewFeatureComponent"
                                                    },
                                                    {
                                                        "path": "edit-feature/:id",
                                                        "component": "EditFeatureComponent"
                                                    }
                                                ],
                                                "kind": "module"
                                            }
                                        ],
                                        "module": "FeaturesModule"
                                    }
                                ]
                            },
                            {
                                "path": "plans",
                                "loadChildren": "../app/modules/plans/plans.module#PlansModule",
                                "children": [
                                    {
                                        "kind": "module",
                                        "children": [
                                            {
                                                "name": "routes",
                                                "filename": "src/app/modules/plans/plans-routing.module.ts",
                                                "module": "PlansRoutingModule",
                                                "children": [
                                                    {
                                                        "path": "",
                                                        "component": "PlansListingComponent"
                                                    },
                                                    {
                                                        "path": "view/:id",
                                                        "component": "ViewPlansComponent"
                                                    },
                                                    {
                                                        "path": "create",
                                                        "component": "CreatePlanComponent"
                                                    },
                                                    {
                                                        "path": "create/set-price",
                                                        "component": "SetPriceComponent"
                                                    },
                                                    {
                                                        "path": "create/product-variant",
                                                        "component": "ProductDetailsComponent"
                                                    },
                                                    {
                                                        "path": "create/edit-product-variant/:id",
                                                        "component": "EditProductDetailsComponent"
                                                    },
                                                    {
                                                        "path": "create/:id",
                                                        "component": "CreatePlanComponent"
                                                    },
                                                    {
                                                        "path": "create/set-price/:id",
                                                        "component": "SetPriceComponent"
                                                    },
                                                    {
                                                        "path": "create/set-price/:id/:id",
                                                        "component": "SetPriceComponent"
                                                    },
                                                    {
                                                        "path": "create/product-variant/:id",
                                                        "component": "ProductDetailsComponent"
                                                    },
                                                    {
                                                        "path": "create/add-ons",
                                                        "component": "AddOnsDetailsComponent"
                                                    }
                                                ],
                                                "kind": "module"
                                            }
                                        ],
                                        "module": "PlansModule"
                                    }
                                ]
                            },
                            {
                                "path": "coupons",
                                "loadChildren": "../app/modules/coupons/coupons.module#CouponsModule",
                                "children": [
                                    {
                                        "kind": "module",
                                        "children": [
                                            {
                                                "name": "routes",
                                                "filename": "src/app/modules/coupons/coupons-routing.module.ts",
                                                "module": "CouponsRoutingModule",
                                                "children": [
                                                    {
                                                        "path": "",
                                                        "component": "CouponsListingComponent"
                                                    },
                                                    {
                                                        "path": "create",
                                                        "component": "CreateCouponsComponent"
                                                    },
                                                    {
                                                        "path": "view",
                                                        "component": "ViewCouponsComponent"
                                                    }
                                                ],
                                                "kind": "module"
                                            }
                                        ],
                                        "module": "CouponsModule"
                                    }
                                ]
                            },
                            {
                                "path": "payment",
                                "loadChildren": "./modules/payment-history/payment-history.module#PaymentHistoryModule",
                                "children": [
                                    {
                                        "kind": "module",
                                        "children": [
                                            {
                                                "name": "routes",
                                                "filename": "src/app/modules/payment-history/payment-history-routing.module.ts",
                                                "module": "PaymentHistoryRoutingModule",
                                                "children": [
                                                    {
                                                        "path": "transactions",
                                                        "component": "TransactionListComponent"
                                                    },
                                                    {
                                                        "path": "transactions/view",
                                                        "component": "TransactionViewComponent"
                                                    },
                                                    {
                                                        "path": "invoices",
                                                        "component": "InvoiceListComponent"
                                                    },
                                                    {
                                                        "path": "invoices/view",
                                                        "component": "InvoiceViewComponent"
                                                    },
                                                    {
                                                        "path": "logs",
                                                        "component": "LogsListComponent"
                                                    },
                                                    {
                                                        "path": "logs/view",
                                                        "component": "LogViewComponent"
                                                    }
                                                ],
                                                "kind": "module"
                                            }
                                        ],
                                        "module": "PaymentHistoryModule"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "path": "sign-in",
                        "component": "SignInComponent"
                    },
                    {
                        "path": "**",
                        "component": "PageNotFoundComponent"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/layouts/layout/layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/core/layouts/sidebar/sidebar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SidebarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/api.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ApiService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/global.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GlobalService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/utils/functions/getUniqueId.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "genUniqueId",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/coupons/components/coupons-listing/coupons-listing.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CouponsListingComponent",
                "coveragePercent": 23,
                "coverageCount": "4/17",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/coupons/components/create-coupons/create-coupons.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CreateCouponsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/coupons/components/create-coupons/create-coupons.component.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CustomDateAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/coupons/components/create-coupons/create-coupons.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MATERIAL_DATEPICKER_FORMATS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/coupons/components/view-coupons/view-coupons.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ViewCouponsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/coupons/components/view-coupons/view-coupons.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DiscountElement",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/coupons/components/view-coupons/view-coupons.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DurationElement",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/coupons/components/view-coupons/view-coupons.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ValidityElement",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/coupons/components/view-coupons/view-coupons.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Duration_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/coupons/components/view-coupons/view-coupons.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ELEMENT_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/coupons/components/view-coupons/view-coupons.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Validity_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/coupons/services/coupons.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CouponsService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/dashboard/customer/components/customer-listing/customer-listing.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomerListingComponent",
                "coveragePercent": 16,
                "coverageCount": "2/12",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/dashboard/customer/components/customer-view/customer-view.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomerViewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/features/components/create-feature/create-feature.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CreateFeatureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/32",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/features/components/create-feature/create-feature.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "menuOptions",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/features/components/edit-feature/edit-feature.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EditFeatureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/31",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/features/components/edit-feature/edit-feature.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "menuOptions",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/features/components/features-listing/features-listing.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FeaturesListingComponent",
                "coveragePercent": 4,
                "coverageCount": "2/42",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/features/components/view-feature/view-feature.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ViewFeatureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/33",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/features/components/view-feature/view-feature.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PeriodicElement",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/features/components/view-feature/view-feature.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ELEMENT_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/features/components/view-feature/view-feature.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FEATURE_TYPE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/features/services/feature.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FeatureService",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/payment-history/invoices/components/invoice-list/invoice-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InvoiceListComponent",
                "coveragePercent": 22,
                "coverageCount": "4/18",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/payment-history/invoices/components/invoice-view/invoice-view.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InvoiceViewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/payment-history/invoices/service/invoices.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "InvoicesService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/payment-history/logs/components/log-view/log-view.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LogViewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/payment-history/logs/components/logs-list/logs-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LogsListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/payment-history/logs/components/logs-list/logs-list.component.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CustomDateAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/payment-history/logs/components/logs-list/logs-list.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MATERIAL_DATEPICKER_FORMATS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/payment-history/logs/service/logs.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LogsService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/payment-history/transactions/components/transaction-list/transaction-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TransactionListComponent",
                "coveragePercent": 22,
                "coverageCount": "4/18",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/payment-history/transactions/components/transaction-view/transaction-view.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TransactionViewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/payment-history/transactions/service/transactions.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TransactionsService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/plans/components/add-ons-details/add-ons-details.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddOnsDetailsComponent",
                "coveragePercent": 21,
                "coverageCount": "3/14",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/plans/components/add-ons-details/add-ons-details.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PeriodicElement",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/plans/components/add-ons-details/add-ons-details.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ELEMENT_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/plans/components/create-plan/create-plan.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CreatePlanComponent",
                "coveragePercent": 0,
                "coverageCount": "0/47",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/plans/components/create-plan/create-plan.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PeriodicElement",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/plans/components/create-plan/create-plan.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ELEMENT_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/plans/components/edit-product-details/edit-product-details.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EditProductDetailsComponent",
                "coveragePercent": 10,
                "coverageCount": "3/30",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/plans/components/edit-product-details/edit-product-details.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PeriodicElement",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/plans/components/plans-listing/plans-listing.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PlansListingComponent",
                "coveragePercent": 4,
                "coverageCount": "1/21",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/plans/components/product-details/product-details.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductDetailsComponent",
                "coveragePercent": 2,
                "coverageCount": "1/36",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/plans/components/product-details/product-details.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PeriodicElement",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/plans/components/set-price/set-price.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SetPriceComponent",
                "coveragePercent": 0,
                "coverageCount": "0/44",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/plans/components/set-price/set-price.component.ts",
                "type": "class",
                "linktype": "classe",
                "name": "PlanValue",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/plans/components/view-plans/view-plans.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ViewPlansComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/plans/components/view-plans/view-plans.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PeriodicElement",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/plans/components/view-plans/view-plans.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ELEMENT_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/plans/services/plan.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "dataTypes",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/plans/services/plan.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "PlanValue",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/plans/services/plan.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PlanService",
                "coveragePercent": 0,
                "coverageCount": "0/28",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/plans/services/product-details.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProductDetailsService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/products/components/create-product/create-product.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CreateProductComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/products/components/create-product/create-product.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DialogAnimationsDialog",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/products/components/edit-product/edit-product.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EditProductComponent",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/products/components/product-listing/product-listing.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductListingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/38",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/products/components/view-product/view-product.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ViewProductComponent",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/products/services/products.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProductsService",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/sign-in/auth.guard.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthGuard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/sign-in/components/sign-in.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignInComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/sign-in/services/kratos.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "kratosService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/custom-date-header/custom-date-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomDateHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dialog-box/coupons-delete-success/coupons-delete-success.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CouponsDeleteSuccessComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dialog-box/coupons-delete-success/coupons-delete-success.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DialogData",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dialog-box/delete-confirmation/delete-confirmation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DeleteConfirmationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dialog-box/delete-confirmation/delete-confirmation.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DialogData",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dialog-box/edit-customer-details/edit-customer-details.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EditCustomerDetailsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dialog-box/edit-customer-details/edit-customer-details.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DialogData",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dialog-box/feature-details-popup/feature-details-popup.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FeatureDetailsPopupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dialog-box/feature-details-popup/feature-details-popup.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DialogData",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dialog-box/success-dialog/success-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SuccessDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dialog-box/success-dialog/success-dialog.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DialogData",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/empty-listing/empty-listing.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EmptyListingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/no-item-found/no-item-found.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NoItemFoundComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/page-not-found/page-not-found.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageNotFoundComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "coupon",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Customer",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Data_Type",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Feature",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FeatureList",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "features",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GetFeature",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GetProduct",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "invoice",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "loginCredientials",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "logs",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Menu",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Plan",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PlanList",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "plansFields",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Product",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProductVariant",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProductVariants",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "selectOptions",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Config_Menu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Coupon_Data",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomerList",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "feature_types",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Features_Data",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InvoiceList",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "listFilterOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Logs_Data",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Menu_Headings",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MENUITEMS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "nocoupons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "noCustomers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "noFeatures",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "noInvoice",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "noLogs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "noPageFound",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "noPlans",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "noProducts",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Notifications_Data",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "noTransactions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "periodUnit",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "plan_add_empty_data",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Plans_Data",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pricingModels",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "StaticRoutes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Stepper",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TransactionList",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "User_Data",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "User_Options",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.dev.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.uat.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Checkbox/checkbox.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Task",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Checkbox/stories/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Checkbox",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Checkbox/stories/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Chip/chip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Chip/stories/chip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Chip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Chip/stories/chip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Input/stories/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Input",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Input/stories/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Textarea/stories/textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Textarea/stories/textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Textarea",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Textarea/textarea.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextareaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Tooltip/Tooltip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TooltipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Tooltip/stories/Tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Tooltip/stories/Tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Tooltip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Typography/stories/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Typography/stories/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Typography",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Typography/typography.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TypographyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/breadcrumb/breadcrumb.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "Breadcrumb",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/breadcrumb/breadcrumb.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BreadcrumbItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/breadcrumb/stories/breadcrumb.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "breadcrumb",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/breadcrumb/stories/breadcrumb.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 23,
                "coverageCount": "3/13",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/button/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Button",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/button/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/calendar/calendar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CalendarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/calendar/stories/calendar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Calendar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/calendar/stories/calendar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/color/color.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ColorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/color/stories/color.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Color",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/color/stories/color.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/dashboardLayout/dashboardLayout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardLayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/dashboardLayout/stories/dashboardLayout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DashboardLayout",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/dashboardLayout/stories/dashboardLayout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/dialog-info/dialog-info.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DialogInfoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/dialog-info/dialog-info.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DialogInfoDeleteSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/dialog-info/stories/dialog-info.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DialogInfo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/dialog-info/stories/dialog-info.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/dialog/dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/dialog/stories/dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dialog",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/dialog/stories/dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/errorLayout/errorLayout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ErrorLayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/errorLayout/stories/errorLayout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Error404",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/errorLayout/stories/errorLayout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Error505",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/errorLayout/stories/errorLayout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/header/stories/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Header",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/header/stories/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/leftNavigation/leftNavigation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LeftNavigationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/leftNavigation/stories/leftNavigation.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LeftNavigation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/leftNavigation/stories/leftNavigation.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/menu/menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/menu/stories/menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Menu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/menu/stories/menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/notification/notification.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotificationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/notification/stories/notification.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/notification/stories/notification.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Notification",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/paginator/paginator.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PaginatorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/paginator/stories/paginator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/paginator/stories/paginator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Paginator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/profile/profile.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProfileComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/profile/stories/profile.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/profile/stories/profile.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Profile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/radiobutton/radio.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/radiobutton/stories/radio.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/radiobutton/stories/radio.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RadioButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/searchbar/searchbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/searchbar/stories/searchbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/searchbar/stories/searchbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Searchbar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/softobiz-ui.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SFT_UI_MODULES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/stepper/stepper.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StepperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/stepper/stories/stepper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/stepper/stories/stepper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Stepper",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/switch/stories/switch.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/switch/stories/switch.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SwitchButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/switch/switch.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SwitchButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/table/stories/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/table/stories/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Table",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/table/stories/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TableSecondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableComponent",
                "coveragePercent": 13,
                "coverageCount": "4/29",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/table/table.component.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CustomDateAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/tabs/stories/tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/tabs/stories/tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Tabs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/tabs/tabs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/uploadLogo/stories/uploadLogo.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/uploadLogo/stories/uploadLogo.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UploadLogo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/uploadLogo/uploadLogo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UploadLogoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}