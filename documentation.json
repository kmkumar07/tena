{
    "pipes": [],
    "interfaces": [
        {
            "name": "BreadcrumbItem",
            "id": "interface-BreadcrumbItem-aef77d9b89ccf7b31532e0192af64038ddb0790ae19495762f7adf3aeff6aff7895aff60810f9228f120c98dba5114017581bec8f057038a0d27b0698417d71e",
            "file": "src/stories/softobiz-ui/breadcrumb/breadcrumb.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, ViewEncapsulation, Input } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\n\r\n// import { ButtonVariant } from './types';\r\n\r\n@Component({\r\n  selector: 'sft-breadcrumb',\r\n  templateUrl: './breadcrumb.component.html',\r\n  styleUrls: ['./breadcrumb.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class Breadcrumb {\r\n  @Input() class: string = '';\r\n\r\n  @Input() id: string = '';\r\n\r\n  @Input() items: BreadcrumbItem[];\r\n}\r\n\r\nexport interface BreadcrumbItem {\r\n  label: string;\r\n  link?: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "link",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 23
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "coupon",
            "id": "interface-coupon-803d92540be6a8aff87b5e214d1447548aa8dac4abbc4620d1fc823008450b64634ac11a47161491e6b1e9cb5a3b386689a0df9544602b6dec7cba288c377afe",
            "file": "src/app/shared/constants/consants.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n}\r\nexport interface Data_Type {\r\n  product_ID: string;\r\n  title: string;\r\n  description: string;\r\n  features: string[];\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface selectOptions {\r\n  value: number;\r\n  title: string;\r\n}\r\nexport interface features {\r\n  feature_id: string;\r\n  product_name: string;\r\n  feature_name: string;\r\n  description: string;\r\n  feature_type: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\n\r\nexport interface coupon {\r\n  coupon_id: string;\r\n  coupon_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Product {\r\n  productId: string;\r\n  imageUrl: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface GetProduct {\r\n  productId: string;\r\n  imageUrl: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface plansFields {\r\n  plan_ID: string;\r\n  external_name: string;\r\n  internal_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Feature {\r\n  featureId: string;\r\n  productId: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n  unit: string;\r\n  levels: [];\r\n}\r\nexport interface FeatureList {\r\n  featureId: number;\r\n  name: string;\r\n  productName: string;\r\n  levels: [];\r\n  description: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  type: string;\r\n  status: string;\r\n}\r\n\r\nexport interface GetFeature {\r\n  featureId: string;\r\n  productID: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n}\r\nexport const MENUITEMS = [\r\n  {\r\n    state: 'dashboard',\r\n    type: 'link',\r\n    name: 'Overview',\r\n    icon: 'space_dashboard',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'button',\r\n    type: 'link',\r\n    name: 'Customer',\r\n    icon: 'account_box',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'grid',\r\n    type: 'link',\r\n    name: 'Subscription',\r\n    icon: 'card_membership',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'products',\r\n    type: 'link',\r\n    name: 'Products',\r\n    icon: 'local_mall',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'features',\r\n    type: 'link',\r\n    name: 'Features',\r\n    icon: 'featured_play_list',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'plans',\r\n    type: 'link',\r\n    name: 'Plans',\r\n    icon: 'quick_reference_all',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Add Ons',\r\n    icon: 'add_notes',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'coupons',\r\n    type: 'link',\r\n    name: 'Coupons',\r\n    icon: 'confirmation_number',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'transactions',\r\n    type: 'link',\r\n    name: 'Transactions',\r\n    icon: 'compare_arrows',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: 'invoices',\r\n    type: 'link',\r\n    name: 'Invoices',\r\n    icon: 'receipt_long',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: 'logs',\r\n    type: 'link',\r\n    name: 'Logs',\r\n    icon: 'list_alt',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Menu_Headings = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Dashboard',\r\n    icon: 'settings',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Product Catalog ',\r\n    icon: 'logout',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Payment History ',\r\n    icon: 'logout',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Config_Menu = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Settings',\r\n    icon: 'settings',\r\n    category: 'Config',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'LogOut ',\r\n    icon: 'logout',\r\n    category: 'Confog',\r\n  },\r\n];\r\nexport const User_Options = [\r\n  {\r\n    path: '/user:id',\r\n    icon: 'account_circle',\r\n    name: 'My Account',\r\n    toggle: false,\r\n  },\r\n  { path: '/inbox', icon: 'inbox_outline', name: 'My Inbox', toggle: false },\r\n  { path: '', icon: 'clear_day', name: 'Dark Mode', toggle: true },\r\n  { path: '/help', icon: 'live_help', name: 'Help', toggle: false },\r\n];\r\n// Product listing\r\nexport const User_Data = [\r\n  {\r\n    id: 'random_id_1234',\r\n    product_ID: '#O365ProPlusRetail',\r\n    title: 'Microsoft Teams',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Host Online Calls', 'Unlimited Internet', 'Conference Calls'],\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_555',\r\n    product_ID: '#Or65SuperSupreme',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: [\r\n      'Unlimited Repos',\r\n      'Upto 50 Team Members',\r\n      'Host Online Calls',\r\n      'Unlimited Internet',\r\n      'Conference Calls',\r\n    ],\r\n    created_at: 'June 11th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_6969',\r\n    product_ID: '#Ow65Basic',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Conference Calls'],\r\n    created_at: 'June 18th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Features_Data = [\r\n  {\r\n    id: 'feature_id_459',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'feature_id_4591',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\n\r\nexport const Coupon_Data = [\r\n  {\r\n    id: 'coupon_id_459',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'coupon_id_460',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Plans_Data = [\r\n  {\r\n    id: 'ychvjbknk1',\r\n    plan_ID: 'As-012P',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.3',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: '1i23op1j2eo',\r\n    plan_ID: 'As-099G',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.2',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Notifications_Data = [\r\n  // {\r\n  //   user: 'John Smith' ,\r\n  //   message: 'subscriptione_created',\r\n  //   created_at: 'Aug 7th, 2023'\r\n  // }\r\n];\r\nexport const TransactionList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const feature_types = [\r\n  { value: 1, title: 'switch' },\r\n  { value: 2, title: 'range' },\r\n  { value: 3, title: 'quantity' },\r\n  { value: 4, title: 'custom' },\r\n];\r\nexport const pricingModels = [\r\n  { value: 1, title: 'Flat fee' },\r\n  { value: 2, title: 'Per unit' },\r\n  { value: 3, title: 'Tiered' },\r\n  { value: 4, title: 'Volume' },\r\n  { value: 5, title: 'Stairstep' },\r\n];\r\nexport const periodUnit = ['Daily', 'Weekly', 'Monthly', 'Yearly'];\r\nexport const StaticRoutes = {\r\n  features: ['features'],\r\n  products: ['products'],\r\n};\r\nexport const plan_add_empty_data = [\r\n  {\r\n    titleIcon:\r\n      '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n    iconAlt: 'invoice-outline-icon',\r\n    title: 'Product Details',\r\n    subtitle:\r\n      'Please click the “Add” button below to add a new product. Once you clicked the button, you will be prompted to enter the name of product, description and additional details.',\r\n    btnTitle: 'Add product',\r\n    btnPath: '/#',\r\n  },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Pricing Plans',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new pricing plans. Once you clicked the button, you will be prompted to enter pricing and additional details.',\r\n  //   btnTitle: 'Add Pricing',\r\n  //   btnPath: '/#',\r\n  // },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Add-ons Details',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new add-on. Once you have click button, you will be prompted to select add-on.',\r\n  //   btnTitle: 'Add Add-on',\r\n  //   btnPath: '/#',\r\n  // },\r\n];\r\nexport const noProducts = [\r\n  {\r\n    heading: 'Products',\r\n    imgPath: '../../../../assets/images/empty-illustrations.png',\r\n    alt: 'no proudcts available',\r\n    subtext: 'Looking for Product',\r\n    text: \"Seems like you haven't added any Product. Start adding products by click on “Create Product” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Product',\r\n    path: '/products/create',\r\n  },\r\n];\r\nexport const noFeatures = [\r\n  {\r\n    heading: 'Features',\r\n    imgPath: '../../../../assets/images/empty-illustrations-2.png',\r\n    alt: 'no features available',\r\n    subtext: 'Looking for Features',\r\n    text: \"Seems like you haven't added any feature. Start adding feature by click on “Create Feature” button \",\r\n    showButton: true,\r\n    buttonTxt: 'Create Feature',\r\n    path: '/features/create',\r\n  },\r\n];\r\nexport const noPlans = [\r\n  {\r\n    heading: 'Plans',\r\n    imgPath: '../../../../assets/images/empty-illustrations-4.png',\r\n    alt: 'no Plans available',\r\n    subtext: 'Looking for Plans',\r\n    text: \"Seems like you haven't added any Plan. Start adding plan by click on “Create Plan” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Plan',\r\n    path: '/plans/view',\r\n  },\r\n];\r\nexport const noPageFound = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/404-page.png',\r\n    alt: 'No Page Found',\r\n    subtext: \"Oops! Why you're here?\",\r\n    text: \"We are very sorry for inconvenience. It looks like you're try to access a page that either has been deleted or never existed.\",\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const nocoupons = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noTransactions = [\r\n  {\r\n    heading: 'Transaction',\r\n    imgPath: '../../../../assets/images/empty-illustrations-5.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'NO transaction yet',\r\n    text: 'After your first transaction you will be able to view it here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const Stepper = [\r\n  {\r\n    id: 1,\r\n    title: 'Step 1',\r\n    caption: 'Plan Information',\r\n    isVisible: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Step 2',\r\n    caption: 'Add Plan Pricing',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Step 3',\r\n    caption: 'Product Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Step 4',\r\n    caption: 'Add-on Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Step 5',\r\n    caption: 'Charges',\r\n    isVisible: false,\r\n  },\r\n];\r\n",
            "properties": [
                {
                    "name": "coupon_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "coupon_name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "created_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 34
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Data_Type",
            "id": "interface-Data_Type-803d92540be6a8aff87b5e214d1447548aa8dac4abbc4620d1fc823008450b64634ac11a47161491e6b1e9cb5a3b386689a0df9544602b6dec7cba288c377afe",
            "file": "src/app/shared/constants/consants.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n}\r\nexport interface Data_Type {\r\n  product_ID: string;\r\n  title: string;\r\n  description: string;\r\n  features: string[];\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface selectOptions {\r\n  value: number;\r\n  title: string;\r\n}\r\nexport interface features {\r\n  feature_id: string;\r\n  product_name: string;\r\n  feature_name: string;\r\n  description: string;\r\n  feature_type: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\n\r\nexport interface coupon {\r\n  coupon_id: string;\r\n  coupon_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Product {\r\n  productId: string;\r\n  imageUrl: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface GetProduct {\r\n  productId: string;\r\n  imageUrl: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface plansFields {\r\n  plan_ID: string;\r\n  external_name: string;\r\n  internal_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Feature {\r\n  featureId: string;\r\n  productId: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n  unit: string;\r\n  levels: [];\r\n}\r\nexport interface FeatureList {\r\n  featureId: number;\r\n  name: string;\r\n  productName: string;\r\n  levels: [];\r\n  description: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  type: string;\r\n  status: string;\r\n}\r\n\r\nexport interface GetFeature {\r\n  featureId: string;\r\n  productID: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n}\r\nexport const MENUITEMS = [\r\n  {\r\n    state: 'dashboard',\r\n    type: 'link',\r\n    name: 'Overview',\r\n    icon: 'space_dashboard',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'button',\r\n    type: 'link',\r\n    name: 'Customer',\r\n    icon: 'account_box',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'grid',\r\n    type: 'link',\r\n    name: 'Subscription',\r\n    icon: 'card_membership',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'products',\r\n    type: 'link',\r\n    name: 'Products',\r\n    icon: 'local_mall',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'features',\r\n    type: 'link',\r\n    name: 'Features',\r\n    icon: 'featured_play_list',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'plans',\r\n    type: 'link',\r\n    name: 'Plans',\r\n    icon: 'quick_reference_all',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Add Ons',\r\n    icon: 'add_notes',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'coupons',\r\n    type: 'link',\r\n    name: 'Coupons',\r\n    icon: 'confirmation_number',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'transactions',\r\n    type: 'link',\r\n    name: 'Transactions',\r\n    icon: 'compare_arrows',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: 'invoices',\r\n    type: 'link',\r\n    name: 'Invoices',\r\n    icon: 'receipt_long',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: 'logs',\r\n    type: 'link',\r\n    name: 'Logs',\r\n    icon: 'list_alt',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Menu_Headings = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Dashboard',\r\n    icon: 'settings',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Product Catalog ',\r\n    icon: 'logout',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Payment History ',\r\n    icon: 'logout',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Config_Menu = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Settings',\r\n    icon: 'settings',\r\n    category: 'Config',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'LogOut ',\r\n    icon: 'logout',\r\n    category: 'Confog',\r\n  },\r\n];\r\nexport const User_Options = [\r\n  {\r\n    path: '/user:id',\r\n    icon: 'account_circle',\r\n    name: 'My Account',\r\n    toggle: false,\r\n  },\r\n  { path: '/inbox', icon: 'inbox_outline', name: 'My Inbox', toggle: false },\r\n  { path: '', icon: 'clear_day', name: 'Dark Mode', toggle: true },\r\n  { path: '/help', icon: 'live_help', name: 'Help', toggle: false },\r\n];\r\n// Product listing\r\nexport const User_Data = [\r\n  {\r\n    id: 'random_id_1234',\r\n    product_ID: '#O365ProPlusRetail',\r\n    title: 'Microsoft Teams',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Host Online Calls', 'Unlimited Internet', 'Conference Calls'],\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_555',\r\n    product_ID: '#Or65SuperSupreme',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: [\r\n      'Unlimited Repos',\r\n      'Upto 50 Team Members',\r\n      'Host Online Calls',\r\n      'Unlimited Internet',\r\n      'Conference Calls',\r\n    ],\r\n    created_at: 'June 11th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_6969',\r\n    product_ID: '#Ow65Basic',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Conference Calls'],\r\n    created_at: 'June 18th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Features_Data = [\r\n  {\r\n    id: 'feature_id_459',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'feature_id_4591',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\n\r\nexport const Coupon_Data = [\r\n  {\r\n    id: 'coupon_id_459',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'coupon_id_460',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Plans_Data = [\r\n  {\r\n    id: 'ychvjbknk1',\r\n    plan_ID: 'As-012P',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.3',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: '1i23op1j2eo',\r\n    plan_ID: 'As-099G',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.2',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Notifications_Data = [\r\n  // {\r\n  //   user: 'John Smith' ,\r\n  //   message: 'subscriptione_created',\r\n  //   created_at: 'Aug 7th, 2023'\r\n  // }\r\n];\r\nexport const TransactionList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const feature_types = [\r\n  { value: 1, title: 'switch' },\r\n  { value: 2, title: 'range' },\r\n  { value: 3, title: 'quantity' },\r\n  { value: 4, title: 'custom' },\r\n];\r\nexport const pricingModels = [\r\n  { value: 1, title: 'Flat fee' },\r\n  { value: 2, title: 'Per unit' },\r\n  { value: 3, title: 'Tiered' },\r\n  { value: 4, title: 'Volume' },\r\n  { value: 5, title: 'Stairstep' },\r\n];\r\nexport const periodUnit = ['Daily', 'Weekly', 'Monthly', 'Yearly'];\r\nexport const StaticRoutes = {\r\n  features: ['features'],\r\n  products: ['products'],\r\n};\r\nexport const plan_add_empty_data = [\r\n  {\r\n    titleIcon:\r\n      '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n    iconAlt: 'invoice-outline-icon',\r\n    title: 'Product Details',\r\n    subtitle:\r\n      'Please click the “Add” button below to add a new product. Once you clicked the button, you will be prompted to enter the name of product, description and additional details.',\r\n    btnTitle: 'Add product',\r\n    btnPath: '/#',\r\n  },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Pricing Plans',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new pricing plans. Once you clicked the button, you will be prompted to enter pricing and additional details.',\r\n  //   btnTitle: 'Add Pricing',\r\n  //   btnPath: '/#',\r\n  // },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Add-ons Details',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new add-on. Once you have click button, you will be prompted to select add-on.',\r\n  //   btnTitle: 'Add Add-on',\r\n  //   btnPath: '/#',\r\n  // },\r\n];\r\nexport const noProducts = [\r\n  {\r\n    heading: 'Products',\r\n    imgPath: '../../../../assets/images/empty-illustrations.png',\r\n    alt: 'no proudcts available',\r\n    subtext: 'Looking for Product',\r\n    text: \"Seems like you haven't added any Product. Start adding products by click on “Create Product” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Product',\r\n    path: '/products/create',\r\n  },\r\n];\r\nexport const noFeatures = [\r\n  {\r\n    heading: 'Features',\r\n    imgPath: '../../../../assets/images/empty-illustrations-2.png',\r\n    alt: 'no features available',\r\n    subtext: 'Looking for Features',\r\n    text: \"Seems like you haven't added any feature. Start adding feature by click on “Create Feature” button \",\r\n    showButton: true,\r\n    buttonTxt: 'Create Feature',\r\n    path: '/features/create',\r\n  },\r\n];\r\nexport const noPlans = [\r\n  {\r\n    heading: 'Plans',\r\n    imgPath: '../../../../assets/images/empty-illustrations-4.png',\r\n    alt: 'no Plans available',\r\n    subtext: 'Looking for Plans',\r\n    text: \"Seems like you haven't added any Plan. Start adding plan by click on “Create Plan” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Plan',\r\n    path: '/plans/view',\r\n  },\r\n];\r\nexport const noPageFound = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/404-page.png',\r\n    alt: 'No Page Found',\r\n    subtext: \"Oops! Why you're here?\",\r\n    text: \"We are very sorry for inconvenience. It looks like you're try to access a page that either has been deleted or never existed.\",\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const nocoupons = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noTransactions = [\r\n  {\r\n    heading: 'Transaction',\r\n    imgPath: '../../../../assets/images/empty-illustrations-5.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'NO transaction yet',\r\n    text: 'After your first transaction you will be able to view it here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const Stepper = [\r\n  {\r\n    id: 1,\r\n    title: 'Step 1',\r\n    caption: 'Plan Information',\r\n    isVisible: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Step 2',\r\n    caption: 'Add Plan Pricing',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Step 3',\r\n    caption: 'Product Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Step 4',\r\n    caption: 'Add-on Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Step 5',\r\n    caption: 'Charges',\r\n    isVisible: false,\r\n  },\r\n];\r\n",
            "properties": [
                {
                    "name": "created_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "features",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "product_ID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DialogData",
            "id": "interface-DialogData-de8258368fcc3767680beb8afd0041bb0ad6de914838f71246ae57de288ed2131949be24765fd0d5c52cf0214f5dfd2a18b091f1708aa1929be1d708025fe915",
            "file": "src/stories/softobiz-ui/Dialog/dialog.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, ViewEncapsulation, Inject } from '@angular/core';\r\nimport {\r\n  MatDialog,\r\n  MAT_DIALOG_DATA,\r\n  MatDialogRef,\r\n} from '@angular/material/dialog';\r\n\r\nexport interface DialogData {\r\n  animal: string;\r\n  name: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'sft-Dialog',\r\n  templateUrl: './dialog.component.html',\r\n  styleUrls: ['./dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class DialogComponent {\r\n  animal: string = '';  \r\n  name: string = '';\r\n\r\n  constructor(public dialog: MatDialog) {}\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\r\n      data: { name: this.name, animal: this.animal },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log('The dialog was closed');\r\n      this.animal = result;\r\n    });\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'dialog-html',\r\n  templateUrl: './dialog-html.component.html',\r\n})\r\nexport class DialogOverviewExampleDialog {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\r\n  ) {}\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}",
            "properties": [
                {
                    "name": "animal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DialogData",
            "id": "interface-DialogData-c2c9ae466510159bb250da44b50fd6cd6a6fe1e463e32ebdbc1a8544cb5374c96f9e855ce65a50e77eb4cb7bbc0851014d8dd2f18a275d9a4acb53e6a5d4a878-1",
            "file": "src/app/shared/components/dialog-box/coupons-delete-success/coupons-delete-success.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\nexport interface DialogData {\r\n  deleteId: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-coupons-delete-success',\r\n  templateUrl: './coupons-delete-success.component.html',\r\n  styleUrls: ['./coupons-delete-success.component.scss']\r\n})\r\nexport class CouponsDeleteSuccessComponent {\r\n  @Output() confirmed: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  constructor(public dialogRef: MatDialogRef<CouponsDeleteSuccessComponent>) {}\r\n\r\n  onCancelClick(): void {\r\n    this.dialogRef.close(false);\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "deleteId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "DialogData-1"
        },
        {
            "name": "DialogData",
            "id": "interface-DialogData-8b630a3091253146bb1f5c199ad653f59289261f1b1e72fb238752397619d80f373c7f1f69661c16fb2b7d6f7977a1c597b7325f7c2eda6abc596d63c3d4361f-2",
            "file": "src/app/shared/components/dialog-box/delete-confirmation/delete-confirmation.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { CouponsDeleteSuccessComponent } from 'src/app/shared/components/dialog-box/coupons-delete-success/coupons-delete-success.component';\r\n\r\n\r\nexport interface DialogData {\r\n  deleteId: number;\r\n}\r\n@Component({\r\n  selector: 'app-delete-confirmation',\r\n  templateUrl: './delete-confirmation.component.html',\r\n  styleUrls: ['./delete-confirmation.component.scss']\r\n})\r\nexport class DeleteConfirmationComponent {\r\n  @Output() confirmed: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeleteConfirmationComponent>,\r\n    public dialog: MatDialog\r\n  ) {}\r\n  // dialogRef: any;\r\n\r\n  onCancelClick(): void {\r\n    this.dialogRef.close(false);\r\n  }\r\n  onYesClick(): void {\r\n    const dialogRef = this.dialog.open(CouponsDeleteSuccessComponent, {\r\n      width: '422px',\r\n      panelClass: 'dialog-curved',\r\n    });\r\n  }\r\n\r\n}\r\n",
            "properties": [
                {
                    "name": "deleteId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "DialogData-2"
        },
        {
            "name": "DialogData",
            "id": "interface-DialogData-6c017d18e06b4b5124575f7024285bccf73bbb87a25967440fa139c8d2572e9923fa9c138f240be599cef666f1109b64b3fa87e576472ce69cc04cd25144d458-3",
            "file": "src/app/shared/components/dialog-box/success-dialog/success-dialog.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Inject } from '@angular/core';\r\nimport {\r\n  MatDialogRef,\r\n  MatDialog,\r\n  MAT_DIALOG_DATA,\r\n} from '@angular/material/dialog';\r\n\r\nexport interface DialogData {\r\n  module: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-success-dialog',\r\n  templateUrl: './success-dialog.component.html',\r\n  styleUrls: ['./success-dialog.component.scss'],\r\n})\r\nexport class SuccessDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<SuccessDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\r\n  ) {}\r\n}\r\n",
            "properties": [
                {
                    "name": "module",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 3,
            "duplicateName": "DialogData-3"
        },
        {
            "name": "DiscountElement",
            "id": "interface-DiscountElement-bdc75da5c4e4173faa05551b7c9da2fa80314d84e76516573caeb6af31fdc11fddec013becd54ef4f2346726c3f138684f1c3c94ef1e04a8aadd8c54d132337b",
            "file": "src/app/modules/coupons/components/view-coupons/view-coupons.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\nexport interface DiscountElement {\r\n  Discount : string;\r\n  Amount: any;\r\n}\r\nexport interface DurationElement {\r\n  Duration : string;\r\n  time: any;\r\n}\r\n\r\nexport interface ValidityElement {\r\n  Validity : string;\r\n  time: any;\r\n}\r\n\r\nconst ELEMENT_DATA: DiscountElement[] = [\r\n  {  Discount : 'Discount Type', Amount: 'Fixed Amount' },\r\n  { Discount : 'Applied on', Amount: 'Fixed Amount' },\r\n  {  Discount : 'Discount Type', Amount: 'Invoice Amount' },\r\n];\r\n\r\nconst Duration_DATA: DurationElement[] = [\r\n  {  Duration : 'Discount Type', time: 'Forever' },\r\n  { Duration : 'Applied on', time: 'All Plans' },\r\n  {  Duration : 'Discount Type', time: 'All Addons' },\r\n];\r\n\r\nconst Validity_DATA: ValidityElement[] = [\r\n  {  Validity : 'Valid Till', time: 'Forever' },\r\n  { Validity : 'Maximum Redemptions', time: '0 to unlimited' },\r\n];\r\n@Component({\r\n  selector: 'app-view-coupons',\r\n  templateUrl: './view-coupons.component.html',\r\n  styleUrls: ['./view-coupons.component.scss']\r\n})\r\nexport class ViewCouponsComponent {\r\n  displayedColumns: string[] = ['Discount', 'Amount'];\r\n  displayedColumns2: string[] = ['Duration','time'];\r\n  displayedColumns3: string[] = ['Validity','time'];\r\n  dataSource = ELEMENT_DATA;\r\n  dataDuration = Duration_DATA;\r\n  dataValidity = Validity_DATA;\r\n  clickedRows = new Set<DiscountElement>();\r\n}\r\n",
            "properties": [
                {
                    "name": "Amount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "Discount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DurationElement",
            "id": "interface-DurationElement-bdc75da5c4e4173faa05551b7c9da2fa80314d84e76516573caeb6af31fdc11fddec013becd54ef4f2346726c3f138684f1c3c94ef1e04a8aadd8c54d132337b",
            "file": "src/app/modules/coupons/components/view-coupons/view-coupons.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\nexport interface DiscountElement {\r\n  Discount : string;\r\n  Amount: any;\r\n}\r\nexport interface DurationElement {\r\n  Duration : string;\r\n  time: any;\r\n}\r\n\r\nexport interface ValidityElement {\r\n  Validity : string;\r\n  time: any;\r\n}\r\n\r\nconst ELEMENT_DATA: DiscountElement[] = [\r\n  {  Discount : 'Discount Type', Amount: 'Fixed Amount' },\r\n  { Discount : 'Applied on', Amount: 'Fixed Amount' },\r\n  {  Discount : 'Discount Type', Amount: 'Invoice Amount' },\r\n];\r\n\r\nconst Duration_DATA: DurationElement[] = [\r\n  {  Duration : 'Discount Type', time: 'Forever' },\r\n  { Duration : 'Applied on', time: 'All Plans' },\r\n  {  Duration : 'Discount Type', time: 'All Addons' },\r\n];\r\n\r\nconst Validity_DATA: ValidityElement[] = [\r\n  {  Validity : 'Valid Till', time: 'Forever' },\r\n  { Validity : 'Maximum Redemptions', time: '0 to unlimited' },\r\n];\r\n@Component({\r\n  selector: 'app-view-coupons',\r\n  templateUrl: './view-coupons.component.html',\r\n  styleUrls: ['./view-coupons.component.scss']\r\n})\r\nexport class ViewCouponsComponent {\r\n  displayedColumns: string[] = ['Discount', 'Amount'];\r\n  displayedColumns2: string[] = ['Duration','time'];\r\n  displayedColumns3: string[] = ['Validity','time'];\r\n  dataSource = ELEMENT_DATA;\r\n  dataDuration = Duration_DATA;\r\n  dataValidity = Validity_DATA;\r\n  clickedRows = new Set<DiscountElement>();\r\n}\r\n",
            "properties": [
                {
                    "name": "Duration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "time",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Feature",
            "id": "interface-Feature-803d92540be6a8aff87b5e214d1447548aa8dac4abbc4620d1fc823008450b64634ac11a47161491e6b1e9cb5a3b386689a0df9544602b6dec7cba288c377afe",
            "file": "src/app/shared/constants/consants.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n}\r\nexport interface Data_Type {\r\n  product_ID: string;\r\n  title: string;\r\n  description: string;\r\n  features: string[];\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface selectOptions {\r\n  value: number;\r\n  title: string;\r\n}\r\nexport interface features {\r\n  feature_id: string;\r\n  product_name: string;\r\n  feature_name: string;\r\n  description: string;\r\n  feature_type: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\n\r\nexport interface coupon {\r\n  coupon_id: string;\r\n  coupon_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Product {\r\n  productId: string;\r\n  imageUrl: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface GetProduct {\r\n  productId: string;\r\n  imageUrl: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface plansFields {\r\n  plan_ID: string;\r\n  external_name: string;\r\n  internal_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Feature {\r\n  featureId: string;\r\n  productId: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n  unit: string;\r\n  levels: [];\r\n}\r\nexport interface FeatureList {\r\n  featureId: number;\r\n  name: string;\r\n  productName: string;\r\n  levels: [];\r\n  description: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  type: string;\r\n  status: string;\r\n}\r\n\r\nexport interface GetFeature {\r\n  featureId: string;\r\n  productID: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n}\r\nexport const MENUITEMS = [\r\n  {\r\n    state: 'dashboard',\r\n    type: 'link',\r\n    name: 'Overview',\r\n    icon: 'space_dashboard',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'button',\r\n    type: 'link',\r\n    name: 'Customer',\r\n    icon: 'account_box',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'grid',\r\n    type: 'link',\r\n    name: 'Subscription',\r\n    icon: 'card_membership',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'products',\r\n    type: 'link',\r\n    name: 'Products',\r\n    icon: 'local_mall',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'features',\r\n    type: 'link',\r\n    name: 'Features',\r\n    icon: 'featured_play_list',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'plans',\r\n    type: 'link',\r\n    name: 'Plans',\r\n    icon: 'quick_reference_all',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Add Ons',\r\n    icon: 'add_notes',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'coupons',\r\n    type: 'link',\r\n    name: 'Coupons',\r\n    icon: 'confirmation_number',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'transactions',\r\n    type: 'link',\r\n    name: 'Transactions',\r\n    icon: 'compare_arrows',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: 'invoices',\r\n    type: 'link',\r\n    name: 'Invoices',\r\n    icon: 'receipt_long',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: 'logs',\r\n    type: 'link',\r\n    name: 'Logs',\r\n    icon: 'list_alt',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Menu_Headings = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Dashboard',\r\n    icon: 'settings',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Product Catalog ',\r\n    icon: 'logout',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Payment History ',\r\n    icon: 'logout',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Config_Menu = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Settings',\r\n    icon: 'settings',\r\n    category: 'Config',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'LogOut ',\r\n    icon: 'logout',\r\n    category: 'Confog',\r\n  },\r\n];\r\nexport const User_Options = [\r\n  {\r\n    path: '/user:id',\r\n    icon: 'account_circle',\r\n    name: 'My Account',\r\n    toggle: false,\r\n  },\r\n  { path: '/inbox', icon: 'inbox_outline', name: 'My Inbox', toggle: false },\r\n  { path: '', icon: 'clear_day', name: 'Dark Mode', toggle: true },\r\n  { path: '/help', icon: 'live_help', name: 'Help', toggle: false },\r\n];\r\n// Product listing\r\nexport const User_Data = [\r\n  {\r\n    id: 'random_id_1234',\r\n    product_ID: '#O365ProPlusRetail',\r\n    title: 'Microsoft Teams',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Host Online Calls', 'Unlimited Internet', 'Conference Calls'],\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_555',\r\n    product_ID: '#Or65SuperSupreme',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: [\r\n      'Unlimited Repos',\r\n      'Upto 50 Team Members',\r\n      'Host Online Calls',\r\n      'Unlimited Internet',\r\n      'Conference Calls',\r\n    ],\r\n    created_at: 'June 11th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_6969',\r\n    product_ID: '#Ow65Basic',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Conference Calls'],\r\n    created_at: 'June 18th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Features_Data = [\r\n  {\r\n    id: 'feature_id_459',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'feature_id_4591',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\n\r\nexport const Coupon_Data = [\r\n  {\r\n    id: 'coupon_id_459',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'coupon_id_460',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Plans_Data = [\r\n  {\r\n    id: 'ychvjbknk1',\r\n    plan_ID: 'As-012P',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.3',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: '1i23op1j2eo',\r\n    plan_ID: 'As-099G',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.2',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Notifications_Data = [\r\n  // {\r\n  //   user: 'John Smith' ,\r\n  //   message: 'subscriptione_created',\r\n  //   created_at: 'Aug 7th, 2023'\r\n  // }\r\n];\r\nexport const TransactionList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const feature_types = [\r\n  { value: 1, title: 'switch' },\r\n  { value: 2, title: 'range' },\r\n  { value: 3, title: 'quantity' },\r\n  { value: 4, title: 'custom' },\r\n];\r\nexport const pricingModels = [\r\n  { value: 1, title: 'Flat fee' },\r\n  { value: 2, title: 'Per unit' },\r\n  { value: 3, title: 'Tiered' },\r\n  { value: 4, title: 'Volume' },\r\n  { value: 5, title: 'Stairstep' },\r\n];\r\nexport const periodUnit = ['Daily', 'Weekly', 'Monthly', 'Yearly'];\r\nexport const StaticRoutes = {\r\n  features: ['features'],\r\n  products: ['products'],\r\n};\r\nexport const plan_add_empty_data = [\r\n  {\r\n    titleIcon:\r\n      '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n    iconAlt: 'invoice-outline-icon',\r\n    title: 'Product Details',\r\n    subtitle:\r\n      'Please click the “Add” button below to add a new product. Once you clicked the button, you will be prompted to enter the name of product, description and additional details.',\r\n    btnTitle: 'Add product',\r\n    btnPath: '/#',\r\n  },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Pricing Plans',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new pricing plans. Once you clicked the button, you will be prompted to enter pricing and additional details.',\r\n  //   btnTitle: 'Add Pricing',\r\n  //   btnPath: '/#',\r\n  // },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Add-ons Details',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new add-on. Once you have click button, you will be prompted to select add-on.',\r\n  //   btnTitle: 'Add Add-on',\r\n  //   btnPath: '/#',\r\n  // },\r\n];\r\nexport const noProducts = [\r\n  {\r\n    heading: 'Products',\r\n    imgPath: '../../../../assets/images/empty-illustrations.png',\r\n    alt: 'no proudcts available',\r\n    subtext: 'Looking for Product',\r\n    text: \"Seems like you haven't added any Product. Start adding products by click on “Create Product” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Product',\r\n    path: '/products/create',\r\n  },\r\n];\r\nexport const noFeatures = [\r\n  {\r\n    heading: 'Features',\r\n    imgPath: '../../../../assets/images/empty-illustrations-2.png',\r\n    alt: 'no features available',\r\n    subtext: 'Looking for Features',\r\n    text: \"Seems like you haven't added any feature. Start adding feature by click on “Create Feature” button \",\r\n    showButton: true,\r\n    buttonTxt: 'Create Feature',\r\n    path: '/features/create',\r\n  },\r\n];\r\nexport const noPlans = [\r\n  {\r\n    heading: 'Plans',\r\n    imgPath: '../../../../assets/images/empty-illustrations-4.png',\r\n    alt: 'no Plans available',\r\n    subtext: 'Looking for Plans',\r\n    text: \"Seems like you haven't added any Plan. Start adding plan by click on “Create Plan” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Plan',\r\n    path: '/plans/view',\r\n  },\r\n];\r\nexport const noPageFound = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/404-page.png',\r\n    alt: 'No Page Found',\r\n    subtext: \"Oops! Why you're here?\",\r\n    text: \"We are very sorry for inconvenience. It looks like you're try to access a page that either has been deleted or never existed.\",\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const nocoupons = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noTransactions = [\r\n  {\r\n    heading: 'Transaction',\r\n    imgPath: '../../../../assets/images/empty-illustrations-5.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'NO transaction yet',\r\n    text: 'After your first transaction you will be able to view it here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const Stepper = [\r\n  {\r\n    id: 1,\r\n    title: 'Step 1',\r\n    caption: 'Plan Information',\r\n    isVisible: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Step 2',\r\n    caption: 'Add Plan Pricing',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Step 3',\r\n    caption: 'Product Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Step 4',\r\n    caption: 'Add-on Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Step 5',\r\n    caption: 'Charges',\r\n    isVisible: false,\r\n  },\r\n];\r\n",
            "properties": [
                {
                    "name": "createdOn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 67
                },
                {
                    "name": "featureId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "levels",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 71
                },
                {
                    "name": "modifiedOn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 66
                },
                {
                    "name": "productId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 69
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "unit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 70
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "FeatureList",
            "id": "interface-FeatureList-803d92540be6a8aff87b5e214d1447548aa8dac4abbc4620d1fc823008450b64634ac11a47161491e6b1e9cb5a3b386689a0df9544602b6dec7cba288c377afe",
            "file": "src/app/shared/constants/consants.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n}\r\nexport interface Data_Type {\r\n  product_ID: string;\r\n  title: string;\r\n  description: string;\r\n  features: string[];\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface selectOptions {\r\n  value: number;\r\n  title: string;\r\n}\r\nexport interface features {\r\n  feature_id: string;\r\n  product_name: string;\r\n  feature_name: string;\r\n  description: string;\r\n  feature_type: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\n\r\nexport interface coupon {\r\n  coupon_id: string;\r\n  coupon_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Product {\r\n  productId: string;\r\n  imageUrl: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface GetProduct {\r\n  productId: string;\r\n  imageUrl: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface plansFields {\r\n  plan_ID: string;\r\n  external_name: string;\r\n  internal_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Feature {\r\n  featureId: string;\r\n  productId: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n  unit: string;\r\n  levels: [];\r\n}\r\nexport interface FeatureList {\r\n  featureId: number;\r\n  name: string;\r\n  productName: string;\r\n  levels: [];\r\n  description: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  type: string;\r\n  status: string;\r\n}\r\n\r\nexport interface GetFeature {\r\n  featureId: string;\r\n  productID: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n}\r\nexport const MENUITEMS = [\r\n  {\r\n    state: 'dashboard',\r\n    type: 'link',\r\n    name: 'Overview',\r\n    icon: 'space_dashboard',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'button',\r\n    type: 'link',\r\n    name: 'Customer',\r\n    icon: 'account_box',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'grid',\r\n    type: 'link',\r\n    name: 'Subscription',\r\n    icon: 'card_membership',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'products',\r\n    type: 'link',\r\n    name: 'Products',\r\n    icon: 'local_mall',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'features',\r\n    type: 'link',\r\n    name: 'Features',\r\n    icon: 'featured_play_list',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'plans',\r\n    type: 'link',\r\n    name: 'Plans',\r\n    icon: 'quick_reference_all',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Add Ons',\r\n    icon: 'add_notes',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'coupons',\r\n    type: 'link',\r\n    name: 'Coupons',\r\n    icon: 'confirmation_number',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'transactions',\r\n    type: 'link',\r\n    name: 'Transactions',\r\n    icon: 'compare_arrows',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: 'invoices',\r\n    type: 'link',\r\n    name: 'Invoices',\r\n    icon: 'receipt_long',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: 'logs',\r\n    type: 'link',\r\n    name: 'Logs',\r\n    icon: 'list_alt',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Menu_Headings = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Dashboard',\r\n    icon: 'settings',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Product Catalog ',\r\n    icon: 'logout',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Payment History ',\r\n    icon: 'logout',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Config_Menu = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Settings',\r\n    icon: 'settings',\r\n    category: 'Config',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'LogOut ',\r\n    icon: 'logout',\r\n    category: 'Confog',\r\n  },\r\n];\r\nexport const User_Options = [\r\n  {\r\n    path: '/user:id',\r\n    icon: 'account_circle',\r\n    name: 'My Account',\r\n    toggle: false,\r\n  },\r\n  { path: '/inbox', icon: 'inbox_outline', name: 'My Inbox', toggle: false },\r\n  { path: '', icon: 'clear_day', name: 'Dark Mode', toggle: true },\r\n  { path: '/help', icon: 'live_help', name: 'Help', toggle: false },\r\n];\r\n// Product listing\r\nexport const User_Data = [\r\n  {\r\n    id: 'random_id_1234',\r\n    product_ID: '#O365ProPlusRetail',\r\n    title: 'Microsoft Teams',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Host Online Calls', 'Unlimited Internet', 'Conference Calls'],\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_555',\r\n    product_ID: '#Or65SuperSupreme',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: [\r\n      'Unlimited Repos',\r\n      'Upto 50 Team Members',\r\n      'Host Online Calls',\r\n      'Unlimited Internet',\r\n      'Conference Calls',\r\n    ],\r\n    created_at: 'June 11th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_6969',\r\n    product_ID: '#Ow65Basic',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Conference Calls'],\r\n    created_at: 'June 18th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Features_Data = [\r\n  {\r\n    id: 'feature_id_459',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'feature_id_4591',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\n\r\nexport const Coupon_Data = [\r\n  {\r\n    id: 'coupon_id_459',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'coupon_id_460',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Plans_Data = [\r\n  {\r\n    id: 'ychvjbknk1',\r\n    plan_ID: 'As-012P',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.3',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: '1i23op1j2eo',\r\n    plan_ID: 'As-099G',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.2',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Notifications_Data = [\r\n  // {\r\n  //   user: 'John Smith' ,\r\n  //   message: 'subscriptione_created',\r\n  //   created_at: 'Aug 7th, 2023'\r\n  // }\r\n];\r\nexport const TransactionList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const feature_types = [\r\n  { value: 1, title: 'switch' },\r\n  { value: 2, title: 'range' },\r\n  { value: 3, title: 'quantity' },\r\n  { value: 4, title: 'custom' },\r\n];\r\nexport const pricingModels = [\r\n  { value: 1, title: 'Flat fee' },\r\n  { value: 2, title: 'Per unit' },\r\n  { value: 3, title: 'Tiered' },\r\n  { value: 4, title: 'Volume' },\r\n  { value: 5, title: 'Stairstep' },\r\n];\r\nexport const periodUnit = ['Daily', 'Weekly', 'Monthly', 'Yearly'];\r\nexport const StaticRoutes = {\r\n  features: ['features'],\r\n  products: ['products'],\r\n};\r\nexport const plan_add_empty_data = [\r\n  {\r\n    titleIcon:\r\n      '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n    iconAlt: 'invoice-outline-icon',\r\n    title: 'Product Details',\r\n    subtitle:\r\n      'Please click the “Add” button below to add a new product. Once you clicked the button, you will be prompted to enter the name of product, description and additional details.',\r\n    btnTitle: 'Add product',\r\n    btnPath: '/#',\r\n  },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Pricing Plans',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new pricing plans. Once you clicked the button, you will be prompted to enter pricing and additional details.',\r\n  //   btnTitle: 'Add Pricing',\r\n  //   btnPath: '/#',\r\n  // },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Add-ons Details',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new add-on. Once you have click button, you will be prompted to select add-on.',\r\n  //   btnTitle: 'Add Add-on',\r\n  //   btnPath: '/#',\r\n  // },\r\n];\r\nexport const noProducts = [\r\n  {\r\n    heading: 'Products',\r\n    imgPath: '../../../../assets/images/empty-illustrations.png',\r\n    alt: 'no proudcts available',\r\n    subtext: 'Looking for Product',\r\n    text: \"Seems like you haven't added any Product. Start adding products by click on “Create Product” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Product',\r\n    path: '/products/create',\r\n  },\r\n];\r\nexport const noFeatures = [\r\n  {\r\n    heading: 'Features',\r\n    imgPath: '../../../../assets/images/empty-illustrations-2.png',\r\n    alt: 'no features available',\r\n    subtext: 'Looking for Features',\r\n    text: \"Seems like you haven't added any feature. Start adding feature by click on “Create Feature” button \",\r\n    showButton: true,\r\n    buttonTxt: 'Create Feature',\r\n    path: '/features/create',\r\n  },\r\n];\r\nexport const noPlans = [\r\n  {\r\n    heading: 'Plans',\r\n    imgPath: '../../../../assets/images/empty-illustrations-4.png',\r\n    alt: 'no Plans available',\r\n    subtext: 'Looking for Plans',\r\n    text: \"Seems like you haven't added any Plan. Start adding plan by click on “Create Plan” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Plan',\r\n    path: '/plans/view',\r\n  },\r\n];\r\nexport const noPageFound = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/404-page.png',\r\n    alt: 'No Page Found',\r\n    subtext: \"Oops! Why you're here?\",\r\n    text: \"We are very sorry for inconvenience. It looks like you're try to access a page that either has been deleted or never existed.\",\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const nocoupons = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noTransactions = [\r\n  {\r\n    heading: 'Transaction',\r\n    imgPath: '../../../../assets/images/empty-illustrations-5.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'NO transaction yet',\r\n    text: 'After your first transaction you will be able to view it here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const Stepper = [\r\n  {\r\n    id: 1,\r\n    title: 'Step 1',\r\n    caption: 'Plan Information',\r\n    isVisible: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Step 2',\r\n    caption: 'Add Plan Pricing',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Step 3',\r\n    caption: 'Product Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Step 4',\r\n    caption: 'Add-on Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Step 5',\r\n    caption: 'Charges',\r\n    isVisible: false,\r\n  },\r\n];\r\n",
            "properties": [
                {
                    "name": "createdOn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 79
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 78
                },
                {
                    "name": "featureId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 74
                },
                {
                    "name": "levels",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 77
                },
                {
                    "name": "modifiedOn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 80
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 75
                },
                {
                    "name": "productName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 76
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 82
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 81
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "features",
            "id": "interface-features-803d92540be6a8aff87b5e214d1447548aa8dac4abbc4620d1fc823008450b64634ac11a47161491e6b1e9cb5a3b386689a0df9544602b6dec7cba288c377afe",
            "file": "src/app/shared/constants/consants.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n}\r\nexport interface Data_Type {\r\n  product_ID: string;\r\n  title: string;\r\n  description: string;\r\n  features: string[];\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface selectOptions {\r\n  value: number;\r\n  title: string;\r\n}\r\nexport interface features {\r\n  feature_id: string;\r\n  product_name: string;\r\n  feature_name: string;\r\n  description: string;\r\n  feature_type: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\n\r\nexport interface coupon {\r\n  coupon_id: string;\r\n  coupon_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Product {\r\n  productId: string;\r\n  imageUrl: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface GetProduct {\r\n  productId: string;\r\n  imageUrl: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface plansFields {\r\n  plan_ID: string;\r\n  external_name: string;\r\n  internal_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Feature {\r\n  featureId: string;\r\n  productId: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n  unit: string;\r\n  levels: [];\r\n}\r\nexport interface FeatureList {\r\n  featureId: number;\r\n  name: string;\r\n  productName: string;\r\n  levels: [];\r\n  description: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  type: string;\r\n  status: string;\r\n}\r\n\r\nexport interface GetFeature {\r\n  featureId: string;\r\n  productID: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n}\r\nexport const MENUITEMS = [\r\n  {\r\n    state: 'dashboard',\r\n    type: 'link',\r\n    name: 'Overview',\r\n    icon: 'space_dashboard',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'button',\r\n    type: 'link',\r\n    name: 'Customer',\r\n    icon: 'account_box',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'grid',\r\n    type: 'link',\r\n    name: 'Subscription',\r\n    icon: 'card_membership',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'products',\r\n    type: 'link',\r\n    name: 'Products',\r\n    icon: 'local_mall',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'features',\r\n    type: 'link',\r\n    name: 'Features',\r\n    icon: 'featured_play_list',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'plans',\r\n    type: 'link',\r\n    name: 'Plans',\r\n    icon: 'quick_reference_all',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Add Ons',\r\n    icon: 'add_notes',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'coupons',\r\n    type: 'link',\r\n    name: 'Coupons',\r\n    icon: 'confirmation_number',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'transactions',\r\n    type: 'link',\r\n    name: 'Transactions',\r\n    icon: 'compare_arrows',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: 'invoices',\r\n    type: 'link',\r\n    name: 'Invoices',\r\n    icon: 'receipt_long',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: 'logs',\r\n    type: 'link',\r\n    name: 'Logs',\r\n    icon: 'list_alt',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Menu_Headings = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Dashboard',\r\n    icon: 'settings',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Product Catalog ',\r\n    icon: 'logout',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Payment History ',\r\n    icon: 'logout',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Config_Menu = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Settings',\r\n    icon: 'settings',\r\n    category: 'Config',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'LogOut ',\r\n    icon: 'logout',\r\n    category: 'Confog',\r\n  },\r\n];\r\nexport const User_Options = [\r\n  {\r\n    path: '/user:id',\r\n    icon: 'account_circle',\r\n    name: 'My Account',\r\n    toggle: false,\r\n  },\r\n  { path: '/inbox', icon: 'inbox_outline', name: 'My Inbox', toggle: false },\r\n  { path: '', icon: 'clear_day', name: 'Dark Mode', toggle: true },\r\n  { path: '/help', icon: 'live_help', name: 'Help', toggle: false },\r\n];\r\n// Product listing\r\nexport const User_Data = [\r\n  {\r\n    id: 'random_id_1234',\r\n    product_ID: '#O365ProPlusRetail',\r\n    title: 'Microsoft Teams',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Host Online Calls', 'Unlimited Internet', 'Conference Calls'],\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_555',\r\n    product_ID: '#Or65SuperSupreme',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: [\r\n      'Unlimited Repos',\r\n      'Upto 50 Team Members',\r\n      'Host Online Calls',\r\n      'Unlimited Internet',\r\n      'Conference Calls',\r\n    ],\r\n    created_at: 'June 11th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_6969',\r\n    product_ID: '#Ow65Basic',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Conference Calls'],\r\n    created_at: 'June 18th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Features_Data = [\r\n  {\r\n    id: 'feature_id_459',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'feature_id_4591',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\n\r\nexport const Coupon_Data = [\r\n  {\r\n    id: 'coupon_id_459',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'coupon_id_460',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Plans_Data = [\r\n  {\r\n    id: 'ychvjbknk1',\r\n    plan_ID: 'As-012P',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.3',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: '1i23op1j2eo',\r\n    plan_ID: 'As-099G',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.2',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Notifications_Data = [\r\n  // {\r\n  //   user: 'John Smith' ,\r\n  //   message: 'subscriptione_created',\r\n  //   created_at: 'Aug 7th, 2023'\r\n  // }\r\n];\r\nexport const TransactionList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const feature_types = [\r\n  { value: 1, title: 'switch' },\r\n  { value: 2, title: 'range' },\r\n  { value: 3, title: 'quantity' },\r\n  { value: 4, title: 'custom' },\r\n];\r\nexport const pricingModels = [\r\n  { value: 1, title: 'Flat fee' },\r\n  { value: 2, title: 'Per unit' },\r\n  { value: 3, title: 'Tiered' },\r\n  { value: 4, title: 'Volume' },\r\n  { value: 5, title: 'Stairstep' },\r\n];\r\nexport const periodUnit = ['Daily', 'Weekly', 'Monthly', 'Yearly'];\r\nexport const StaticRoutes = {\r\n  features: ['features'],\r\n  products: ['products'],\r\n};\r\nexport const plan_add_empty_data = [\r\n  {\r\n    titleIcon:\r\n      '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n    iconAlt: 'invoice-outline-icon',\r\n    title: 'Product Details',\r\n    subtitle:\r\n      'Please click the “Add” button below to add a new product. Once you clicked the button, you will be prompted to enter the name of product, description and additional details.',\r\n    btnTitle: 'Add product',\r\n    btnPath: '/#',\r\n  },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Pricing Plans',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new pricing plans. Once you clicked the button, you will be prompted to enter pricing and additional details.',\r\n  //   btnTitle: 'Add Pricing',\r\n  //   btnPath: '/#',\r\n  // },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Add-ons Details',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new add-on. Once you have click button, you will be prompted to select add-on.',\r\n  //   btnTitle: 'Add Add-on',\r\n  //   btnPath: '/#',\r\n  // },\r\n];\r\nexport const noProducts = [\r\n  {\r\n    heading: 'Products',\r\n    imgPath: '../../../../assets/images/empty-illustrations.png',\r\n    alt: 'no proudcts available',\r\n    subtext: 'Looking for Product',\r\n    text: \"Seems like you haven't added any Product. Start adding products by click on “Create Product” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Product',\r\n    path: '/products/create',\r\n  },\r\n];\r\nexport const noFeatures = [\r\n  {\r\n    heading: 'Features',\r\n    imgPath: '../../../../assets/images/empty-illustrations-2.png',\r\n    alt: 'no features available',\r\n    subtext: 'Looking for Features',\r\n    text: \"Seems like you haven't added any feature. Start adding feature by click on “Create Feature” button \",\r\n    showButton: true,\r\n    buttonTxt: 'Create Feature',\r\n    path: '/features/create',\r\n  },\r\n];\r\nexport const noPlans = [\r\n  {\r\n    heading: 'Plans',\r\n    imgPath: '../../../../assets/images/empty-illustrations-4.png',\r\n    alt: 'no Plans available',\r\n    subtext: 'Looking for Plans',\r\n    text: \"Seems like you haven't added any Plan. Start adding plan by click on “Create Plan” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Plan',\r\n    path: '/plans/view',\r\n  },\r\n];\r\nexport const noPageFound = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/404-page.png',\r\n    alt: 'No Page Found',\r\n    subtext: \"Oops! Why you're here?\",\r\n    text: \"We are very sorry for inconvenience. It looks like you're try to access a page that either has been deleted or never existed.\",\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const nocoupons = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noTransactions = [\r\n  {\r\n    heading: 'Transaction',\r\n    imgPath: '../../../../assets/images/empty-illustrations-5.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'NO transaction yet',\r\n    text: 'After your first transaction you will be able to view it here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const Stepper = [\r\n  {\r\n    id: 1,\r\n    title: 'Step 1',\r\n    caption: 'Plan Information',\r\n    isVisible: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Step 2',\r\n    caption: 'Add Plan Pricing',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Step 3',\r\n    caption: 'Product Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Step 4',\r\n    caption: 'Add-on Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Step 5',\r\n    caption: 'Charges',\r\n    isVisible: false,\r\n  },\r\n];\r\n",
            "properties": [
                {
                    "name": "created_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "feature_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "feature_name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "feature_type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "product_name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "GetFeature",
            "id": "interface-GetFeature-803d92540be6a8aff87b5e214d1447548aa8dac4abbc4620d1fc823008450b64634ac11a47161491e6b1e9cb5a3b386689a0df9544602b6dec7cba288c377afe",
            "file": "src/app/shared/constants/consants.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n}\r\nexport interface Data_Type {\r\n  product_ID: string;\r\n  title: string;\r\n  description: string;\r\n  features: string[];\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface selectOptions {\r\n  value: number;\r\n  title: string;\r\n}\r\nexport interface features {\r\n  feature_id: string;\r\n  product_name: string;\r\n  feature_name: string;\r\n  description: string;\r\n  feature_type: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\n\r\nexport interface coupon {\r\n  coupon_id: string;\r\n  coupon_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Product {\r\n  productId: string;\r\n  imageUrl: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface GetProduct {\r\n  productId: string;\r\n  imageUrl: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface plansFields {\r\n  plan_ID: string;\r\n  external_name: string;\r\n  internal_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Feature {\r\n  featureId: string;\r\n  productId: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n  unit: string;\r\n  levels: [];\r\n}\r\nexport interface FeatureList {\r\n  featureId: number;\r\n  name: string;\r\n  productName: string;\r\n  levels: [];\r\n  description: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  type: string;\r\n  status: string;\r\n}\r\n\r\nexport interface GetFeature {\r\n  featureId: string;\r\n  productID: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n}\r\nexport const MENUITEMS = [\r\n  {\r\n    state: 'dashboard',\r\n    type: 'link',\r\n    name: 'Overview',\r\n    icon: 'space_dashboard',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'button',\r\n    type: 'link',\r\n    name: 'Customer',\r\n    icon: 'account_box',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'grid',\r\n    type: 'link',\r\n    name: 'Subscription',\r\n    icon: 'card_membership',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'products',\r\n    type: 'link',\r\n    name: 'Products',\r\n    icon: 'local_mall',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'features',\r\n    type: 'link',\r\n    name: 'Features',\r\n    icon: 'featured_play_list',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'plans',\r\n    type: 'link',\r\n    name: 'Plans',\r\n    icon: 'quick_reference_all',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Add Ons',\r\n    icon: 'add_notes',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'coupons',\r\n    type: 'link',\r\n    name: 'Coupons',\r\n    icon: 'confirmation_number',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'transactions',\r\n    type: 'link',\r\n    name: 'Transactions',\r\n    icon: 'compare_arrows',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: 'invoices',\r\n    type: 'link',\r\n    name: 'Invoices',\r\n    icon: 'receipt_long',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: 'logs',\r\n    type: 'link',\r\n    name: 'Logs',\r\n    icon: 'list_alt',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Menu_Headings = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Dashboard',\r\n    icon: 'settings',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Product Catalog ',\r\n    icon: 'logout',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Payment History ',\r\n    icon: 'logout',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Config_Menu = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Settings',\r\n    icon: 'settings',\r\n    category: 'Config',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'LogOut ',\r\n    icon: 'logout',\r\n    category: 'Confog',\r\n  },\r\n];\r\nexport const User_Options = [\r\n  {\r\n    path: '/user:id',\r\n    icon: 'account_circle',\r\n    name: 'My Account',\r\n    toggle: false,\r\n  },\r\n  { path: '/inbox', icon: 'inbox_outline', name: 'My Inbox', toggle: false },\r\n  { path: '', icon: 'clear_day', name: 'Dark Mode', toggle: true },\r\n  { path: '/help', icon: 'live_help', name: 'Help', toggle: false },\r\n];\r\n// Product listing\r\nexport const User_Data = [\r\n  {\r\n    id: 'random_id_1234',\r\n    product_ID: '#O365ProPlusRetail',\r\n    title: 'Microsoft Teams',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Host Online Calls', 'Unlimited Internet', 'Conference Calls'],\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_555',\r\n    product_ID: '#Or65SuperSupreme',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: [\r\n      'Unlimited Repos',\r\n      'Upto 50 Team Members',\r\n      'Host Online Calls',\r\n      'Unlimited Internet',\r\n      'Conference Calls',\r\n    ],\r\n    created_at: 'June 11th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_6969',\r\n    product_ID: '#Ow65Basic',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Conference Calls'],\r\n    created_at: 'June 18th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Features_Data = [\r\n  {\r\n    id: 'feature_id_459',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'feature_id_4591',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\n\r\nexport const Coupon_Data = [\r\n  {\r\n    id: 'coupon_id_459',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'coupon_id_460',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Plans_Data = [\r\n  {\r\n    id: 'ychvjbknk1',\r\n    plan_ID: 'As-012P',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.3',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: '1i23op1j2eo',\r\n    plan_ID: 'As-099G',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.2',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Notifications_Data = [\r\n  // {\r\n  //   user: 'John Smith' ,\r\n  //   message: 'subscriptione_created',\r\n  //   created_at: 'Aug 7th, 2023'\r\n  // }\r\n];\r\nexport const TransactionList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const feature_types = [\r\n  { value: 1, title: 'switch' },\r\n  { value: 2, title: 'range' },\r\n  { value: 3, title: 'quantity' },\r\n  { value: 4, title: 'custom' },\r\n];\r\nexport const pricingModels = [\r\n  { value: 1, title: 'Flat fee' },\r\n  { value: 2, title: 'Per unit' },\r\n  { value: 3, title: 'Tiered' },\r\n  { value: 4, title: 'Volume' },\r\n  { value: 5, title: 'Stairstep' },\r\n];\r\nexport const periodUnit = ['Daily', 'Weekly', 'Monthly', 'Yearly'];\r\nexport const StaticRoutes = {\r\n  features: ['features'],\r\n  products: ['products'],\r\n};\r\nexport const plan_add_empty_data = [\r\n  {\r\n    titleIcon:\r\n      '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n    iconAlt: 'invoice-outline-icon',\r\n    title: 'Product Details',\r\n    subtitle:\r\n      'Please click the “Add” button below to add a new product. Once you clicked the button, you will be prompted to enter the name of product, description and additional details.',\r\n    btnTitle: 'Add product',\r\n    btnPath: '/#',\r\n  },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Pricing Plans',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new pricing plans. Once you clicked the button, you will be prompted to enter pricing and additional details.',\r\n  //   btnTitle: 'Add Pricing',\r\n  //   btnPath: '/#',\r\n  // },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Add-ons Details',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new add-on. Once you have click button, you will be prompted to select add-on.',\r\n  //   btnTitle: 'Add Add-on',\r\n  //   btnPath: '/#',\r\n  // },\r\n];\r\nexport const noProducts = [\r\n  {\r\n    heading: 'Products',\r\n    imgPath: '../../../../assets/images/empty-illustrations.png',\r\n    alt: 'no proudcts available',\r\n    subtext: 'Looking for Product',\r\n    text: \"Seems like you haven't added any Product. Start adding products by click on “Create Product” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Product',\r\n    path: '/products/create',\r\n  },\r\n];\r\nexport const noFeatures = [\r\n  {\r\n    heading: 'Features',\r\n    imgPath: '../../../../assets/images/empty-illustrations-2.png',\r\n    alt: 'no features available',\r\n    subtext: 'Looking for Features',\r\n    text: \"Seems like you haven't added any feature. Start adding feature by click on “Create Feature” button \",\r\n    showButton: true,\r\n    buttonTxt: 'Create Feature',\r\n    path: '/features/create',\r\n  },\r\n];\r\nexport const noPlans = [\r\n  {\r\n    heading: 'Plans',\r\n    imgPath: '../../../../assets/images/empty-illustrations-4.png',\r\n    alt: 'no Plans available',\r\n    subtext: 'Looking for Plans',\r\n    text: \"Seems like you haven't added any Plan. Start adding plan by click on “Create Plan” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Plan',\r\n    path: '/plans/view',\r\n  },\r\n];\r\nexport const noPageFound = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/404-page.png',\r\n    alt: 'No Page Found',\r\n    subtext: \"Oops! Why you're here?\",\r\n    text: \"We are very sorry for inconvenience. It looks like you're try to access a page that either has been deleted or never existed.\",\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const nocoupons = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noTransactions = [\r\n  {\r\n    heading: 'Transaction',\r\n    imgPath: '../../../../assets/images/empty-illustrations-5.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'NO transaction yet',\r\n    text: 'After your first transaction you will be able to view it here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const Stepper = [\r\n  {\r\n    id: 1,\r\n    title: 'Step 1',\r\n    caption: 'Plan Information',\r\n    isVisible: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Step 2',\r\n    caption: 'Add Plan Pricing',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Step 3',\r\n    caption: 'Product Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Step 4',\r\n    caption: 'Add-on Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Step 5',\r\n    caption: 'Charges',\r\n    isVisible: false,\r\n  },\r\n];\r\n",
            "properties": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 90
                },
                {
                    "name": "featureId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 86
                },
                {
                    "name": "modifiedOn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 88
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 89
                },
                {
                    "name": "productID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 87
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 92
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 91
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "GetProduct",
            "id": "interface-GetProduct-803d92540be6a8aff87b5e214d1447548aa8dac4abbc4620d1fc823008450b64634ac11a47161491e6b1e9cb5a3b386689a0df9544602b6dec7cba288c377afe",
            "file": "src/app/shared/constants/consants.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n}\r\nexport interface Data_Type {\r\n  product_ID: string;\r\n  title: string;\r\n  description: string;\r\n  features: string[];\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface selectOptions {\r\n  value: number;\r\n  title: string;\r\n}\r\nexport interface features {\r\n  feature_id: string;\r\n  product_name: string;\r\n  feature_name: string;\r\n  description: string;\r\n  feature_type: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\n\r\nexport interface coupon {\r\n  coupon_id: string;\r\n  coupon_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Product {\r\n  productId: string;\r\n  imageUrl: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface GetProduct {\r\n  productId: string;\r\n  imageUrl: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface plansFields {\r\n  plan_ID: string;\r\n  external_name: string;\r\n  internal_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Feature {\r\n  featureId: string;\r\n  productId: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n  unit: string;\r\n  levels: [];\r\n}\r\nexport interface FeatureList {\r\n  featureId: number;\r\n  name: string;\r\n  productName: string;\r\n  levels: [];\r\n  description: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  type: string;\r\n  status: string;\r\n}\r\n\r\nexport interface GetFeature {\r\n  featureId: string;\r\n  productID: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n}\r\nexport const MENUITEMS = [\r\n  {\r\n    state: 'dashboard',\r\n    type: 'link',\r\n    name: 'Overview',\r\n    icon: 'space_dashboard',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'button',\r\n    type: 'link',\r\n    name: 'Customer',\r\n    icon: 'account_box',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'grid',\r\n    type: 'link',\r\n    name: 'Subscription',\r\n    icon: 'card_membership',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'products',\r\n    type: 'link',\r\n    name: 'Products',\r\n    icon: 'local_mall',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'features',\r\n    type: 'link',\r\n    name: 'Features',\r\n    icon: 'featured_play_list',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'plans',\r\n    type: 'link',\r\n    name: 'Plans',\r\n    icon: 'quick_reference_all',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Add Ons',\r\n    icon: 'add_notes',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'coupons',\r\n    type: 'link',\r\n    name: 'Coupons',\r\n    icon: 'confirmation_number',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'transactions',\r\n    type: 'link',\r\n    name: 'Transactions',\r\n    icon: 'compare_arrows',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: 'invoices',\r\n    type: 'link',\r\n    name: 'Invoices',\r\n    icon: 'receipt_long',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: 'logs',\r\n    type: 'link',\r\n    name: 'Logs',\r\n    icon: 'list_alt',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Menu_Headings = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Dashboard',\r\n    icon: 'settings',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Product Catalog ',\r\n    icon: 'logout',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Payment History ',\r\n    icon: 'logout',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Config_Menu = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Settings',\r\n    icon: 'settings',\r\n    category: 'Config',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'LogOut ',\r\n    icon: 'logout',\r\n    category: 'Confog',\r\n  },\r\n];\r\nexport const User_Options = [\r\n  {\r\n    path: '/user:id',\r\n    icon: 'account_circle',\r\n    name: 'My Account',\r\n    toggle: false,\r\n  },\r\n  { path: '/inbox', icon: 'inbox_outline', name: 'My Inbox', toggle: false },\r\n  { path: '', icon: 'clear_day', name: 'Dark Mode', toggle: true },\r\n  { path: '/help', icon: 'live_help', name: 'Help', toggle: false },\r\n];\r\n// Product listing\r\nexport const User_Data = [\r\n  {\r\n    id: 'random_id_1234',\r\n    product_ID: '#O365ProPlusRetail',\r\n    title: 'Microsoft Teams',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Host Online Calls', 'Unlimited Internet', 'Conference Calls'],\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_555',\r\n    product_ID: '#Or65SuperSupreme',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: [\r\n      'Unlimited Repos',\r\n      'Upto 50 Team Members',\r\n      'Host Online Calls',\r\n      'Unlimited Internet',\r\n      'Conference Calls',\r\n    ],\r\n    created_at: 'June 11th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_6969',\r\n    product_ID: '#Ow65Basic',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Conference Calls'],\r\n    created_at: 'June 18th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Features_Data = [\r\n  {\r\n    id: 'feature_id_459',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'feature_id_4591',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\n\r\nexport const Coupon_Data = [\r\n  {\r\n    id: 'coupon_id_459',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'coupon_id_460',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Plans_Data = [\r\n  {\r\n    id: 'ychvjbknk1',\r\n    plan_ID: 'As-012P',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.3',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: '1i23op1j2eo',\r\n    plan_ID: 'As-099G',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.2',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Notifications_Data = [\r\n  // {\r\n  //   user: 'John Smith' ,\r\n  //   message: 'subscriptione_created',\r\n  //   created_at: 'Aug 7th, 2023'\r\n  // }\r\n];\r\nexport const TransactionList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const feature_types = [\r\n  { value: 1, title: 'switch' },\r\n  { value: 2, title: 'range' },\r\n  { value: 3, title: 'quantity' },\r\n  { value: 4, title: 'custom' },\r\n];\r\nexport const pricingModels = [\r\n  { value: 1, title: 'Flat fee' },\r\n  { value: 2, title: 'Per unit' },\r\n  { value: 3, title: 'Tiered' },\r\n  { value: 4, title: 'Volume' },\r\n  { value: 5, title: 'Stairstep' },\r\n];\r\nexport const periodUnit = ['Daily', 'Weekly', 'Monthly', 'Yearly'];\r\nexport const StaticRoutes = {\r\n  features: ['features'],\r\n  products: ['products'],\r\n};\r\nexport const plan_add_empty_data = [\r\n  {\r\n    titleIcon:\r\n      '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n    iconAlt: 'invoice-outline-icon',\r\n    title: 'Product Details',\r\n    subtitle:\r\n      'Please click the “Add” button below to add a new product. Once you clicked the button, you will be prompted to enter the name of product, description and additional details.',\r\n    btnTitle: 'Add product',\r\n    btnPath: '/#',\r\n  },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Pricing Plans',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new pricing plans. Once you clicked the button, you will be prompted to enter pricing and additional details.',\r\n  //   btnTitle: 'Add Pricing',\r\n  //   btnPath: '/#',\r\n  // },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Add-ons Details',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new add-on. Once you have click button, you will be prompted to select add-on.',\r\n  //   btnTitle: 'Add Add-on',\r\n  //   btnPath: '/#',\r\n  // },\r\n];\r\nexport const noProducts = [\r\n  {\r\n    heading: 'Products',\r\n    imgPath: '../../../../assets/images/empty-illustrations.png',\r\n    alt: 'no proudcts available',\r\n    subtext: 'Looking for Product',\r\n    text: \"Seems like you haven't added any Product. Start adding products by click on “Create Product” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Product',\r\n    path: '/products/create',\r\n  },\r\n];\r\nexport const noFeatures = [\r\n  {\r\n    heading: 'Features',\r\n    imgPath: '../../../../assets/images/empty-illustrations-2.png',\r\n    alt: 'no features available',\r\n    subtext: 'Looking for Features',\r\n    text: \"Seems like you haven't added any feature. Start adding feature by click on “Create Feature” button \",\r\n    showButton: true,\r\n    buttonTxt: 'Create Feature',\r\n    path: '/features/create',\r\n  },\r\n];\r\nexport const noPlans = [\r\n  {\r\n    heading: 'Plans',\r\n    imgPath: '../../../../assets/images/empty-illustrations-4.png',\r\n    alt: 'no Plans available',\r\n    subtext: 'Looking for Plans',\r\n    text: \"Seems like you haven't added any Plan. Start adding plan by click on “Create Plan” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Plan',\r\n    path: '/plans/view',\r\n  },\r\n];\r\nexport const noPageFound = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/404-page.png',\r\n    alt: 'No Page Found',\r\n    subtext: \"Oops! Why you're here?\",\r\n    text: \"We are very sorry for inconvenience. It looks like you're try to access a page that either has been deleted or never existed.\",\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const nocoupons = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noTransactions = [\r\n  {\r\n    heading: 'Transaction',\r\n    imgPath: '../../../../assets/images/empty-illustrations-5.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'NO transaction yet',\r\n    text: 'After your first transaction you will be able to view it here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const Stepper = [\r\n  {\r\n    id: 1,\r\n    title: 'Step 1',\r\n    caption: 'Plan Information',\r\n    isVisible: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Step 2',\r\n    caption: 'Add Plan Pricing',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Step 3',\r\n    caption: 'Product Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Step 4',\r\n    caption: 'Add-on Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Step 5',\r\n    caption: 'Charges',\r\n    isVisible: false,\r\n  },\r\n];\r\n",
            "properties": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "imageUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "modifiedOn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "productId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 51
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Menu",
            "id": "interface-Menu-803d92540be6a8aff87b5e214d1447548aa8dac4abbc4620d1fc823008450b64634ac11a47161491e6b1e9cb5a3b386689a0df9544602b6dec7cba288c377afe",
            "file": "src/app/shared/constants/consants.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n}\r\nexport interface Data_Type {\r\n  product_ID: string;\r\n  title: string;\r\n  description: string;\r\n  features: string[];\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface selectOptions {\r\n  value: number;\r\n  title: string;\r\n}\r\nexport interface features {\r\n  feature_id: string;\r\n  product_name: string;\r\n  feature_name: string;\r\n  description: string;\r\n  feature_type: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\n\r\nexport interface coupon {\r\n  coupon_id: string;\r\n  coupon_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Product {\r\n  productId: string;\r\n  imageUrl: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface GetProduct {\r\n  productId: string;\r\n  imageUrl: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface plansFields {\r\n  plan_ID: string;\r\n  external_name: string;\r\n  internal_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Feature {\r\n  featureId: string;\r\n  productId: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n  unit: string;\r\n  levels: [];\r\n}\r\nexport interface FeatureList {\r\n  featureId: number;\r\n  name: string;\r\n  productName: string;\r\n  levels: [];\r\n  description: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  type: string;\r\n  status: string;\r\n}\r\n\r\nexport interface GetFeature {\r\n  featureId: string;\r\n  productID: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n}\r\nexport const MENUITEMS = [\r\n  {\r\n    state: 'dashboard',\r\n    type: 'link',\r\n    name: 'Overview',\r\n    icon: 'space_dashboard',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'button',\r\n    type: 'link',\r\n    name: 'Customer',\r\n    icon: 'account_box',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'grid',\r\n    type: 'link',\r\n    name: 'Subscription',\r\n    icon: 'card_membership',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'products',\r\n    type: 'link',\r\n    name: 'Products',\r\n    icon: 'local_mall',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'features',\r\n    type: 'link',\r\n    name: 'Features',\r\n    icon: 'featured_play_list',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'plans',\r\n    type: 'link',\r\n    name: 'Plans',\r\n    icon: 'quick_reference_all',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Add Ons',\r\n    icon: 'add_notes',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'coupons',\r\n    type: 'link',\r\n    name: 'Coupons',\r\n    icon: 'confirmation_number',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'transactions',\r\n    type: 'link',\r\n    name: 'Transactions',\r\n    icon: 'compare_arrows',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: 'invoices',\r\n    type: 'link',\r\n    name: 'Invoices',\r\n    icon: 'receipt_long',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: 'logs',\r\n    type: 'link',\r\n    name: 'Logs',\r\n    icon: 'list_alt',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Menu_Headings = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Dashboard',\r\n    icon: 'settings',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Product Catalog ',\r\n    icon: 'logout',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Payment History ',\r\n    icon: 'logout',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Config_Menu = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Settings',\r\n    icon: 'settings',\r\n    category: 'Config',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'LogOut ',\r\n    icon: 'logout',\r\n    category: 'Confog',\r\n  },\r\n];\r\nexport const User_Options = [\r\n  {\r\n    path: '/user:id',\r\n    icon: 'account_circle',\r\n    name: 'My Account',\r\n    toggle: false,\r\n  },\r\n  { path: '/inbox', icon: 'inbox_outline', name: 'My Inbox', toggle: false },\r\n  { path: '', icon: 'clear_day', name: 'Dark Mode', toggle: true },\r\n  { path: '/help', icon: 'live_help', name: 'Help', toggle: false },\r\n];\r\n// Product listing\r\nexport const User_Data = [\r\n  {\r\n    id: 'random_id_1234',\r\n    product_ID: '#O365ProPlusRetail',\r\n    title: 'Microsoft Teams',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Host Online Calls', 'Unlimited Internet', 'Conference Calls'],\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_555',\r\n    product_ID: '#Or65SuperSupreme',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: [\r\n      'Unlimited Repos',\r\n      'Upto 50 Team Members',\r\n      'Host Online Calls',\r\n      'Unlimited Internet',\r\n      'Conference Calls',\r\n    ],\r\n    created_at: 'June 11th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_6969',\r\n    product_ID: '#Ow65Basic',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Conference Calls'],\r\n    created_at: 'June 18th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Features_Data = [\r\n  {\r\n    id: 'feature_id_459',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'feature_id_4591',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\n\r\nexport const Coupon_Data = [\r\n  {\r\n    id: 'coupon_id_459',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'coupon_id_460',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Plans_Data = [\r\n  {\r\n    id: 'ychvjbknk1',\r\n    plan_ID: 'As-012P',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.3',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: '1i23op1j2eo',\r\n    plan_ID: 'As-099G',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.2',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Notifications_Data = [\r\n  // {\r\n  //   user: 'John Smith' ,\r\n  //   message: 'subscriptione_created',\r\n  //   created_at: 'Aug 7th, 2023'\r\n  // }\r\n];\r\nexport const TransactionList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const feature_types = [\r\n  { value: 1, title: 'switch' },\r\n  { value: 2, title: 'range' },\r\n  { value: 3, title: 'quantity' },\r\n  { value: 4, title: 'custom' },\r\n];\r\nexport const pricingModels = [\r\n  { value: 1, title: 'Flat fee' },\r\n  { value: 2, title: 'Per unit' },\r\n  { value: 3, title: 'Tiered' },\r\n  { value: 4, title: 'Volume' },\r\n  { value: 5, title: 'Stairstep' },\r\n];\r\nexport const periodUnit = ['Daily', 'Weekly', 'Monthly', 'Yearly'];\r\nexport const StaticRoutes = {\r\n  features: ['features'],\r\n  products: ['products'],\r\n};\r\nexport const plan_add_empty_data = [\r\n  {\r\n    titleIcon:\r\n      '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n    iconAlt: 'invoice-outline-icon',\r\n    title: 'Product Details',\r\n    subtitle:\r\n      'Please click the “Add” button below to add a new product. Once you clicked the button, you will be prompted to enter the name of product, description and additional details.',\r\n    btnTitle: 'Add product',\r\n    btnPath: '/#',\r\n  },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Pricing Plans',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new pricing plans. Once you clicked the button, you will be prompted to enter pricing and additional details.',\r\n  //   btnTitle: 'Add Pricing',\r\n  //   btnPath: '/#',\r\n  // },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Add-ons Details',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new add-on. Once you have click button, you will be prompted to select add-on.',\r\n  //   btnTitle: 'Add Add-on',\r\n  //   btnPath: '/#',\r\n  // },\r\n];\r\nexport const noProducts = [\r\n  {\r\n    heading: 'Products',\r\n    imgPath: '../../../../assets/images/empty-illustrations.png',\r\n    alt: 'no proudcts available',\r\n    subtext: 'Looking for Product',\r\n    text: \"Seems like you haven't added any Product. Start adding products by click on “Create Product” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Product',\r\n    path: '/products/create',\r\n  },\r\n];\r\nexport const noFeatures = [\r\n  {\r\n    heading: 'Features',\r\n    imgPath: '../../../../assets/images/empty-illustrations-2.png',\r\n    alt: 'no features available',\r\n    subtext: 'Looking for Features',\r\n    text: \"Seems like you haven't added any feature. Start adding feature by click on “Create Feature” button \",\r\n    showButton: true,\r\n    buttonTxt: 'Create Feature',\r\n    path: '/features/create',\r\n  },\r\n];\r\nexport const noPlans = [\r\n  {\r\n    heading: 'Plans',\r\n    imgPath: '../../../../assets/images/empty-illustrations-4.png',\r\n    alt: 'no Plans available',\r\n    subtext: 'Looking for Plans',\r\n    text: \"Seems like you haven't added any Plan. Start adding plan by click on “Create Plan” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Plan',\r\n    path: '/plans/view',\r\n  },\r\n];\r\nexport const noPageFound = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/404-page.png',\r\n    alt: 'No Page Found',\r\n    subtext: \"Oops! Why you're here?\",\r\n    text: \"We are very sorry for inconvenience. It looks like you're try to access a page that either has been deleted or never existed.\",\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const nocoupons = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noTransactions = [\r\n  {\r\n    heading: 'Transaction',\r\n    imgPath: '../../../../assets/images/empty-illustrations-5.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'NO transaction yet',\r\n    text: 'After your first transaction you will be able to view it here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const Stepper = [\r\n  {\r\n    id: 1,\r\n    title: 'Step 1',\r\n    caption: 'Plan Information',\r\n    isVisible: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Step 2',\r\n    caption: 'Add Plan Pricing',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Step 3',\r\n    caption: 'Product Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Step 4',\r\n    caption: 'Add-on Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Step 5',\r\n    caption: 'Charges',\r\n    isVisible: false,\r\n  },\r\n];\r\n",
            "properties": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "menuOptions",
            "id": "interface-menuOptions-a46901ee8de1b483fc7df57718afeb0f100134ed147bef35da32af540077a14156d78a1e136732b16519b3021b6370dba77fe41238bf680484e0078a65f7d739",
            "file": "src/app/modules/features/components/edit-feature/edit-feature.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CdkTextareaAutosize } from '@angular/cdk/text-field';\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport {\r\n  FormArray,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { ProductsService } from 'src/app/modules/products/services/products.service';\r\nimport {\r\n  Data_Type,\r\n  feature_types,\r\n  User_Data,\r\n} from 'src/app/shared/constants/consants';\r\nimport { FeatureService } from '../../services/feature.service';\r\n\r\nexport interface menuOptions {\r\n  value: number;\r\n  title: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-edit-feature',\r\n  templateUrl: './edit-feature.component.html',\r\n  styleUrls: ['./edit-feature.component.scss'],\r\n})\r\nexport class EditFeatureComponent {\r\n  featureType: menuOptions[] = feature_types;\r\n  subscription: Subscription;\r\n  isUnlimited: boolean = false;\r\n  preName: string = '';\r\n  postName: string = '';\r\n  position: any;\r\n  unlimitedButtonLabel: string = 'Set Unlimited';\r\n  PageNumber = 1;\r\n  limit = 5;\r\n  search: string = '';\r\n  productId = [];\r\n  featureForm: any = this.formBuilder.group({\r\n    featureId: [null, Validators.required],\r\n    productID: [null, Validators.required],\r\n    name: ['', Validators.required],\r\n    description: ['', Validators.required],\r\n    type: ['', Validators.required],\r\n    unit: [null, Validators.required],\r\n    status: [false],\r\n    levels: this.formBuilder.array([\r\n      this.formBuilder.group({\r\n        isUnlimited: [false],\r\n        value: ['', Validators.required],\r\n        name: ['', Validators.required],\r\n      }),\r\n      this.formBuilder.group({\r\n        isUnlimited: [false],\r\n        value: ['', Validators.required],\r\n        name: ['', Validators.required],\r\n      }),\r\n    ]),\r\n  });\r\n\r\n  @ViewChild('autosize') autosize: CdkTextareaAutosize;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private featureService: FeatureService,\r\n    private routes: Router,\r\n    private route: ActivatedRoute,\r\n    private productService: ProductsService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.productService\r\n      .getProducts(this.PageNumber, this.limit, this.search)\r\n      .subscribe((data) => {\r\n        this.productId = data.map((res) => res.productId);\r\n      });\r\n    const id = this.route.snapshot.params['id'];\r\n\r\n    this.featureService.getFeatureById(id).subscribe((data) => {\r\n      console.log(\"a\", data);\r\n      \r\n      this.updateForm(data);\r\n    });\r\n  }\r\n\r\n  get levels() {\r\n    return this.featureForm.controls['levels'] as FormArray;\r\n  }\r\n  getLevelList(index: number) {\r\n    const levelList = this.levels.at(index) as FormGroup;\r\n    return levelList;\r\n  }\r\n  addLevels() {\r\n    this.position = this.levels.controls.length - 1;\r\n    this.levels.insert(\r\n      this.position,\r\n      this.formBuilder.group({\r\n        isUnlimited: [false],\r\n        value: ['', Validators.required],\r\n        name: ['', Validators.required],\r\n      })\r\n    );\r\n  }\r\n\r\n  deleteLevels(levelIndex: number) {\r\n    this.levels.removeAt(levelIndex);\r\n  }\r\n  toggleUnlimited() {\r\n    this.position = this.levels.controls.length - 1;\r\n    const lastLevel = this.getLevelList(this.position);\r\n    this.postName = this.featureForm.value.unit;\r\n    if (this.isUnlimited) {\r\n      lastLevel.patchValue({\r\n        value: '',\r\n        name: '',\r\n      });\r\n      this.unlimitedButtonLabel = 'Set Unlimited';\r\n    } else {\r\n      lastLevel.patchValue({\r\n        isUnlimited: true,\r\n        value: 'Unlimited',\r\n        name: 'Unlimited' + ' ' + this.postName,\r\n      });\r\n      this.unlimitedButtonLabel = 'Set Custom Maximum';\r\n    }\r\n    this.isUnlimited = !this.isUnlimited;\r\n  }\r\n\r\n  setName(index: number) {\r\n    this.postName = this.featureForm.value.unit;\r\n    this.preName = this.featureForm.value.levels[index].value;\r\n    const displayName = this.preName + ' ' + this.postName + 's';\r\n    const currentIndex = this.getLevelList(index);\r\n    currentIndex.patchValue({\r\n      name: displayName,\r\n    });\r\n  }\r\n\r\n  updateForm(res: any) {\r\n    this.featureForm.setValue({\r\n      featureId: res.featureId,\r\n      productID: res.product.productId,\r\n      name: res.name,\r\n      description: res.description,\r\n      type: res.type,\r\n      status: res.status,\r\n      unit: res.unit || null,\r\n      levels: res.levels\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.levels.controls.forEach((ele, index) => {\r\n      if (!ele.get('level')) {\r\n        (<FormGroup>ele).addControl('level', new FormControl(index));\r\n      } else {\r\n        ele.get('level').setValue(index);\r\n      }\r\n    });\r\n\r\n    const status = this.featureForm.value.status ? 'active' : 'disabled';\r\n    const feature = {\r\n      ...this.featureForm.value,\r\n      status: status,\r\n    };\r\n\r\n    this.subscription = this.featureService\r\n      .updateFeature(this.featureForm.value.featureId, feature)\r\n      .subscribe({\r\n        next: (res: any) => {\r\n          this.routes.navigate([`/features/view/${res.featureId}`]);\r\n          return res;\r\n        },\r\n        error: (err: any) => {\r\n          console.log('something wrong occured', err);\r\n        },\r\n      });\r\n  }\r\n\r\n  onDelete() {\r\n    this.routes.navigate(['/features']);\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "menuOptions",
            "id": "interface-menuOptions-fa987a69a8e19f057a6c160213f4e16591e55dc09a3c47f5432dda66967ef521c4e8d650eb741966e6b97ec70c6df6fe3704e5ee3b17f0cab917f278ff1743e4-1",
            "file": "src/app/modules/features/components/create-feature/create-feature.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ChangeDetectionStrategy, Component, ViewChild } from '@angular/core';\r\nimport { CdkTextareaAutosize } from '@angular/cdk/text-field';\r\nimport {\r\n  Data_Type,\r\n  User_Data,\r\n  feature_types,\r\n} from 'src/app/shared/constants/consants';\r\nimport {\r\n  FormArray,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport getUniqueId from 'src/app/core/utils/functions/getUniqueId';\r\nimport { FeatureService } from '../../services/feature.service';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { ProductsService } from 'src/app/modules/products/services/products.service';\r\n\r\nexport interface menuOptions {\r\n  value: number;\r\n  title: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-create-feature',\r\n  templateUrl: './create-feature.component.html',\r\n  styleUrls: ['./create-feature.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CreateFeatureComponent {\r\n  productName: Data_Type[] = User_Data;\r\n  featureType: menuOptions[] = feature_types;\r\n  subscription: Subscription;\r\n  isUnlimited: boolean = false;\r\n  preName: string = '';\r\n  postName: string = '';\r\n  position: any;\r\n  unlimitedButtonLabel: string = 'Set Unlimited';\r\n  PageNumber = 1;\r\n  limit = 5;\r\n  search: string = '';\r\n  productArray = [];\r\n  id: string;\r\n\r\n  public featureForm: FormGroup | null;\r\n  @ViewChild('autosize') autosize: CdkTextareaAutosize;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private featureService: FeatureService,\r\n    private routes: Router,\r\n    private productService: ProductsService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.id = this.productService.getId();\r\n\r\n    this.productService\r\n      .getProducts(this.PageNumber, this.limit, this.search)\r\n      .subscribe((data) => {\r\n        this.productArray = data.map((res) => res.productId);\r\n      });\r\n    this.feature();\r\n  }\r\n\r\n  feature() {\r\n    this.featureForm = this.formBuilder.group({\r\n      featureId: ['', Validators.required],\r\n      productID: [this.id ? this.id : '', Validators.required],\r\n      name: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n      type: ['', Validators.required],\r\n      unit: ['', Validators.required],\r\n      status: [false],\r\n      levels: this.formBuilder.array([\r\n        this.formBuilder.group({\r\n          isUnlimited: [false],\r\n          value: ['', Validators.required],\r\n          name: ['', Validators.required],\r\n        }),\r\n        this.formBuilder.group({\r\n          isUnlimited: [false],\r\n          value: ['', Validators.required],\r\n          name: ['', Validators.required],\r\n        }),\r\n      ]),\r\n    });\r\n  }\r\n\r\n  get levels() {\r\n    return this.featureForm.controls['levels'] as FormArray;\r\n  }\r\n  getLevelList(index: number) {\r\n    const levelList = this.levels.at(index) as FormGroup;\r\n    return levelList;\r\n  }\r\n  addLevels() {\r\n    this.position = this.levels.controls.length - 1;\r\n    this.levels.insert(\r\n      this.position,\r\n      this.formBuilder.group({\r\n        isUnlimited: [false],\r\n        value: ['', Validators.required],\r\n        name: ['', Validators.required],\r\n      })\r\n    );\r\n  }\r\n\r\n  deleteLevels(levelIndex: number) {\r\n    this.levels.removeAt(levelIndex);\r\n  }\r\n  toggleUnlimited() {\r\n    this.position = this.levels.controls.length - 1;\r\n    const lastLevel = this.getLevelList(this.position);\r\n    this.postName = this.featureForm.value.unit;\r\n    if (this.isUnlimited) {\r\n      lastLevel.patchValue({\r\n        value: '',\r\n        name: '',\r\n      });\r\n      this.unlimitedButtonLabel = 'Set Unlimited';\r\n    } else {\r\n      lastLevel.patchValue({\r\n        isUnlimited: true,\r\n        value: 'Unlimited',\r\n        name: 'Unlimited' + ' ' + this.postName,\r\n      });\r\n      this.unlimitedButtonLabel = 'Set Custom Maximum';\r\n    }\r\n    this.isUnlimited = !this.isUnlimited;\r\n  }\r\n\r\n  setName(index: number) {\r\n    this.postName = this.featureForm.value.unit;\r\n    this.preName = this.featureForm.value.levels[index].value;\r\n    const displayName = this.preName + ' ' + this.postName + 's';\r\n    const currentIndex = this.getLevelList(index);\r\n    currentIndex.patchValue({\r\n      name: displayName,\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.levels.controls.forEach((ele, index) => {\r\n      if (!ele.get('level')) {\r\n        (<FormGroup>ele).addControl('level', new FormControl(index));\r\n      } else {\r\n        ele.get('level').setValue(index);\r\n      }\r\n    });\r\n\r\n    const status = this.featureForm.value.status ? 'active' : 'disabled';\r\n    const feature = {\r\n      ...this.featureForm.value,\r\n      status: status,\r\n    };\r\n    console.log('feature', feature);\r\n\r\n    this.subscription = this.featureService.addFeature(feature).subscribe({\r\n      next: (res: any) => {\r\n        this.routes.navigate([`/features/view/${res.featureId}`]);\r\n        return res;\r\n      },\r\n      error: (err: any) => {\r\n        console.log('something wrong occured', err);\r\n      },\r\n    });\r\n  }\r\n\r\n  onDelete() {\r\n    this.routes.navigate(['/features']);\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "menuOptions-1"
        },
        {
            "name": "PeriodicElement",
            "id": "interface-PeriodicElement-c34e61ecad8706afa8492a10ab6dc187d4555e7906cb7d8d10b92e790e82489ae58026779c76fdb8cc8fc887ae479ced00c832ad1ed14a79c00265ff6df4ff52",
            "file": "src/app/modules/features/components/view-feature/view-feature.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FeatureService } from '../../services/feature.service';\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  weight: number;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  { name: 'Hydrogen', weight: 1.0079 },\r\n  { name: 'Helium', weight: 4.0026 },\r\n];\r\n\r\nconst FEATURE_TYPE = 'custom';\r\n\r\n@Component({\r\n  selector: 'app-view-feature',\r\n  templateUrl: './view-feature.component.html',\r\n  styleUrls: ['./view-feature.component.scss'],\r\n})\r\nexport class ViewFeatureComponent implements OnInit {\r\n  displayedColumns: string[] = ['name', 'weight'];\r\n  dataSource = ELEMENT_DATA;\r\n  featureTypes = FEATURE_TYPE;\r\n  clickedRows = new Set<PeriodicElement>();\r\n  featureDetails: any;\r\n  productName: string;\r\n  productStatus: string;\r\n  productId: string;\r\n  featureName: string;\r\n  featureType: string;\r\n  description: string;\r\n  unit: string;\r\n  status: string;\r\n  id: string;\r\n  levelsArray: any = [];\r\n  isUnlimited: string;\r\n  displayName: string;\r\n  displayNameArray: any = [];\r\n  level: number;\r\n  value: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  featureId: string;\r\n\r\n  constructor(\r\n    private featureService: FeatureService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.id = this.route.snapshot.params['id'];\r\n    this.featureService.getFeatureById(this.id).subscribe((res) => {\r\n      this.featureDetails = res;\r\n\r\n      this.featureName = this.featureDetails?.name;\r\n      this.featureId = this.featureDetails?.featureId;\r\n      this.featureType = this.featureDetails?.type;\r\n      this.status = this.featureDetails?.status;\r\n      this.description = this.featureDetails?.description;\r\n      this.unit = this.featureDetails?.unit;\r\n      this.productId = this.featureDetails?.product.productId;\r\n      this.productName = this.featureDetails?.product.name;\r\n      this.productStatus = this.featureDetails?.product.status;\r\n      this.createdOn = this.featureDetails?.createdOn;\r\n      this.modifiedOn = this.featureDetails?.modifiedOn;\r\n      this.levelsArray = Object.values(this.featureDetails?.levels);\r\n      this.levelsArray.forEach((data: any, index: number) => {\r\n        this.isUnlimited = data.isUnlimited;\r\n        this.displayName = data.name;\r\n        this.level = data.level;\r\n        this.value = data.value;\r\n        this.displayNameArray[index] = this.displayName;\r\n      });\r\n    });\r\n  }\r\n\r\n  editFeature() {\r\n    this.router.navigate([`/features/edit-feature/${this.id}`]);\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "weight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "PeriodicElement",
            "id": "interface-PeriodicElement-1215067d1a8730b32651809b178a609e325ab6d5227e1ddfcc9f262f1c5ebc2c0bebc724421fff58d432d05d5ca17fcb4258b8e8e5e4216cf1cc4b2c96630ada-1",
            "file": "src/app/modules/plans/components/add-ons-details/add-ons-details.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FeatureDetailsPopupComponent } from 'src/app/shared/components/dialog-box/feature-details-popup/feature-details-popup.component';\r\nimport { plan_add_empty_data } from 'src/app/shared/constants/consants';\r\n\r\n\r\nexport interface PeriodicElement {\r\n  id: string,\r\n  name: string;\r\n  status: string;\r\n  Product: number | string;\r\n  type: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  { id:'element123456', name: 'Host online calls', status: \"Active\",Product: 'Microsoft Teams', type: 'Switch' },\r\n  {  id:'element1234', name: 'Union all information', status: \"Active\",Product: 'Microsoft Teams', type: 'Range' },\r\n  {  id:'element12', name: 'Create team sites', status: \"Active\",Product: 'Microsoft Teams', type: 'Custom' },\r\n];\r\n@Component({\r\n  selector: 'app-add-ons-details',\r\n  templateUrl: './add-ons-details.component.html',\r\n  styleUrls: ['./add-ons-details.component.scss']\r\n})\r\nexport class AddOnsDetailsComponent {\r\n  planAddEmptyData = plan_add_empty_data;\r\n  constructor(public dialog: MatDialog) {}\r\n  selected = 'option1';\r\n  displayedColumns: string[] = [\r\n    'select',\r\n    'name',\r\n    'status',     \r\n    'Product',\r\n    'type',\r\n  ];\r\n  dataSource: any =  ELEMENT_DATA;\r\n  selection = new SelectionModel<PeriodicElement>(true, []);\r\n\r\n  openPopup(){\r\n    this.dialog.open(FeatureDetailsPopupComponent, {\r\n    });\r\n  }\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  toggleAllRows() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n\r\n    this.selection.select(...this.dataSource);\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: PeriodicElement): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row `;\r\n  }\r\n\r\n  selectedRow(selectedID: string, event: any) {\r\n    const selectedRow = document.getElementById(`${selectedID}`);\r\n    if (selectedRow != null) {\r\n      selectedRow.classList.toggle('selected-row');\r\n    }\r\n    event.stopPropagation();\r\n  }\r\n  selectAll(data: any[]) {\r\n    if (this.isAllSelected()) {\r\n      data.map((element: any) => {\r\n        document.getElementById(element.id)?.classList.add('selected-row');\r\n      });\r\n    } else {\r\n      data.map((element: any) => {\r\n        document.getElementById(element.id)?.classList.remove('selected-row');\r\n      });\r\n    }\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "Product",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "PeriodicElement-1"
        },
        {
            "name": "PeriodicElement",
            "id": "interface-PeriodicElement-333f1fd16d697d4d22bd85f3119a187afa5aae619850ab9e8d275948587f88dec540f7617f00fa9ad5ceec231f031f74978ea05d42b540958ecf7ce7054bb5b6-2",
            "file": "src/app/modules/plans/components/create-plan/create-plan.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, ViewChild, ElementRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FeatureDetailsPopupComponent } from 'src/app/shared/components/dialog-box/feature-details-popup/feature-details-popup.component';\r\nimport {\r\n  Stepper,\r\n  plan_add_empty_data,\r\n} from 'src/app/shared/constants/consants';\r\n\r\nexport interface PeriodicElement {\r\n  PricingCycle: string;\r\n  Price: any;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  { PricingCycle: 'Daily', Price: 'Set Price' },\r\n  { PricingCycle: 'Weekly', Price: 'Set Price' },\r\n  { PricingCycle: 'Monthly', Price: 'Set Price' },\r\n  { PricingCycle: 'Yearly', Price: 'Set Price' },\r\n];\r\n\r\n@Component({\r\n  selector: 'app-create-plan',\r\n  templateUrl: './create-plan.component.html',\r\n  styleUrls: ['./create-plan.component.scss'],\r\n})\r\nexport class CreatePlanComponent {\r\n  planAddEmptyData = plan_add_empty_data;\r\n  stepsTitle = Stepper;\r\n  displayedColumns: string[] = ['PricingCycle', 'Price'];\r\n  dataSource = ELEMENT_DATA;\r\n  clickedRows = new Set<PeriodicElement>();\r\n  testId: string;\r\n\r\n  @ViewChild('step1') step1: ElementRef;\r\n  @ViewChild('step2') step2: ElementRef;\r\n  @ViewChild('step3') step3: ElementRef;\r\n  @ViewChild('step4') step4: ElementRef;\r\n  @ViewChild('step5') step5: ElementRef;\r\n\r\n  constructor(public dialog: MatDialog) {}\r\n\r\n  openPopup() {\r\n    this.dialog.open(FeatureDetailsPopupComponent, {});\r\n  }\r\n  switchStepper(step: any) {\r\n    const stepId = step.id;\r\n    if (stepId === 1) {\r\n      this.step1.nativeElement.scrollIntoView({ behavior: 'smooth' });\r\n    } else if (stepId === 2) {\r\n      this.step2.nativeElement.scrollIntoView({ behavior: 'smooth' });\r\n    } else if (stepId === 3) {\r\n      this.step3.nativeElement.scrollIntoView({ behavior: 'smooth' });\r\n    } else if (stepId === 4) {\r\n      this.step4.nativeElement.scrollIntoView({ behavior: 'smooth' });\r\n    } else if (stepId === 5) {\r\n      this.step5.nativeElement.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n    // const element = this.step3.nativeElement;\r\n    // window.scrollTo({\r\n    //   top: element.offsetTop,\r\n    //   behavior: 'smooth'\r\n    // })\r\n  }\r\n  arr = [\r\n    {\r\n      step: 'step1',\r\n      id: 'cdk-step-label-0-0',\r\n      attributeValue: 'false',\r\n    },\r\n    {\r\n      step: 'step2',\r\n      id: 'cdk-step-label-0-1',\r\n      attributeValue: 'false',\r\n    },\r\n    {\r\n      step: 'step3',\r\n      id: 'cdk-step-label-0-2',\r\n      attributeValue: 'false',\r\n    },\r\n    {\r\n      step: 'step4',\r\n      id: 'cdk-step-label-0-3',\r\n      attributeValue: 'false',\r\n    },\r\n    {\r\n      step: 'step5',\r\n      id: 'cdk-step-label-0-4',\r\n      attributeValue: 'false',\r\n    },\r\n  ];\r\n  ngAfterViewInit() {\r\n    // Initialize Intersection Observer\r\n    const observer = new IntersectionObserver((entries, observer) => {\r\n      let findCurrent = entries.find((ele) => ele.isIntersecting == true);\r\n      if (findCurrent) {\r\n        this.testId = String(findCurrent.target.id);\r\n        this.arr.forEach((ele) => {\r\n          if (ele.step == this.testId) {\r\n            document\r\n              .getElementById(ele.id)\r\n              ?.setAttribute('aria-selected', 'true');\r\n          } else {\r\n            document\r\n              .getElementById(ele.id)\r\n              ?.setAttribute('aria-selected', ele.attributeValue);\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    // Start observing the element\r\n    const testArr = [\r\n      this.step1,\r\n      this.step2,\r\n      this.step3,\r\n      this.step4,\r\n      this.step5,\r\n    ];\r\n    testArr.forEach((element: any) => {\r\n      observer.observe(element.nativeElement);\r\n      //   console.log(this.testBool, element, element.nativeElement, 'testst')\r\n      //   if (this.testBool) {\r\n      //     const activeStep = document.getElementById('#1')?.classList.add('active')\r\n      //   }\r\n    });\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "Price",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "PricingCycle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "PeriodicElement-2"
        },
        {
            "name": "PeriodicElement",
            "id": "interface-PeriodicElement-6e49e1d7e83d223f6a4a2bbc54f7004b6e19e65e1e8a67264250f93e8c5ba1ba269e6f49d9ccb26891cc6dacb5e37f725fbce9ffc041ab848492acbb844d4923-3",
            "file": "src/app/modules/plans/components/product-details/product-details.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  position: number | string;\r\n  status: string;\r\n  symbol: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  { position: 'Whiteboard', name: 'Hydrogen', status: \"Active\", symbol: 'Available' },\r\n  { position: 'Email support', name: 'Custom', status: \"Active\", symbol: 'Available' },\r\n  { position: 'Whiteboard', name: 'Hydrogen', status: \"Active\", symbol: 'Available' },\r\n  { position: 'Email support', name: 'Custom', status: \"Active\", symbol: 'Available' },\r\n  { position: 'Whiteboard', name: 'Hydrogen', status: \"Active\", symbol: 'Available' },\r\n  { position: 'Email support', name: 'Custom', status: \"Active\", symbol: 'Available' },\r\n  { position: 'Whiteboard', name: 'Hydrogen', status: \"Active\", symbol: 'Available' },\r\n  { position: 'Email support', name: 'Custom', status: \"Active\", symbol: 'Available' },\r\n  { position: 'Whiteboard', name: 'Hydrogen', status: \"Active\", symbol: 'Available' },\r\n  { position: 'Email support', name: 'Custom', status: \"Active\", symbol: 'Available' },\r\n];\r\n\r\n@Component({\r\n  selector: 'app-product-details',\r\n  templateUrl: './product-details.component.html',\r\n  styleUrls: ['./product-details.component.scss'],\r\n})\r\nexport class ProductDetailsComponent {\r\n  selected = 'option1';\r\n  displayedColumns: string[] = [\r\n    'select',\r\n    'position',\r\n    'name',\r\n    'status',     \r\n    'symbol',\r\n  ];\r\n  dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\r\n  selection = new SelectionModel<PeriodicElement>(true, []);\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  toggleAllRows() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n\r\n    this.selection.select(...this.dataSource.data);\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: PeriodicElement): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row `;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "symbol",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 3,
            "duplicateName": "PeriodicElement-3"
        },
        {
            "name": "PeriodicElement",
            "id": "interface-PeriodicElement-e2b854e73187fbc5e90d430a7df8000997f191d8aaf88750a4c212dfff3fe16d5a172afd1854a36c1026b4f716df17c2d05362674e33e1c0311b7b2b1604fd11-4",
            "file": "src/app/modules/plans/components/view-plans/view-plans.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\nexport interface PeriodicElement {\r\n  PricingCycle: string;\r\n  Price: any;\r\n  Currency: any;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  { Currency: '', PricingCycle: 'Daily', Price: '$100/Unit' },\r\n  { Currency: '', PricingCycle: 'Weekly', Price: '$100/Unit' },\r\n  { Currency: '', PricingCycle: 'Monthly', Price: '$100/Unit' },\r\n  { Currency: '', PricingCycle: 'Yearly', Price: '$100/Unit' },\r\n];\r\n\r\n@Component({\r\n  selector: 'app-view-plans',\r\n  templateUrl: './view-plans.component.html',\r\n  styleUrls: ['./view-plans.component.scss'],\r\n})\r\nexport class ViewPlansComponent {\r\n  displayedColumns: string[] = ['Currency', 'PricingCycle', 'Price'];\r\n  dataSource = ELEMENT_DATA;\r\n  clickedRows = new Set<PeriodicElement>();\r\n  panelOpenState = false;\r\n  toggle() {\r\n    this.panelOpenState = !this.panelOpenState;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "Currency",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "Price",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "PricingCycle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 4,
            "duplicateName": "PeriodicElement-4"
        },
        {
            "name": "plansFields",
            "id": "interface-plansFields-803d92540be6a8aff87b5e214d1447548aa8dac4abbc4620d1fc823008450b64634ac11a47161491e6b1e9cb5a3b386689a0df9544602b6dec7cba288c377afe",
            "file": "src/app/shared/constants/consants.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n}\r\nexport interface Data_Type {\r\n  product_ID: string;\r\n  title: string;\r\n  description: string;\r\n  features: string[];\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface selectOptions {\r\n  value: number;\r\n  title: string;\r\n}\r\nexport interface features {\r\n  feature_id: string;\r\n  product_name: string;\r\n  feature_name: string;\r\n  description: string;\r\n  feature_type: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\n\r\nexport interface coupon {\r\n  coupon_id: string;\r\n  coupon_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Product {\r\n  productId: string;\r\n  imageUrl: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface GetProduct {\r\n  productId: string;\r\n  imageUrl: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface plansFields {\r\n  plan_ID: string;\r\n  external_name: string;\r\n  internal_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Feature {\r\n  featureId: string;\r\n  productId: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n  unit: string;\r\n  levels: [];\r\n}\r\nexport interface FeatureList {\r\n  featureId: number;\r\n  name: string;\r\n  productName: string;\r\n  levels: [];\r\n  description: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  type: string;\r\n  status: string;\r\n}\r\n\r\nexport interface GetFeature {\r\n  featureId: string;\r\n  productID: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n}\r\nexport const MENUITEMS = [\r\n  {\r\n    state: 'dashboard',\r\n    type: 'link',\r\n    name: 'Overview',\r\n    icon: 'space_dashboard',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'button',\r\n    type: 'link',\r\n    name: 'Customer',\r\n    icon: 'account_box',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'grid',\r\n    type: 'link',\r\n    name: 'Subscription',\r\n    icon: 'card_membership',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'products',\r\n    type: 'link',\r\n    name: 'Products',\r\n    icon: 'local_mall',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'features',\r\n    type: 'link',\r\n    name: 'Features',\r\n    icon: 'featured_play_list',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'plans',\r\n    type: 'link',\r\n    name: 'Plans',\r\n    icon: 'quick_reference_all',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Add Ons',\r\n    icon: 'add_notes',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'coupons',\r\n    type: 'link',\r\n    name: 'Coupons',\r\n    icon: 'confirmation_number',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'transactions',\r\n    type: 'link',\r\n    name: 'Transactions',\r\n    icon: 'compare_arrows',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: 'invoices',\r\n    type: 'link',\r\n    name: 'Invoices',\r\n    icon: 'receipt_long',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: 'logs',\r\n    type: 'link',\r\n    name: 'Logs',\r\n    icon: 'list_alt',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Menu_Headings = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Dashboard',\r\n    icon: 'settings',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Product Catalog ',\r\n    icon: 'logout',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Payment History ',\r\n    icon: 'logout',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Config_Menu = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Settings',\r\n    icon: 'settings',\r\n    category: 'Config',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'LogOut ',\r\n    icon: 'logout',\r\n    category: 'Confog',\r\n  },\r\n];\r\nexport const User_Options = [\r\n  {\r\n    path: '/user:id',\r\n    icon: 'account_circle',\r\n    name: 'My Account',\r\n    toggle: false,\r\n  },\r\n  { path: '/inbox', icon: 'inbox_outline', name: 'My Inbox', toggle: false },\r\n  { path: '', icon: 'clear_day', name: 'Dark Mode', toggle: true },\r\n  { path: '/help', icon: 'live_help', name: 'Help', toggle: false },\r\n];\r\n// Product listing\r\nexport const User_Data = [\r\n  {\r\n    id: 'random_id_1234',\r\n    product_ID: '#O365ProPlusRetail',\r\n    title: 'Microsoft Teams',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Host Online Calls', 'Unlimited Internet', 'Conference Calls'],\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_555',\r\n    product_ID: '#Or65SuperSupreme',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: [\r\n      'Unlimited Repos',\r\n      'Upto 50 Team Members',\r\n      'Host Online Calls',\r\n      'Unlimited Internet',\r\n      'Conference Calls',\r\n    ],\r\n    created_at: 'June 11th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_6969',\r\n    product_ID: '#Ow65Basic',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Conference Calls'],\r\n    created_at: 'June 18th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Features_Data = [\r\n  {\r\n    id: 'feature_id_459',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'feature_id_4591',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\n\r\nexport const Coupon_Data = [\r\n  {\r\n    id: 'coupon_id_459',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'coupon_id_460',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Plans_Data = [\r\n  {\r\n    id: 'ychvjbknk1',\r\n    plan_ID: 'As-012P',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.3',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: '1i23op1j2eo',\r\n    plan_ID: 'As-099G',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.2',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Notifications_Data = [\r\n  // {\r\n  //   user: 'John Smith' ,\r\n  //   message: 'subscriptione_created',\r\n  //   created_at: 'Aug 7th, 2023'\r\n  // }\r\n];\r\nexport const TransactionList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const feature_types = [\r\n  { value: 1, title: 'switch' },\r\n  { value: 2, title: 'range' },\r\n  { value: 3, title: 'quantity' },\r\n  { value: 4, title: 'custom' },\r\n];\r\nexport const pricingModels = [\r\n  { value: 1, title: 'Flat fee' },\r\n  { value: 2, title: 'Per unit' },\r\n  { value: 3, title: 'Tiered' },\r\n  { value: 4, title: 'Volume' },\r\n  { value: 5, title: 'Stairstep' },\r\n];\r\nexport const periodUnit = ['Daily', 'Weekly', 'Monthly', 'Yearly'];\r\nexport const StaticRoutes = {\r\n  features: ['features'],\r\n  products: ['products'],\r\n};\r\nexport const plan_add_empty_data = [\r\n  {\r\n    titleIcon:\r\n      '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n    iconAlt: 'invoice-outline-icon',\r\n    title: 'Product Details',\r\n    subtitle:\r\n      'Please click the “Add” button below to add a new product. Once you clicked the button, you will be prompted to enter the name of product, description and additional details.',\r\n    btnTitle: 'Add product',\r\n    btnPath: '/#',\r\n  },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Pricing Plans',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new pricing plans. Once you clicked the button, you will be prompted to enter pricing and additional details.',\r\n  //   btnTitle: 'Add Pricing',\r\n  //   btnPath: '/#',\r\n  // },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Add-ons Details',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new add-on. Once you have click button, you will be prompted to select add-on.',\r\n  //   btnTitle: 'Add Add-on',\r\n  //   btnPath: '/#',\r\n  // },\r\n];\r\nexport const noProducts = [\r\n  {\r\n    heading: 'Products',\r\n    imgPath: '../../../../assets/images/empty-illustrations.png',\r\n    alt: 'no proudcts available',\r\n    subtext: 'Looking for Product',\r\n    text: \"Seems like you haven't added any Product. Start adding products by click on “Create Product” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Product',\r\n    path: '/products/create',\r\n  },\r\n];\r\nexport const noFeatures = [\r\n  {\r\n    heading: 'Features',\r\n    imgPath: '../../../../assets/images/empty-illustrations-2.png',\r\n    alt: 'no features available',\r\n    subtext: 'Looking for Features',\r\n    text: \"Seems like you haven't added any feature. Start adding feature by click on “Create Feature” button \",\r\n    showButton: true,\r\n    buttonTxt: 'Create Feature',\r\n    path: '/features/create',\r\n  },\r\n];\r\nexport const noPlans = [\r\n  {\r\n    heading: 'Plans',\r\n    imgPath: '../../../../assets/images/empty-illustrations-4.png',\r\n    alt: 'no Plans available',\r\n    subtext: 'Looking for Plans',\r\n    text: \"Seems like you haven't added any Plan. Start adding plan by click on “Create Plan” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Plan',\r\n    path: '/plans/view',\r\n  },\r\n];\r\nexport const noPageFound = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/404-page.png',\r\n    alt: 'No Page Found',\r\n    subtext: \"Oops! Why you're here?\",\r\n    text: \"We are very sorry for inconvenience. It looks like you're try to access a page that either has been deleted or never existed.\",\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const nocoupons = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noTransactions = [\r\n  {\r\n    heading: 'Transaction',\r\n    imgPath: '../../../../assets/images/empty-illustrations-5.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'NO transaction yet',\r\n    text: 'After your first transaction you will be able to view it here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const Stepper = [\r\n  {\r\n    id: 1,\r\n    title: 'Step 1',\r\n    caption: 'Plan Information',\r\n    isVisible: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Step 2',\r\n    caption: 'Add Plan Pricing',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Step 3',\r\n    caption: 'Product Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Step 4',\r\n    caption: 'Add-on Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Step 5',\r\n    caption: 'Charges',\r\n    isVisible: false,\r\n  },\r\n];\r\n",
            "properties": [
                {
                    "name": "created_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "external_name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "internal_name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "plan_ID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 59
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Product",
            "id": "interface-Product-803d92540be6a8aff87b5e214d1447548aa8dac4abbc4620d1fc823008450b64634ac11a47161491e6b1e9cb5a3b386689a0df9544602b6dec7cba288c377afe",
            "file": "src/app/shared/constants/consants.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n}\r\nexport interface Data_Type {\r\n  product_ID: string;\r\n  title: string;\r\n  description: string;\r\n  features: string[];\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface selectOptions {\r\n  value: number;\r\n  title: string;\r\n}\r\nexport interface features {\r\n  feature_id: string;\r\n  product_name: string;\r\n  feature_name: string;\r\n  description: string;\r\n  feature_type: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\n\r\nexport interface coupon {\r\n  coupon_id: string;\r\n  coupon_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Product {\r\n  productId: string;\r\n  imageUrl: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface GetProduct {\r\n  productId: string;\r\n  imageUrl: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface plansFields {\r\n  plan_ID: string;\r\n  external_name: string;\r\n  internal_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Feature {\r\n  featureId: string;\r\n  productId: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n  unit: string;\r\n  levels: [];\r\n}\r\nexport interface FeatureList {\r\n  featureId: number;\r\n  name: string;\r\n  productName: string;\r\n  levels: [];\r\n  description: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  type: string;\r\n  status: string;\r\n}\r\n\r\nexport interface GetFeature {\r\n  featureId: string;\r\n  productID: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n}\r\nexport const MENUITEMS = [\r\n  {\r\n    state: 'dashboard',\r\n    type: 'link',\r\n    name: 'Overview',\r\n    icon: 'space_dashboard',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'button',\r\n    type: 'link',\r\n    name: 'Customer',\r\n    icon: 'account_box',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'grid',\r\n    type: 'link',\r\n    name: 'Subscription',\r\n    icon: 'card_membership',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'products',\r\n    type: 'link',\r\n    name: 'Products',\r\n    icon: 'local_mall',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'features',\r\n    type: 'link',\r\n    name: 'Features',\r\n    icon: 'featured_play_list',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'plans',\r\n    type: 'link',\r\n    name: 'Plans',\r\n    icon: 'quick_reference_all',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Add Ons',\r\n    icon: 'add_notes',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'coupons',\r\n    type: 'link',\r\n    name: 'Coupons',\r\n    icon: 'confirmation_number',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'transactions',\r\n    type: 'link',\r\n    name: 'Transactions',\r\n    icon: 'compare_arrows',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: 'invoices',\r\n    type: 'link',\r\n    name: 'Invoices',\r\n    icon: 'receipt_long',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: 'logs',\r\n    type: 'link',\r\n    name: 'Logs',\r\n    icon: 'list_alt',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Menu_Headings = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Dashboard',\r\n    icon: 'settings',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Product Catalog ',\r\n    icon: 'logout',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Payment History ',\r\n    icon: 'logout',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Config_Menu = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Settings',\r\n    icon: 'settings',\r\n    category: 'Config',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'LogOut ',\r\n    icon: 'logout',\r\n    category: 'Confog',\r\n  },\r\n];\r\nexport const User_Options = [\r\n  {\r\n    path: '/user:id',\r\n    icon: 'account_circle',\r\n    name: 'My Account',\r\n    toggle: false,\r\n  },\r\n  { path: '/inbox', icon: 'inbox_outline', name: 'My Inbox', toggle: false },\r\n  { path: '', icon: 'clear_day', name: 'Dark Mode', toggle: true },\r\n  { path: '/help', icon: 'live_help', name: 'Help', toggle: false },\r\n];\r\n// Product listing\r\nexport const User_Data = [\r\n  {\r\n    id: 'random_id_1234',\r\n    product_ID: '#O365ProPlusRetail',\r\n    title: 'Microsoft Teams',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Host Online Calls', 'Unlimited Internet', 'Conference Calls'],\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_555',\r\n    product_ID: '#Or65SuperSupreme',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: [\r\n      'Unlimited Repos',\r\n      'Upto 50 Team Members',\r\n      'Host Online Calls',\r\n      'Unlimited Internet',\r\n      'Conference Calls',\r\n    ],\r\n    created_at: 'June 11th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_6969',\r\n    product_ID: '#Ow65Basic',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Conference Calls'],\r\n    created_at: 'June 18th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Features_Data = [\r\n  {\r\n    id: 'feature_id_459',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'feature_id_4591',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\n\r\nexport const Coupon_Data = [\r\n  {\r\n    id: 'coupon_id_459',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'coupon_id_460',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Plans_Data = [\r\n  {\r\n    id: 'ychvjbknk1',\r\n    plan_ID: 'As-012P',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.3',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: '1i23op1j2eo',\r\n    plan_ID: 'As-099G',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.2',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Notifications_Data = [\r\n  // {\r\n  //   user: 'John Smith' ,\r\n  //   message: 'subscriptione_created',\r\n  //   created_at: 'Aug 7th, 2023'\r\n  // }\r\n];\r\nexport const TransactionList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const feature_types = [\r\n  { value: 1, title: 'switch' },\r\n  { value: 2, title: 'range' },\r\n  { value: 3, title: 'quantity' },\r\n  { value: 4, title: 'custom' },\r\n];\r\nexport const pricingModels = [\r\n  { value: 1, title: 'Flat fee' },\r\n  { value: 2, title: 'Per unit' },\r\n  { value: 3, title: 'Tiered' },\r\n  { value: 4, title: 'Volume' },\r\n  { value: 5, title: 'Stairstep' },\r\n];\r\nexport const periodUnit = ['Daily', 'Weekly', 'Monthly', 'Yearly'];\r\nexport const StaticRoutes = {\r\n  features: ['features'],\r\n  products: ['products'],\r\n};\r\nexport const plan_add_empty_data = [\r\n  {\r\n    titleIcon:\r\n      '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n    iconAlt: 'invoice-outline-icon',\r\n    title: 'Product Details',\r\n    subtitle:\r\n      'Please click the “Add” button below to add a new product. Once you clicked the button, you will be prompted to enter the name of product, description and additional details.',\r\n    btnTitle: 'Add product',\r\n    btnPath: '/#',\r\n  },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Pricing Plans',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new pricing plans. Once you clicked the button, you will be prompted to enter pricing and additional details.',\r\n  //   btnTitle: 'Add Pricing',\r\n  //   btnPath: '/#',\r\n  // },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Add-ons Details',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new add-on. Once you have click button, you will be prompted to select add-on.',\r\n  //   btnTitle: 'Add Add-on',\r\n  //   btnPath: '/#',\r\n  // },\r\n];\r\nexport const noProducts = [\r\n  {\r\n    heading: 'Products',\r\n    imgPath: '../../../../assets/images/empty-illustrations.png',\r\n    alt: 'no proudcts available',\r\n    subtext: 'Looking for Product',\r\n    text: \"Seems like you haven't added any Product. Start adding products by click on “Create Product” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Product',\r\n    path: '/products/create',\r\n  },\r\n];\r\nexport const noFeatures = [\r\n  {\r\n    heading: 'Features',\r\n    imgPath: '../../../../assets/images/empty-illustrations-2.png',\r\n    alt: 'no features available',\r\n    subtext: 'Looking for Features',\r\n    text: \"Seems like you haven't added any feature. Start adding feature by click on “Create Feature” button \",\r\n    showButton: true,\r\n    buttonTxt: 'Create Feature',\r\n    path: '/features/create',\r\n  },\r\n];\r\nexport const noPlans = [\r\n  {\r\n    heading: 'Plans',\r\n    imgPath: '../../../../assets/images/empty-illustrations-4.png',\r\n    alt: 'no Plans available',\r\n    subtext: 'Looking for Plans',\r\n    text: \"Seems like you haven't added any Plan. Start adding plan by click on “Create Plan” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Plan',\r\n    path: '/plans/view',\r\n  },\r\n];\r\nexport const noPageFound = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/404-page.png',\r\n    alt: 'No Page Found',\r\n    subtext: \"Oops! Why you're here?\",\r\n    text: \"We are very sorry for inconvenience. It looks like you're try to access a page that either has been deleted or never existed.\",\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const nocoupons = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noTransactions = [\r\n  {\r\n    heading: 'Transaction',\r\n    imgPath: '../../../../assets/images/empty-illustrations-5.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'NO transaction yet',\r\n    text: 'After your first transaction you will be able to view it here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const Stepper = [\r\n  {\r\n    id: 1,\r\n    title: 'Step 1',\r\n    caption: 'Plan Information',\r\n    isVisible: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Step 2',\r\n    caption: 'Add Plan Pricing',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Step 3',\r\n    caption: 'Product Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Step 4',\r\n    caption: 'Add-on Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Step 5',\r\n    caption: 'Charges',\r\n    isVisible: false,\r\n  },\r\n];\r\n",
            "properties": [
                {
                    "name": "createdOn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "imageUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "modifiedOn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "productId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 43
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "selectOptions",
            "id": "interface-selectOptions-803d92540be6a8aff87b5e214d1447548aa8dac4abbc4620d1fc823008450b64634ac11a47161491e6b1e9cb5a3b386689a0df9544602b6dec7cba288c377afe",
            "file": "src/app/shared/constants/consants.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n}\r\nexport interface Data_Type {\r\n  product_ID: string;\r\n  title: string;\r\n  description: string;\r\n  features: string[];\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface selectOptions {\r\n  value: number;\r\n  title: string;\r\n}\r\nexport interface features {\r\n  feature_id: string;\r\n  product_name: string;\r\n  feature_name: string;\r\n  description: string;\r\n  feature_type: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\n\r\nexport interface coupon {\r\n  coupon_id: string;\r\n  coupon_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Product {\r\n  productId: string;\r\n  imageUrl: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface GetProduct {\r\n  productId: string;\r\n  imageUrl: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n}\r\nexport interface plansFields {\r\n  plan_ID: string;\r\n  external_name: string;\r\n  internal_name: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\nexport interface Feature {\r\n  featureId: string;\r\n  productId: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n  unit: string;\r\n  levels: [];\r\n}\r\nexport interface FeatureList {\r\n  featureId: number;\r\n  name: string;\r\n  productName: string;\r\n  levels: [];\r\n  description: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  type: string;\r\n  status: string;\r\n}\r\n\r\nexport interface GetFeature {\r\n  featureId: string;\r\n  productID: string;\r\n  modifiedOn: string;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  status: string;\r\n}\r\nexport const MENUITEMS = [\r\n  {\r\n    state: 'dashboard',\r\n    type: 'link',\r\n    name: 'Overview',\r\n    icon: 'space_dashboard',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'button',\r\n    type: 'link',\r\n    name: 'Customer',\r\n    icon: 'account_box',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'grid',\r\n    type: 'link',\r\n    name: 'Subscription',\r\n    icon: 'card_membership',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'products',\r\n    type: 'link',\r\n    name: 'Products',\r\n    icon: 'local_mall',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'features',\r\n    type: 'link',\r\n    name: 'Features',\r\n    icon: 'featured_play_list',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'plans',\r\n    type: 'link',\r\n    name: 'Plans',\r\n    icon: 'quick_reference_all',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Add Ons',\r\n    icon: 'add_notes',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'coupons',\r\n    type: 'link',\r\n    name: 'Coupons',\r\n    icon: 'confirmation_number',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'transactions',\r\n    type: 'link',\r\n    name: 'Transactions',\r\n    icon: 'compare_arrows',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: 'invoices',\r\n    type: 'link',\r\n    name: 'Invoices',\r\n    icon: 'receipt_long',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: 'logs',\r\n    type: 'link',\r\n    name: 'Logs',\r\n    icon: 'list_alt',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Menu_Headings = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Dashboard',\r\n    icon: 'settings',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Product Catalog ',\r\n    icon: 'logout',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Payment History ',\r\n    icon: 'logout',\r\n    category: 'Payment History',\r\n  },\r\n];\r\nexport const Config_Menu = [\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Settings',\r\n    icon: 'settings',\r\n    category: 'Config',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'LogOut ',\r\n    icon: 'logout',\r\n    category: 'Confog',\r\n  },\r\n];\r\nexport const User_Options = [\r\n  {\r\n    path: '/user:id',\r\n    icon: 'account_circle',\r\n    name: 'My Account',\r\n    toggle: false,\r\n  },\r\n  { path: '/inbox', icon: 'inbox_outline', name: 'My Inbox', toggle: false },\r\n  { path: '', icon: 'clear_day', name: 'Dark Mode', toggle: true },\r\n  { path: '/help', icon: 'live_help', name: 'Help', toggle: false },\r\n];\r\n// Product listing\r\nexport const User_Data = [\r\n  {\r\n    id: 'random_id_1234',\r\n    product_ID: '#O365ProPlusRetail',\r\n    title: 'Microsoft Teams',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Host Online Calls', 'Unlimited Internet', 'Conference Calls'],\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_555',\r\n    product_ID: '#Or65SuperSupreme',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: [\r\n      'Unlimited Repos',\r\n      'Upto 50 Team Members',\r\n      'Host Online Calls',\r\n      'Unlimited Internet',\r\n      'Conference Calls',\r\n    ],\r\n    created_at: 'June 11th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_6969',\r\n    product_ID: '#Ow65Basic',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Conference Calls'],\r\n    created_at: 'June 18th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Features_Data = [\r\n  {\r\n    id: 'feature_id_459',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'feature_id_4591',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\n\r\nexport const Coupon_Data = [\r\n  {\r\n    id: 'coupon_id_459',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'coupon_id_460',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Plans_Data = [\r\n  {\r\n    id: 'ychvjbknk1',\r\n    plan_ID: 'As-012P',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.3',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: '1i23op1j2eo',\r\n    plan_ID: 'As-099G',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.2',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n];\r\nexport const Notifications_Data = [\r\n  // {\r\n  //   user: 'John Smith' ,\r\n  //   message: 'subscriptione_created',\r\n  //   created_at: 'Aug 7th, 2023'\r\n  // }\r\n];\r\nexport const TransactionList = [\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n];\r\nexport const feature_types = [\r\n  { value: 1, title: 'switch' },\r\n  { value: 2, title: 'range' },\r\n  { value: 3, title: 'quantity' },\r\n  { value: 4, title: 'custom' },\r\n];\r\nexport const pricingModels = [\r\n  { value: 1, title: 'Flat fee' },\r\n  { value: 2, title: 'Per unit' },\r\n  { value: 3, title: 'Tiered' },\r\n  { value: 4, title: 'Volume' },\r\n  { value: 5, title: 'Stairstep' },\r\n];\r\nexport const periodUnit = ['Daily', 'Weekly', 'Monthly', 'Yearly'];\r\nexport const StaticRoutes = {\r\n  features: ['features'],\r\n  products: ['products'],\r\n};\r\nexport const plan_add_empty_data = [\r\n  {\r\n    titleIcon:\r\n      '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n    iconAlt: 'invoice-outline-icon',\r\n    title: 'Product Details',\r\n    subtitle:\r\n      'Please click the “Add” button below to add a new product. Once you clicked the button, you will be prompted to enter the name of product, description and additional details.',\r\n    btnTitle: 'Add product',\r\n    btnPath: '/#',\r\n  },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Pricing Plans',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new pricing plans. Once you clicked the button, you will be prompted to enter pricing and additional details.',\r\n  //   btnTitle: 'Add Pricing',\r\n  //   btnPath: '/#',\r\n  // },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Add-ons Details',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new add-on. Once you have click button, you will be prompted to select add-on.',\r\n  //   btnTitle: 'Add Add-on',\r\n  //   btnPath: '/#',\r\n  // },\r\n];\r\nexport const noProducts = [\r\n  {\r\n    heading: 'Products',\r\n    imgPath: '../../../../assets/images/empty-illustrations.png',\r\n    alt: 'no proudcts available',\r\n    subtext: 'Looking for Product',\r\n    text: \"Seems like you haven't added any Product. Start adding products by click on “Create Product” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Product',\r\n    path: '/products/create',\r\n  },\r\n];\r\nexport const noFeatures = [\r\n  {\r\n    heading: 'Features',\r\n    imgPath: '../../../../assets/images/empty-illustrations-2.png',\r\n    alt: 'no features available',\r\n    subtext: 'Looking for Features',\r\n    text: \"Seems like you haven't added any feature. Start adding feature by click on “Create Feature” button \",\r\n    showButton: true,\r\n    buttonTxt: 'Create Feature',\r\n    path: '/features/create',\r\n  },\r\n];\r\nexport const noPlans = [\r\n  {\r\n    heading: 'Plans',\r\n    imgPath: '../../../../assets/images/empty-illustrations-4.png',\r\n    alt: 'no Plans available',\r\n    subtext: 'Looking for Plans',\r\n    text: \"Seems like you haven't added any Plan. Start adding plan by click on “Create Plan” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Plan',\r\n    path: '/plans/view',\r\n  },\r\n];\r\nexport const noPageFound = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/404-page.png',\r\n    alt: 'No Page Found',\r\n    subtext: \"Oops! Why you're here?\",\r\n    text: \"We are very sorry for inconvenience. It looks like you're try to access a page that either has been deleted or never existed.\",\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const nocoupons = [\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n];\r\nexport const noTransactions = [\r\n  {\r\n    heading: 'Transaction',\r\n    imgPath: '../../../../assets/images/empty-illustrations-5.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'NO transaction yet',\r\n    text: 'After your first transaction you will be able to view it here.',\r\n    showButton: false,\r\n  },\r\n];\r\nexport const Stepper = [\r\n  {\r\n    id: 1,\r\n    title: 'Step 1',\r\n    caption: 'Plan Information',\r\n    isVisible: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Step 2',\r\n    caption: 'Add Plan Pricing',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Step 3',\r\n    caption: 'Product Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Step 4',\r\n    caption: 'Add-on Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Step 5',\r\n    caption: 'Charges',\r\n    isVisible: false,\r\n  },\r\n];\r\n",
            "properties": [
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Task",
            "id": "interface-Task-f7ac941ae6bfa47d2ef8849da3665b21871fcd4e0a24af87aa1397bd42213da937cedc1571c2aff880b96efe936ed23ff87b832e8a9f9dc05c364f86d252704b",
            "file": "src/stories/softobiz-ui/Checkbox/checkbox.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, ViewEncapsulation, Input } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material/core';\r\n\r\nexport interface Task {\r\n  name: string;\r\n  completed: boolean;\r\n  color: ThemePalette;\r\n  subtasks?: Task[];\r\n}\r\n\r\n@Component({\r\n  selector: 'sft-check-box',\r\n  templateUrl: './checkbox.component.html',\r\n  styleUrls: ['./checkbox.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class CheckboxComponent {\r\n\r\n  @Input() task: string = '';\r\n\r\n  //Checkbox label\r\n  @Input() label: string = '';\r\n\r\n  //Whether the checkbox is disabled.\r\n  @Input() disable = false;\r\n\r\n  //Whether the checkbox is checked.\r\n  @Input() checked: boolean = false;\r\n  \r\n  //Theme color palette for the component\r\n  @Input() color: ThemePalette;\r\n\r\n  //Whether ripples are disabled\r\n  @Input() disableRipple: boolean = false;\r\n\r\n  //Whether the checkbox is indeterminate\r\n  @Input() indeterminate: boolean = false;\r\n\r\n  // Whether the label should appear after or before the checkbox. Defaults to 'after'\r\n  @Input() labelPosition: 'before' | 'after' = 'after';\r\n\r\n}\r\n",
            "properties": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ThemePalette",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "completed",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "subtasks",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Task[]",
                    "optional": true,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        },
        {
            "name": "ValidityElement",
            "id": "interface-ValidityElement-bdc75da5c4e4173faa05551b7c9da2fa80314d84e76516573caeb6af31fdc11fddec013becd54ef4f2346726c3f138684f1c3c94ef1e04a8aadd8c54d132337b",
            "file": "src/app/modules/coupons/components/view-coupons/view-coupons.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\nexport interface DiscountElement {\r\n  Discount : string;\r\n  Amount: any;\r\n}\r\nexport interface DurationElement {\r\n  Duration : string;\r\n  time: any;\r\n}\r\n\r\nexport interface ValidityElement {\r\n  Validity : string;\r\n  time: any;\r\n}\r\n\r\nconst ELEMENT_DATA: DiscountElement[] = [\r\n  {  Discount : 'Discount Type', Amount: 'Fixed Amount' },\r\n  { Discount : 'Applied on', Amount: 'Fixed Amount' },\r\n  {  Discount : 'Discount Type', Amount: 'Invoice Amount' },\r\n];\r\n\r\nconst Duration_DATA: DurationElement[] = [\r\n  {  Duration : 'Discount Type', time: 'Forever' },\r\n  { Duration : 'Applied on', time: 'All Plans' },\r\n  {  Duration : 'Discount Type', time: 'All Addons' },\r\n];\r\n\r\nconst Validity_DATA: ValidityElement[] = [\r\n  {  Validity : 'Valid Till', time: 'Forever' },\r\n  { Validity : 'Maximum Redemptions', time: '0 to unlimited' },\r\n];\r\n@Component({\r\n  selector: 'app-view-coupons',\r\n  templateUrl: './view-coupons.component.html',\r\n  styleUrls: ['./view-coupons.component.scss']\r\n})\r\nexport class ViewCouponsComponent {\r\n  displayedColumns: string[] = ['Discount', 'Amount'];\r\n  displayedColumns2: string[] = ['Duration','time'];\r\n  displayedColumns3: string[] = ['Validity','time'];\r\n  dataSource = ELEMENT_DATA;\r\n  dataDuration = Duration_DATA;\r\n  dataValidity = Validity_DATA;\r\n  clickedRows = new Set<DiscountElement>();\r\n}\r\n",
            "properties": [
                {
                    "name": "time",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "Validity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "CouponsService",
            "id": "injectable-CouponsService-5560d97d40a463895c02867b78f3dfed93590b08a36a608e278d70e3e8db651c3ddb2c90bce5f40771a47b4515101941a57d80638c4985d439b953714b3b23ab",
            "file": "src/app/modules/coupons/services/coupons.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CouponsService {\r\n\r\n  constructor() { }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        },
        {
            "name": "FeatureService",
            "id": "injectable-FeatureService-5d1573fc52237f310be6b1875676c34833039bd151897dd9294cb6e1491588f166ba7c8b75b428607f4517e08f280ffab0e14ba4dabf1728a7b5cae9c43c1f72",
            "file": "src/app/modules/features/services/feature.service.ts",
            "properties": [
                {
                    "name": "error$",
                    "defaultValue": "new Subject<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "feature$",
                    "defaultValue": "this.featureSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "features",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FeatureList[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "featureSubject",
                    "defaultValue": "new BehaviorSubject<any>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "addFeature",
                    "args": [
                        {
                            "name": "feature",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Feature>",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "feature",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteFeature",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getFeatureById",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<GetFeature>",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getFeatures",
                    "args": [
                        {
                            "name": "PageNumber",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<FeatureList[]>",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "PageNumber",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateFeature",
                    "args": [
                        {
                            "name": "featureId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "updatedFeature",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Feature>",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "featureId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "updatedFeature",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, catchError, map, Observable, Subject } from 'rxjs';\r\nimport {\r\n  Feature,\r\n  FeatureList,\r\n  GetFeature,\r\n} from 'src/app/shared/constants/consants';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FeatureService {\r\n  private featureSubject = new BehaviorSubject<any>(null);\r\n  public feature$ = this.featureSubject.asObservable();\r\n  features: FeatureList[] = [];\r\n  error$ = new Subject<string>();\r\n  constructor(private http: HttpClient) {}\r\n\r\n  addFeature(feature: any): Observable<Feature> {\r\n    return this.http.post(`${environment.apiUrl}`, feature).pipe(\r\n      map((res: any) => {\r\n        this.featureSubject.next(res.data);\r\n        return res.data;\r\n      }),\r\n      catchError((err) => {\r\n        this.error$.next(err.message);\r\n        throw err;\r\n      })\r\n    );\r\n  }\r\n\r\n  getFeatures(PageNumber: number, limit: number): Observable<FeatureList[]> {\r\n    return this.http\r\n\r\n      .get<any>(`${environment.featureUrl}?page=${PageNumber}&limit=${limit}`)\r\n\r\n      .pipe(\r\n        map((res) => {\r\n          this.featureSubject.next(res.data);\r\n          this.features = res.data;\r\n          return res.data;\r\n        }),\r\n        catchError((err) => {\r\n          console.log(err);\r\n          throw err;\r\n        })\r\n      );\r\n  }\r\n\r\n  deleteFeature(id: number) {\r\n    const url = `${environment.featureUrl}/{featureId}?featureId=${id}`;\r\n    return this.http.delete(url).pipe(\r\n      map((res) => {\r\n        this.features = this.features.filter(\r\n          (feature) => feature.featureId !== id\r\n        );\r\n        this.featureSubject.next(this.features);\r\n        return res;\r\n      }),\r\n      catchError((err) => {\r\n        console.log(err);\r\n        throw err;\r\n      })\r\n    );\r\n  }\r\n  getFeatureById(id: string): Observable<GetFeature> {\r\n    return this.http.get<any>(`${environment.apiUrl}/{featureId}?featureId=${id}`).pipe(\r\n      map((res) => {\r\n        this.featureSubject.next(res);\r\n        return res.data;\r\n      }),\r\n      catchError((err) => {\r\n        this.error$.next(err.message);\r\n        throw err;\r\n      })\r\n    );\r\n  }\r\n\r\n  updateFeature(featureId: string, updatedFeature: any): Observable<Feature> {\r\n    const url = `${environment.apiUrl}?featureId=${featureId}`;\r\n    return this.http.patch(url, updatedFeature).pipe(\r\n      map((res: any) => {\r\n        this.featureSubject.next(res.data);\r\n        return res.data;\r\n      }),\r\n      catchError((err) => {\r\n        this.error$.next(err.message);\r\n        throw err;\r\n      })\r\n    );\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "GlobalService",
            "id": "injectable-GlobalService-ecf9c391e233783c24c836e4da4ad213dbccc99ed6f23e80539db4271b271c27e406b5662e67464e8c55f865459b62f27b31703359e941d89db10100310346d8",
            "file": "src/app/core/services/global.service.ts",
            "properties": [
                {
                    "name": "staticRoutes",
                    "defaultValue": "StaticRoutes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methods": [
                {
                    "name": "componentDestroyed",
                    "args": [
                        {
                            "name": "component",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "component",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isRouteActive",
                    "args": [
                        {
                            "name": "routeSteps",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "routeSteps",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { ReplaySubject } from 'rxjs';\r\nimport { StaticRoutes } from 'src/app/shared/constants/consants';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class GlobalService {\r\n  staticRoutes: any = StaticRoutes;\r\n  constructor() {}\r\n\r\n  isRouteActive(routeSteps: any) {\r\n    if (routeSteps.length >= 4) {\r\n      for (let obj in this.staticRoutes) {\r\n        if (this.staticRoutes[obj].indexOf(routeSteps[3]) >= 0) {\r\n          return obj;\r\n        }\r\n\r\n        if (this.staticRoutes[obj].indexOf(routeSteps[4]) >= 0) {\r\n          return obj;\r\n        }\r\n      }\r\n      return '';\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  componentDestroyed(component: any) {\r\n    const destroyed$ = new ReplaySubject<void>(1);\r\n\r\n    if (component.subscriptionsAll) {\r\n      component.subscriptionsAll.push(destroyed$);\r\n    }\r\n    return destroyed$;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "type": "injectable"
        },
        {
            "name": "InvoicesService",
            "id": "injectable-InvoicesService-63c3c9240a15f36938894b4e4e5c2bbca915c34273f94cf6a656ceca3d2caafc7351deacfeb7859012790df8982f962b1e3d9a4fc2e327995cf54c0e87d44548",
            "file": "src/app/modules/payment-history/invoices/service/invoices.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InvoicesService {\r\n\r\n  constructor() { }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        },
        {
            "name": "LogsService",
            "id": "injectable-LogsService-526ec9ec3986144c19904ad1f79f494717eabbcc7df0a3dd9485fac11a453aa374289cb8874ee70b84d79f4e6e551322a6ff2d5fbc14e92a68654a261d8d9397",
            "file": "src/app/modules/payment-history/logs/service/logs.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LogsService {\r\n\r\n  constructor() { }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        },
        {
            "name": "ProductsService",
            "id": "injectable-ProductsService-d879984e96297bc5c1533f31ee30de248a9c7afca7060a97d8e06fb7f90a9b54fd9d2bf0dee88b2f881043bed228990905e531bcfef88e31b15abf689191717f",
            "file": "src/app/modules/products/services/products.service.ts",
            "properties": [
                {
                    "name": "error$",
                    "defaultValue": "new Subject<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "product$",
                    "defaultValue": "this.productSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "products",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "productSubject",
                    "defaultValue": "new BehaviorSubject<any>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "uploadImageSubject",
                    "defaultValue": "new BehaviorSubject<any>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "createProduct",
                    "args": [
                        {
                            "name": "product",
                            "type": "Product",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Product>",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "product",
                            "type": "Product",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteProduct",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "editProduct",
                    "args": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "updatedProduct",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Product>",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "updatedProduct",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getId",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getProductById",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<GetProduct>",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getProducts",
                    "args": [
                        {
                            "name": "PageNumber",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "search",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Product[]>",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "PageNumber",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "search",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setId",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "uploadImage",
                    "args": [
                        {
                            "name": "image",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "image",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, Subject, catchError, map } from 'rxjs';\r\nimport { GetProduct, Product } from 'src/app/shared/constants/consants';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProductsService {\r\n  private productSubject = new BehaviorSubject<any>(null);\r\n  private uploadImageSubject = new BehaviorSubject<any>(null);\r\n  public product$ = this.productSubject.asObservable();\r\n  id: string;\r\n  products: Product[] = [];\r\n  error$ = new Subject<string>();\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  createProduct(product: Product): Observable<Product> {\r\n    return this.http.post(`${environment.productData}`, product).pipe(\r\n      map((res: any) => {\r\n        this.productSubject.next(res.data);\r\n        return res.data;\r\n      }),\r\n\r\n      catchError((err) => {\r\n        console.log(err);\r\n        this.error$.next(err.message);\r\n        throw err;\r\n      })\r\n    );\r\n  }\r\n  uploadImage(image: any): Observable<any> {\r\n    return this.http.post(`${environment.uploadUrl}`, image).pipe(\r\n      map((data: any) => {\r\n        this.uploadImageSubject.next(data);\r\n        return data;\r\n      }),\r\n\r\n      catchError((err) => {\r\n        console.log(err);\r\n        this.error$.next(err.message);\r\n        throw err;\r\n      })\r\n    );\r\n  }\r\n\r\n  getProducts(\r\n    PageNumber: number,\r\n    limit: number,\r\n    search: string\r\n  ): Observable<Product[]> {\r\n    return this.http\r\n      .get<any>(\r\n        `${environment.productData}?page=${PageNumber}&limit=${limit}&search=${search}`\r\n      )\r\n      .pipe(\r\n        map((res) => {\r\n          this.productSubject.next(res.data);\r\n          this.products = res.data;\r\n          return res.data;\r\n        }),\r\n        catchError((err) => {\r\n          console.log(err);\r\n          throw err;\r\n        })\r\n      );\r\n  }\r\n  getProductById(id: string): Observable<GetProduct> {\r\n    return this.http.get<any>(`${environment.productData}/${id}`).pipe(\r\n      map((res) => {\r\n        console.log('res', res);\r\n        return res.data;\r\n      }),\r\n\r\n      catchError((err) => {\r\n        console.log(err);\r\n        throw err;\r\n      })\r\n    );\r\n  }\r\n  editProduct(productId: string, updatedProduct: any): Observable<Product> {\r\n    const url = `${environment.productData}/{productId}?productId=${productId}`;\r\n    return this.http.patch(url, updatedProduct).pipe(\r\n      map((res: any) => {\r\n        this.productSubject.next(res.data);\r\n        return res.data;\r\n      }),\r\n      catchError((err) => {\r\n        this.error$.next(err.message);\r\n        throw err;\r\n      })\r\n    );\r\n  }\r\n  deleteProduct(id: string) {\r\n    const url = `${environment.productData}/${id}?productId=${id}`;\r\n    return this.http.delete(url).pipe(\r\n      map((res) => {\r\n        this.products = this.products.filter(\r\n          (product) => product.productId !== id\r\n        );\r\n        this.productSubject.next(this.products);\r\n        return res;\r\n      }),\r\n      catchError((err) => {\r\n        console.log(err);\r\n        throw err;\r\n      })\r\n    );\r\n  }\r\n\r\n  setId(id: string) {\r\n    this.id = id;\r\n  }\r\n  getId() {\r\n    return this.id;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "TransactionsService",
            "id": "injectable-TransactionsService-8b1fc55fb97d7a613f36fe01131e62da8ef86c115941b5375e5c816493f515f7753d71185f15b7566b0a988a38f56ecd19b15a612ca4e25d6e0968ab163bd589",
            "file": "src/app/modules/payment-history/transactions/service/transactions.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TransactionsService {\r\n\r\n  constructor() { }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AddOnsDetailsComponent",
            "id": "component-AddOnsDetailsComponent-1215067d1a8730b32651809b178a609e325ab6d5227e1ddfcc9f262f1c5ebc2c0bebc724421fff58d432d05d5ca17fcb4258b8e8e5e4216cf1cc4b2c96630ada",
            "file": "src/app/modules/plans/components/add-ons-details/add-ons-details.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-add-ons-details",
            "styleUrls": [
                "./add-ons-details.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./add-ons-details.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "defaultValue": "ELEMENT_DATA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "[\r\n    'select',\r\n    'name',\r\n    'status',     \r\n    'Product',\r\n    'type',\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "planAddEmptyData",
                    "defaultValue": "plan_add_empty_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "selected",
                    "defaultValue": "'option1'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "selection",
                    "defaultValue": "new SelectionModel<PeriodicElement>(true, [])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "methodsClass": [
                {
                    "name": "checkboxLabel",
                    "args": [
                        {
                            "name": "row",
                            "type": "PeriodicElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nThe label for the checkbox on the passed row",
                    "description": "<p>The label for the checkbox on the passed row</p>\n",
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "PeriodicElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isAllSelected",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhether the number of selected elements matches the total number of rows.",
                    "description": "<p>Whether the number of selected elements matches the total number of rows.</p>\n"
                },
                {
                    "name": "openPopup",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectAll",
                    "args": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectedRow",
                    "args": [
                        {
                            "name": "selectedID",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "selectedID",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleAllRows",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSelects all rows if they are not all selected; otherwise clear selection.",
                    "description": "<p>Selects all rows if they are not all selected; otherwise clear selection.</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FeatureDetailsPopupComponent } from 'src/app/shared/components/dialog-box/feature-details-popup/feature-details-popup.component';\r\nimport { plan_add_empty_data } from 'src/app/shared/constants/consants';\r\n\r\n\r\nexport interface PeriodicElement {\r\n  id: string,\r\n  name: string;\r\n  status: string;\r\n  Product: number | string;\r\n  type: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  { id:'element123456', name: 'Host online calls', status: \"Active\",Product: 'Microsoft Teams', type: 'Switch' },\r\n  {  id:'element1234', name: 'Union all information', status: \"Active\",Product: 'Microsoft Teams', type: 'Range' },\r\n  {  id:'element12', name: 'Create team sites', status: \"Active\",Product: 'Microsoft Teams', type: 'Custom' },\r\n];\r\n@Component({\r\n  selector: 'app-add-ons-details',\r\n  templateUrl: './add-ons-details.component.html',\r\n  styleUrls: ['./add-ons-details.component.scss']\r\n})\r\nexport class AddOnsDetailsComponent {\r\n  planAddEmptyData = plan_add_empty_data;\r\n  constructor(public dialog: MatDialog) {}\r\n  selected = 'option1';\r\n  displayedColumns: string[] = [\r\n    'select',\r\n    'name',\r\n    'status',     \r\n    'Product',\r\n    'type',\r\n  ];\r\n  dataSource: any =  ELEMENT_DATA;\r\n  selection = new SelectionModel<PeriodicElement>(true, []);\r\n\r\n  openPopup(){\r\n    this.dialog.open(FeatureDetailsPopupComponent, {\r\n    });\r\n  }\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  toggleAllRows() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n\r\n    this.selection.select(...this.dataSource);\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: PeriodicElement): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row `;\r\n  }\r\n\r\n  selectedRow(selectedID: string, event: any) {\r\n    const selectedRow = document.getElementById(`${selectedID}`);\r\n    if (selectedRow != null) {\r\n      selectedRow.classList.toggle('selected-row');\r\n    }\r\n    event.stopPropagation();\r\n  }\r\n  selectAll(data: any[]) {\r\n    if (this.isAllSelected()) {\r\n      data.map((element: any) => {\r\n        document.getElementById(element.id)?.classList.add('selected-row');\r\n      });\r\n    } else {\r\n      data.map((element: any) => {\r\n        document.getElementById(element.id)?.classList.remove('selected-row');\r\n      });\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./add-ons-details.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"add-ons-details-outer  main-bg w-full h-full overflow-auto border-2 py-8 pl-11 pr-10\">\r\n    <div class=\"flex align-center justify-between mb-5\">\r\n      <div class=\"flex align-center\">\r\n        <mat-icon\r\n          class=\"material-symbols-outlined pointer\"\r\n          color=\"primary\"\r\n          [routerLink]=\"'/features'\"  \r\n          >keyboard_backspace</mat-icon\r\n        >\r\n        <span class=\"mat-h1 primary-text text-main ml-2\">Create Plan</span>\r\n      </div>\r\n      <div class=\"flex\">\r\n          <button mat-stroked-button color=\"primary\" class=\"mr-2 large\">\r\n            Dismiss\r\n          </button>\r\n          <button\r\n            mat-flat-button\r\n            color=\"primary\"\r\n            class=\"large\"\r\n            type=\"submit\"\r\n            [routerLink]=\"'/features/view'\"\r\n          >\r\n          Add\r\n          </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"flex align-center\">\r\n      <span class=\"pl-8 grey-text text-lighten-9\"> Create plan </span>\r\n      <mat-icon class=\"material-symbols-outlined mx-2 small-icon\">\r\n        chevron_right\r\n      </mat-icon>\r\n      <span class=\"shades-text text-black fw-500\">Add Add-ons</span>\r\n    </div>\r\n    <div class=\"mt-7\">\r\n      <div class=\"py-2\">\r\n        <div class=\"input-wrapper border-2\">\r\n          <div class=\"details-wrapper p-3 primary-light-bg\">\r\n            <div class=\"details-inner \">\r\n              <div class=\"flex\">\r\n                <div class=\"product-img p-2 mr-4 main-bg\">\r\n                  <img src=\"../.././../../assets/images/teams.png\" alt=\"product-img\" />\r\n              </div>\r\n              <div class=\"mt-2\">\r\n                <h6 class=\"mat-subtitle-2 font-weight-500 text-dark mb-1\">MS Team</h6>\r\n                <span class=\"mat-body-1 font-weight-500 text-dark\">3 Features included</span>\r\n                <div class=\"flex-center mt-5\">\r\n                  <mat-chip class=\"primary-light-chip white-bg mr-2 pointer\" (click)=\"openPopup()\"><span class=\"mat-body-1 text-grey-darken-7 font-weight-500  pointer\">Whiteboard  (ON)</span> </mat-chip>\r\n                  <mat-chip class=\"primary-light-chip white-bg mr-2 pointer\"><span class=\"mat-body-1 text-grey-darken-7 font-weight-500  pointer\">Email support   (All Week)</span> </mat-chip>\r\n                  <mat-chip class=\"primary-light-chip white-bg pointer\"><span class=\"mat-body-1 text-grey-darken-7 font-weight-500  pointer\">User License  (10 License)</span> </mat-chip>\r\n                </div>\r\n              </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"add-product-table pt-3 pb-3 px-3\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 text-headline-light py-2 mb-8 table-heading text-uppercase\">\r\n              Assign Addons to product\r\n            </p>\r\n            <div class=\"mb-10\">\r\n              <div class=\"flex mb-4\">\r\n                <mat-checkbox class=\"outer-checkbox\" [disableRipple]=\"true\">\r\n              </mat-checkbox>\r\n              <div class=\"ml-2\">\r\n                <h5 class=\"mb-2 text-dark mat-subtitle-2 font-weight-500\">Teamwork and communication</h5>\r\n                <p class=\"text-grey-darken-6\">It is a long established fact that a reader will be distracted by the readable content of a page.</p>\r\n              </div>\r\n              </div>\r\n              <div class=\"relative main-bg table-wrapper\">\r\n                <div class=\"table-title mb-3\">\r\n                  <h6 class=\"mb-2 text-dark mat-subtitle-2 font-weight-500\">Included Feature</h6>\r\n                </div>\r\n                <div class=\"primary-table checked-stripe-table\">\r\n                  <table mat-table [dataSource]=\"dataSource\">\r\n                    <!-- Checkbox Column -->\r\n                    <ng-container matColumnDef=\"select\">\r\n                      <th mat-header-cell *matHeaderCellDef>\r\n                        <mat-checkbox\r\n                          (click)=\"selectAll(dataSource)\"\r\n                          (change)=\"$event ? toggleAllRows() : null\"\r\n                          [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                          [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                          [aria-label]=\"checkboxLabel()\"\r\n                          [disableRipple]=\"true\"\r\n                        >\r\n                        </mat-checkbox>\r\n                      </th>\r\n                      <td mat-cell *matCellDef=\"let row\">\r\n                        <mat-checkbox\r\n                          (click)=\"$event.stopPropagation()\"\r\n                          (change)=\"$event ? selection.toggle(row) : null\"\r\n                          [checked]=\"selection.isSelected(row)\"\r\n                          [aria-label]=\"checkboxLabel(row)\"\r\n                          (click)=\"selectedRow(row.id, $event)\"\r\n                          [disableRipple]=\"true\"\r\n                        >\r\n                        </mat-checkbox>\r\n                      </td>\r\n                    </ng-container>\r\n    \r\n                    <!-- Name Column -->\r\n                    <ng-container matColumnDef=\"name\">\r\n                      <th mat-header-cell *matHeaderCellDef class=\"font-weight-500\">\r\n                        Name\r\n                      </th>\r\n                      <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\r\n                    </ng-container>\r\n    \r\n                    <!-- Weight Column -->\r\n                    <ng-container matColumnDef=\"status\">\r\n                      <th mat-header-cell *matHeaderCellDef class=\"font-weight-500\">\r\n                        Status\r\n                      </th>\r\n                      <td\r\n                        mat-cell\r\n                        *matCellDef=\"let element\"\r\n                        [ngClass]=\"element.status\"\r\n                      >\r\n                        {{ element.status }}\r\n                      </td>\r\n                    </ng-container>\r\n  \r\n                    <!-- Product Column -->\r\n                    <ng-container matColumnDef=\"Product\">\r\n                      <th mat-header-cell *matHeaderCellDef class=\"font-weight-500\">\r\n                        Product\r\n                      </th>\r\n                      <td mat-cell *matCellDef=\"let element\">\r\n                        {{ element.Product }}\r\n                      </td>\r\n                    </ng-container>\r\n    \r\n                    <!-- Symbol Column -->\r\n                    <ng-container matColumnDef=\"type\">\r\n                      <th mat-header-cell *matHeaderCellDef class=\"font-weight-500\">\r\n                        Type\r\n                      </th>\r\n                      <td mat-cell *matCellDef=\"let element\">\r\n                        {{ element.type }}\r\n                      </td>\r\n                    </ng-container>\r\n    \r\n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                    <tr\r\n                      mat-row\r\n                      *matRowDef=\"let row; columns: displayedColumns\"\r\n                      [id]=\"row.id\"\r\n                    ></tr>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"mb-10\">\r\n              <div class=\"flex mb-4\">\r\n                <mat-checkbox class=\"outer-checkbox\" [disableRipple]=\"true\">\r\n              </mat-checkbox>\r\n              <div class=\"ml-2\">\r\n                <h5 class=\"mb-2 text-dark mat-subtitle-2 font-weight-500\">Security and compliance</h5>\r\n                <p class=\"text-grey-darken-6\">It is a long established fact that a reader will be distracted by the readable content of a page.</p>\r\n              </div>\r\n              </div>\r\n              <div class=\"relative main-bg table-wrapper\">\r\n                <div class=\"table-title mb-3\">\r\n                  <h6 class=\"mb-2 text-dark mat-subtitle-2 font-weight-500\">Included Feature</h6>\r\n                </div>\r\n                <div class=\"primary-table checked-stripe-table\">\r\n                  <table mat-table [dataSource]=\"dataSource\">\r\n                    <!-- Checkbox Column -->\r\n                    <ng-container matColumnDef=\"select\">\r\n                      <th mat-header-cell *matHeaderCellDef>\r\n                        <mat-checkbox\r\n                          (click)=\"selectAll(dataSource)\"\r\n                          (change)=\"$event ? toggleAllRows() : null\"\r\n                          [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                          [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                          [aria-label]=\"checkboxLabel()\"\r\n                          [disableRipple]=\"true\"\r\n                        >\r\n                        </mat-checkbox>\r\n                      </th>\r\n                      <td mat-cell *matCellDef=\"let row\">\r\n                        <mat-checkbox\r\n                          (click)=\"$event.stopPropagation()\"\r\n                          (change)=\"$event ? selection.toggle(row) : null\"\r\n                          [checked]=\"selection.isSelected(row)\"\r\n                          [aria-label]=\"checkboxLabel(row)\"\r\n                          (click)=\"selectedRow(row.id, $event)\"\r\n                          [disableRipple]=\"true\"\r\n                        >\r\n                        </mat-checkbox>\r\n                      </td>\r\n                    </ng-container>\r\n    \r\n                    <!-- Name Column -->\r\n                    <ng-container matColumnDef=\"name\">\r\n                      <th mat-header-cell *matHeaderCellDef class=\"font-weight-500\">\r\n                        Name\r\n                      </th>\r\n                      <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\r\n                    </ng-container>\r\n    \r\n                    <!-- Weight Column -->\r\n                    <ng-container matColumnDef=\"status\">\r\n                      <th mat-header-cell *matHeaderCellDef class=\"font-weight-500\">\r\n                        Status\r\n                      </th>\r\n                      <td\r\n                        mat-cell\r\n                        *matCellDef=\"let element\"\r\n                        [ngClass]=\"element.status\"\r\n                      >\r\n                        {{ element.status }}\r\n                      </td>\r\n                    </ng-container>\r\n  \r\n                    <!-- Product Column -->\r\n                    <ng-container matColumnDef=\"Product\">\r\n                      <th mat-header-cell *matHeaderCellDef class=\"font-weight-500\">\r\n                        Product\r\n                      </th>\r\n                      <td mat-cell *matCellDef=\"let element\">\r\n                        {{ element.Product }}\r\n                      </td>\r\n                    </ng-container>\r\n    \r\n                    <!-- Symbol Column -->\r\n                    <ng-container matColumnDef=\"type\">\r\n                      <th mat-header-cell *matHeaderCellDef class=\"font-weight-500\">\r\n                        Type\r\n                      </th>\r\n                      <td mat-cell *matCellDef=\"let element\">\r\n                        {{ element.type }}\r\n                      </td>\r\n                    </ng-container>\r\n    \r\n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                    <tr\r\n                      mat-row\r\n                      *matRowDef=\"let row; columns: displayedColumns\"\r\n                      (click)=\"selection.toggle(row)\"\r\n                      [id]=\"row.id\"\r\n                    ></tr>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  "
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-56e48b47a33f2c05c3d937553185b8bdf0618132359aba52ee6872cac8fb2fab83dfd250b1874643374bde9146c5c5189046304c01135a4a0be98cad4eb15247",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'tenant-portal'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'tenant-portal';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<router-outlet></router-outlet>"
        },
        {
            "name": "Breadcrumb",
            "id": "component-Breadcrumb-aef77d9b89ccf7b31532e0192af64038ddb0790ae19495762f7adf3aeff6aff7895aff60810f9228f120c98dba5114017581bec8f057038a0d27b0698417d71e",
            "file": "src/stories/softobiz-ui/breadcrumb/breadcrumb.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sft-breadcrumb",
            "styleUrls": [
                "./breadcrumb.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./breadcrumb.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "BreadcrumbItem[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation, Input } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\n\r\n// import { ButtonVariant } from './types';\r\n\r\n@Component({\r\n  selector: 'sft-breadcrumb',\r\n  templateUrl: './breadcrumb.component.html',\r\n  styleUrls: ['./breadcrumb.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class Breadcrumb {\r\n  @Input() class: string = '';\r\n\r\n  @Input() id: string = '';\r\n\r\n  @Input() items: BreadcrumbItem[];\r\n}\r\n\r\nexport interface BreadcrumbItem {\r\n  label: string;\r\n  link?: string;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./breadcrumb.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<nav>\r\n  <ul [class]=\"'breadcrumb' + ' ' + class\">\r\n    <li *ngFor=\"let item of items; let last = last\">\r\n      <a *ngIf=\"item.link\">{{ item.label }}</a>\r\n      <span *ngIf=\"!item.link\">{{ item.label }}</span>\r\n      <mat-icon *ngIf=\"!last\" class=\"material-symbols-outlined small-icon\">\r\n        chevron_right\r\n      </mat-icon>\r\n    </li>\r\n  </ul>\r\n</nav>"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-2109969319f31ccb9ee5464f3e5993620016b462b14a04b828f8285e931bff933d08751f25169f16403c596cd919731735560c0238857d38af3e633db2b96487",
            "file": "src/stories/softobiz-ui/button/button.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sft-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHTML Aria label.\n",
                    "description": "<p>HTML Aria label.</p>\n",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHTML Aria labbeled by.\n",
                    "description": "<p>HTML Aria labbeled by.</p>\n",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "ThemePalette",
                    "decorators": []
                },
                {
                    "name": "disable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disableRipple",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "onClick",
                    "defaultValue": "'clickfuntion()'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nclickfuntion().\n",
                    "description": "<p>clickfuntion().</p>\n",
                    "line": 44,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation, Input } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material/core';\r\n// import { ButtonVariant } from './types';\r\n\r\n@Component({\r\n  selector: 'sft-button',\r\n  templateUrl: './button.component.html',\r\n  styleUrls: ['./button.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ButtonComponent {\r\n\r\n  /**\r\n   * HTML Aria label.\r\n   */\r\n  @Input() ariaLabel?: string;\r\n\r\n  /**\r\n   * HTML Aria labbeled by.\r\n   */\r\n  @Input() ariaLabelledBy?: string;\r\n\r\n  @Input() label: string = 'button';\r\n\r\n  @Input() color: ThemePalette = 'primary';\r\n\r\n  @Input() variant: any = 'default';\r\n\r\n  @Input() disable = false;\r\n\r\n  @Input() disableRipple = false;\r\n\r\n  @Input() size: string ='medium';\r\n\r\n  @Input() type: string ='';\r\n\r\n  @Input() class: string ='';\r\n  \r\n  @Input() id: string ='';\r\n  \r\n  /**\r\n   * clickfuntion().\r\n   */\r\n  @Input() onClick: string ='clickfuntion()';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button\r\n  *ngIf=\"variant === 'default'\"\r\n  [disabled]=\"disable\"\r\n  [color]=\"color\"\r\n  [disableRipple]=\"disableRipple\"\r\n  [disabled]=\"disable\"\r\n  [class]=\"size + ' ' + class\"\r\n  [id]=\"id\"\r\n  mat-button\r\n  [type]=\"type\"\r\n  (click)=\"(onClick)\"\r\n>\r\n  {{ label }}\r\n</button>\r\n<button\r\n  *ngIf=\"variant === 'raised'\"\r\n  [disabled]=\"disable\"\r\n  [color]=\"color\"\r\n  [disableRipple]=\"disableRipple\"\r\n  mat-raised-button\r\n  [class]=\"size + ' ' + class\"\r\n  [id]=\"id\"\r\n  [type]=\"type\"\r\n>\r\n  {{ label }}\r\n</button>\r\n<button\r\n  *ngIf=\"variant === 'flat'\"\r\n  mat-flat-button\r\n  [color]=\"color\"\r\n  [disableRipple]=\"disableRipple\"\r\n  [disabled]=\"disable\"\r\n  [class]=\"size + ' ' + class\"\r\n  [id]=\"id\"\r\n  [type]=\"type\"\r\n>\r\n  {{ label }}\r\n</button>\r\n<button\r\n  *ngIf=\"variant === 'stroked'\"\r\n  [disabled]=\"disable\"\r\n  [color]=\"color\"\r\n  [disableRipple]=\"disableRipple\"\r\n  [class]=\"size + ' ' + class\"\r\n  [id]=\"id\"\r\n  mat-stroked-button\r\n  [type]=\"type\"\r\n>\r\n  {{ label }}\r\n</button>\r\n<button\r\n  *ngIf=\"variant === 'icon'\"\r\n  [disabled]=\"disable\"\r\n  [color]=\"color\"\r\n  [disableRipple]=\"disableRipple\"\r\n  [class]=\"size + ' ' + class\"\r\n  [id]=\"id\"\r\n  mat-icon-button\r\n  disabled\r\n  aria-label=\"Example icon button with a open in new tab icon\"\r\n  [type]=\"type\"\r\n>\r\n  <mat-icon>open_in_new</mat-icon>\r\n</button>\r\n<button\r\n  *ngIf=\"variant === 'fab'\"\r\n  [disabled]=\"disable\"\r\n  [color]=\"color\"\r\n  [disableRipple]=\"disableRipple\"\r\n  [class]=\"size + ' ' + class\"\r\n  [id]=\"id\"\r\n  mat-fab\r\n  aria-label=\"Example icon button with a bookmark icon\"\r\n  [type]=\"type\"\r\n>\r\n  <mat-icon>bookmark</mat-icon>\r\n</button>\r\n<button\r\n  *ngIf=\"variant === 'mini-fab'\"\r\n  [disabled]=\"disable\"\r\n  [color]=\"color\"\r\n  [disableRipple]=\"disableRipple\"\r\n  [class]=\"size + ' ' + class\"\r\n  [id]=\"id\"\r\n  aria-label=\"Example icon button with a home icon\"\r\n  mat-mini-fab\r\n  [type]=\"type\"\r\n>\r\n  <mat-icon fontIcon=\"home\"></mat-icon>\r\n</button>\r\n"
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-f7ac941ae6bfa47d2ef8849da3665b21871fcd4e0a24af87aa1397bd42213da937cedc1571c2aff880b96efe936ed23ff87b832e8a9f9dc05c364f86d252704b",
            "file": "src/stories/softobiz-ui/Checkbox/checkbox.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sft-check-box",
            "styleUrls": [
                "./checkbox.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "ThemePalette",
                    "decorators": []
                },
                {
                    "name": "disable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disableRipple",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "indeterminate",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "labelPosition",
                    "defaultValue": "'after'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "\"before\" | \"after\"",
                    "decorators": []
                },
                {
                    "name": "task",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation, Input } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material/core';\r\n\r\nexport interface Task {\r\n  name: string;\r\n  completed: boolean;\r\n  color: ThemePalette;\r\n  subtasks?: Task[];\r\n}\r\n\r\n@Component({\r\n  selector: 'sft-check-box',\r\n  templateUrl: './checkbox.component.html',\r\n  styleUrls: ['./checkbox.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class CheckboxComponent {\r\n\r\n  @Input() task: string = '';\r\n\r\n  //Checkbox label\r\n  @Input() label: string = '';\r\n\r\n  //Whether the checkbox is disabled.\r\n  @Input() disable = false;\r\n\r\n  //Whether the checkbox is checked.\r\n  @Input() checked: boolean = false;\r\n  \r\n  //Theme color palette for the component\r\n  @Input() color: ThemePalette;\r\n\r\n  //Whether ripples are disabled\r\n  @Input() disableRipple: boolean = false;\r\n\r\n  //Whether the checkbox is indeterminate\r\n  @Input() indeterminate: boolean = false;\r\n\r\n  // Whether the label should appear after or before the checkbox. Defaults to 'after'\r\n  @Input() labelPosition: 'before' | 'after' = 'after';\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./checkbox.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<section class=\"example-section\">\r\n  <mat-checkbox\r\n    class=\"example-margin\"\r\n    [disabled]=\"disable\"\r\n    [checked]=\"checked\"\r\n    [disableRipple]=\"disableRipple\"\r\n    [color]=\"color\"\r\n    [label]=\"label\" \r\n    [labelPosition]=\"labelPosition\"\r\n    >{{label}}</mat-checkbox>\r\n</section>\r\n"
        },
        {
            "name": "ChipComponent",
            "id": "component-ChipComponent-76c30571627ea8c3ade484f97c966754fef3cd2926fc9bff93f3215454570503613069e16e4cf41d8abbb04d874ed6efae690f3c43092cc9eb28b8d61916e5cb",
            "file": "src/stories/softobiz-ui/Chip/chip.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sft-chip",
            "styleUrls": [
                "./chip.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./chip.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaDescription",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string | null",
                    "decorators": []
                },
                {
                    "name": "ariaLabel",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string | null",
                    "decorators": []
                },
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disableRipple",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "highlighted",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Chip'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "withIcon",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation, Input } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material/core';\r\n\r\n@Component({\r\n  selector: 'sft-chip',\r\n  templateUrl: './chip.component.html',\r\n  styleUrls: ['./chip.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ChipComponent {\r\n  @Input() label: string = 'Chip';\r\n\r\n  @Input() ariaDescription: string | null = '';\r\n\r\n  @Input() ariaLabel: string | null = '';\r\n\r\n  @Input() disableRipple: boolean = false;\r\n\r\n  @Input() disabled: boolean = false;\r\n\r\n  @Input() highlighted: boolean = true;\r\n\r\n  @Input() class: string = '';\r\n\r\n  @Input() id: string = '';\r\n\r\n  @Input() withIcon: boolean = false;\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./chip.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<!-- <mat-chip-listbox [ariaLabel]=\"ariaLabel\">\r\n  <mat-chip-option\r\n    [color]=\"color\"\r\n    [selected]=\"selected\"\r\n    [ariaDescription]=\"ariaDescription\"\r\n    [ariaLabel]=\"ariaLabel\"\r\n    [disableRipple]=\"disableRipple\"\r\n    [disabled]=\"disabled\"\r\n    [highlighted]=\"highlighted\"\r\n    [removable]=\"removable\"\r\n    [id]=\"id\"\r\n    >{{ label }}</mat-chip-option\r\n  >\r\n</mat-chip-listbox> -->\r\n<!-- <mat-chip-set class=\"example-chip\">\r\n  <mat-chip-option\r\n    [color]=\"color\"\r\n    [selected]=\"selected\"\r\n    [ariaDescription]=\"ariaDescription\"\r\n    [ariaLabel]=\"ariaLabel\"\r\n    [disableRipple]=\"disableRipple\"\r\n    [disabled]=\"disabled\"\r\n    [highlighted]=\"highlighted\"\r\n    [removable]=\"removable\"\r\n    [id]=\"id\"\r\n    [class]=\"class\"\r\n  >\r\n    {{ label }}\r\n  </mat-chip-option>\r\n</mat-chip-set> -->\r\n\r\n<mat-chip\r\n  [ariaDescription]=\"ariaDescription\"\r\n  [ariaLabel]=\"ariaLabel\"\r\n  [disableRipple]=\"disableRipple\"\r\n  [disabled]=\"disabled\"\r\n  [highlighted]=\"highlighted\"\r\n  [id]=\"id\"\r\n  [class]=\"'white-bg' + ' ' + class\"\r\n>\r\n  <mat-icon\r\n    *ngIf=\"withIcon\"\r\n    color=\"primary\"\r\n    class=\"material-symbols-outlined mr-2\"\r\n    >check</mat-icon\r\n  >\r\n  {{ label }}\r\n  <mat-icon\r\n    *ngIf=\"withIcon\"\r\n    class=\"material-symbols-outlined pointer ml-2 grey-text text-darken-8\"\r\n    >close</mat-icon\r\n  >\r\n</mat-chip>"
        },
        {
            "name": "CouponsDeleteSuccessComponent",
            "id": "component-CouponsDeleteSuccessComponent-c2c9ae466510159bb250da44b50fd6cd6a6fe1e463e32ebdbc1a8544cb5374c96f9e855ce65a50e77eb4cb7bbc0851014d8dd2f18a275d9a4acb53e6a5d4a878",
            "file": "src/app/shared/components/dialog-box/coupons-delete-success/coupons-delete-success.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-coupons-delete-success",
            "styleUrls": [
                "./coupons-delete-success.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./coupons-delete-success.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "confirmed",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialogRef<CouponsDeleteSuccessComponent>",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onCancelClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\nexport interface DialogData {\r\n  deleteId: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-coupons-delete-success',\r\n  templateUrl: './coupons-delete-success.component.html',\r\n  styleUrls: ['./coupons-delete-success.component.scss']\r\n})\r\nexport class CouponsDeleteSuccessComponent {\r\n  @Output() confirmed: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  constructor(public dialogRef: MatDialogRef<CouponsDeleteSuccessComponent>) {}\r\n\r\n  onCancelClick(): void {\r\n    this.dialogRef.close(false);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./coupons-delete-success.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<CouponsDeleteSuccessComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<CouponsDeleteSuccessComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"border-2 text-center coupons-dialog\">\r\n    <div class=\"close-dialog-icon\">\r\n        <mat-icon (click)=\"onCancelClick()\" class=\"material-symbols-outlined\">close</mat-icon>\r\n    </div>\r\n    <div class=\"mb-6\">\r\n        <img src=\"../../../../../assets/images/coupons-delete-success.png\" alt=\"coupons-delete-success\">\r\n    </div>\r\n    <h1 class=\"mb-4\">Success</h1>\r\n    <span class=\"mat-body-1 mb-8 block\">User deleted successfully</span\r\n    >\r\n    <div class=\"flex-center\">\r\n      <button mat-flat-button color=\"primary\" class=\"medium ml-2\" [mat-dialog-close]=\"true\" >Okay</button>\r\n    </div>\r\n  </div>\r\n  \r\n"
        },
        {
            "name": "CouponsListingComponent",
            "id": "component-CouponsListingComponent-8b86c07dd9409e1e30786230061459bf2f2b46a93c89ab45bd23e5476ac1843b21f7848601f3da22a54f26036d77a4db89e031937f6229197776436d88c21ceb",
            "file": "src/app/modules/coupons/components/coupons-listing/coupons-listing.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-coupons-listing",
            "styleUrls": [
                "./coupons-listing.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./coupons-listing.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "couponsData",
                    "defaultValue": "Coupon_Data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "coupon[]",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "[\r\n    'select',\r\n    'coupon_id',\r\n    'coupon_name',\r\n    'description',\r\n    'created_at',\r\n    'status',\r\n    'action',\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "emptyCoupons",
                    "defaultValue": "nocoupons",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "selection",
                    "defaultValue": "new SelectionModel<coupon>(true, [])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "announceSortChange",
                    "args": [
                        {
                            "name": "sortState",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nAnnounce the change in sort state for assistive technology.",
                    "description": "<p>Announce the change in sort state for assistive technology.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "sortState",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "checkboxLabel",
                    "args": [
                        {
                            "name": "row",
                            "type": "coupon",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nThe label for the checkbox on the passed row",
                    "description": "<p>The label for the checkbox on the passed row</p>\n",
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "coupon",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isAllSelected",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhether the number of selected elements matches the total number of rows.",
                    "description": "<p>Whether the number of selected elements matches the total number of rows.</p>\n"
                },
                {
                    "name": "openDelete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectAll",
                    "args": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectedRow",
                    "args": [
                        {
                            "name": "selectedID",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "selectedID",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sendElementId",
                    "args": [
                        {
                            "name": "elementId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "elementId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleAllRows",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSelects all rows if they are not all selected; otherwise clear selection.",
                    "description": "<p>Selects all rows if they are not all selected; otherwise clear selection.</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { DeleteConfirmationComponent } from 'src/app/shared/components/dialog-box/delete-confirmation/delete-confirmation.component';\r\n\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport {\r\n  Data_Type,\r\n  Coupon_Data,\r\n  coupon,\r\n  nocoupons,\r\n} from 'src/app/shared/constants/consants';\r\n\r\n@Component({\r\n  selector: 'app-coupons-listing',\r\n  templateUrl: './coupons-listing.component.html',\r\n  styleUrls: ['./coupons-listing.component.scss'],\r\n})\r\nexport class CouponsListingComponent {\r\n  displayedColumns: string[] = [\r\n    'select',\r\n    'coupon_id',\r\n    'coupon_name',\r\n    'description',\r\n    'created_at',\r\n    'status',\r\n    'action',\r\n  ];\r\n  couponsData: coupon[] = Coupon_Data;\r\n  selection = new SelectionModel<coupon>(true, []);\r\n  emptyCoupons = nocoupons;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  dialogRef: any;\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.couponsData.length;\r\n    return numSelected === numRows;\r\n  }\r\n  constructor(\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    public dialog: MatDialog\r\n  ) {}\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  toggleAllRows() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n    // console.log(this.selection.select)\r\n    this.selection.select(...this.couponsData);\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?:coupon): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${\r\n      row.coupon_id + 1\r\n    }`;\r\n  }\r\n\r\n  // ngAfterViewInit() {\r\n  //   this.featuresData.sort = this.sort;\r\n  // }\r\n\r\n  /** Announce the change in sort state for assistive technology. */\r\n  announceSortChange(sortState: Sort) {\r\n    // This example uses English messages. If your application supports\r\n    // multiple language, you would internationalize these strings.\r\n    // Furthermore, you can customize the message to add additional\r\n    // details about the values being sorted.\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n  selectedRow(selectedID: string, event: any) {\r\n    const selectedRow = document.getElementById(`${selectedID}`);\r\n    if (selectedRow != null) {\r\n      selectedRow.classList.toggle('selected-row');\r\n    }\r\n    event.stopPropagation();\r\n  }\r\n  selectAll(data: any[]) {\r\n    if (this.isAllSelected()) {\r\n      data.map((element: any) => {\r\n        document.getElementById(element.id)?.classList.add('selected-row');\r\n      });\r\n    } else {\r\n      data.map((element: any) => {\r\n        document.getElementById(element.id)?.classList.remove('selected-row');\r\n      });\r\n    }\r\n  }\r\n  sendElementId(elementId: string) {\r\n    console.log(elementId);\r\n  }\r\n  openDelete(id: any) {\r\n    this.dialogRef = this.dialog.open(DeleteConfirmationComponent, {\r\n      width: '422px',\r\n      panelClass: 'dialog-curved',\r\n    });\r\n\r\n    this.dialogRef.afterClosed().subscribe((res: any) => {\r\n      if (res) {\r\n        console.log(res);\r\n\r\n        this.sendElementId(id);\r\n      } else {\r\n        console.log('Delete canceled');\r\n      }\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./coupons-listing.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_liveAnnouncer",
                        "type": "LiveAnnouncer",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 41,
                "jsdoctags": [
                    {
                        "name": "_liveAnnouncer",
                        "type": "LiveAnnouncer",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div\r\n  *ngIf=\"couponsData.length == 0\"\r\n  class=\"relative main-bg border-2 w-full h-full p-7 overflow-scroll\"\r\n>\r\n  <app-empty-listing [items]=\"emptyCoupons\"></app-empty-listing>\r\n</div>\r\n<div\r\n  *ngIf=\"couponsData.length > 0\"\r\n  class=\"relative main-bg border-2 w-full h-full py-6 pl-5 pr-6 overflow-scroll\"\r\n>\r\n  <div class=\"flex justify-between align-center px-1\">\r\n    <div class=\"flex align-center\">\r\n      <h1 class=\"text-text text-dark\">Coupons</h1>\r\n      <mat-chip class=\"chip-dark ml-3\">\r\n        {{ couponsData.length }}\r\n      </mat-chip>\r\n    </div>\r\n    <div class=\"flex align-center\">\r\n      <div class=\"global-search light mr-2 border-1\">\r\n        <span class=\"search-icon pointer\">\r\n          <img\r\n            src=\"../../../../assets/images/icons/search.svg\"\r\n            alt=\"search-icon\"\r\n          />\r\n        </span>\r\n        <input type=\"text\" placeholder=\"Search anything...\" />\r\n      </div>\r\n      <button mat-flat-button color=\"primary\" class=\"create-btn\" [routerLink]=\"'/coupons/create'\">\r\n        <mat-icon class=\"material-symbols-outlined m-0 white-text\"\r\n          >add_circle</mat-icon\r\n        >\r\n        <span class=\"text-nowrap block ml-2 letter-spacing-0\"\r\n          >Create Coupon</span\r\n        >\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"primary-table overflow-visible mt-8 px-1 pb-2\">\r\n    <table\r\n      mat-table\r\n      [dataSource]=\"couponsData\"\r\n      matSort\r\n      (matSortChange)=\"announceSortChange($event)\"\r\n    >\r\n      <!--- Note that these columns can be defined in any order.\r\n                The actual rendered columns are set as a property on the row definition\" -->\r\n      <ng-container matColumnDef=\"select\">\r\n        <th mat-header-cell *matHeaderCellDef>\r\n          <mat-checkbox\r\n            color=\"primary\"\r\n            (click)=\"selectAll(couponsData)\"\r\n            (change)=\"$event ? toggleAllRows() : null\"\r\n            [checked]=\"selection.hasValue() && isAllSelected()\"\r\n            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n            [aria-label]=\"checkboxLabel()\"\r\n          >\r\n          </mat-checkbox>\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let row\">\r\n          <mat-checkbox\r\n            color=\"primary\"\r\n            (click)=\"selectedRow(row.id, $event)\"\r\n            (change)=\"$event ? selection.toggle(row) : null\"\r\n            [checked]=\"selection.isSelected(row)\"\r\n            [aria-label]=\"checkboxLabel(row)\"\r\n          >\r\n          </mat-checkbox>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- ID Column -->\r\n      <ng-container matColumnDef=\"coupon_id\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>#Coupon ID</th>\r\n        <td mat-cell *matCellDef=\"let element\">{{ element.coupon_id }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Product Name Column -->\r\n      <ng-container matColumnDef=\"coupon_name\">\r\n        <th\r\n          mat-header-cell\r\n          *matHeaderCellDef\r\n          mat-sort-header\r\n          sortActionDescription=\"Sort by title\"\r\n        >\r\n        Coupon Name\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let element\">{{ element.coupon_name }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Description Column -->\r\n      <ng-container matColumnDef=\"description\">\r\n        <th mat-header-cell *matHeaderCellDef>Description</th>\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element\"\r\n          class=\"description-col td-ellipsis\"\r\n          [ngxTippy]=\"fullDescription\"\r\n          [tippyProps]=\"{ placement: 'right', interactive: true }\"\r\n          tippyName=\"content2\"\r\n        >\r\n          <p>{{ element.description }}</p>\r\n          <ng-template #fullDescription let-name class=\"t-template\">\r\n            <div class=\"help-info-tooltip\">\r\n              <div class=\"heading-with-background\">Description</div>\r\n              <p class=\"py-3 black-text\">{{ element.description }}</p>\r\n              <button mat-button color=\"primary\" class=\"px-0\">\r\n                Learn more\r\n              </button>\r\n            </div>\r\n          </ng-template>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Created Date Column -->\r\n      <ng-container matColumnDef=\"created_at\">\r\n        <th mat-header-cell *matHeaderCellDef>Created On</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          {{ element.created_at }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Created Date Column -->\r\n      <ng-container matColumnDef=\"status\">\r\n        <th mat-header-cell *matHeaderCellDef>Status</th>\r\n        <td mat-cell *matCellDef=\"let element\" [ngClass]=\"element.status\">\r\n          {{ element.status }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Created Date Column -->\r\n      <ng-container matColumnDef=\"action\">\r\n        <th mat-header-cell *matHeaderCellDef class=\"text-right\">Action</th>\r\n        <td mat-cell *matCellDef=\"let element\" class=\"text-right\">\r\n          <mat-icon\r\n            class=\"material-symbols-outlined\"\r\n            [matMenuTriggerFor]=\"actionsMenu\"\r\n          >\r\n            more_vert\r\n          </mat-icon>\r\n          <mat-menu\r\n            #actionsMenu=\"matMenu\"\r\n            class=\"actions-menu\"\r\n            backdropClass=\"edit-menu\"\r\n          >\r\n            <button mat-menu-item disableRipple>Edit</button>\r\n            <button\r\n              mat-menu-item\r\n              disableRipple\r\n              (click)=\"openDelete(element.productId)\"\r\n            >\r\n              Delete\r\n            </button>\r\n          </mat-menu>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr\r\n        mat-row\r\n        *matRowDef=\"let row; columns: displayedColumns\"\r\n        [id]=\"row.id\"\r\n      ></tr>\r\n    </table>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "CreateCouponsComponent",
            "id": "component-CreateCouponsComponent-bfd704c7db8fa4057c46bcc284ef7f9693decb52dca52c2bc999925ad2406cb000bba386eec5b98299b955c67bc4590b579ee3a638bf0a7897d3493e5df44d17",
            "file": "src/app/modules/coupons/components/create-coupons/create-coupons.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-create-coupons",
            "styleUrls": [
                "./create-coupons.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./create-coupons.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "customHeader",
                    "defaultValue": "CustomDateHeaderComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { CustomDateHeaderComponent } from 'src/app/shared/components/custom-date-header/custom-date-header.component';\r\n\r\n@Component({\r\n  selector: 'app-create-coupons',\r\n  templateUrl: './create-coupons.component.html',\r\n  styleUrls: ['./create-coupons.component.scss'],\r\n})\r\nexport class CreateCouponsComponent {\r\n  customHeader = CustomDateHeaderComponent\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./create-coupons.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"create-product-wrapper\">\r\n  <div class=\"header-section pt-6 pb-6\">\r\n    <div class=\"flex align-center\">\r\n      <mat-icon\r\n        class=\"material-symbols-outlined pointer\"\r\n        color=\"primary\"\r\n        [routerLink]=\"'/coupons'\"\r\n        >keyboard_backspace</mat-icon\r\n      >\r\n      <p class=\"mat-h1 primary-text text-main\">Create Coupon</p>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-block pt-6\">\r\n    <div class=\"input-wrapper\">\r\n      <form>\r\n        <div class=\"input-wrapper no-sub mb-8\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">Coupon Id</p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"productnameinfo\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              tippyName=\"content\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #productnameinfo let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Coupon id</div>\r\n                <div class=\"details\">\r\n                  Enter a Customized Id. If user do not enter this field, the\r\n                  system will generate a 'Customized Human-Readable-id' based on\r\n                  the Name field.\r\n                </div>\r\n                <button mat-button color=\"primary\" class=\"px-0\">\r\n                  Learn more\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <input matInput placeholder=\"Enter here...\" />\r\n          </mat-form-field>\r\n          <span class=\"block mat-body-1 grey-text text-form-caption\">\r\n            This will be the reference used by SAAS Framework to identify this\r\n            coupon.\r\n          </span>\r\n        </div>\r\n        <div class=\"input-wrapper mb-2\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Coupon Name\r\n            </p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"couponName\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #couponName let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Coupon name</div>\r\n                <div class=\"details\">\r\n                  A descriptive name for this coupon. Please note that this will\r\n                  be displayed to customer, in case “invoice Name” field is not\r\n                  provided.\r\n                </div>\r\n                <button mat-button color=\"primary\" class=\"px-0\">\r\n                  Learn more\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <input matInput placeholder=\"Enter here...\" />\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"input-wrapper no-sub mb-8\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Invoice Name\r\n            </p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"InvoiceName\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #InvoiceName let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">invoice Name</div>\r\n                <div class=\"details\">\r\n                  Name displayed to your customers on the invoices and hosted\r\n                  payment pages.\r\n                </div>\r\n                <button mat-button color=\"primary\" class=\"px-0\">\r\n                  Learn more\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <input matInput placeholder=\"Enter here...\" />\r\n          </mat-form-field>\r\n          <span class=\"block mat-body-1 grey-text text-form-caption\">\r\n            Name displayed to your customers on the invoices and hosted payment\r\n            pages.\r\n          </span>\r\n        </div>\r\n        <h4 class=\"mat-body-1 text-text text-primary fw-500 mb-8\">DISCOUNT</h4>\r\n        <div class=\"input-wrapper no-sub mb-2\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Discount Type\r\n            </p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"discountType\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #discountType let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Discount type</div>\r\n                <div class=\"details\">\r\n                  FIxed Amount<br />\r\n                  The mentioned amount will be deducted.\r\n                </div>\r\n                <div class=\"details\">\r\n                  Percentage<br />\r\n                  The mentioned percentage will be deducted\r\n                </div>\r\n                <button mat-button color=\"primary\" class=\"px-0\">\r\n                  Learn more\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-select>\r\n              <mat-option>Percentage</mat-option>\r\n              <mat-option>Fixed Amount</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"input-wrapper mb-2\">\r\n          <mat-form-field appearance=\"outline\">\r\n            <input type=\"text\" matInput placeholder=\"Enter here \" />\r\n          </mat-form-field>\r\n        </div>\r\n        <h3 class=\"mat-subtitle-2 font-weight-500 input-label mb-8\">\r\n          Type: Invoice Amount\r\n        </h3>\r\n        <h4 class=\"mat-body-1 text-text text-primary fw-500 mb-8\">DURATION</h4>\r\n        <div class=\"input-wrapper mb-2\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Duration Type\r\n            </p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"durationType\"\r\n              panelClass=\"foo-bar\"\r\n              [tippyProps]=\"{ placement: 'right', interactive: true }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #durationType let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Duration type</div>\r\n                <div class=\"details\">\r\n                  Specify for how long should this coupon be applied to the\r\n                  subscription?\r\n                </div>\r\n                <button mat-button color=\"primary\" class=\"px-0\">\r\n                  Learn more\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-select>\r\n              <mat-option>One Time</mat-option>\r\n              <mat-option>Forever</mat-option>\r\n              <mat-option>Limited Period</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"input-wrapper mb-2\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Associate Plans\r\n            </p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"associatePlans\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #associatePlans let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Associate Plans</div>\r\n                <div class=\"details\">\r\n                  Choose the plans to which you would like to apply these\r\n                  coupons\r\n                </div>\r\n                <button mat-button color=\"primary\" class=\"px-0\">\r\n                  Learn more\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-select>\r\n              <mat-option value=\"All plans\">All Plans</mat-option>\r\n              <mat-option value=\"Selected Plans\">Selected Plans</mat-option>\r\n              <mat-option value=\"None\">None</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"input-wrapper mb-2\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Select Plans\r\n            </p>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-select multiple>\r\n              <div class=\"global-search full m-0 basic border-2\">\r\n                <span class=\"search-icon pointer\">\r\n                  <img\r\n                    src=\"../../../../../assets/images/icons/search.svg\"\r\n                    alt=\"search-icon\"\r\n                  />\r\n                </span>\r\n                <input type=\"text\" placeholder=\"Search...\" />\r\n              </div>\r\n              <mat-option value=\"All plans\">All Plans</mat-option>\r\n              <mat-option value=\"Selected Plans\">Selected Plans</mat-option>\r\n              <mat-option value=\"None\">None</mat-option>\r\n              <div class=\"pt-1 border-top mt-8\">\r\n                <div\r\n                  class=\"select-done flex align-center justify-center w-full primary light purple-text text-lighten-1 py-2 pointer\"\r\n                >\r\n                  <img\r\n                    src=\"../../../../../assets/images/icons/primary-check-circle.svg\"\r\n                    alt=\"check-circle\"\r\n                  />\r\n                  <span class=\"mat-caption block ml-1\">Done</span>\r\n                </div>\r\n              </div>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"input-wrapper mb-2\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Associate Addons\r\n            </p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"associateAddons\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #associateAddons let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Associate Addons</div>\r\n                <div class=\"details\">\r\n                  Choose the addons to which you would like to apply these\r\n                  coupons\r\n                </div>\r\n                <button mat-button color=\"primary\" class=\"px-0\">\r\n                  Learn more\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-select>\r\n              <mat-option value=\"All Addons\">All Addons</mat-option>\r\n              <mat-option value=\"Selected Addons\">Selected Addons</mat-option>\r\n              <mat-option value=\"None\">None</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"input-wrapper mb-2\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Select Addons\r\n            </p>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-select multiple>\r\n              <div class=\"global-search full m-0 basic border-2\">\r\n                <span class=\"search-icon pointer\">\r\n                  <img\r\n                    src=\"../../../../../assets/images/icons/search.svg\"\r\n                    alt=\"search-icon\"\r\n                  />\r\n                </span>\r\n                <input type=\"text\" placeholder=\"Search...\" />\r\n              </div>\r\n              <mat-option value=\"Addon 1\">Addon 1</mat-option>\r\n              <mat-option value=\"Addon 2\">Addon 2</mat-option>\r\n              <mat-option value=\"Addon 3\">Addon 3</mat-option>\r\n              <div class=\"pt-1 border-top mt-8\">\r\n                <div\r\n                  class=\"select-done flex align-center justify-center w-full primary light purple-text text-lighten-1 py-2 pointer\"\r\n                >\r\n                  <img\r\n                    src=\"../../../../../assets/images/icons/primary-check-circle.svg\"\r\n                    alt=\"check-circle\"\r\n                  />\r\n                  <span class=\"mat-caption block ml-1\">Done</span>\r\n                </div>\r\n              </div>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <h4 class=\"mat-body-1 text-text text-primary fw-500 mb-8\">VALIDITY</h4>\r\n        <div class=\"input-wrapper mb-2\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">Valid Till</p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"validTill\"\r\n              panelClass=\"foo-bar\"\r\n              [tippyProps]=\"{ placement: 'right', interactive: true }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #validTill let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Validity</div>\r\n                <div class=\"details\">\r\n                  Select the Validity date of the coupon\r\n                </div>\r\n                <button mat-button color=\"primary\" class=\"px-0\">\r\n                  Learn more\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <input matInput placeholder=\"select date\" [matDatepicker]=\"picker\" />\r\n            <div class=\"input-suffix\" (click)=\"picker.open()\" panelClass=\"my-custom\">\r\n              <img\r\n                src=\"../../../../../assets/images/icons/primary-calendar-icon.svg\"\r\n                alt=\"calendar-icon\"\r\n              />\r\n            </div>\r\n            <mat-datepicker #picker [calendarHeaderComponent]=\"customHeader\" ></mat-datepicker>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"input-wrapper mb-2\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Maximum Recommendations\r\n            </p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"validTill\"\r\n              panelClass=\"foo-bar\"\r\n              [tippyProps]=\"{ placement: 'right', interactive: true }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #validTill let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">\r\n                  Maximum Recommendations\r\n                </div>\r\n                <div class=\"details\">\r\n                  Maximum number of times this coupon can be redeemed.\r\n                </div>\r\n                <div class=\"details\">\r\n                  Note : If not mentioned this coupon will be redeemed\r\n                  indefinite number of times\r\n                </div>\r\n                <button mat-button color=\"primary\" class=\"px-0\">\r\n                  Learn more\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <input type=\"text\" matInput placeholder=\"Enter here\" />\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"action-btns flex align-center justify-between\">\r\n          <mat-checkbox\r\n            color=\"primary\"\r\n            formControlName=\"status\"\r\n            class=\"font-weight-500 checkbox ml-n-3\"\r\n            >Active</mat-checkbox\r\n          >\r\n          <div>\r\n            <button mat-stroked-button color=\"primary\" class=\"mr-2 large\">\r\n              Dismiss\r\n            </button>\r\n            <button mat-flat-button color=\"primary\" class=\"large\" type=\"button\">\r\n              Create\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "CreateFeatureComponent",
            "id": "component-CreateFeatureComponent-fa987a69a8e19f057a6c160213f4e16591e55dc09a3c47f5432dda66967ef521c4e8d650eb741966e6b97ec70c6df6fe3704e5ee3b17f0cab917f278ff1743e4",
            "file": "src/app/modules/features/components/create-feature/create-feature.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-create-feature",
            "styleUrls": [
                "./create-feature.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./create-feature.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "autosize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CdkTextareaAutosize",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'autosize'"
                        }
                    ]
                },
                {
                    "name": "featureForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup | null",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "featureType",
                    "defaultValue": "feature_types",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "menuOptions[]",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "isUnlimited",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "limit",
                    "defaultValue": "5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "PageNumber",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "postName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "preName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "productArray",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "productName",
                    "defaultValue": "User_Data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Data_Type[]",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "search",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "unlimitedButtonLabel",
                    "defaultValue": "'Set Unlimited'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 40
                }
            ],
            "methodsClass": [
                {
                    "name": "addLevels",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "deleteLevels",
                    "args": [
                        {
                            "name": "levelIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "levelIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "feature",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getLevelList",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDelete",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 172,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setName",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 135,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleUnlimited",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 114,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, ViewChild } from '@angular/core';\r\nimport { CdkTextareaAutosize } from '@angular/cdk/text-field';\r\nimport {\r\n  Data_Type,\r\n  User_Data,\r\n  feature_types,\r\n} from 'src/app/shared/constants/consants';\r\nimport {\r\n  FormArray,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport getUniqueId from 'src/app/core/utils/functions/getUniqueId';\r\nimport { FeatureService } from '../../services/feature.service';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { ProductsService } from 'src/app/modules/products/services/products.service';\r\n\r\nexport interface menuOptions {\r\n  value: number;\r\n  title: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-create-feature',\r\n  templateUrl: './create-feature.component.html',\r\n  styleUrls: ['./create-feature.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CreateFeatureComponent {\r\n  productName: Data_Type[] = User_Data;\r\n  featureType: menuOptions[] = feature_types;\r\n  subscription: Subscription;\r\n  isUnlimited: boolean = false;\r\n  preName: string = '';\r\n  postName: string = '';\r\n  position: any;\r\n  unlimitedButtonLabel: string = 'Set Unlimited';\r\n  PageNumber = 1;\r\n  limit = 5;\r\n  search: string = '';\r\n  productArray = [];\r\n  id: string;\r\n\r\n  public featureForm: FormGroup | null;\r\n  @ViewChild('autosize') autosize: CdkTextareaAutosize;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private featureService: FeatureService,\r\n    private routes: Router,\r\n    private productService: ProductsService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.id = this.productService.getId();\r\n\r\n    this.productService\r\n      .getProducts(this.PageNumber, this.limit, this.search)\r\n      .subscribe((data) => {\r\n        this.productArray = data.map((res) => res.productId);\r\n      });\r\n    this.feature();\r\n  }\r\n\r\n  feature() {\r\n    this.featureForm = this.formBuilder.group({\r\n      featureId: ['', Validators.required],\r\n      productID: [this.id ? this.id : '', Validators.required],\r\n      name: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n      type: ['', Validators.required],\r\n      unit: ['', Validators.required],\r\n      status: [false],\r\n      levels: this.formBuilder.array([\r\n        this.formBuilder.group({\r\n          isUnlimited: [false],\r\n          value: ['', Validators.required],\r\n          name: ['', Validators.required],\r\n        }),\r\n        this.formBuilder.group({\r\n          isUnlimited: [false],\r\n          value: ['', Validators.required],\r\n          name: ['', Validators.required],\r\n        }),\r\n      ]),\r\n    });\r\n  }\r\n\r\n  get levels() {\r\n    return this.featureForm.controls['levels'] as FormArray;\r\n  }\r\n  getLevelList(index: number) {\r\n    const levelList = this.levels.at(index) as FormGroup;\r\n    return levelList;\r\n  }\r\n  addLevels() {\r\n    this.position = this.levels.controls.length - 1;\r\n    this.levels.insert(\r\n      this.position,\r\n      this.formBuilder.group({\r\n        isUnlimited: [false],\r\n        value: ['', Validators.required],\r\n        name: ['', Validators.required],\r\n      })\r\n    );\r\n  }\r\n\r\n  deleteLevels(levelIndex: number) {\r\n    this.levels.removeAt(levelIndex);\r\n  }\r\n  toggleUnlimited() {\r\n    this.position = this.levels.controls.length - 1;\r\n    const lastLevel = this.getLevelList(this.position);\r\n    this.postName = this.featureForm.value.unit;\r\n    if (this.isUnlimited) {\r\n      lastLevel.patchValue({\r\n        value: '',\r\n        name: '',\r\n      });\r\n      this.unlimitedButtonLabel = 'Set Unlimited';\r\n    } else {\r\n      lastLevel.patchValue({\r\n        isUnlimited: true,\r\n        value: 'Unlimited',\r\n        name: 'Unlimited' + ' ' + this.postName,\r\n      });\r\n      this.unlimitedButtonLabel = 'Set Custom Maximum';\r\n    }\r\n    this.isUnlimited = !this.isUnlimited;\r\n  }\r\n\r\n  setName(index: number) {\r\n    this.postName = this.featureForm.value.unit;\r\n    this.preName = this.featureForm.value.levels[index].value;\r\n    const displayName = this.preName + ' ' + this.postName + 's';\r\n    const currentIndex = this.getLevelList(index);\r\n    currentIndex.patchValue({\r\n      name: displayName,\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.levels.controls.forEach((ele, index) => {\r\n      if (!ele.get('level')) {\r\n        (<FormGroup>ele).addControl('level', new FormControl(index));\r\n      } else {\r\n        ele.get('level').setValue(index);\r\n      }\r\n    });\r\n\r\n    const status = this.featureForm.value.status ? 'active' : 'disabled';\r\n    const feature = {\r\n      ...this.featureForm.value,\r\n      status: status,\r\n    };\r\n    console.log('feature', feature);\r\n\r\n    this.subscription = this.featureService.addFeature(feature).subscribe({\r\n      next: (res: any) => {\r\n        this.routes.navigate([`/features/view/${res.featureId}`]);\r\n        return res;\r\n      },\r\n      error: (err: any) => {\r\n        console.log('something wrong occured', err);\r\n      },\r\n    });\r\n  }\r\n\r\n  onDelete() {\r\n    this.routes.navigate(['/features']);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./create-feature.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "featureService",
                        "type": "FeatureService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "routes",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 48,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "featureService",
                        "type": "FeatureService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "routes",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "levels": {
                    "name": "levels",
                    "getSignature": {
                        "name": "levels",
                        "type": "",
                        "returnType": "",
                        "line": 92
                    }
                }
            },
            "templateData": "<div\r\n  class=\"form-with-sample flex main-bg border-2 w-full h-full overflow-scroll pt-2 pb- 5 px-6\"\r\n>\r\n  <div class=\"form-left\">\r\n    <div class=\"header-section\">\r\n      <div class=\"pt-10 pb-5 pl-6\">\r\n        <div class=\"flex align-center mb-2\">\r\n          <mat-icon\r\n            class=\"material-symbols-outlined pointer\"\r\n            color=\"primary\"\r\n            [routerLink]=\"'/features'\"\r\n            >keyboard_backspace</mat-icon\r\n          >\r\n          <span class=\"mat-h1 primary-text text-main ml-2\">Create</span>\r\n        </div>\r\n        <span class=\"pl-8 grey-text text-lighten-9 fs-lg\">\r\n          Fill in the details to create a new item\r\n        </span>\r\n      </div>\r\n    </div>\r\n    <form [formGroup]=\"featureForm\">\r\n      <div class=\"form-container pl-6 pr-10\">\r\n        <div class=\"input-wrapper\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Feature Name\r\n            </p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"selectProduct\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #selectProduct let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Feature name</div>\r\n                <div class=\"details\">\r\n                  Please select a product to create a feature to it.\r\n                </div>\r\n                <button mat-button color=\"primary\" class=\"px-0\">\r\n                  Learn more\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n            <input\r\n              required\r\n              matInput\r\n              placeholder=\"Enter here\"\r\n              formControlName=\"name\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"input-wrapper\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Select Product\r\n            </p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"selectProduct\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #selectProduct let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Product</div>\r\n                <div class=\"details\">\r\n                  Please select a product to create a feature to it.\r\n                </div>\r\n                <button mat-button color=\"primary\" class=\"px-0\">\r\n                  Learn more\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n            <!-- <mat-label> Select </mat-label> -->\r\n            <mat-select\r\n              required\r\n              formControlName=\"productID\"\r\n              placeholder=\"select\"\r\n            >\r\n              <mat-option\r\n                *ngFor=\"let product of productArray\"\r\n                value=\"{{ product }}\"\r\n              >\r\n                {{ product }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"input-wrapper\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">Feature ID</p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"helpinfotooltip\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #helpinfotooltip let-name>\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Feature id</div>\r\n                <div class=\"details\">\r\n                  Microsoft Teams is the ultimate messaging app for your\r\n                  organization—a workspace for real-time collaboration and\r\n                  communication, meetings, file and app sharing, and even the\r\n                  occasional emoji! All in one place, all in the open, all\r\n                  accessible to everyone.\r\n                </div>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n            <input\r\n              required\r\n              matInput\r\n              placeholder=\"Enter here\"\r\n              formControlName=\"featureId\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"input-wrapper\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Feature Type\r\n            </p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"selectProduct\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #selectProduct let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Feature type</div>\r\n                <div class=\"details\">\r\n                  Select how entitlements to this feature can be set in plans,\r\n                  addons, and charges.\r\n                </div>\r\n                <button mat-button color=\"primary\" class=\"px-0\">\r\n                  Learn more\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n            <mat-select required formControlName=\"type\" placeholder=\"select\">\r\n              <mat-option\r\n                *ngFor=\"let type of featureType\"\r\n                value=\"{{ type.title }}\"\r\n              >\r\n                {{ type.title }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"input-wrapper\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Description\r\n            </p>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <textarea\r\n              required\r\n              rows=\"4\"\r\n              matInput\r\n              placeholder=\"Enter here...\"\r\n              formControlName=\"description\"\r\n            ></textarea>\r\n          </mat-form-field>\r\n        </div>\r\n        <div\r\n          class=\"input-wrapper\"\r\n          *ngIf=\"\r\n            this.featureForm.value.type && this.featureForm.value.type != 1\r\n          \"\r\n        >\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Entitlement Units\r\n            </p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"selectProduct\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #selectProduct let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Entitlement Units</div>\r\n                <div class=\"details\">\r\n                  Please select a product to create a feature to it.\r\n                </div>\r\n                <button mat-button color=\"primary\" class=\"px-0\">\r\n                  Learn more\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n            <input\r\n              required\r\n              matInput\r\n              placeholder=\"Enter here\"\r\n              formControlName=\"unit\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n        <div *ngIf=\"this.featureForm.value.unit\">\r\n          <ng-container formArrayName=\"levels\">\r\n            <ng-container\r\n              *ngFor=\"let element of levels.controls; let i = index\"\r\n            >\r\n              <div class=\"flex align-center wrap mb-3\" [formGroupName]=\"i\">\r\n                <div class=\"flex align-center wrap w-88\">\r\n                  <div class=\"input-wrapper pr-2\">\r\n                    <div class=\"flex align-center mb-2\">\r\n                      <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n                        Entitlement\r\n                      </p>\r\n                    </div>\r\n                    <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n                      <input\r\n                        (change)=\"setName(i)\"\r\n                        required\r\n                        matInput\r\n                        placeholder=\"Enter here\"\r\n                        formControlName=\"value\"\r\n                      />\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"input-wrapper\">\r\n                    <div class=\"flex align-center mb-2\">\r\n                      <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n                        Display Name\r\n                      </p>\r\n                    </div>\r\n                    <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n                      <input\r\n                        matInput\r\n                        placeholder=\"Enter here\"\r\n                        formControlName=\"name\"\r\n                      />\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n                <button\r\n                  *ngIf=\"i == 0\"\r\n                  mat-stroked-button\r\n                  disableRipple\r\n                  class=\"upper-case primary light medium px-1 ml-2\"\r\n                >\r\n                  Default\r\n                </button>\r\n                <button\r\n                  *ngIf=\"\r\n                    levels.controls.length > 1 &&\r\n                    i < levels.controls.length - 1 &&\r\n                    i != 0\r\n                  \"\r\n                  mat-stroked-button\r\n                  disableRipple\r\n                  class=\"upper-case primary light medium px-1 ml-2\"\r\n                  (click)=\"deleteLevels(i)\"\r\n                >\r\n                  Remove\r\n                </button>\r\n                <button\r\n                  *ngIf=\"i == levels.controls.length - 1\"\r\n                  mat-stroked-button\r\n                  disableRipple\r\n                  class=\"upper-case primary light medium px-1 ml-2\"\r\n                >\r\n                  Maximum\r\n                </button>\r\n              </div>\r\n            </ng-container>\r\n          </ng-container>\r\n          <div>\r\n            <button mat-stroked-button (click)=\"toggleUnlimited()\">\r\n              <mat-icon class=\"add-course-btn\"></mat-icon\r\n              >{{ unlimitedButtonLabel }}\r\n            </button>\r\n          </div>\r\n          <button mat-stroked-button (click)=\"addLevels()\">\r\n            <mat-icon class=\"add-course-btn\"></mat-icon>Add Entitlement\r\n          </button>\r\n        </div>\r\n        <div class=\"action-btns flex align-center justify-between\">\r\n          <mat-checkbox\r\n            color=\"primary\"\r\n            formControlName=\"status\"\r\n            class=\"font-weight-500 checkbox ml-n-3\"\r\n            >Active</mat-checkbox\r\n          >\r\n          <div>\r\n            <button\r\n              mat-stroked-button\r\n              color=\"primary\"\r\n              class=\"mr-2 large\"\r\n              (click)=\"onDelete()\"\r\n            >\r\n              Dismiss\r\n            </button>\r\n            <button\r\n              mat-flat-button\r\n              color=\"primary\"\r\n              class=\"large\"\r\n              type=\"button\"\r\n              (click)=\"onSubmit()\"\r\n            >\r\n              Create\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"sample-right h-auto\">\r\n    <div class=\"py-5 pr-4 pl-8\">\r\n      <div class=\"heading-with-background mb-2\">Sample Feature</div>\r\n      <div class=\"text-text text-primary mb-2\">\r\n        <h3 class=\"fw-500 m-0\">Switch Feature</h3>\r\n        <p class=\"mat-h4\">\r\n          This feature type has 2 entitlement levels- \"available\" and \"not\r\n          available\".\r\n        </p>\r\n        <button mat-button color=\"primary\" class=\"medium px-1\">\r\n          Try a Sample\r\n        </button>\r\n      </div>\r\n      <div class=\"text-text text-primary mb-2\">\r\n        <h3 class=\"fw-500 m-0\">Range Feature</h3>\r\n        <p class=\"mat-h4\">\r\n          This feature supports range based entitlements. For eg : Customer’s\r\n          access can be between 100 and 300 API / minute.\r\n        </p>\r\n        <button mat-button color=\"primary\" class=\"medium px-1\">\r\n          Try a Sample\r\n        </button>\r\n      </div>\r\n      <div class=\"text-text text-primary mb-2\">\r\n        <h3 class=\"fw-500 m-0\">Quantity Feature</h3>\r\n        <p class=\"mat-h4\">\r\n          This feature type has numbered entitlement levels- For eg : 2,3,4 or\r\n          10 user licenses.\r\n        </p>\r\n        <button mat-button color=\"primary\" class=\"medium px-1\">\r\n          Try a Sample\r\n        </button>\r\n      </div>\r\n      <div class=\"text-text text-primary\">\r\n        <h3 class=\"fw-500 m-0\">Custom Feature</h3>\r\n        <p class=\"mat-h4\">\r\n          This feature supports range based entitlements. For eg : Customer’s\r\n          access can be between 100 and 300 API / minute.\r\n        </p>\r\n        <button mat-button color=\"primary\" class=\"medium px-1\">\r\n          Try a Sample\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "CreatePlanComponent",
            "id": "component-CreatePlanComponent-333f1fd16d697d4d22bd85f3119a187afa5aae619850ab9e8d275948587f88dec540f7617f00fa9ad5ceec231f031f74978ea05d42b540958ecf7ce7054bb5b6",
            "file": "src/app/modules/plans/components/create-plan/create-plan.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-create-plan",
            "styleUrls": [
                "./create-plan.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./create-plan.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "arr",
                    "defaultValue": "[\r\n    {\r\n      step: 'step1',\r\n      id: 'cdk-step-label-0-0',\r\n      attributeValue: 'false',\r\n    },\r\n    {\r\n      step: 'step2',\r\n      id: 'cdk-step-label-0-1',\r\n      attributeValue: 'false',\r\n    },\r\n    {\r\n      step: 'step3',\r\n      id: 'cdk-step-label-0-2',\r\n      attributeValue: 'false',\r\n    },\r\n    {\r\n      step: 'step4',\r\n      id: 'cdk-step-label-0-3',\r\n      attributeValue: 'false',\r\n    },\r\n    {\r\n      step: 'step5',\r\n      id: 'cdk-step-label-0-4',\r\n      attributeValue: 'false',\r\n    },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "clickedRows",
                    "defaultValue": "new Set<PeriodicElement>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "dataSource",
                    "defaultValue": "ELEMENT_DATA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['PricingCycle', 'Price']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "planAddEmptyData",
                    "defaultValue": "plan_add_empty_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "step1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'step1'"
                        }
                    ]
                },
                {
                    "name": "step2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'step2'"
                        }
                    ]
                },
                {
                    "name": "step3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'step3'"
                        }
                    ]
                },
                {
                    "name": "step4",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'step4'"
                        }
                    ]
                },
                {
                    "name": "step5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'step5'"
                        }
                    ]
                },
                {
                    "name": "stepsTitle",
                    "defaultValue": "Stepper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "testId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openPopup",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "switchStepper",
                    "args": [
                        {
                            "name": "step",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "step",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewChild, ElementRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FeatureDetailsPopupComponent } from 'src/app/shared/components/dialog-box/feature-details-popup/feature-details-popup.component';\r\nimport {\r\n  Stepper,\r\n  plan_add_empty_data,\r\n} from 'src/app/shared/constants/consants';\r\n\r\nexport interface PeriodicElement {\r\n  PricingCycle: string;\r\n  Price: any;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  { PricingCycle: 'Daily', Price: 'Set Price' },\r\n  { PricingCycle: 'Weekly', Price: 'Set Price' },\r\n  { PricingCycle: 'Monthly', Price: 'Set Price' },\r\n  { PricingCycle: 'Yearly', Price: 'Set Price' },\r\n];\r\n\r\n@Component({\r\n  selector: 'app-create-plan',\r\n  templateUrl: './create-plan.component.html',\r\n  styleUrls: ['./create-plan.component.scss'],\r\n})\r\nexport class CreatePlanComponent {\r\n  planAddEmptyData = plan_add_empty_data;\r\n  stepsTitle = Stepper;\r\n  displayedColumns: string[] = ['PricingCycle', 'Price'];\r\n  dataSource = ELEMENT_DATA;\r\n  clickedRows = new Set<PeriodicElement>();\r\n  testId: string;\r\n\r\n  @ViewChild('step1') step1: ElementRef;\r\n  @ViewChild('step2') step2: ElementRef;\r\n  @ViewChild('step3') step3: ElementRef;\r\n  @ViewChild('step4') step4: ElementRef;\r\n  @ViewChild('step5') step5: ElementRef;\r\n\r\n  constructor(public dialog: MatDialog) {}\r\n\r\n  openPopup() {\r\n    this.dialog.open(FeatureDetailsPopupComponent, {});\r\n  }\r\n  switchStepper(step: any) {\r\n    const stepId = step.id;\r\n    if (stepId === 1) {\r\n      this.step1.nativeElement.scrollIntoView({ behavior: 'smooth' });\r\n    } else if (stepId === 2) {\r\n      this.step2.nativeElement.scrollIntoView({ behavior: 'smooth' });\r\n    } else if (stepId === 3) {\r\n      this.step3.nativeElement.scrollIntoView({ behavior: 'smooth' });\r\n    } else if (stepId === 4) {\r\n      this.step4.nativeElement.scrollIntoView({ behavior: 'smooth' });\r\n    } else if (stepId === 5) {\r\n      this.step5.nativeElement.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n    // const element = this.step3.nativeElement;\r\n    // window.scrollTo({\r\n    //   top: element.offsetTop,\r\n    //   behavior: 'smooth'\r\n    // })\r\n  }\r\n  arr = [\r\n    {\r\n      step: 'step1',\r\n      id: 'cdk-step-label-0-0',\r\n      attributeValue: 'false',\r\n    },\r\n    {\r\n      step: 'step2',\r\n      id: 'cdk-step-label-0-1',\r\n      attributeValue: 'false',\r\n    },\r\n    {\r\n      step: 'step3',\r\n      id: 'cdk-step-label-0-2',\r\n      attributeValue: 'false',\r\n    },\r\n    {\r\n      step: 'step4',\r\n      id: 'cdk-step-label-0-3',\r\n      attributeValue: 'false',\r\n    },\r\n    {\r\n      step: 'step5',\r\n      id: 'cdk-step-label-0-4',\r\n      attributeValue: 'false',\r\n    },\r\n  ];\r\n  ngAfterViewInit() {\r\n    // Initialize Intersection Observer\r\n    const observer = new IntersectionObserver((entries, observer) => {\r\n      let findCurrent = entries.find((ele) => ele.isIntersecting == true);\r\n      if (findCurrent) {\r\n        this.testId = String(findCurrent.target.id);\r\n        this.arr.forEach((ele) => {\r\n          if (ele.step == this.testId) {\r\n            document\r\n              .getElementById(ele.id)\r\n              ?.setAttribute('aria-selected', 'true');\r\n          } else {\r\n            document\r\n              .getElementById(ele.id)\r\n              ?.setAttribute('aria-selected', ele.attributeValue);\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    // Start observing the element\r\n    const testArr = [\r\n      this.step1,\r\n      this.step2,\r\n      this.step3,\r\n      this.step4,\r\n      this.step5,\r\n    ];\r\n    testArr.forEach((element: any) => {\r\n      observer.observe(element.nativeElement);\r\n      //   console.log(this.testBool, element, element.nativeElement, 'testst')\r\n      //   if (this.testBool) {\r\n      //     const activeStep = document.getElementById('#1')?.classList.add('active')\r\n      //   }\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./create-plan.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 38,
                "jsdoctags": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"flex w-full h-full\">\r\n  <div class=\"stepper-wrapper\">\r\n    <mat-stepper orientation=\"vertical\" #stepper [disableRipple]=\"true\">\r\n      <mat-step *ngFor=\"let step of stepsTitle\" id=\"foo-bar\">\r\n        <ng-template matStepLabel >\r\n          <div (click)=\"switchStepper(step)\">\r\n            <span id={{step.id}}\r\n              class=\"block text-dark font-weight-500\"\r\n              >{{ step.title }}</span\r\n            >\r\n            <span\r\n              class=\"block font-weight-600 mat-subtitle-2 text-headline-light\"\r\n              >{{ step.caption }}</span\r\n            >\r\n          </div>\r\n        </ng-template>\r\n      </mat-step>\r\n\r\n    </mat-stepper>\r\n  </div>\r\n  <div #contentSection class=\"create-plan-main-wrapper h-full overflow-auto relative\">\r\n    <div #step1 id=\"step1\" class=\"plan-section-block flex-center p-11 mb-4\">\r\n      <div class=\"plan-info-block inner-wrapper\">\r\n        <div class=\"heading flex align-center\">\r\n          <img\r\n            src=\"../../../../../../assets/images/icons/carbon_document-multiple-02.svg\"\r\n            alt=\"carbon_document-multiple-icon\"\r\n          />\r\n          <abbr\r\n            class=\"mat-headline-5 text-dark\"\r\n            [routerLink]=\"'/plans/create/set-price'\"\r\n            >Plan Information</abbr\r\n          >\r\n        </div>\r\n        <div class=\"info-form\">\r\n          <div class=\"input-wrapper mt-8\">\r\n            <div>\r\n              <div class=\"flex align-center mb-2\">\r\n                <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n                  Plan Id\r\n                </p>\r\n                <mat-icon\r\n                  class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n                  [ngxTippy]=\"helpinfotooltip\"\r\n                  [tippyProps]=\"{ placement: 'right' }\"\r\n                  >help</mat-icon\r\n                >\r\n                <ng-template #helpinfotooltip let-name>\r\n                  <div class=\"help-info-tooltip\">\r\n                    <div class=\"heading-with-background\">Plan id</div>\r\n                    <div class=\"details\">\r\n                      Enter a Customized Id. If user do not enter this field,\r\n                      the system will generate a 'Customized Human-Readable-id'\r\n                      based on the Name fielde.g. Plan id Name: “Karisch plus\r\n                      Enterprise”Plan Id: “karish-plus-enteprise-01”\r\n                    </div>\r\n                    <button mat-button color=\"primary\" class=\"px-0\">\r\n                      Learn more\r\n                    </button>\r\n                  </div>\r\n                </ng-template>\r\n              </div>\r\n              <mat-form-field appearance=\"outline\">\r\n                <input matInput placeholder=\"Enter here...\" />\r\n              </mat-form-field>\r\n            </div>\r\n            <div>\r\n              <div class=\"flex align-center mb-2\">\r\n                <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n                  Plan Name (External)\r\n                </p>\r\n                <mat-icon\r\n                  class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n                  [ngxTippy]=\"productnameinfo\"\r\n                  [tippyProps]=\"{ placement: 'right' }\"\r\n                  >help</mat-icon\r\n                >\r\n                <ng-template #productnameinfo let-name class=\"t-template\">\r\n                  <div class=\"help-info-tooltip\">\r\n                    <div class=\"heading-with-background\">\r\n                      Plan name (External)\r\n                    </div>\r\n                    <div class=\"details\">\r\n                      This name will be shown on the customer portal.\r\n                    </div>\r\n                    <button mat-button color=\"primary\" class=\"px-0\">\r\n                      Learn more\r\n                    </button>\r\n                  </div>\r\n                </ng-template>\r\n              </div>\r\n              <mat-form-field appearance=\"outline\">\r\n                <input matInput placeholder=\"Enter here...\" />\r\n              </mat-form-field>\r\n            </div>\r\n            <div>\r\n              <div class=\"flex align-center mb-2\">\r\n                <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n                  Plan Name (Internal)\r\n                </p>\r\n                <mat-icon\r\n                  class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n                  [ngxTippy]=\"productnameinfo\"\r\n                  [tippyProps]=\"{ placement: 'right' }\"\r\n                  tippyName=\"content\"\r\n                  >help</mat-icon\r\n                >\r\n                <ng-template #productnameinfo let-name class=\"t-template\">\r\n                  <div class=\"help-info-tooltip\">\r\n                    <div class=\"heading-with-background\">\r\n                      Plan name (Internal)\r\n                    </div>\r\n                    <div class=\"details\">\r\n                      This is help you identify the Plan Internally\r\n                    </div>\r\n                    <button mat-button color=\"primary\" class=\"px-0\">\r\n                      Learn more\r\n                    </button>\r\n                  </div>\r\n                </ng-template>\r\n              </div>\r\n              <mat-form-field appearance=\"outline\">\r\n                <input matInput placeholder=\"Enter here...\" />\r\n              </mat-form-field>\r\n            </div>\r\n            <div>\r\n              <div class=\"flex align-center mb-2\">\r\n                <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n                  Description\r\n                </p>\r\n              </div>\r\n              <mat-form-field appearance=\"outline\">\r\n                <textarea matInput placeholder=\"Enter here...\"></textarea>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- pricing plan -->\r\n    <div #step2 id=\"step2\" class=\"plan-section-block flex-center border-2 p-11 mb-4\">\r\n      <div class=\"plan-info-block inner-wrapper\">\r\n        <div class=\"heading flex align-center\">\r\n          <img\r\n            src=\"../../../../../../assets/images/icons/basil_invoice-outline.svg\"\r\n            alt=\"icon\"\r\n          />\r\n          <h5 class=\"mat-headline-5 text-dark\">Product Details</h5>\r\n        </div>\r\n        <div class=\"empty-add-section mt-6 border-1\">\r\n          <div class=\"text-center\">\r\n            <p class=\"mat-body-1 text-dark-1\">\r\n              Please click the “Add” button below to add a new product. Once you\r\n              clicked the button, you will be prompted to enter the name of\r\n              product, description and additional details.\r\n            </p>\r\n            <button\r\n              mat-flat-button\r\n              color=\"primary\"\r\n              class=\"mt-11 large\"\r\n              [routerLink]=\"'/plans/create/product-detail'\"\r\n            >\r\n              Add product\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Product Details inner -->\r\n    <div #step3 id=\"step3\" class=\"plan-section-block flex-center border-2 p-11 mb-4\">\r\n      <div class=\"plan-info-block inner-wrapper\">\r\n        <div class=\"heading flex align-center\">\r\n          <img\r\n            src=\"../../../../../../assets/images/icons/basil_invoice-outline.svg\"\r\n            alt=\"invoice-outline-icon\"\r\n          />\r\n          <h5 class=\"mat-headline-5 text-dark\">Product Details</h5>\r\n        </div>\r\n        <div class=\"details-wrapper mt-6 p-3 border-2\">\r\n          <div class=\"details-inner flex justify-between\">\r\n            <div class=\"flex align-center\">\r\n              <div class=\"product-img p-2 mr-4\">\r\n                <img\r\n                  src=\"../.././../../assets/images/teams.png\"\r\n                  alt=\"product-img\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <h6 class=\"mat-subtitle-2 font-weight-500 text-dark mb-1\">\r\n                  MS Team\r\n                </h6>\r\n                <span class=\"mat-body-1 font-weight-500 text-dark\"\r\n                  >3 Features included</span\r\n                >\r\n              </div>\r\n            </div>\r\n            <div class=\"flex align-center\">\r\n              <button\r\n                class=\"flex icon-text mat-caption mr-4\"\r\n                mat-button\r\n                color=\"primary\"\r\n              >\r\n                <mat-icon class=\"material-symbols-outlined mr-1\" color=\"primary\"\r\n                  >edit</mat-icon\r\n                >Edit\r\n              </button>\r\n              <button\r\n                mat-icon-button\r\n                color=\"warn\"\r\n                class=\"light-bg small rounded-1\"\r\n              >\r\n                <mat-icon class=\"material-symbols-outlined mr-0\" color=\"warn\"\r\n                  >close</mat-icon\r\n                >\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div class=\"flex-center mt-3\">\r\n            <mat-chip class=\"primary-light-chip mr-2\" (click)=\"openPopup()\"\r\n              ><span class=\"mat-body-1 text-grey-darken-7\"\r\n                >Whiteboard (ON)</span\r\n              >\r\n            </mat-chip>\r\n            <mat-chip class=\"primary-light-chip mr-2\"\r\n              ><span class=\"mat-body-1 text-grey-darken-7\"\r\n                >Email support (All Week)</span\r\n              >\r\n            </mat-chip>\r\n            <mat-chip class=\"primary-light-chip\"\r\n              ><span class=\"mat-body-1 text-grey-darken-7\"\r\n                >User License (10 License)</span\r\n              >\r\n            </mat-chip>\r\n          </div>\r\n        </div>\r\n        <div class=\"mt-12 text-right\">\r\n          <button mat-flat-button color=\"primary\" class=\"large\">\r\n            Add Product\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- <app-add-plan-pricing></app-add-plan-pricing> -->\r\n\r\n    <!-- add-on view section  -->\r\n    <div #step4 id=\"step4\" class=\"plan-section-block flex-center border-2 p-11 mb-4\">\r\n      <div class=\"plan-info-block inner-wrapper\">\r\n        <div class=\"heading flex align-center\">\r\n          <img\r\n            src=\"../../../../../../assets/images/icons/basil_invoice-outline.svg\"\r\n            alt=\"add-on-icon\"\r\n          />\r\n          <h5 class=\"mat-headline-5 text-dark\">Add-ons Details</h5>\r\n        </div>\r\n        <div class=\"details-wrapper add-on-view-wrapper mt-6 p-3 border-2\">\r\n          <div class=\"details-inner flex justify-between\">\r\n            <div class=\"flex align-center\">\r\n              <div class=\"product-img p-2 mr-4\">\r\n                <img\r\n                  src=\"../.././../../assets/images/teams.png\"\r\n                  alt=\"product-img\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <h6 class=\"mat-subtitle-2 font-weight-500 text-dark mb-1\">\r\n                  MS Team\r\n                </h6>\r\n                <span class=\"mat-body-1 font-weight-500 text-dark\"\r\n                  >3 Features included</span\r\n                >\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"content-wrapper\">\r\n            <div class=\"mt-3\">\r\n              <mat-chip class=\"primary-light-chip mr-2\" (click)=\"openPopup()\"\r\n                ><span class=\"mat-body-1 text-grey-darken-7\"\r\n                  >Whiteboard (ON)</span\r\n                >\r\n              </mat-chip>\r\n              <mat-chip class=\"primary-light-chip mr-2\"\r\n                ><span class=\"mat-body-1 text-grey-darken-7\"\r\n                  >Email support (All Week)</span\r\n                >\r\n              </mat-chip>\r\n              <mat-chip class=\"primary-light-chip\"\r\n                ><span class=\"mat-body-1 text-grey-darken-7\"\r\n                  >User License (10 License)</span\r\n                >\r\n              </mat-chip>\r\n            </div>\r\n            <div class=\"flex mt-12\">\r\n              <div class=\"add-on-details-wrapper px-2 py-3\">\r\n                <div class=\"add-on-detail\">\r\n                  <div class=\"heading-content text-headine-light pl-3\">\r\n                    <span\r\n                      class=\"title font-weight-700 text-headline-light mat-subtitle-1\"\r\n                      >Teamwork and communication</span\r\n                    >\r\n                    <p class=\"subtile mat-body-1 text-headline-light mt-2\">\r\n                      It is a long established fact that a reader will be\r\n                      distracted.\r\n                    </p>\r\n                  </div>\r\n                  <div class=\"flex-center mt-3 flex-wrap chip-wrapper\">\r\n                    <mat-chip\r\n                      class=\"primary-light-chip pointer white-bg mr-2\"\r\n                      (click)=\"openPopup()\"\r\n                      ><span class=\"mat-body-1 text-grey-darken-7\"\r\n                        >Host online calls (1-50)</span\r\n                      >\r\n                    </mat-chip>\r\n                    <mat-chip class=\"primary-light-chip pointer white-bg mr-2\"\r\n                      ><span class=\"mat-body-1 text-grey-darken-7\"\r\n                        >Host webinars (50-100)</span\r\n                      >\r\n                    </mat-chip>\r\n                    <mat-chip class=\"primary-light-chip pointer white-bg\"\r\n                      ><span class=\"mat-body-1 text-grey-darken-7\"\r\n                        >Create team sites (ON)</span\r\n                      >\r\n                    </mat-chip>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <button\r\n                mat-icon-button\r\n                color=\"warn\"\r\n                class=\"light-bg small rounded-1 ml-2\"\r\n              >\r\n                <mat-icon class=\"material-symbols-outlined mr-0\" color=\"warn\"\r\n                  >close</mat-icon\r\n                >\r\n              </button>\r\n            </div>\r\n\r\n            <div class=\"info-form\">\r\n              <div class=\"flag-wrapper flex align-center pt-8 pb-2\">\r\n                <img\r\n                  src=\"../../../../../../assets/images/flags.png\"\r\n                  alt=\"flags\"\r\n                  class=\"mr-3\"\r\n                />\r\n                <span class=\"mat-subtitle-2 text-headline-dark\">USD</span>\r\n              </div>\r\n              <div class=\"table-wrapper mt-3\">\r\n                <table mat-table [dataSource]=\"dataSource\" class=\"\">\r\n                  <!-- PricingCycle Column -->\r\n                  <ng-container matColumnDef=\"PricingCycle\">\r\n                    <th\r\n                      mat-header-cell\r\n                      *matHeaderCellDef\r\n                      class=\"mat-subtitle-2 text-headline-dark\"\r\n                    >\r\n                      Pricing Cycle\r\n                    </th>\r\n                    <td\r\n                      mat-cell\r\n                      *matCellDef=\"let element\"\r\n                      class=\"mat-subtitle-2 text-headline-light\"\r\n                    >\r\n                      {{ element.PricingCycle }}\r\n                    </td>\r\n                  </ng-container>\r\n\r\n                  <!-- Price Column -->\r\n                  <ng-container matColumnDef=\"Price\">\r\n                    <th\r\n                      mat-header-cell\r\n                      *matHeaderCellDef\r\n                      class=\"mat-subtitle-2 text-headline-dark\"\r\n                    >\r\n                      Price\r\n                    </th>\r\n                    <td\r\n                      mat-cell\r\n                      *matCellDef=\"let element\"\r\n                      class=\"mat-subtitle-2 text-headline-light price-cell\"\r\n                    >\r\n                      <div class=\"flex align-center\">\r\n                        {{ element.Price\r\n                        }}<mat-icon\r\n                          class=\"material-symbols-outlined ml-2\"\r\n                          color=\"primary\"\r\n                          >arrow_right_alt</mat-icon\r\n                        >\r\n                      </div>\r\n                    </td>\r\n                  </ng-container>\r\n\r\n                  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                  <tr\r\n                    mat-row\r\n                    (click)=\"clickedRows.add(row)\"\r\n                    [class.demo-row-is-clicked]=\"clickedRows.has(row)\"\r\n                    *matRowDef=\"let row; columns: displayedColumns\"\r\n                  ></tr>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- add-on view section  -->\r\n\r\n    <!-- Charges -->\r\n    <div #step5 id=\"step5\" class=\"plan-section-block flex-center border-2 p-11 mb-4 bottom-margin\">\r\n      <div class=\"plan-info-block inner-wrapper\">\r\n        <div class=\"heading flex align-center\">\r\n          <img\r\n            src=\"../../../../../assets/images/icons/money.svg\"\r\n            alt=\"money-icon\"\r\n          />\r\n          <h5 class=\"mat-headline-5 text-dark\">Charges</h5>\r\n        </div>\r\n        <div class=\"input-wrapper mt-8\">\r\n          <div class=\"mt-6\">\r\n            <div class=\"flex align-center mb-2\">\r\n              <p class=\"mat-subtitle-2 font-weight-500 input-label\">Charges</p>\r\n              <mat-icon\r\n                class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n                [ngxTippy]=\"chargesInfo\"\r\n                [tippyProps]=\"{ placement: 'right' }\"\r\n                >help</mat-icon\r\n              >\r\n              <ng-template #chargesInfo let-name>\r\n                <div class=\"help-info-tooltip\">\r\n                  <div class=\"heading-with-background\">Charges</div>\r\n                  <div class=\"details\">\r\n                    You can create and select charges to include it in the plan\r\n                  </div>\r\n                  <button mat-button color=\"primary\" class=\"px-0\">\r\n                    Learn more\r\n                  </button>\r\n                </div>\r\n              </ng-template>\r\n            </div>\r\n            <mat-form-field\r\n              appearance=\"outline\"\r\n              class=\"border-2 with-footer-btn\"\r\n            >\r\n              <!-- <mat-label> Select </mat-label> -->\r\n              <mat-select required placeholder=\"select\" multiple>\r\n                <mat-option value=\"Setup Fee\"> Setup Fee </mat-option>\r\n                <mat-option value=\"Activation Fee\"> Activation Fee </mat-option>\r\n                <mat-option value=\"Implementation Charges\">\r\n                  Implementation Charges\r\n                </mat-option>\r\n                <button\r\n                  mat-button\r\n                  color=\"primary\"\r\n                  class=\"px-0 w-full add-new-btn-list pl-4 mat-body-1 large\"\r\n                >\r\n                  <mat-icon class=\"material-symbols-outlined\" color=\"primary\"\r\n                    >add_circle</mat-icon\r\n                  >Add New Charge\r\n                </button>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n        <!-- setup fee inputs -->\r\n        <div class=\"fee-input-wrapper\">\r\n          <div class=\"fee-input flex align-center justify-between\">\r\n            <span class=\"mat-subtitle-2\">Setup fee</span>\r\n            <div class=\"flex align-start\">\r\n              <mat-form-field appearance=\"outline\" class=\"mb-0\">\r\n                <input matInput placeholder=\"Enter here...\" />\r\n              </mat-form-field>\r\n              <button\r\n                mat-icon-button\r\n                color=\"warn\"\r\n                class=\"close-icon-btn light-bg rounded ml-2 mt-1\"\r\n              >\r\n                <mat-icon class=\"material-symbols-outlined mr-0\" color=\"warn\"\r\n                  >close</mat-icon\r\n                >\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div class=\"fee-input flex align-center justify-between\">\r\n            <span class=\"mat-subtitle-2\">Activation fee</span>\r\n            <div class=\"flex align-start\">\r\n              <mat-form-field appearance=\"outline\" class=\"mb-0\">\r\n                <input matInput placeholder=\"Enter here...\" />\r\n              </mat-form-field>\r\n              <button\r\n                mat-icon-button\r\n                color=\"warn\"\r\n                class=\"close-icon-btn light-bg rounded ml-2 mt-1\"\r\n              >\r\n                <mat-icon class=\"material-symbols-outlined mr-0\" color=\"warn\"\r\n                  >close</mat-icon\r\n                >\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- setup fee inputs -->\r\n        <div class=\"action-btns flex align-center justify-end\">\r\n          <div>\r\n            <button mat-stroked-button color=\"primary\" class=\"mr-2 large\">\r\n              Dismiss\r\n            </button>\r\n            <button mat-flat-button color=\"primary\" class=\"large\" type=\"submit\">\r\n              Save\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "CreateProductComponent",
            "id": "component-CreateProductComponent-d4808ed3a450e3c75e5d8a36ed58ed8b35f52ff8b252e5cc90e774f074e158fcfc8a56c8267c00bea22f926d058a55cd7257228a9c9a21eae99ecd6f3908b04e",
            "file": "src/app/modules/products/components/create-product/create-product.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-create-product",
            "styleUrls": [
                "./create-product.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./create-product.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "imageName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "imagePath",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "imageUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "productForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "tippyContent",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgxTippyProps",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "tippyTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'tippyTemplate', {read: ElementRef, static: true}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "isChecked",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openDialog",
                    "args": [
                        {
                            "name": "enterAnimationDuration",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "exitAnimationDuration",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "enterAnimationDuration",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "exitAnimationDuration",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openSuccess",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 109,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleStatus",
                    "args": [
                        {
                            "name": "checked",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "checked",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Output,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { NgxTippyProps } from 'ngx-tippy-wrapper';\r\nimport { trigger, transition, animate, style } from '@angular/animations';\r\nimport { SuccessDialogComponent } from 'src/app/shared/components/dialog-box/success-dialog/success-dialog.component';\r\nimport { OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ProductsService } from '../../services/products.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-create-product',\r\n  templateUrl: './create-product.component.html',\r\n  styleUrls: ['./create-product.component.scss'],\r\n  animations: [\r\n    trigger('slideInOut', [\r\n      transition(':enter', [\r\n        style({ transform: 'translateY(-100%)' }),\r\n        animate('200ms ease-in', style({ transform: 'translateY(0%)' })),\r\n      ]),\r\n      transition(':leave', [\r\n        animate('200ms ease-in', style({ transform: 'translateY(-100%)' })),\r\n      ]),\r\n    ]),\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CreateProductComponent implements OnInit {\r\n  subscription: Subscription;\r\n  @ViewChild('tippyTemplate', { read: ElementRef, static: true })\r\n  tippyTemplate: ElementRef;\r\n  tippyContent: NgxTippyProps = {};\r\n  productForm: FormGroup;\r\n  imageUrl: string = '';\r\n  imageName:string='';\r\n  data: string = '';\r\n  imagePath: string = ''\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private productService: ProductsService\r\n  ) {}\r\n  ngOnInit() {\r\n    this.productForm = this.formBuilder.group({\r\n      productId: ['', Validators.required],\r\n      name: ['', Validators.required],\r\n      description: [''],\r\n      status: [true],\r\n      imageUrl: [],\r\n    });\r\n\r\n    this.productForm.controls['name'].valueChanges.subscribe((value) => {\r\n      const idValue = value?.replace(/[^\\w\\s]/gi, '').replace(/\\s+/g, '-');\r\n      this.productForm.controls['productId'].setValue(idValue);\r\n    });\r\n  }\r\n  isChecked(): boolean {\r\n    const status = this.productForm.get('status')?.value;\r\n    return status === 'active';\r\n  }\r\n\r\n  toggleStatus(checked: boolean): void {\r\n    const newStatus = checked ? 'active' : 'disabled';\r\n    this.productForm.get('status')?.setValue(newStatus);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.productForm.get('imageUrl')?.setValue(this.imageUrl);\r\n    const status = this.productForm.value.status ? 'active' : 'disabled';\r\n    const product = {\r\n      ...this.productForm.value,\r\n      status: status,\r\n    };\r\n    this.subscription = this.productService\r\n      .createProduct(product)\r\n      .subscribe((res) => {\r\n        this.openSuccess();\r\n        this.router.navigate([`/products/view-product/${res.productId}`]);\r\n      });\r\n  }\r\n\r\n  openDialog(\r\n    enterAnimationDuration: string,\r\n    exitAnimationDuration: string\r\n  ): void {\r\n    const dialogRef = this.dialog.open(DialogAnimationsDialog, {\r\n      width: '',\r\n      enterAnimationDuration,\r\n      exitAnimationDuration,\r\n    });\r\n    dialogRef.componentInstance.saveSuccess.subscribe((data: { imageUrl: string, imageName: string }) => {\r\n      this.imageUrl = data.imageUrl;\r\n      this.imageName = data.imageName;\r\n      this.imagePath = environment.imagePath\r\n      console.log(\"aaaa\", this.imageUrl)\r\n    });\r\n  }\r\n\r\n  openSuccess() {\r\n    this.dialog.open(SuccessDialogComponent, {\r\n      width: '420px',\r\n      data: {\r\n        module: 'Product',\r\n      },\r\n    });\r\n  }\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'dialog-animations-dialog',\r\n  templateUrl:\r\n    '../../../../shared/components/dialog-box/dialog-animations-dialog.html',\r\n  styleUrls: [\r\n    '../../../../shared/components/dialog-box/dialog-animations.scss',\r\n  ],\r\n  animations: [\r\n    trigger('slideInOut', [\r\n      transition(':enter', [\r\n        style({ transform: 'translateX(-100%)' }),\r\n        animate('300ms ease-in', style({ transform: 'translateX(0%)' })),\r\n      ]),\r\n      transition(':leave', [\r\n        animate('300ms ease-in', style({ transform: 'translateX(-100%)' })),\r\n      ]),\r\n    ]),\r\n  ],\r\n})\r\nexport class DialogAnimationsDialog {\r\n  subscription: Subscription;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogAnimationsDialog>,\r\n    private productService: ProductsService\r\n  ) {}\r\n  activeColor: string = 'green';\r\n  baseColor: string = '#ccc';\r\n  overlayColor: string = 'rgba(255,255,255,0.5)';\r\n  iconColor: string;\r\n  dragging: boolean = false;\r\n  loaded: boolean = false;\r\n  imageLoaded: boolean = false;\r\n  imageSrc: string = '';\r\n  base64imageData: string = '';\r\n  imageName: string = '';\r\n  imageUrl: string = '';\r\n  \r\n  \r\n  \r\n\r\n  handleDragEnter() {\r\n    this.dragging = true;\r\n  }\r\n\r\n  handleDragLeave() {\r\n    this.dragging = false;\r\n  }\r\n\r\n  handleDrop(e: any) {\r\n    e.preventDefault();\r\n    this.dragging = false;\r\n    this.handleFileInput(e);\r\n  }\r\n\r\n  handleImageLoad() {\r\n    this.imageLoaded = true;\r\n    this.iconColor = this.overlayColor;\r\n  }\r\n\r\n  handleFileInput(e: any) {\r\n    var file = e.dataTransfer ? e.dataTransfer.files[0] : e.target.files[0];\r\n    var pattern = /image-*/;\r\n    var reader = new FileReader();\r\n    if (!file.type.match(pattern)) {\r\n      alert('invalid format');\r\n      return;\r\n    }\r\n    this.loaded = false;\r\n    this.imageName = file.name;\r\n    reader.onload = this._handleReaderLoaded.bind(this);\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  _handleReaderLoaded(e: any) {\r\n    var reader = e.target;\r\n    this.imageSrc = reader.result;\r\n    const dataURLParts = this.imageSrc?.split(';base64,');\r\n    this.base64imageData = dataURLParts[1];\r\n    console.log(\"bbbb\",this.base64imageData)\r\n    this.loaded = true;\r\n  }\r\n  @Output() saveSuccess: EventEmitter<{ imageUrl: string, imageName: string }> = new EventEmitter<{ imageUrl: string, imageName: string }>();\r\n  handleSave() {\r\n    if (this.base64imageData) {\r\n      const payload = {\r\n        image: this.base64imageData,\r\n        imageName: this.imageName,\r\n      };\r\n      this.subscription = this.productService\r\n        .uploadImage(payload)\r\n        .subscribe((res) => {\r\n          this.imageUrl = res.data.blobURL;\r\n          this.saveSuccess.emit({ imageUrl: this.imageUrl, imageName: this.imageName });\r\n        });\r\n    }\r\n   \r\n  }\r\n\r\n  cancel() {\r\n    this.imageSrc = 'null';\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./create-product.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 46,
                "jsdoctags": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"create-product-wrapper\">\r\n  <div class=\"header-section pt-6 pb-6\">\r\n    <div class=\"flex align-center\">\r\n      <mat-icon class=\"material-symbols-outlined pointer\" color=\"primary\"\r\n        >keyboard_backspace</mat-icon\r\n      >\r\n      <p class=\"mat-h1 primary-text text-main\">Create Products</p>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-block pt-6\">\r\n    <div class=\"form-block pt-6\">\r\n      <div class=\"user-img-wrapper flex align-center\">\r\n        <div class=\"user-avatar flex align-center justify-center\">\r\n           <img src=\"{{ imagePath + imageUrl }}\" alt=\"{{imageName}}\" />\r\n          <!-- <img src=\"../.././../../assets/images/teams.png\" alt=\"teams-img\" /> -->\r\n          <p class=\"mat-body-1 mb-0\">LOGO</p>\r\n        </div>\r\n        <div class=\"ml-6\">\r\n          <div class=\"upload-actions\">\r\n            <div class=\"flex align-center\">\r\n              <button mat-stroked-button color=\"primary\" class=\"mr-3\">\r\n                Remove\r\n              </button>\r\n              <button\r\n                mat-flat-button\r\n                color=\"primary\"\r\n                (click)=\"openDialog('0ms', '0ms')\"\r\n              >\r\n                Upload\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <p class=\"mat-caption text-light font-weight-500 mt-3\">\r\n            Allowed JPG, GIF or PNG. Max size of 800K\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"input-wrapper mt-8\">\r\n      <form [formGroup]=\"productForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div>\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Product Name\r\n            </p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"productnameinfo\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              tippyName=\"content\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #productnameinfo let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Product name</div>\r\n                <div class=\"details\">\r\n                  Enter a name that helps you identify this Product\r\n                </div>\r\n                <button mat-button color=\"primary\" class=\"px-0\">\r\n                  Learn more\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <input\r\n              matInput\r\n              placeholder=\"Enter here...\"\r\n              formControlName=\"name\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Description\r\n            </p>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <textarea\r\n              matInput\r\n              placeholder=\"Enter here...\"\r\n              formControlName=\"description\"\r\n            ></textarea>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">Product ID</p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"helpinfotooltip\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #helpinfotooltip let-name>\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Description</div>\r\n                <div class=\"details\">\r\n                  Enter a id that helps you identify this Product\r\n                </div>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <input\r\n              matInput\r\n              placeholder=\"Enter here...\"\r\n              formControlName=\"productId\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"action-btns flex align-center justify-between\">\r\n          <mat-checkbox\r\n            color=\"primary\"\r\n            class=\"font-weight-500 checkbox ml-n-3\"\r\n            formControlName=\"status\"\r\n            >Active</mat-checkbox\r\n          >\r\n          <div>\r\n            <button mat-stroked-button color=\"primary\" class=\"mr-2 large\" [mat-dialog-close]=\"true\" >\r\n              Dismiss\r\n            </button>\r\n            <button mat-flat-button color=\"primary\" class=\"large\" type=\"submit\">\r\n              Create\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <!-- </div> -->\r\n</div>\r\n"
        },
        {
            "name": "CustomDateHeaderComponent",
            "id": "component-CustomDateHeaderComponent-bc476eda0655851d8a31538a2fa435d55d192ccae64670506d24dfd381196ebaa649c5c000be3e6ff9d3592cbb9ee12435d5344c81944a72350ca49e6a972c97",
            "file": "src/app/shared/components/custom-date-header/custom-date-header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-custom-date-header",
            "styleUrls": [
                "./custom-date-header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./custom-date-header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_destroyed",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "nextClicked",
                    "args": [
                        {
                            "name": "mode",
                            "type": "\"month\" | \"year\"",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "mode",
                            "type": "\"month\" | \"year\"",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "previousClicked",
                    "args": [
                        {
                            "name": "mode",
                            "type": "\"month\" | \"year\"",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "mode",
                            "type": "\"month\" | \"year\"",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { ChangeDetectorRef, Inject } from '@angular/core';\r\nimport { MatCalendar } from '@angular/material/datepicker';\r\nimport {\r\n  DateAdapter,\r\n  MAT_DATE_FORMATS,\r\n  MatDateFormats,\r\n} from '@angular/material/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n@Component({\r\n  selector: 'app-custom-date-header',\r\n  templateUrl: './custom-date-header.component.html',\r\n  styleUrls: ['./custom-date-header.component.scss'],\r\n})\r\nexport class CustomDateHeaderComponent<D> {\r\n  private _destroyed = new Subject<void>();\r\n\r\n  constructor(\r\n    private _calendar: MatCalendar<D>,\r\n    private _dateAdapter: DateAdapter<D>,\r\n    @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\r\n    cdr: ChangeDetectorRef\r\n  ) {\r\n    _calendar.stateChanges\r\n      .pipe(takeUntil(this._destroyed))\r\n      .subscribe(() => cdr.markForCheck());\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._destroyed.next();\r\n    this._destroyed.complete();\r\n  }\r\n\r\n  get periodLabel() {\r\n    return this._dateAdapter\r\n      .format(\r\n        this._calendar.activeDate,\r\n        this._dateFormats.display.monthYearLabel\r\n      )\r\n      .toLocaleUpperCase();\r\n  }\r\n\r\n  previousClicked(mode: 'month' | 'year') {\r\n    this._calendar.activeDate =\r\n      mode === 'month'\r\n        ? this._dateAdapter.addCalendarMonths(this._calendar.activeDate, -1)\r\n        : this._dateAdapter.addCalendarYears(this._calendar.activeDate, -1);\r\n  }\r\n\r\n  nextClicked(mode: 'month' | 'year') {\r\n    this._calendar.activeDate =\r\n      mode === 'month'\r\n        ? this._dateAdapter.addCalendarMonths(this._calendar.activeDate, 1)\r\n        : this._dateAdapter.addCalendarYears(this._calendar.activeDate, 1);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./custom-date-header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_calendar",
                        "type": "MatCalendar<D>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_dateAdapter",
                        "type": "DateAdapter<D>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_dateFormats",
                        "type": "MatDateFormats",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "_calendar",
                        "type": "MatCalendar<D>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_dateAdapter",
                        "type": "DateAdapter<D>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_dateFormats",
                        "type": "MatDateFormats",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "periodLabel": {
                    "name": "periodLabel",
                    "getSignature": {
                        "name": "periodLabel",
                        "type": "",
                        "returnType": "",
                        "line": 35
                    }
                }
            },
            "templateData": "<div class=\"p-8\">\r\n  <div class=\"flex align-center justify-between\">\r\n    <div class=\"flex align-center pointer\" (click)=\"previousClicked('month')\">\r\n      <img\r\n        src=\"../../../../assets/images/icons/prev-circle-primary.svg\"\r\n        alt=\"prev icon\"\r\n      />\r\n    </div>\r\n    <div class=\"primary-text text-main\">{{periodLabel}}</div>\r\n    <div class=\"flex align-center pointer\" (click)=\"nextClicked('month')\">\r\n      <img\r\n        src=\"../../../../assets/images/icons/next-circle-primary.svg\"\r\n        alt=\"prev icon\"\r\n      />\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "DeleteConfirmationComponent",
            "id": "component-DeleteConfirmationComponent-8b630a3091253146bb1f5c199ad653f59289261f1b1e72fb238752397619d80f373c7f1f69661c16fb2b7d6f7977a1c597b7325f7c2eda6abc596d63c3d4361f",
            "file": "src/app/shared/components/dialog-box/delete-confirmation/delete-confirmation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-delete-confirmation",
            "styleUrls": [
                "./delete-confirmation.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./delete-confirmation.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "confirmed",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialogRef<DeleteConfirmationComponent>",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onCancelClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onYesClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { CouponsDeleteSuccessComponent } from 'src/app/shared/components/dialog-box/coupons-delete-success/coupons-delete-success.component';\r\n\r\n\r\nexport interface DialogData {\r\n  deleteId: number;\r\n}\r\n@Component({\r\n  selector: 'app-delete-confirmation',\r\n  templateUrl: './delete-confirmation.component.html',\r\n  styleUrls: ['./delete-confirmation.component.scss']\r\n})\r\nexport class DeleteConfirmationComponent {\r\n  @Output() confirmed: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeleteConfirmationComponent>,\r\n    public dialog: MatDialog\r\n  ) {}\r\n  // dialogRef: any;\r\n\r\n  onCancelClick(): void {\r\n    this.dialogRef.close(false);\r\n  }\r\n  onYesClick(): void {\r\n    const dialogRef = this.dialog.open(CouponsDeleteSuccessComponent, {\r\n      width: '422px',\r\n      panelClass: 'dialog-curved',\r\n    });\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./delete-confirmation.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<DeleteConfirmationComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<DeleteConfirmationComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"border-2 text-center coupons-dialog\">\r\n  <div class=\"close-dialog-icon\">\r\n      <mat-icon (click)=\"onCancelClick()\" class=\"material-symbols-outlined\">close</mat-icon>\r\n  </div>\r\n  <div class=\"mb-6\">\r\n      <img src=\"../../../../../assets/images/coupons-delete-confirmation.png\" alt=\"delete-confirmation\">\r\n  </div>\r\n  <h1 class=\"mb-4\">Confirmation</h1>\r\n  <span class=\"mat-body-1 mb-8 block\">Are you sure you want to delete plan</span\r\n  >\r\n  <div class=\"flex-center\">\r\n    <button mat-stroked-button color=\"primary\" mat-dialog-close (click)=\"onCancelClick()\" class=\"px-6 medium\">Cancel</button>\r\n    <button mat-flat-button color=\"primary\" class=\"medium ml-2\" [mat-dialog-close]=\"true\" (click)=\"onYesClick()\">Yes</button>\r\n  </div>\r\n</div>\r\n\r\n"
        },
        {
            "name": "DialogAnimationsDialog",
            "id": "component-DialogAnimationsDialog-d4808ed3a450e3c75e5d8a36ed58ed8b35f52ff8b252e5cc90e774f074e158fcfc8a56c8267c00bea22f926d058a55cd7257228a9c9a21eae99ecd6f3908b04e",
            "file": "src/app/modules/products/components/create-product/create-product.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dialog-animations-dialog",
            "styleUrls": [
                "../../../../shared/components/dialog-box/dialog-animations.scss"
            ],
            "styles": [],
            "templateUrl": [
                "../../../../shared/components/dialog-box/dialog-animations-dialog.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "saveSuccess",
                    "defaultValue": "new EventEmitter<{ imageUrl: string, imageName: string }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 205,
                    "type": "EventEmitter<literal type>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "activeColor",
                    "defaultValue": "'green'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 149
                },
                {
                    "name": "base64imageData",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 157
                },
                {
                    "name": "baseColor",
                    "defaultValue": "'#ccc'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 150
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialogRef<DialogAnimationsDialog>",
                    "optional": false,
                    "description": "",
                    "line": 146,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dragging",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 153
                },
                {
                    "name": "iconColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 152
                },
                {
                    "name": "imageLoaded",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 155
                },
                {
                    "name": "imageName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 158
                },
                {
                    "name": "imageSrc",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 156
                },
                {
                    "name": "imageUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 159
                },
                {
                    "name": "loaded",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 154
                },
                {
                    "name": "overlayColor",
                    "defaultValue": "'rgba(255,255,255,0.5)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 151
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 144
                }
            ],
            "methodsClass": [
                {
                    "name": "_handleReaderLoaded",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 197,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "cancel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 222,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleDragEnter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 164,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleDragLeave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 168,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleDrop",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 172,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleFileInput",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 183,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleImageLoad",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 178,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleSave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 206,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Output,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { NgxTippyProps } from 'ngx-tippy-wrapper';\r\nimport { trigger, transition, animate, style } from '@angular/animations';\r\nimport { SuccessDialogComponent } from 'src/app/shared/components/dialog-box/success-dialog/success-dialog.component';\r\nimport { OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ProductsService } from '../../services/products.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-create-product',\r\n  templateUrl: './create-product.component.html',\r\n  styleUrls: ['./create-product.component.scss'],\r\n  animations: [\r\n    trigger('slideInOut', [\r\n      transition(':enter', [\r\n        style({ transform: 'translateY(-100%)' }),\r\n        animate('200ms ease-in', style({ transform: 'translateY(0%)' })),\r\n      ]),\r\n      transition(':leave', [\r\n        animate('200ms ease-in', style({ transform: 'translateY(-100%)' })),\r\n      ]),\r\n    ]),\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CreateProductComponent implements OnInit {\r\n  subscription: Subscription;\r\n  @ViewChild('tippyTemplate', { read: ElementRef, static: true })\r\n  tippyTemplate: ElementRef;\r\n  tippyContent: NgxTippyProps = {};\r\n  productForm: FormGroup;\r\n  imageUrl: string = '';\r\n  imageName:string='';\r\n  data: string = '';\r\n  imagePath: string = ''\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private productService: ProductsService\r\n  ) {}\r\n  ngOnInit() {\r\n    this.productForm = this.formBuilder.group({\r\n      productId: ['', Validators.required],\r\n      name: ['', Validators.required],\r\n      description: [''],\r\n      status: [true],\r\n      imageUrl: [],\r\n    });\r\n\r\n    this.productForm.controls['name'].valueChanges.subscribe((value) => {\r\n      const idValue = value?.replace(/[^\\w\\s]/gi, '').replace(/\\s+/g, '-');\r\n      this.productForm.controls['productId'].setValue(idValue);\r\n    });\r\n  }\r\n  isChecked(): boolean {\r\n    const status = this.productForm.get('status')?.value;\r\n    return status === 'active';\r\n  }\r\n\r\n  toggleStatus(checked: boolean): void {\r\n    const newStatus = checked ? 'active' : 'disabled';\r\n    this.productForm.get('status')?.setValue(newStatus);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.productForm.get('imageUrl')?.setValue(this.imageUrl);\r\n    const status = this.productForm.value.status ? 'active' : 'disabled';\r\n    const product = {\r\n      ...this.productForm.value,\r\n      status: status,\r\n    };\r\n    this.subscription = this.productService\r\n      .createProduct(product)\r\n      .subscribe((res) => {\r\n        this.openSuccess();\r\n        this.router.navigate([`/products/view-product/${res.productId}`]);\r\n      });\r\n  }\r\n\r\n  openDialog(\r\n    enterAnimationDuration: string,\r\n    exitAnimationDuration: string\r\n  ): void {\r\n    const dialogRef = this.dialog.open(DialogAnimationsDialog, {\r\n      width: '',\r\n      enterAnimationDuration,\r\n      exitAnimationDuration,\r\n    });\r\n    dialogRef.componentInstance.saveSuccess.subscribe((data: { imageUrl: string, imageName: string }) => {\r\n      this.imageUrl = data.imageUrl;\r\n      this.imageName = data.imageName;\r\n      this.imagePath = environment.imagePath\r\n      console.log(\"aaaa\", this.imageUrl)\r\n    });\r\n  }\r\n\r\n  openSuccess() {\r\n    this.dialog.open(SuccessDialogComponent, {\r\n      width: '420px',\r\n      data: {\r\n        module: 'Product',\r\n      },\r\n    });\r\n  }\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'dialog-animations-dialog',\r\n  templateUrl:\r\n    '../../../../shared/components/dialog-box/dialog-animations-dialog.html',\r\n  styleUrls: [\r\n    '../../../../shared/components/dialog-box/dialog-animations.scss',\r\n  ],\r\n  animations: [\r\n    trigger('slideInOut', [\r\n      transition(':enter', [\r\n        style({ transform: 'translateX(-100%)' }),\r\n        animate('300ms ease-in', style({ transform: 'translateX(0%)' })),\r\n      ]),\r\n      transition(':leave', [\r\n        animate('300ms ease-in', style({ transform: 'translateX(-100%)' })),\r\n      ]),\r\n    ]),\r\n  ],\r\n})\r\nexport class DialogAnimationsDialog {\r\n  subscription: Subscription;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogAnimationsDialog>,\r\n    private productService: ProductsService\r\n  ) {}\r\n  activeColor: string = 'green';\r\n  baseColor: string = '#ccc';\r\n  overlayColor: string = 'rgba(255,255,255,0.5)';\r\n  iconColor: string;\r\n  dragging: boolean = false;\r\n  loaded: boolean = false;\r\n  imageLoaded: boolean = false;\r\n  imageSrc: string = '';\r\n  base64imageData: string = '';\r\n  imageName: string = '';\r\n  imageUrl: string = '';\r\n  \r\n  \r\n  \r\n\r\n  handleDragEnter() {\r\n    this.dragging = true;\r\n  }\r\n\r\n  handleDragLeave() {\r\n    this.dragging = false;\r\n  }\r\n\r\n  handleDrop(e: any) {\r\n    e.preventDefault();\r\n    this.dragging = false;\r\n    this.handleFileInput(e);\r\n  }\r\n\r\n  handleImageLoad() {\r\n    this.imageLoaded = true;\r\n    this.iconColor = this.overlayColor;\r\n  }\r\n\r\n  handleFileInput(e: any) {\r\n    var file = e.dataTransfer ? e.dataTransfer.files[0] : e.target.files[0];\r\n    var pattern = /image-*/;\r\n    var reader = new FileReader();\r\n    if (!file.type.match(pattern)) {\r\n      alert('invalid format');\r\n      return;\r\n    }\r\n    this.loaded = false;\r\n    this.imageName = file.name;\r\n    reader.onload = this._handleReaderLoaded.bind(this);\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  _handleReaderLoaded(e: any) {\r\n    var reader = e.target;\r\n    this.imageSrc = reader.result;\r\n    const dataURLParts = this.imageSrc?.split(';base64,');\r\n    this.base64imageData = dataURLParts[1];\r\n    console.log(\"bbbb\",this.base64imageData)\r\n    this.loaded = true;\r\n  }\r\n  @Output() saveSuccess: EventEmitter<{ imageUrl: string, imageName: string }> = new EventEmitter<{ imageUrl: string, imageName: string }>();\r\n  handleSave() {\r\n    if (this.base64imageData) {\r\n      const payload = {\r\n        image: this.base64imageData,\r\n        imageName: this.imageName,\r\n      };\r\n      this.subscription = this.productService\r\n        .uploadImage(payload)\r\n        .subscribe((res) => {\r\n          this.imageUrl = res.data.blobURL;\r\n          this.saveSuccess.emit({ imageUrl: this.imageUrl, imageName: this.imageName });\r\n        });\r\n    }\r\n   \r\n  }\r\n\r\n  cancel() {\r\n    this.imageSrc = 'null';\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".image-upload-dialog {\r\n  position: relative;\r\n  margin: 0 auto;\r\n  overflow: hidden;\r\n  width: 29rem;\r\n  padding: 1.75rem 2rem;\r\n\r\n  input {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n.upload-field {\r\n  display: block;\r\n  border: 2px dashed #9ca8ba;\r\n  margin: 1.875rem 0 1.375rem;\r\n\r\n  .file-thumbnail {\r\n    padding: 2.0625rem 1.3125rem 1.3125rem;\r\n\r\n    .mat-icon {\r\n      height: 1.9375rem;\r\n      width: 1.9375rem;\r\n      font-size: 1.9375rem;\r\n    }\r\n\r\n    cursor: pointer;\r\n    border-radius: 11px;\r\n    text-align: center;\r\n    padding: 1.25rem;\r\n\r\n    img {\r\n      width: 3.125rem;\r\n    }\r\n\r\n    h3 {\r\n      margin-top: 0.5rem;\r\n    }\r\n\r\n    p {\r\n      font-size: 0.75rem;\r\n      color: #9abcd1;\r\n      margin-bottom: 0;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "../../../../shared/components/dialog-box/dialog-animations.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<DialogAnimationsDialog>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 144,
                "jsdoctags": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<DialogAnimationsDialog>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"image-upload-dialog\" [@slideInOut]>\r\n  <h4 class=\"text-dark mat-subtitle-2 mb-2 font-weight-500\">Upload Logo</h4>\r\n  <p class=\"mat-caption grey-text text-darken-6\">\r\n    Allowed JPG, GIF or PNG. Max size of 800K\r\n  </p>\r\n  <div>\r\n    <input type=\"file\" name=\"logo\" id=\"logo\" accept=\"image/*\" (change)=\"handleFileInput($event)\" />\r\n    <label for=\"logo\" class=\"upload-field border-2 pointer\" id=\"file-label\"  (dragenter)=\"handleDragEnter()\"\r\n    (dragleave)=\"handleDragLeave()\"\r\n    (drop)=\"handleDrop($event)\">\r\n     <img \r\n        [src]=\"imageSrc\" \r\n        [class.loaded]=\"imageLoaded\"\r\n        (load)=\"handleImageLoad()\"\r\n        class=\"w-full\" />\r\n      <div class=\"file-thumbnail\" [style.display]=\"imageLoaded ? 'none' : 'block'\">\r\n        <mat-icon class=\"material-symbols-outlined m-0\">imagesmode</mat-icon>\r\n        <h3 id=\"filename\" class=\"mat-body-1 font-weight-500 text-text text-primary\">\r\n          <a href=\"\" class=\"mr-1 primary-text text-main text-underline\">Click here to upload</a\r\n          >or drag & drop\r\n        </h3>\r\n      </div>\r\n    </label>\r\n  </div>\r\n  <div class=\"action-btns flex align-center justify-end\">\r\n    <button mat-stroked-button color=\"primary\" class=\"mr-2\" mat-dialog-close (click)=\"cancel()\">Dismiss</button>\r\n    <button mat-flat-button color=\"primary\" class=\"\" mat-dialog-close (click)=\"handleSave()\" >Save</button>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "DialogComponent",
            "id": "component-DialogComponent-de8258368fcc3767680beb8afd0041bb0ad6de914838f71246ae57de288ed2131949be24765fd0d5c52cf0214f5dfd2a18b091f1708aa1929be1d708025fe915",
            "file": "src/stories/softobiz-ui/Dialog/dialog.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sft-Dialog",
            "styleUrls": [
                "./dialog.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dialog.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "animal",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "openDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation, Inject } from '@angular/core';\r\nimport {\r\n  MatDialog,\r\n  MAT_DIALOG_DATA,\r\n  MatDialogRef,\r\n} from '@angular/material/dialog';\r\n\r\nexport interface DialogData {\r\n  animal: string;\r\n  name: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'sft-Dialog',\r\n  templateUrl: './dialog.component.html',\r\n  styleUrls: ['./dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class DialogComponent {\r\n  animal: string = '';  \r\n  name: string = '';\r\n\r\n  constructor(public dialog: MatDialog) {}\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\r\n      data: { name: this.name, animal: this.animal },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log('The dialog was closed');\r\n      this.animal = result;\r\n    });\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'dialog-html',\r\n  templateUrl: './dialog-html.component.html',\r\n})\r\nexport class DialogOverviewExampleDialog {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\r\n  ) {}\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dialog.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<button mat-raised-button (click)=\"openDialog()\">Pick one</button>"
        },
        {
            "name": "DialogOverviewExampleDialog",
            "id": "component-DialogOverviewExampleDialog-de8258368fcc3767680beb8afd0041bb0ad6de914838f71246ae57de288ed2131949be24765fd0d5c52cf0214f5dfd2a18b091f1708aa1929be1d708025fe915",
            "file": "src/stories/softobiz-ui/Dialog/dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dialog-html",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dialog-html.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogData",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialogRef<DialogOverviewExampleDialog>",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onNoClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation, Inject } from '@angular/core';\r\nimport {\r\n  MatDialog,\r\n  MAT_DIALOG_DATA,\r\n  MatDialogRef,\r\n} from '@angular/material/dialog';\r\n\r\nexport interface DialogData {\r\n  animal: string;\r\n  name: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'sft-Dialog',\r\n  templateUrl: './dialog.component.html',\r\n  styleUrls: ['./dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class DialogComponent {\r\n  animal: string = '';  \r\n  name: string = '';\r\n\r\n  constructor(public dialog: MatDialog) {}\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\r\n      data: { name: this.name, animal: this.animal },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log('The dialog was closed');\r\n      this.animal = result;\r\n    });\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'dialog-html',\r\n  templateUrl: './dialog-html.component.html',\r\n})\r\nexport class DialogOverviewExampleDialog {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\r\n  ) {}\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<DialogOverviewExampleDialog>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "data",
                        "type": "DialogData",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 41,
                "jsdoctags": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<DialogOverviewExampleDialog>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "data",
                        "type": "DialogData",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<h1 mat-dialog-title>Hi {{data.name}}</h1>\r\n<div mat-dialog-content>\r\n  <p>What's your favorite animal?</p>\r\n  <mat-form-field appearance=\"fill\">\r\n    <mat-label>Favorite Animal</mat-label>\r\n    <input matInput [(ngModel)]=\"data.animal\">\r\n  </mat-form-field>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button (click)=\"onNoClick()\">No Thanks</button>\r\n  <button mat-button [mat-dialog-close]=\"data.animal\" cdkFocusInitial>Ok</button>\r\n</div>"
        },
        {
            "name": "DividerComponent",
            "id": "component-DividerComponent-e0fde259b1859b136ebb869f504ef69eb07c94d922f9b10de63e2b0690dc0263882cf938b6ad8ed4add973d06fb70cd235205ca2ac4c4939cc8bb1b7c9170bae",
            "file": "src/stories/softobiz-ui/divider/divider.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-divider",
            "styleUrls": [
                "./divider.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./divider.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "inset",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "vertical",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material/core';\r\n\r\n@Component({\r\n  selector: 'app-divider',\r\n  templateUrl: './divider.component.html',\r\n  styleUrls: ['./divider.component.scss']\r\n})\r\nexport class DividerComponent {\r\n  @Input() inset: boolean = false;\r\n  @Input() vertical: boolean = false;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./divider.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-list>\r\n  <mat-list-item>Item 1</mat-list-item>\r\n  <mat-divider [inset]=\"inset\" [vertical]=\"vertical\"></mat-divider>\r\n  <mat-list-item>Item 2</mat-list-item>\r\n  <mat-divider [inset]=\"inset\" [vertical]=\"vertical\"></mat-divider>\r\n  <mat-list-item>Item 3</mat-list-item>\r\n</mat-list>"
        },
        {
            "name": "EditFeatureComponent",
            "id": "component-EditFeatureComponent-a46901ee8de1b483fc7df57718afeb0f100134ed147bef35da32af540077a14156d78a1e136732b16519b3021b6370dba77fe41238bf680484e0078a65f7d739",
            "file": "src/app/modules/features/components/edit-feature/edit-feature.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-edit-feature",
            "styleUrls": [
                "./edit-feature.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./edit-feature.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "autosize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CdkTextareaAutosize",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'autosize'"
                        }
                    ]
                },
                {
                    "name": "featureForm",
                    "defaultValue": "this.formBuilder.group({\r\n    featureId: [null, Validators.required],\r\n    productID: [null, Validators.required],\r\n    name: ['', Validators.required],\r\n    description: ['', Validators.required],\r\n    type: ['', Validators.required],\r\n    unit: [null, Validators.required],\r\n    status: [false],\r\n    levels: this.formBuilder.array([\r\n      this.formBuilder.group({\r\n        isUnlimited: [false],\r\n        value: ['', Validators.required],\r\n        name: ['', Validators.required],\r\n      }),\r\n      this.formBuilder.group({\r\n        isUnlimited: [false],\r\n        value: ['', Validators.required],\r\n        name: ['', Validators.required],\r\n      }),\r\n    ]),\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "featureType",
                    "defaultValue": "feature_types",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "menuOptions[]",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "isUnlimited",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "limit",
                    "defaultValue": "5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "PageNumber",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "postName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "preName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "productId",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "search",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "unlimitedButtonLabel",
                    "defaultValue": "'Set Unlimited'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "methodsClass": [
                {
                    "name": "addLevels",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "deleteLevels",
                    "args": [
                        {
                            "name": "levelIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "levelIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getLevelList",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDelete",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 183,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 155,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setName",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleUnlimited",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateForm",
                    "args": [
                        {
                            "name": "res",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 142,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "res",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CdkTextareaAutosize } from '@angular/cdk/text-field';\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport {\r\n  FormArray,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { ProductsService } from 'src/app/modules/products/services/products.service';\r\nimport {\r\n  Data_Type,\r\n  feature_types,\r\n  User_Data,\r\n} from 'src/app/shared/constants/consants';\r\nimport { FeatureService } from '../../services/feature.service';\r\n\r\nexport interface menuOptions {\r\n  value: number;\r\n  title: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-edit-feature',\r\n  templateUrl: './edit-feature.component.html',\r\n  styleUrls: ['./edit-feature.component.scss'],\r\n})\r\nexport class EditFeatureComponent {\r\n  featureType: menuOptions[] = feature_types;\r\n  subscription: Subscription;\r\n  isUnlimited: boolean = false;\r\n  preName: string = '';\r\n  postName: string = '';\r\n  position: any;\r\n  unlimitedButtonLabel: string = 'Set Unlimited';\r\n  PageNumber = 1;\r\n  limit = 5;\r\n  search: string = '';\r\n  productId = [];\r\n  featureForm: any = this.formBuilder.group({\r\n    featureId: [null, Validators.required],\r\n    productID: [null, Validators.required],\r\n    name: ['', Validators.required],\r\n    description: ['', Validators.required],\r\n    type: ['', Validators.required],\r\n    unit: [null, Validators.required],\r\n    status: [false],\r\n    levels: this.formBuilder.array([\r\n      this.formBuilder.group({\r\n        isUnlimited: [false],\r\n        value: ['', Validators.required],\r\n        name: ['', Validators.required],\r\n      }),\r\n      this.formBuilder.group({\r\n        isUnlimited: [false],\r\n        value: ['', Validators.required],\r\n        name: ['', Validators.required],\r\n      }),\r\n    ]),\r\n  });\r\n\r\n  @ViewChild('autosize') autosize: CdkTextareaAutosize;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private featureService: FeatureService,\r\n    private routes: Router,\r\n    private route: ActivatedRoute,\r\n    private productService: ProductsService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.productService\r\n      .getProducts(this.PageNumber, this.limit, this.search)\r\n      .subscribe((data) => {\r\n        this.productId = data.map((res) => res.productId);\r\n      });\r\n    const id = this.route.snapshot.params['id'];\r\n\r\n    this.featureService.getFeatureById(id).subscribe((data) => {\r\n      console.log(\"a\", data);\r\n      \r\n      this.updateForm(data);\r\n    });\r\n  }\r\n\r\n  get levels() {\r\n    return this.featureForm.controls['levels'] as FormArray;\r\n  }\r\n  getLevelList(index: number) {\r\n    const levelList = this.levels.at(index) as FormGroup;\r\n    return levelList;\r\n  }\r\n  addLevels() {\r\n    this.position = this.levels.controls.length - 1;\r\n    this.levels.insert(\r\n      this.position,\r\n      this.formBuilder.group({\r\n        isUnlimited: [false],\r\n        value: ['', Validators.required],\r\n        name: ['', Validators.required],\r\n      })\r\n    );\r\n  }\r\n\r\n  deleteLevels(levelIndex: number) {\r\n    this.levels.removeAt(levelIndex);\r\n  }\r\n  toggleUnlimited() {\r\n    this.position = this.levels.controls.length - 1;\r\n    const lastLevel = this.getLevelList(this.position);\r\n    this.postName = this.featureForm.value.unit;\r\n    if (this.isUnlimited) {\r\n      lastLevel.patchValue({\r\n        value: '',\r\n        name: '',\r\n      });\r\n      this.unlimitedButtonLabel = 'Set Unlimited';\r\n    } else {\r\n      lastLevel.patchValue({\r\n        isUnlimited: true,\r\n        value: 'Unlimited',\r\n        name: 'Unlimited' + ' ' + this.postName,\r\n      });\r\n      this.unlimitedButtonLabel = 'Set Custom Maximum';\r\n    }\r\n    this.isUnlimited = !this.isUnlimited;\r\n  }\r\n\r\n  setName(index: number) {\r\n    this.postName = this.featureForm.value.unit;\r\n    this.preName = this.featureForm.value.levels[index].value;\r\n    const displayName = this.preName + ' ' + this.postName + 's';\r\n    const currentIndex = this.getLevelList(index);\r\n    currentIndex.patchValue({\r\n      name: displayName,\r\n    });\r\n  }\r\n\r\n  updateForm(res: any) {\r\n    this.featureForm.setValue({\r\n      featureId: res.featureId,\r\n      productID: res.product.productId,\r\n      name: res.name,\r\n      description: res.description,\r\n      type: res.type,\r\n      status: res.status,\r\n      unit: res.unit || null,\r\n      levels: res.levels\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.levels.controls.forEach((ele, index) => {\r\n      if (!ele.get('level')) {\r\n        (<FormGroup>ele).addControl('level', new FormControl(index));\r\n      } else {\r\n        ele.get('level').setValue(index);\r\n      }\r\n    });\r\n\r\n    const status = this.featureForm.value.status ? 'active' : 'disabled';\r\n    const feature = {\r\n      ...this.featureForm.value,\r\n      status: status,\r\n    };\r\n\r\n    this.subscription = this.featureService\r\n      .updateFeature(this.featureForm.value.featureId, feature)\r\n      .subscribe({\r\n        next: (res: any) => {\r\n          this.routes.navigate([`/features/view/${res.featureId}`]);\r\n          return res;\r\n        },\r\n        error: (err: any) => {\r\n          console.log('something wrong occured', err);\r\n        },\r\n      });\r\n  }\r\n\r\n  onDelete() {\r\n    this.routes.navigate(['/features']);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./edit-feature.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "featureService",
                        "type": "FeatureService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "routes",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 64,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "featureService",
                        "type": "FeatureService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "routes",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "levels": {
                    "name": "levels",
                    "getSignature": {
                        "name": "levels",
                        "type": "",
                        "returnType": "",
                        "line": 89
                    }
                }
            },
            "templateData": "<div\r\n  class=\"form-with-sample flex main-bg border-2 w-full h-full overflow-scroll pt-2 pb- 5 px-6\"\r\n>\r\n  <div class=\"form-left\">\r\n    <div class=\"header-section\">\r\n      <div class=\"pt-10 pb-5 pl-6\">\r\n        <div class=\"flex align-center mb-2\">\r\n          <mat-icon\r\n            class=\"material-symbols-outlined pointer\"\r\n            color=\"primary\"\r\n            [routerLink]=\"'/features'\"\r\n            >keyboard_backspace</mat-icon\r\n          >\r\n          <span class=\"mat-h1 primary-text text-main ml-2\">Create</span>\r\n        </div>\r\n        <span class=\"pl-8 grey-text text-lighten-9 fs-lg\">\r\n          Fill in the details to create a new item\r\n        </span>\r\n      </div>\r\n    </div>\r\n    <form [formGroup]=\"featureForm\">\r\n      <div class=\"form-container pl-6 pr-10\">\r\n        <div class=\"input-wrapper\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Feature Name\r\n            </p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"selectProduct\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #selectProduct let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Feature name</div>\r\n                <div class=\"details\">\r\n                  Please select a product to create a feature to it.\r\n                </div>\r\n                <button mat-button color=\"primary\" class=\"px-0\">\r\n                  Learn more\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n            <input\r\n              required\r\n              matInput\r\n              placeholder=\"Enter here\"\r\n              formControlName=\"name\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"input-wrapper\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Select Product\r\n            </p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"selectProduct\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #selectProduct let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Product</div>\r\n                <div class=\"details\">\r\n                  Please select a product to create a feature to it.\r\n                </div>\r\n                <button mat-button color=\"primary\" class=\"px-0\">\r\n                  Learn more\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n            <!-- <mat-label> Select </mat-label> -->\r\n            <mat-select\r\n              required\r\n              formControlName=\"productID\"\r\n              placeholder=\"select\"\r\n            >\r\n              <mat-option\r\n              *ngFor=\"let product of productId\"\r\n              value=\"{{ product }}\"\r\n              >\r\n                {{ product }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"input-wrapper\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">Feature ID</p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"helpinfotooltip\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #helpinfotooltip let-name>\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Feature id</div>\r\n                <div class=\"details\">\r\n                  Microsoft Teams is the ultimate messaging app for your\r\n                  organization—a workspace for real-time collaboration and\r\n                  communication, meetings, file and app sharing, and even the\r\n                  occasional emoji! All in one place, all in the open, all\r\n                  accessible to everyone.\r\n                </div>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n            <input\r\n              required\r\n              matInput\r\n              readonly\r\n              placeholder=\"Enter here\"\r\n              formControlName=\"featureId\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"input-wrapper\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Feature Type\r\n            </p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"selectProduct\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #selectProduct let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Feature type</div>\r\n                <div class=\"details\">\r\n                  Select how entitlements to this feature can be set in plans,\r\n                  addons, and charges.\r\n                </div>\r\n                <button mat-button color=\"primary\" class=\"px-0\">\r\n                  Learn more\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n            <mat-select required formControlName=\"type\" placeholder=\"select\">\r\n              <mat-option\r\n                *ngFor=\"let type of featureType\"\r\n                value=\"{{ type.title }}\"\r\n              >\r\n                {{ type.title }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"input-wrapper\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Description\r\n            </p>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <textarea\r\n              required\r\n              rows=\"4\"\r\n              matInput\r\n              placeholder=\"Enter here...\"\r\n              formControlName=\"description\"\r\n            ></textarea>\r\n          </mat-form-field>\r\n        </div>\r\n        <div\r\n          class=\"input-wrapper\"\r\n          *ngIf=\"\r\n            this.featureForm.value.type && this.featureForm.value.type != 1\r\n          \"\r\n        >\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Entitlement Units\r\n            </p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"selectProduct\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #selectProduct let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Entitlement Units</div>\r\n                <div class=\"details\">\r\n                  Please select a product to create a feature to it.\r\n                </div>\r\n                <button mat-button color=\"primary\" class=\"px-0\">\r\n                  Learn more\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n            <input\r\n              required\r\n              matInput\r\n              placeholder=\"Enter here\"\r\n              formControlName=\"unit\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n        <div *ngIf=\"this.featureForm.value.unit\">\r\n          <ng-container formArrayName=\"levels\">\r\n            <ng-container\r\n              *ngFor=\"let element of levels.controls; let i = index\"\r\n            >\r\n              <div class=\"flex align-center wrap mb-3\" [formGroupName]=\"i\">\r\n                <div class=\"flex align-center wrap w-88\">\r\n                  <div class=\"input-wrapper pr-2\">\r\n                    <div class=\"flex align-center mb-2\">\r\n                      <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n                        Entitlement\r\n                      </p>\r\n                    </div>\r\n                    <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n                      <input\r\n                        (change)=\"setName(i)\"\r\n                        required\r\n                        matInput\r\n                        placeholder=\"Enter here\"\r\n                        formControlName=\"value\"\r\n                      />\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"input-wrapper\">\r\n                    <div class=\"flex align-center mb-2\">\r\n                      <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n                        Display Name\r\n                      </p>\r\n                    </div>\r\n                    <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n                      <input\r\n                        matInput\r\n                        placeholder=\"Enter here\"\r\n                        formControlName=\"name\"\r\n                      />\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n                <button\r\n                  *ngIf=\"i == 0\"\r\n                  mat-stroked-button\r\n                  disableRipple\r\n                  class=\"upper-case primary light medium px-1 ml-2\"\r\n                >\r\n                  Default\r\n                </button>\r\n                <button\r\n                  *ngIf=\"\r\n                    levels.controls.length > 1 &&\r\n                    i < levels.controls.length - 1 &&\r\n                    i != 0\r\n                  \"\r\n                  mat-stroked-button\r\n                  disableRipple\r\n                  class=\"upper-case primary light medium px-1 ml-2\"\r\n                  (click)=\"deleteLevels(i)\"\r\n                >\r\n                  Remove\r\n                </button>\r\n                <button\r\n                  *ngIf=\"i == levels.controls.length - 1\"\r\n                  mat-stroked-button\r\n                  disableRipple\r\n                  class=\"upper-case primary light medium px-1 ml-2\"\r\n                >\r\n                  Maximum\r\n                </button>\r\n              </div>\r\n            </ng-container>\r\n          </ng-container>\r\n          <div>\r\n            <button mat-stroked-button (click)=\"toggleUnlimited()\">\r\n              <mat-icon class=\"add-course-btn\"></mat-icon\r\n              >{{ unlimitedButtonLabel }}\r\n            </button>\r\n          </div>\r\n          <button mat-stroked-button (click)=\"addLevels()\">\r\n            <mat-icon class=\"add-course-btn\"></mat-icon>Add Entitlement\r\n          </button>\r\n        </div>\r\n        <div class=\"action-btns flex align-center justify-between\">\r\n          <mat-checkbox\r\n            color=\"primary\"\r\n            formControlName=\"status\"\r\n            class=\"font-weight-500 checkbox ml-n-3\"\r\n            >Active</mat-checkbox\r\n          >\r\n          <div>\r\n            <button\r\n              mat-stroked-button\r\n              color=\"primary\"\r\n              class=\"mr-2 large\"\r\n              (click)=\"onDelete()\"\r\n            >\r\n              Dismiss\r\n            </button>\r\n            <button\r\n              mat-flat-button\r\n              color=\"primary\"\r\n              class=\"large\"\r\n              type=\"button\"\r\n              (click)=\"onSubmit()\"\r\n            >\r\n              Create\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"sample-right h-auto\">\r\n    <div class=\"py-5 pr-4 pl-8\">\r\n      <div class=\"heading-with-background mb-2\">Sample Feature</div>\r\n      <div class=\"text-text text-primary mb-2\">\r\n        <h3 class=\"fw-500 m-0\">Switch Feature</h3>\r\n        <p class=\"mat-h4\">\r\n          This feature type has 2 entitlement levels- \"available\" and \"not\r\n          available\".\r\n        </p>\r\n        <button mat-button color=\"primary\" class=\"medium px-1\">\r\n          Try a Sample\r\n        </button>\r\n      </div>\r\n      <div class=\"text-text text-primary mb-2\">\r\n        <h3 class=\"fw-500 m-0\">Range Feature</h3>\r\n        <p class=\"mat-h4\">\r\n          This feature supports range based entitlements. For eg : Customer’s\r\n          access can be between 100 and 300 API / minute.\r\n        </p>\r\n        <button mat-button color=\"primary\" class=\"medium px-1\">\r\n          Try a Sample\r\n        </button>\r\n      </div>\r\n      <div class=\"text-text text-primary mb-2\">\r\n        <h3 class=\"fw-500 m-0\">Quantity Feature</h3>\r\n        <p class=\"mat-h4\">\r\n          This feature type has numbered entitlement levels- For eg : 2,3,4 or\r\n          10 user licenses.\r\n        </p>\r\n        <button mat-button color=\"primary\" class=\"medium px-1\">\r\n          Try a Sample\r\n        </button>\r\n      </div>\r\n      <div class=\"text-text text-primary\">\r\n        <h3 class=\"fw-500 m-0\">Custom Feature</h3>\r\n        <p class=\"mat-h4\">\r\n          This feature supports range based entitlements. For eg : Customer’s\r\n          access can be between 100 and 300 API / minute.\r\n        </p>\r\n        <button mat-button color=\"primary\" class=\"medium px-1\">\r\n          Try a Sample\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "EditProductComponent",
            "id": "component-EditProductComponent-d440df9510571ca8d264c8cad586dbd9326028bc785c3a9cab83bf55bc74e32bbfac50166f8572384051750a84b28eb023e99191e939f6842304d0252357085d",
            "file": "src/app/modules/products/components/edit-product/edit-product.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-edit-product",
            "styleUrls": [
                "./edit-product.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./edit-product.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "imageUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "postForm",
                    "defaultValue": "this.formBuilder.group({\r\n    productId: ['', Validators.required],\r\n    name: ['', Validators.required],\r\n    description: [''],\r\n    status: [true],\r\n    imageUrl: ['', Validators.required],\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "product$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "productsData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 38
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 115,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openDialog",
                    "args": [
                        {
                            "name": "enterAnimationDuration",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "exitAnimationDuration",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "enterAnimationDuration",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "exitAnimationDuration",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openSuccess",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "populateForm",
                    "args": [
                        {
                            "name": "res",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "res",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { DialogAnimationsDialog } from '../create-product/create-product.component';\r\nimport {\r\n  FormBuilder,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { animate, style, transition, trigger } from '@angular/animations';\r\nimport { ProductsService } from '../../services/products.service';\r\nimport { Observable, Subscription, pipe, tap } from 'rxjs';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { SuccessDialogComponent } from 'src/app/shared/components/dialog-box/success-dialog/success-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-edit-product',\r\n  templateUrl: './edit-product.component.html',\r\n  styleUrls: ['./edit-product.component.scss'],\r\n  animations: [\r\n    trigger('slideInOut', [\r\n      transition(':enter', [\r\n        style({ transform: 'translateY(-100%)' }),\r\n        animate('200ms ease-in', style({ transform: 'translateY(0%)' })),\r\n      ]),\r\n      transition(':leave', [\r\n        animate('200ms ease-in', style({ transform: 'translateY(-100%)' })),\r\n      ]),\r\n    ]),\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class EditProductComponent implements OnInit {\r\n  imageUrl: string = '';\r\n  product$: Observable<any>;\r\n  subscription: Subscription;\r\n  productsData = [];\r\n  postForm = this.formBuilder.group({\r\n    productId: ['', Validators.required],\r\n    name: ['', Validators.required],\r\n    description: [''],\r\n    status: [true],\r\n    imageUrl: ['', Validators.required],\r\n  });\r\n\r\n  constructor(\r\n    private productService: ProductsService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    public dialog: MatDialog\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    const id = this.route.snapshot.params['id'];\r\n    this.productService.getProductById(id).subscribe((data) => {\r\n      this.populateForm(data);\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.postForm.get('imageUrl')?.setValue(this.imageUrl);\r\n    const status = this.postForm.value.status ? 'active' : 'disabled';\r\n    const product = {\r\n      ...this.postForm.value,\r\n      status: status,\r\n    };\r\n    this.subscription = this.productService\r\n      .editProduct(this.postForm.value.productId, product)\r\n      .subscribe((data) => {\r\n        console.log('subscribe', data);\r\n        this.openSuccess();\r\n        console.log()\r\n        this.router.navigate([`/products/view-product/${data.productId}`]);\r\n      });\r\n\r\n    this.postForm.reset();\r\n  }\r\n\r\n  openDialog(\r\n    enterAnimationDuration: string,\r\n    exitAnimationDuration: string\r\n  ): void {\r\n    const dialogRef = this.dialog.open(DialogAnimationsDialog, {\r\n      width: '',\r\n      enterAnimationDuration,\r\n      exitAnimationDuration,\r\n    });\r\n    dialogRef.componentInstance.saveSuccess.subscribe((imageUrl: string) => {\r\n      this.imageUrl = imageUrl;\r\n      console.log('akas', this.imageUrl);\r\n    });\r\n  }\r\n\r\n  openSuccess() {\r\n    this.dialog.open(SuccessDialogComponent, {\r\n      width: '420px',\r\n      data: {\r\n        module: 'Plan',\r\n      },\r\n    });\r\n  }\r\n\r\n  populateForm(res: any) {\r\n    this.postForm.setValue({\r\n      name: res.name,\r\n      description: res.description,\r\n      productId: res.productId,\r\n      status: res.status,\r\n      imageUrl: res.imageUrl,\r\n    });\r\n  }\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./edit-product.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 46,
                "jsdoctags": [
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"create-product-wrapper\">\r\n  <div class=\"header-section pt-6 pb-6\">\r\n    <div class=\"flex align-center\">\r\n      <mat-icon class=\"material-symbols-outlined pointer\" color=\"primary\"\r\n        >keyboard_backspace</mat-icon\r\n      >\r\n      <p class=\"mat-h1 primary-text text-main\">Edit Products</p>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-block pt-6\">\r\n    <div class=\"form-block pt-6\">\r\n      <div class=\"user-img-wrapper flex align-center\">\r\n        <div class=\"user-avatar flex align-center justify-center\">\r\n          <!-- <img src=\"../.././../../assets/images/teams.png\" alt=\"teams-img\" /> -->\r\n          <p class=\"mat-body-1 mb-0\">LOGO</p>\r\n        </div>\r\n        <div class=\"ml-6\">\r\n          <div class=\"upload-actions\">\r\n            <div class=\"flex align-center\">\r\n              <button mat-stroked-button color=\"primary\" class=\"mr-3\">\r\n                Remove\r\n              </button>\r\n              <button\r\n                mat-flat-button\r\n                color=\"primary\"\r\n                (click)=\"openDialog('0ms', '0ms')\"\r\n              >\r\n                Upload\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <p class=\"mat-caption text-light font-weight-500 mt-3\">\r\n            Allowed JPG, GIF or PNG. Max size of 800K\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"input-wrapper mt-8\">\r\n      <form [formGroup]=\"postForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div>\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Product Name\r\n            </p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"productnameinfo\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              tippyName=\"content\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #productnameinfo let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Product name</div>\r\n                <div class=\"details\">\r\n                  Enter a name that helps you identify this Product\r\n                </div>\r\n                <button mat-button color=\"primary\" class=\"px-0\">\r\n                  Learn more\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <input\r\n              matInput\r\n              placeholder=\"Enter here...\"\r\n              formControlName=\"name\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Description\r\n            </p>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <textarea\r\n              matInput\r\n              placeholder=\"Enter here...\"\r\n              formControlName=\"description\"\r\n            ></textarea>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">Product ID</p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"helpinfotooltip\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #helpinfotooltip let-name>\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Description</div>\r\n                <div class=\"details\">\r\n                  Enter a id that helps you identify this Product\r\n                </div>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <input\r\n              matInput\r\n              readonly\r\n              placeholder=\"Enter here...\"\r\n              formControlName=\"productId\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"action-btns flex align-center justify-between\">\r\n          <mat-checkbox\r\n            color=\"primary\"\r\n            class=\"font-weight-500 checkbox ml-n-3\"\r\n            formControlName=\"status\"\r\n            >Active</mat-checkbox\r\n          >\r\n          <div>\r\n            <button mat-stroked-button color=\"primary\" class=\"mr-2 large\">\r\n              Dismiss\r\n            </button>\r\n            <button mat-flat-button color=\"primary\" class=\"large\" type=\"submit\">\r\n              Create\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <!-- </div> -->\r\n</div>\r\n"
        },
        {
            "name": "EmptyListingComponent",
            "id": "component-EmptyListingComponent-ff8fb7e71c4deb54e6e90fc1cd23390df06a15838b2ab64d1b2841d12e8c74c1c560f2308e6b8aa49d49de8711edc47f59438e8af94b5f8cf5d8ab1297178237",
            "file": "src/app/shared/components/empty-listing/empty-listing.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-empty-listing",
            "styleUrls": [
                "./empty-listing.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./empty-listing.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-empty-listing',\r\n  templateUrl: './empty-listing.component.html',\r\n  styleUrls: ['./empty-listing.component.scss']\r\n})\r\nexport class EmptyListingComponent {\r\n  @Input() items: any[] = [];\r\n  constructor(){}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./empty-listing.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "templateData": "<div *ngFor=\"let item of items\">\r\n  <h1 class=\"text-text text-dark\">{{ item.heading }}</h1>\r\n  <div class=\"absolute position-center text-center\">\r\n    <div class=\"\">\r\n      <img src=\"{{ item.imgPath }}\" alt=\"{{ item.alt }}\" />\r\n      <div class=\"my-10\">\r\n        <p class=\"mat-h1 purple-text text-darken-1\">{{ item.subtext }}</p>\r\n        <p class=\"desc-info mt-6 text-text text-lighten-2\">\r\n          {{ item.text }}\r\n        </p>\r\n      </div>\r\n      <a *ngIf=\"item.showButton\" href=\"{{ item.path }}\">\r\n        <button mat-flat-button color=\"primary\" class=\"medium\">\r\n          {{ item.buttonTxt }}\r\n        </button>\r\n      </a>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "FeatureDetailsPopupComponent",
            "id": "component-FeatureDetailsPopupComponent-514af62cf957286fd95850848e62e2bd754bd022f4beabd7db69dd2945c8415e694dd4b15de3532ef6b35dcef07dc7885905bdc0e5681816f11a0e1ee1308ae1",
            "file": "src/app/shared/components/dialog-box/feature-details-popup/feature-details-popup.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-feature-details-popup",
            "styleUrls": [
                "./feature-details-popup.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./feature-details-popup.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-feature-details-popup',\r\n  templateUrl: './feature-details-popup.component.html',\r\n  styleUrls: ['./feature-details-popup.component.scss']\r\n})\r\nexport class FeatureDetailsPopupComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./feature-details-popup.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"feature-details-popup p-5\">\r\n    <div class=\"title\">\r\n        <div class=\"flex justify-between align-center pb-4 pt-2 px-2\">\r\n            <h5 class=\"mat-subtitle-1 font-weight-500 text-dark mb-0\">Feature Details</h5>\r\n            <button mat-icon-button class=\"x-small\" [disableRipple]=\"true\">\r\n            <mat-icon class=\"material-symbols-outlined mr-0\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <table class=\"w-full simple-table\">\r\n      <tr>\r\n        <th class=\"mat-subtitle-2 font-weight-500 text-dark\">Name</th>\r\n        <td class=\"mat-subtitle-2 text-grey-darken-6\">Whiteboard</td>\r\n      </tr>\r\n      <tr>\r\n        <th class=\"mat-subtitle-2 font-weight-500 text-dark\">Type</th>\r\n        <td class=\"mat-subtitle-2 text-grey-darken-6\">Switch</td>\r\n      </tr>\r\n      <tr>\r\n        <th class=\"mat-subtitle-2 font-weight-500 text-dark\">Entitlements</th>\r\n        <td class=\"mat-subtitle-2 text-grey-darken-6\">ON</td>\r\n      </tr>\r\n      <tr>\r\n        <th class=\"mat-subtitle-2 font-weight-500 text-dark\">Status</th>\r\n        <td class=\"mat-subtitle-2 text-green-dark-3\">Active</td>\r\n      </tr>\r\n    </table>\r\n    <div class=\"py-4 px-2 text-right\">\r\n      <button class=\"flex icon-text primary mat-caption\" mat-button><mat-icon class=\"material-symbols-outlined mr-1\">edit</mat-icon>Edit</button>\r\n    </div>\r\n  </div>\r\n"
        },
        {
            "name": "FeaturesListingComponent",
            "id": "component-FeaturesListingComponent-f4f3b5a7b4a494fdad9277372a1065c9f3563ed3f1ede5b04515af7bee59a948369ff63d924153126f56cc3ac3a6b0f6b8c6f5665842f7e54810c35ade5d76cd",
            "file": "src/app/modules/features/components/features-listing/features-listing.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-features-listing",
            "styleUrls": [
                "./features-listing.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./features-listing.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "data$",
                    "defaultValue": "this.featureService.feature$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialogRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "[\r\n    'featureId',\r\n    'productName',\r\n    'name',\r\n    'type',\r\n    'description',\r\n    'createdOn',\r\n    'status',\r\n    'action',\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "elementId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "emptyFeature",
                    "defaultValue": "noFeatures",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "featuresData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "limit",
                    "defaultValue": "5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "PageNumber",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ]
                },
                {
                    "name": "selection",
                    "defaultValue": "new SelectionModel<features>(true, [])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ]
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 32
                }
            ],
            "methodsClass": [
                {
                    "name": "announceSortChange",
                    "args": [
                        {
                            "name": "sortState",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 149,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nAnnounce the change in sort state for assistive technology.",
                    "description": "<p>Announce the change in sort state for assistive technology.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "sortState",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "checkboxLabel",
                    "args": [
                        {
                            "name": "row",
                            "type": "features",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 134,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nThe label for the checkbox on the passed row",
                    "description": "<p>The label for the checkbox on the passed row</p>\n",
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "features",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteElementById",
                    "args": [
                        {
                            "name": "elementId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "elementId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getFeature",
                    "args": [
                        {
                            "name": "PageNumber",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "PageNumber",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isAllSelected",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhether the number of selected elements matches the total number of rows.",
                    "description": "<p>Whether the number of selected elements matches the total number of rows.</p>\n"
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onNext",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onPrevious",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openDelete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectAll",
                    "args": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 172,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectedRow",
                    "args": [
                        {
                            "name": "selectedID",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 162,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "selectedID",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleAllRows",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSelects all rows if they are not all selected; otherwise clear selection.",
                    "description": "<p>Selects all rows if they are not all selected; otherwise clear selection.</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { features, noFeatures } from 'src/app/shared/constants/consants';\r\nimport { FeatureService } from '../../services/feature.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { Subscription } from 'rxjs';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { DeleteConfirmationComponent } from 'src/app/shared/components/dialog-box/delete-confirmation/delete-confirmation.component';\r\n\r\n@Component({\r\n  selector: 'app-features-listing',\r\n  templateUrl: './features-listing.component.html',\r\n  styleUrls: ['./features-listing.component.scss'],\r\n})\r\nexport class FeaturesListingComponent implements OnInit {\r\n  displayedColumns: string[] = [\r\n    'featureId',\r\n    'productName',\r\n    'name',\r\n    'type',\r\n    'description',\r\n    'createdOn',\r\n    'status',\r\n    'action',\r\n  ];\r\n\r\n  featuresData = [];\r\n  selection = new SelectionModel<features>(true, []);\r\n  emptyFeature = noFeatures;\r\n  subscription: Subscription;\r\n  data$ = this.featureService.feature$;\r\n  elementId: number;\r\n  data: any;\r\n  PageNumber = 1;\r\n  limit = 5;\r\n  dialogRef: MatDialogRef<any>;\r\n  loading = false;\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.featuresData.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  constructor(\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private featureService: FeatureService,\r\n    public dialog: MatDialog\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    this.getFeature(this.PageNumber, this.limit);\r\n\r\n    this.featureService.feature$.subscribe((data) => {\r\n      if (data) {\r\n        this.featuresData = data;\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  getFeature(PageNumber: number, limit: number) {\r\n    this.loading = true;\r\n    this.featureService\r\n\r\n      .getFeatures(this.PageNumber, this.limit)\r\n\r\n      .subscribe((res) => {\r\n        this.loading = false;\r\n      });\r\n  }\r\n\r\n  onPrevious() {\r\n    if (this.PageNumber > 1) {\r\n      this.PageNumber--;\r\n\r\n      this.getFeature(this.PageNumber, this.limit);\r\n    }\r\n  }\r\n\r\n  onNext() {\r\n    this.PageNumber++;\r\n\r\n    this.getFeature(this.PageNumber, this.limit);\r\n  }\r\n\r\n  deleteElementById(elementId: number) {\r\n    this.featureService.deleteFeature(elementId).subscribe(() => {\r\n      this.data$.subscribe((data) => {});\r\n    });\r\n  }\r\n\r\n  openDelete(id: any) {\r\n    this.dialogRef = this.dialog.open(DeleteConfirmationComponent, {\r\n      width: '420px',\r\n\r\n      panelClass: 'dialog-curved',\r\n    });\r\n\r\n    this.dialogRef.afterClosed().subscribe((res) => {\r\n      if (res) {\r\n        this.deleteElementById(id);\r\n      } else {\r\n        console.log('Delete canceled');\r\n      }\r\n    });\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n\r\n  toggleAllRows() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n\r\n      return;\r\n    }\r\n\r\n    // console.log(this.selection.select)\r\n\r\n    this.selection.select(...this.featuresData);\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n\r\n  checkboxLabel(row?: features): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${\r\n      row.feature_id + 1\r\n    }`;\r\n  }\r\n\r\n  // ngAfterViewInit() {\r\n  //   this.featuresData.sort = this.sort;\r\n  // }\r\n  /** Announce the change in sort state for assistive technology. */\r\n\r\n  announceSortChange(sortState: Sort) {\r\n    // This example uses English messages. If your application supports\r\n    // multiple language, you would internationalize these strings.\r\n    // Furthermore, you can customize the message to add additional\r\n    // details about the values being sorted.\r\n\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n\r\n  selectedRow(selectedID: string, event: any) {\r\n    const selectedRow = document.getElementById(`${selectedID}`);\r\n\r\n    if (selectedRow != null) {\r\n      selectedRow.classList.toggle('selected-row');\r\n    }\r\n\r\n    event.stopPropagation();\r\n  }\r\n\r\n  selectAll(data: any[]) {\r\n    if (this.isAllSelected()) {\r\n      data.map((element: any) => {\r\n        document.getElementById(element.id)?.classList.add('selected-row');\r\n      });\r\n    } else {\r\n      data.map((element: any) => {\r\n        document.getElementById(element.id)?.classList.remove('selected-row');\r\n      });\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".loader {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(249, 246, 246, 0.477);\r\n  z-index: 9999;\r\n}\r\n\r\n.loader mat-spinner {\r\n  margin-right: 10px;\r\n}\r\n",
                    "styleUrl": "./features-listing.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_liveAnnouncer",
                        "type": "LiveAnnouncer",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "featureService",
                        "type": "FeatureService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 51,
                "jsdoctags": [
                    {
                        "name": "_liveAnnouncer",
                        "type": "LiveAnnouncer",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "featureService",
                        "type": "FeatureService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"loader\" *ngIf=\"loading\">\r\n  <mat-spinner></mat-spinner>\r\n</div>\r\n<div\r\n  *ngIf=\"featuresData.length == 0\"\r\n  class=\"relative main-bg border-2 w-full h-full p-7 overflow-scroll\"\r\n>\r\n  <app-empty-listing [items]=\"emptyFeature\"></app-empty-listing>\r\n</div>\r\n\r\n<div\r\n  *ngIf=\"featuresData.length > 0\"\r\n  class=\"relative main-bg border-2 w-full h-full py-6 pl-5 pr-6 overflow-scroll\"\r\n>\r\n  <div class=\"flex justify-between align-center px-1\">\r\n    <div class=\"flex align-center\">\r\n      <h1 class=\"text-text text-dark\">Features</h1>\r\n\r\n      <mat-chip class=\"chip-dark ml-3\">\r\n        {{ featuresData.length }}\r\n      </mat-chip>\r\n    </div>\r\n\r\n    <div class=\"flex align-center\">\r\n      <div class=\"global-search light mr-6 border-2\">\r\n        <span class=\"search-icon pointer\">\r\n          <img\r\n            src=\"../../../../assets/images/icons/search.svg\"\r\n            alt=\"search-icon\"\r\n          />\r\n        </span>\r\n\r\n        <input type=\"text\" placeholder=\"Search anything...\" />\r\n      </div>\r\n\r\n      <button\r\n        mat-flat-button\r\n        color=\"primary\"\r\n        class=\"create-btn\"\r\n        [routerLink]=\"['create']\"\r\n      >\r\n        <mat-icon class=\"material-symbols-outlined m-0 white-text\"\r\n          >add_circle</mat-icon\r\n        >\r\n\r\n        <span class=\"text-nowrap block ml-2 letter-spacing-0\"\r\n          >Create Feature</span\r\n        >\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"primary-table mt-8 px-1 pb-2\">\r\n    <table\r\n      mat-table\r\n      [dataSource]=\"featuresData\"\r\n      matSort\r\n      (matSortChange)=\"announceSortChange($event)\"\r\n    >\r\n      <!--- Note that these columns can be defined in any order.\r\n\r\n              The actual rendered columns are set as a property on the row definition\" -->\r\n\r\n      <!-- Product ID Column -->\r\n\r\n      <ng-container matColumnDef=\"featureId\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Feature ID</th>\r\n\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element\"\r\n          [routerLink]=\"'/features/view/' + element.featureId\"\r\n        >\r\n          {{ element.featureId }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Product Name Column -->\r\n\r\n      <ng-container matColumnDef=\"productName\">\r\n        <th\r\n          mat-header-cell\r\n          *matHeaderCellDef\r\n          mat-sort-header\r\n          sortActionDescription=\"Sort by title\"\r\n        >\r\n          Product Name\r\n        </th>\r\n\r\n        <td mat-cell *matCellDef=\"let element\" [routerLink]=\"'/features/view'\">\r\n          {{ element.productName }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Product Name Column -->\r\n\r\n      <ng-container matColumnDef=\"name\">\r\n        <th\r\n          mat-header-cell\r\n          *matHeaderCellDef\r\n          mat-sort-header\r\n          sortActionDescription=\"Sort by title\"\r\n        >\r\n          Feature Name\r\n        </th>\r\n\r\n        <td mat-cell *matCellDef=\"let element\" [routerLink]=\"'/features/view'\">\r\n          {{ element.name }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Features Column -->\r\n\r\n      <ng-container matColumnDef=\"type\">\r\n        <th mat-header-cell *matHeaderCellDef>Feature Type</th>\r\n\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          <p>{{ element.type }}</p>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Description Column -->\r\n\r\n      <ng-container matColumnDef=\"description\">\r\n        <th mat-header-cell *matHeaderCellDef>Description</th>\r\n\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element\"\r\n          class=\"description-col\"\r\n          [ngxTippy]=\"fullDescription\"\r\n          [tippyProps]=\"{ placement: 'right' }\"\r\n        >\r\n          <p>{{ element.description }}</p>\r\n\r\n          <ng-template #fullDescription let-name class=\"t-template\">\r\n            <div class=\"help-info-tooltip\">\r\n              <div class=\"heading-with-background\">Description</div>\r\n\r\n              <p class=\"py-3 black-text\">{{ element.description }}</p>\r\n            </div>\r\n          </ng-template>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Created Date Column -->\r\n\r\n      <ng-container matColumnDef=\"createdOn\">\r\n        <th mat-header-cell *matHeaderCellDef>Created On</th>\r\n\r\n        <td mat-cell *matCellDef=\"let element\" [routerLink]=\"'/features/view'\">\r\n          {{element.createdOn | date: 'd MMMM y'}}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Created Date Column -->\r\n\r\n      <ng-container matColumnDef=\"status\">\r\n        <th mat-header-cell *matHeaderCellDef>Status</th>\r\n\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element\"\r\n          [ngClass]=\"element.status\"\r\n          [routerLink]=\"'/features/view'\"\r\n        >\r\n          {{ element.status }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Created Date Column -->\r\n\r\n      <ng-container matColumnDef=\"action\">\r\n        <th mat-header-cell *matHeaderCellDef>Action</th>\r\n\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          <mat-icon\r\n            class=\"material-symbols-outlined\"\r\n            [matMenuTriggerFor]=\"actionsMenu\"\r\n          >\r\n            more_vert\r\n          </mat-icon>\r\n\r\n          <mat-menu\r\n            #actionsMenu=\"matMenu\"\r\n            class=\"actions-menu\"\r\n            backdropClass=\"edit-menu\"\r\n          >\r\n            <button\r\n              mat-menu-item\r\n              disableRipple\r\n              [routerLink]=\"['edit-feature/' + element.featureId]\"\r\n            >\r\n              Edit\r\n            </button>\r\n\r\n            <button\r\n              mat-menu-item\r\n              disableRipple\r\n              (click)=\"openDelete(element.featureId)\"\r\n            >\r\n              Delete\r\n            </button>\r\n          </mat-menu>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n\r\n      <tr\r\n        mat-row\r\n        *matRowDef=\"let row; columns: displayedColumns\"\r\n        [id]=\"row.id\"\r\n      ></tr>\r\n    </table>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-2\">\r\n      <div class=\"dataTables_length\">\r\n        <label\r\n          >Show\r\n\r\n          <select\r\n            [(ngModel)]=\"limit\"\r\n            (change)=\"this.getFeature(this.PageNumber, this.limit)\"\r\n          >\r\n            <option value=\"5\">5</option>\r\n\r\n            <option value=\"10\">10</option>\r\n\r\n            <option value=\"20\">20</option>\r\n\r\n            <option value=\"50\">50</option>\r\n\r\n            <option value=\"100\">100</option>\r\n          </select>\r\n\r\n          entries</label\r\n        >\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-10\" style=\"float: right; text-align: right\">\r\n      <div class=\"paginations\">\r\n        <div>\r\n          <div class=\"btn-group\" id=\"radioBtn\">\r\n            <a class=\"btn btn-primary btn-sm notActive\" (click)=\"onPrevious()\">\r\n              Previous\r\n            </a>\r\n\r\n            <a class=\"btn btn-primary btn-sm active\">{{ PageNumber }}</a>\r\n\r\n            <a class=\"btn btn-primary btn-sm notActive\" (click)=\"onNext()\"\r\n              >Next\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-5c4eefdf0aa5691050fcfce24e29d50819e270cd4a9cb72e19451eb964c917bd9b5ae308e5371bdb01641ba90a05e03f40199bb54724412c7282735cc987221c",
            "file": "src/stories/softobiz-ui/Input/input.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sft-input",
            "styleUrls": [
                "./input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hint",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "infoDetail",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "infoIcon",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "infoTitle",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "'Enter here...'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "readonly",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "errorState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 38
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation, Input } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NgxTippyModule } from 'ngx-tippy-wrapper';\r\n// import { ButtonVariant } from './types';\r\n\r\n@Component({\r\n  selector: 'sft-input',\r\n  templateUrl: './input.component.html',\r\n  styleUrls: ['./input.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class InputComponent {\r\n  @Input() label: string = 'Label';\r\n\r\n  @Input() readonly: boolean = false;\r\n\r\n  @Input() type: string;\r\n\r\n  @Input() placeholder: string = 'Enter here...';\r\n\r\n  @Input() hint?: string = '';\r\n\r\n  @Input() disable: boolean = false;\r\n\r\n  @Input() required: boolean = false;\r\n\r\n  @Input() infoIcon: boolean = false;\r\n\r\n  @Input() infoTitle: string = '';\r\n\r\n  @Input() infoDetail: string = '';\r\n\r\n  @Input() value: string = '';\r\n\r\n  @Input() class: string = '';\r\n\r\n  errorState: boolean;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./input.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"input-wrapper\">\r\n  <div class=\"flex align-center mb-2\">\r\n    <p class=\"mat-subtitle-2 font-weight-500 input-label\">{{ label }}</p>\r\n    <mat-icon\r\n      *ngIf=\"infoIcon\"\r\n      class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n      [ngxTippy]=\"helpinfotooltip\"\r\n      [tippyProps]=\"{ placement: 'right' }\"\r\n      >help</mat-icon\r\n    >\r\n    <ng-template #helpinfotooltip let-name>\r\n      <div class=\"help-info-tooltip\">\r\n        <div class=\"heading-with-background\">{{infoTitle}}</div>\r\n        <div class=\"details\">\r\n          {{infoDetail}}\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  </div>\r\n  <mat-form-field appearance=\"outline\" [class]=\"'border-2' + ' ' + class\">\r\n    <mat-hint *ngIf=\"hint\" align=\"start\"\r\n      ><strong>{{ hint }}</strong>\r\n    </mat-hint>\r\n    <input\r\n      [required]=\"required\"\r\n      matInput\r\n      [placeholder]=\"placeholder\"\r\n      formControlName=\"id\"\r\n      [readonly]=\"readonly\"\r\n      [disabled]=\"disable\"\r\n      [value]=\"value\"\r\n    />\r\n  </mat-form-field>\r\n</div>\r\n"
        },
        {
            "name": "InvoiceListComponent",
            "id": "component-InvoiceListComponent-fe9648df5019ff5cb4b2fa18c47bbc5c21de08ea78fd736e6943afc809340bb9b76a1973891d67c91d6f4356169b1c5783bd2dbe5f87aa33eb30605dfda92e74",
            "file": "src/app/modules/payment-history/invoices/components/invoice-list/invoice-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-invoice-list",
            "styleUrls": [
                "./invoice-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./invoice-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-invoice-list',\r\n  templateUrl: './invoice-list.component.html',\r\n  styleUrls: ['./invoice-list.component.scss']\r\n})\r\nexport class InvoiceListComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./invoice-list.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p>invoice-list works!</p>\r\n"
        },
        {
            "name": "InvoiceViewComponent",
            "id": "component-InvoiceViewComponent-dfc257c6968412c13d871c88caa08140761a4e560bf5b2e994629d0ef42e1f67c6b9235260e4c80dd6839888e147fc10add614c5ee3051778831f9de24d91dfd",
            "file": "src/app/modules/payment-history/invoices/components/invoice-view/invoice-view.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-invoice-view",
            "styleUrls": [
                "./invoice-view.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./invoice-view.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-invoice-view',\r\n  templateUrl: './invoice-view.component.html',\r\n  styleUrls: ['./invoice-view.component.scss']\r\n})\r\nexport class InvoiceViewComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./invoice-view.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p>invoice-view works!</p>\r\n"
        },
        {
            "name": "LayoutComponent",
            "id": "component-LayoutComponent-de97e5c23142b3e9bde717df5c3635326a0037467a112692a4adc10157b299fab0c6f539b5c225ec0bb933a2e51cff068c4f9ad7588a86c12a231ebe6617859c",
            "file": "src/app/core/layouts/layout/layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-layout",
            "styleUrls": [
                "./layout.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./layout.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "configOptions",
                    "defaultValue": "Config_Menu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "Menu_Headings",
                    "defaultValue": "Menu_Headings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "menuItems",
                    "defaultValue": "MENUITEMS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "notificationsData",
                    "defaultValue": "Notifications_Data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "opened",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "sidenav",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSidenav",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'sidenav'"
                        }
                    ]
                },
                {
                    "name": "userProfile",
                    "defaultValue": "User_Options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "getList",
                    "args": [
                        {
                            "name": "item",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "preventClose",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleSidenav",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewChild, Output, EventEmitter } from '@angular/core';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\nimport {\r\n  Config_Menu,\r\n  MENUITEMS,\r\n  User_Options,\r\n  Menu_Headings,\r\n  Notifications_Data,\r\n} from 'src/app/shared/constants/consants';\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.scss'],\r\n})\r\nexport class LayoutComponent {\r\n  menuItems = MENUITEMS;\r\n  configOptions = Config_Menu;\r\n  Menu_Headings = Menu_Headings;\r\n  userProfile = User_Options;\r\n  notificationsData = Notifications_Data;\r\n  constructor() {}\r\n\r\n  @ViewChild('sidenav') sidenav: MatSidenav;\r\n\r\n  opened: boolean = true;\r\n  toggleSidenav(event: any) {\r\n    this.sidenav.toggle();\r\n    this.opened = event;\r\n  }\r\n\r\n  getList(item: string) {\r\n    let list = [];\r\n    return (list = this.menuItems.filter((ele) => ele.category == item));\r\n  }\r\n  preventClose(event: any) {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./layout.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 20
            },
            "templateData": "<div class=\"outer-layout\">\r\n  <mat-sidenav-container [ngClass]=\"opened ? 'sidenav-open' : 'sidenav-closed'\">\r\n    <mat-sidenav #sidenav mode=\"side\" opened=\"true\" class=\"sidenav-slider\">\r\n      <app-sidebar (newItemEvent)=\"toggleSidenav($event)\"></app-sidebar>\r\n    </mat-sidenav>\r\n    <mat-sidenav-content>\r\n      <!-- Header for application starts here! -->\r\n      <div class=\"header-wrapper border-2\">\r\n        <div class=\"global-search basic mr-6 border-2\">\r\n          <span class=\"search-icon pointer\">\r\n            <img\r\n              src=\"../../../../assets/images/icons/search.svg\"\r\n              alt=\"search-icon\"\r\n            />\r\n          </span>\r\n          <input type=\"text\" placeholder=\"Search...\" />\r\n        </div>\r\n        <div class=\"header-right\">\r\n          <div\r\n            class=\"notifications-section pointer\"\r\n            [matMenuTriggerFor]=\"notificationsMenu\"\r\n            matBadge=\"3\"\r\n            matBadgeSize=\"small\"\r\n            matBadgeColor=\"warn\"\r\n          >\r\n            <img\r\n              src=\"../../../../assets/images/icons/notifications.svg\"\r\n              alt=\"notifications-icon\"\r\n            />\r\n          </div>\r\n          <mat-menu\r\n            #notificationsMenu=\"matMenu\"\r\n            class=\"notifications-menu border-2\"\r\n            backdropClass=\"right-menu\"\r\n          >\r\n            <div class=\"notifications-header\">\r\n              <div class=\"flex align-center justify-between\">\r\n                <div class=\"label\">Notifications</div>\r\n                <mat-chip class=\"basic-chip\"> 4 New </mat-chip>\r\n              </div>\r\n              <div class=\"tab-panel\" (click)=\"preventClose($event)\">\r\n                <mat-tab-group mat-stretch-tabs=\"false\" mat-align-tabs=\"start\">\r\n                  <mat-tab label=\"All (4)\">\r\n                    <div\r\n                      class=\"relative h-55\"\r\n                      *ngIf=\"notificationsData.length == 0\"\r\n                    >\r\n                      <div class=\"absolute position-center text-center w-full\">\r\n                        <img\r\n                          src=\"../../../../assets/images/notifications-icon.png\"\r\n                          alt=\"no data\"\r\n                        />\r\n                        <span class=\"block mt-6\">\r\n                          Hey! You have no notifications.\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      class=\"notification-list\"\r\n                      (click)=\"preventClose($event)\"\r\n                      *ngIf=\"notificationsData.length > 0\"\r\n                    ></div>\r\n                  </mat-tab>\r\n                  <mat-tab label=\"Messages\">\r\n                    <div\r\n                      class=\"relative h-55\"\r\n                      *ngIf=\"notificationsData.length == 0\"\r\n                    >\r\n                      <div class=\"absolute position-center text-center w-full\">\r\n                        <img\r\n                          src=\"../../../../assets/images/notifications-icon.png\"\r\n                          alt=\"no data\"\r\n                        />\r\n                        <span class=\"block mt-6\">\r\n                          Hey! You have no notifications.\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      class=\"message-list\"\r\n                      (click)=\"preventClose($event)\"\r\n                      *ngIf=\"notificationsData.length > 0\"\r\n                    >\r\n                      My Messages\r\n                    </div>\r\n                  </mat-tab>\r\n                  <mat-tab label=\"Alerts\">\r\n                    <div\r\n                      class=\"relative h-55\"\r\n                      *ngIf=\"notificationsData.length == 0\"\r\n                    >\r\n                      <div class=\"absolute position-center text-center w-full\">\r\n                        <img\r\n                          src=\"../../../../assets/images/notifications-icon.png\"\r\n                          alt=\"no data\"\r\n                        />\r\n                        <span class=\"block mt-6\">\r\n                          Hey! You have no notifications.\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      class=\"message-list\"\r\n                      (click)=\"preventClose($event)\"\r\n                      *ngIf=\"notificationsData.length > 0\"\r\n                    >\r\n                      Alerts\r\n                    </div>\r\n                  </mat-tab>\r\n                </mat-tab-group>\r\n              </div>\r\n              <div\r\n                class=\"text-center modal-footer pointer\"\r\n                (click)=\"preventClose($event)\"\r\n              >\r\n                <span class=\"block py-4\"> View All </span>\r\n              </div>\r\n            </div>\r\n          </mat-menu>\r\n          <div class=\"user-profile pointer\" [matMenuTriggerFor]=\"menu\">\r\n            <div class=\"user-image\">\r\n              <img src=\"../../../../assets/images/profile-avatar-1.png\" />\r\n            </div>\r\n            <div class=\"user-info\">\r\n              <span class=\"name\">John Smith</span>\r\n              <span class=\"role\">Founder</span>\r\n            </div>\r\n          </div>\r\n          <mat-menu\r\n            #menu=\"matMenu\"\r\n            class=\"profile-menu\"\r\n            backdropClass=\"alert-menu\"\r\n          >\r\n            <div class=\"profile-menu-outer\">\r\n              <div class=\"grad-bg\">\r\n                <div class=\"user-initials\">JS</div>\r\n              </div>\r\n              <div class=\"profile-inner\">\r\n                <p class=\"mat-h1 fw-600 m-0\">John Smith</p>\r\n                <p class=\"m-0 mt-1\">Founder</p>\r\n              </div>\r\n              <div class=\"profile-paths\">\r\n                <a\r\n                  class=\"flex align-center justify-between user-link\"\r\n                  *ngFor=\"let element of userProfile\"\r\n                >\r\n                  <div class=\"flex align-center\">\r\n                    <mat-icon class=\"material-symbols-outlined\">{{\r\n                      element.icon\r\n                    }}</mat-icon>\r\n                    <span class=\"ml-3\">{{ element.name }}</span>\r\n                  </div>\r\n                  <div *ngIf=\"element.toggle\">\r\n                    <mat-slide-toggle\r\n                      color=\"primary\"\r\n                      (click)=\"preventClose($event)\"\r\n                    ></mat-slide-toggle>\r\n                  </div>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </mat-menu>\r\n        </div>\r\n      </div>\r\n      <div class=\"pt-6 main-content-height\">\r\n        <router-outlet></router-outlet>\r\n      </div>\r\n    </mat-sidenav-content>\r\n  </mat-sidenav-container>\r\n</div>\r\n"
        },
        {
            "name": "LogsListComponent",
            "id": "component-LogsListComponent-a3b084a6109b0deed20ce4ae63849e6200ca065cc60e5f6559d1b74c50a801863be9157674d74596387a4c633e61b1033880fc7b21e3043c7e117274e5062424",
            "file": "src/app/modules/payment-history/logs/components/logs-list/logs-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-logs-list",
            "styleUrls": [
                "./logs-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./logs-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-logs-list',\r\n  templateUrl: './logs-list.component.html',\r\n  styleUrls: ['./logs-list.component.scss']\r\n})\r\nexport class LogsListComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./logs-list.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p>logs-list works!</p>\r\n"
        },
        {
            "name": "LogViewComponent",
            "id": "component-LogViewComponent-aa9aa7e8f66c21e6de72f73cd3dda117d285d6533e673c151fd877aed76461da5d249df3e3081db526c487f4f9eeed84b138775d1ca281a97f741cb111c7a3eb",
            "file": "src/app/modules/payment-history/logs/components/log-view/log-view.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-log-view",
            "styleUrls": [
                "./log-view.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./log-view.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-log-view',\r\n  templateUrl: './log-view.component.html',\r\n  styleUrls: ['./log-view.component.scss']\r\n})\r\nexport class LogViewComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./log-view.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p>log-view works!</p>\r\n"
        },
        {
            "name": "PageNotFoundComponent",
            "id": "component-PageNotFoundComponent-0cf36aa02a1a356295616bcc758c59b8bb95891721ff3ffa38706fd11e06e6f4e8873bf420964857ed2ac31ad602da3a624ca4e8b498760218a54b2dde5a5a06",
            "file": "src/app/shared/components/page-not-found/page-not-found.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-page-not-found",
            "styleUrls": [
                "./page-not-found.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./page-not-found.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "emptyData",
                    "defaultValue": "noPageFound",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { noPageFound } from '../../constants/consants';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.scss'],\r\n})\r\nexport class PageNotFoundComponent {\r\n  constructor() {}\r\n  emptyData = noPageFound;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./page-not-found.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "templateData": "<app-empty-listing [items]=\"emptyData\"></app-empty-listing>"
        },
        {
            "name": "PlanAddEmptyLayoutComponent",
            "id": "component-PlanAddEmptyLayoutComponent-5c4adc535bcb48b26d3d5b2a06daaae3b48d350d4d06099636d69f64dc45ef227e15ee119e1ecfa28989a4008ff442754d2afd22a5e89e092b32320e7443b575",
            "file": "src/app/modules/plans/components/plan-add-empty-layout/plan-add-empty-layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-plan-add-empty-layout",
            "styleUrls": [
                "./plan-add-empty-layout.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./plan-add-empty-layout.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "any[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "planAddEmptyData",
                    "defaultValue": "plan_add_empty_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { plan_add_empty_data } from 'src/app/shared/constants/consants';\r\n\r\n@Component({\r\n  selector: 'app-plan-add-empty-layout',\r\n  templateUrl: './plan-add-empty-layout.component.html',\r\n  styleUrls: ['./plan-add-empty-layout.component.scss']\r\n})\r\nexport class PlanAddEmptyLayoutComponent {\r\n  planAddEmptyData = plan_add_empty_data;\r\n\r\n  @Input() items: any[] = [];\r\n  constructor(){}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./plan-add-empty-layout.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "templateData": "<div *ngFor=\"let item of items\" class=\"plan-section-block flex-center border-2 p-11 mb-4\">\r\n  <div class=\"plan-info-block inner-wrapper\">\r\n    <div class=\"heading flex align-center\">\r\n      <img\r\n        src=\"{{ item.titleIcon }}\"\r\n        alt=\"{{ item.iconAlt }}\"\r\n      />\r\n      <h5 class=\"mat-headline-5 text-dark\">{{ item.title }}</h5>\r\n    </div>\r\n    <div class=\"empty-add-section mt-6 border-1\">\r\n      <div class=\"text-center\">\r\n        <p class=\"mat-body-1 text-dark-1\">\r\n          {{ item.subtitle }}\r\n        </p>\r\n        <button\r\n          mat-flat-button\r\n          color=\"primary\"\r\n          class=\"mt-11 large\"\r\n        >\r\n          {{ item.btnTitle }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "PlansListingComponent",
            "id": "component-PlansListingComponent-11b8ff7922beebd273aaca31498110379782baa1daf16ac9e910cf2639a5b5886120607d3e34e9a9265b39d21c32d2bfd023da3a9006691a1535941d007f5064",
            "file": "src/app/modules/plans/components/plans-listing/plans-listing.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-plans-listing",
            "styleUrls": [
                "./plans-listing.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./plans-listing.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "displayedColumns",
                    "defaultValue": "[\r\n    'select',\r\n    'plan_ID',\r\n    'external_name',\r\n    'internal_name',\r\n    'description',\r\n    'created_at',\r\n    'status',\r\n    'action',\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "emptyList",
                    "defaultValue": "noPlans",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "plansData",
                    "defaultValue": "Plans_Data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "plansFields[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "selection",
                    "defaultValue": "new SelectionModel<plansFields>(true, [])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "announceSortChange",
                    "args": [
                        {
                            "name": "sortState",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nAnnounce the change in sort state for assistive technology.",
                    "description": "<p>Announce the change in sort state for assistive technology.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "sortState",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "checkboxLabel",
                    "args": [
                        {
                            "name": "row",
                            "type": "plansFields",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nThe label for the checkbox on the passed row",
                    "description": "<p>The label for the checkbox on the passed row</p>\n",
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "plansFields",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isAllSelected",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhether the number of selected elements matches the total number of rows.",
                    "description": "<p>Whether the number of selected elements matches the total number of rows.</p>\n"
                },
                {
                    "name": "selectAll",
                    "args": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectedRow",
                    "args": [
                        {
                            "name": "selectedID",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "selectedID",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleAllRows",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSelects all rows if they are not all selected; otherwise clear selection.",
                    "description": "<p>Selects all rows if they are not all selected; otherwise clear selection.</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewChild } from '@angular/core';\r\nimport {\r\n  Plans_Data,\r\n  noPlans,\r\n  plansFields,\r\n} from 'src/app/shared/constants/consants';\r\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\n@Component({\r\n  selector: 'app-plans-listing',\r\n  templateUrl: './plans-listing.component.html',\r\n  styleUrls: ['./plans-listing.component.scss'],\r\n})\r\nexport class PlansListingComponent {\r\n  emptyList = noPlans;\r\n  plansData: plansFields[] = Plans_Data;\r\n  displayedColumns: string[] = [\r\n    'select',\r\n    'plan_ID',\r\n    'external_name',\r\n    'internal_name',\r\n    'description',\r\n    'created_at',\r\n    'status',\r\n    'action',\r\n  ];\r\n  selection = new SelectionModel<plansFields>(true, []);\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.plansData.length;\r\n    return numSelected === numRows;\r\n  }\r\n  constructor(private _liveAnnouncer: LiveAnnouncer) {}\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  toggleAllRows() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n    // console.log(this.selection.select)\r\n    this.selection.select(...this.plansData);\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: plansFields): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${\r\n      row.plan_ID + 1\r\n    }`;\r\n  }\r\n\r\n  /** Announce the change in sort state for assistive technology. */\r\n  announceSortChange(sortState: Sort) {\r\n    // This example uses English messages. If your application supports\r\n    // multiple language, you would internationalize these strings.\r\n    // Furthermore, you can customize the message to add additional\r\n    // details about the values being sorted.\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n  selectedRow(selectedID: string, event: any) {\r\n    const selectedRow = document.getElementById(`${selectedID}`);\r\n    if (selectedRow != null) {\r\n      selectedRow.classList.toggle('selected-row');\r\n    }\r\n    event.stopPropagation();\r\n  }\r\n  selectAll(data: any[]) {\r\n    if (this.isAllSelected()) {\r\n      data.map((element: any) => {\r\n        document.getElementById(element.id)?.classList.add('selected-row');\r\n      });\r\n    } else {\r\n      data.map((element: any) => {\r\n        document.getElementById(element.id)?.classList.remove('selected-row');\r\n      });\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./plans-listing.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_liveAnnouncer",
                        "type": "LiveAnnouncer",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 35,
                "jsdoctags": [
                    {
                        "name": "_liveAnnouncer",
                        "type": "LiveAnnouncer",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div\r\n  *ngIf=\"plansData.length == 0\"\r\n  class=\"relative main-bg border-2 w-full h-full p-7 overflow-scroll\"\r\n>\r\n  <app-empty-listing [items]=\"emptyList\"></app-empty-listing>\r\n</div>\r\n<div\r\n  *ngIf=\"plansData.length > 0\"\r\n  class=\"relative main-bg border-2 w-full h-full p-7 overflow-scroll\"\r\n>\r\n  <div class=\"flex justify-between align-center px-1\">\r\n    <div class=\"flex align-center\">\r\n      <h1 class=\"text-text text-dark\">Plans</h1>\r\n      <mat-chip class=\"chip-dark ml-3\">\r\n        {{ plansData.length }}\r\n      </mat-chip>\r\n    </div>\r\n    <div class=\"flex align-center\">\r\n      <div class=\"global-search light mr-6 border-2\">\r\n        <span class=\"search-icon pointer\">\r\n          <img\r\n            src=\"../../../../assets/images/icons/search.svg\"\r\n            alt=\"search-icon\"\r\n          />\r\n        </span>\r\n        <input type=\"text\" placeholder=\"Search anything...\" />\r\n      </div>\r\n      <button\r\n        mat-flat-button\r\n        color=\"primary\"\r\n        class=\"create-btn\"\r\n        [routerLink]=\"['create']\"\r\n      >\r\n        <mat-icon class=\"material-symbols-outlined m-0 white-text\"\r\n          >add_circle</mat-icon\r\n        >\r\n        <span class=\"text-nowrap block ml-2 letter-spacing-0\">Create Plan</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"primary-table mt-8 px-1 pb-2\">\r\n    <table\r\n      mat-table\r\n      [dataSource]=\"plansData\"\r\n      matSort\r\n      (matSortChange)=\"announceSortChange($event)\"\r\n    >\r\n      <!--- Note that these columns can be defined in any order.\r\n            The actual rendered columns are set as a property on the row definition\" -->\r\n      <ng-container matColumnDef=\"select\">\r\n        <th mat-header-cell *matHeaderCellDef>\r\n          <mat-checkbox\r\n            color=\"primary\"\r\n            (click)=\"selectAll(plansData)\"\r\n            (change)=\"$event ? toggleAllRows() : null\"\r\n            [checked]=\"selection.hasValue() && isAllSelected()\"\r\n            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n            [aria-label]=\"checkboxLabel()\"\r\n          >\r\n          </mat-checkbox>\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let row\">\r\n          <mat-checkbox\r\n            color=\"primary\"\r\n            (click)=\"selectedRow(row.id, $event)\"\r\n            (change)=\"$event ? selection.toggle(row) : null\"\r\n            [checked]=\"selection.isSelected(row)\"\r\n            [aria-label]=\"checkboxLabel(row)\"\r\n          >\r\n          </mat-checkbox>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Product ID Column -->\r\n      <ng-container matColumnDef=\"plan_ID\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>#Plan ID</th>\r\n        <td mat-cell *matCellDef=\"let element\" [routerLink]=\"'/plans/view'\">\r\n          {{ element.plan_ID }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Product Name Column -->\r\n      <ng-container matColumnDef=\"external_name\">\r\n        <th\r\n          mat-header-cell\r\n          *matHeaderCellDef\r\n          mat-sort-header\r\n          sortActionDescription=\"Sort by title\"\r\n        >\r\n          External Name\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let element\" [routerLink]=\"'/plans/view'\">\r\n          {{ element.external_name }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Product Name Column -->\r\n      <ng-container matColumnDef=\"internal_name\">\r\n        <th\r\n          mat-header-cell\r\n          *matHeaderCellDef\r\n          mat-sort-header\r\n          sortActionDescription=\"Sort by title\"\r\n        >\r\n          Internal Name\r\n        </th>\r\n        featuresData\r\n        <td mat-cell *matCellDef=\"let element\" [routerLink]=\"'/plans/view'\">\r\n          {{ element.internal_name }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Description Column -->\r\n      <ng-container matColumnDef=\"description\">\r\n        <th mat-header-cell *matHeaderCellDef>Description</th>\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element\"\r\n          class=\"description-col\"\r\n          [ngxTippy]=\"fullDescription\"\r\n          [tippyProps]=\"{ placement: 'right', interactive: true }\"\r\n        >\r\n          <p>{{ element.description }}</p>\r\n          <ng-template #fullDescription let-name class=\"t-template\">\r\n            <div class=\"help-info-tooltip\">\r\n              <div class=\"heading-with-background\">Description</div>\r\n              <p class=\"py-3 black-text\">{{ element.description }}</p>\r\n            </div>\r\n          </ng-template>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Created Date Column -->\r\n      <ng-container matColumnDef=\"created_at\">\r\n        <th mat-header-cell *matHeaderCellDef>Created On</th>\r\n        <td mat-cell *matCellDef=\"let element\" [routerLink]=\"'/plans/view'\">\r\n          {{ element.created_at }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Created Date Column -->\r\n      <ng-container matColumnDef=\"status\">\r\n        <th mat-header-cell *matHeaderCellDef>Status</th>\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element\"\r\n          [ngClass]=\"element.status\"\r\n          [routerLink]=\"'/plans/view'\"\r\n        >\r\n          {{ element.status }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Created Date Column -->\r\n      <ng-container matColumnDef=\"action\">\r\n        <th mat-header-cell *matHeaderCellDef>Action</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          <mat-icon\r\n            class=\"material-symbols-outlined\"\r\n            [matMenuTriggerFor]=\"actionsMenu\"\r\n          >\r\n            more_vert\r\n          </mat-icon>\r\n          <mat-menu\r\n            #actionsMenu=\"matMenu\"\r\n            class=\"actions-menu\"\r\n            backdropClass=\"edit-menu\"\r\n          >\r\n            <button mat-menu-item disableRipple>Edit</button>\r\n            <button mat-menu-item disableRipple>Delete</button>\r\n          </mat-menu>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr\r\n        mat-row\r\n        *matRowDef=\"let row; columns: displayedColumns\"\r\n        [id]=\"row.id\"\r\n      ></tr>\r\n    </table>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ProductDetailsComponent",
            "id": "component-ProductDetailsComponent-6e49e1d7e83d223f6a4a2bbc54f7004b6e19e65e1e8a67264250f93e8c5ba1ba269e6f49d9ccb26891cc6dacb5e37f725fbce9ffc041ab848492acbb844d4923",
            "file": "src/app/modules/plans/components/product-details/product-details.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-product-details",
            "styleUrls": [
                "./product-details.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./product-details.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "defaultValue": "new MatTableDataSource<PeriodicElement>(ELEMENT_DATA)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "[\r\n    'select',\r\n    'position',\r\n    'name',\r\n    'status',     \r\n    'symbol',\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "selected",
                    "defaultValue": "'option1'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "selection",
                    "defaultValue": "new SelectionModel<PeriodicElement>(true, [])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                }
            ],
            "methodsClass": [
                {
                    "name": "checkboxLabel",
                    "args": [
                        {
                            "name": "row",
                            "type": "PeriodicElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nThe label for the checkbox on the passed row",
                    "description": "<p>The label for the checkbox on the passed row</p>\n",
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "PeriodicElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isAllSelected",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhether the number of selected elements matches the total number of rows.",
                    "description": "<p>Whether the number of selected elements matches the total number of rows.</p>\n"
                },
                {
                    "name": "toggleAllRows",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSelects all rows if they are not all selected; otherwise clear selection.",
                    "description": "<p>Selects all rows if they are not all selected; otherwise clear selection.</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  position: number | string;\r\n  status: string;\r\n  symbol: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  { position: 'Whiteboard', name: 'Hydrogen', status: \"Active\", symbol: 'Available' },\r\n  { position: 'Email support', name: 'Custom', status: \"Active\", symbol: 'Available' },\r\n  { position: 'Whiteboard', name: 'Hydrogen', status: \"Active\", symbol: 'Available' },\r\n  { position: 'Email support', name: 'Custom', status: \"Active\", symbol: 'Available' },\r\n  { position: 'Whiteboard', name: 'Hydrogen', status: \"Active\", symbol: 'Available' },\r\n  { position: 'Email support', name: 'Custom', status: \"Active\", symbol: 'Available' },\r\n  { position: 'Whiteboard', name: 'Hydrogen', status: \"Active\", symbol: 'Available' },\r\n  { position: 'Email support', name: 'Custom', status: \"Active\", symbol: 'Available' },\r\n  { position: 'Whiteboard', name: 'Hydrogen', status: \"Active\", symbol: 'Available' },\r\n  { position: 'Email support', name: 'Custom', status: \"Active\", symbol: 'Available' },\r\n];\r\n\r\n@Component({\r\n  selector: 'app-product-details',\r\n  templateUrl: './product-details.component.html',\r\n  styleUrls: ['./product-details.component.scss'],\r\n})\r\nexport class ProductDetailsComponent {\r\n  selected = 'option1';\r\n  displayedColumns: string[] = [\r\n    'select',\r\n    'position',\r\n    'name',\r\n    'status',     \r\n    'symbol',\r\n  ];\r\n  dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\r\n  selection = new SelectionModel<PeriodicElement>(true, []);\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  toggleAllRows() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n\r\n    this.selection.select(...this.dataSource.data);\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: PeriodicElement): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row `;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./product-details.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"plan-product-details main-bg w-full h-full overflow-auto border-2 py-8 pl-11 pr-10\">\r\n  <div class=\"flex align-center mb-2\">\r\n    <mat-icon\r\n      class=\"material-symbols-outlined pointer\"\r\n      color=\"primary\"\r\n      [routerLink]=\"'/features'\"\r\n      >keyboard_backspace</mat-icon\r\n    >\r\n    <span class=\"mat-h1 primary-text text-main ml-2\">Create Plan</span>\r\n  </div>\r\n  <div class=\"flex align-center\">\r\n    <span class=\"pl-8 grey-text text-lighten-9\"> Create plan </span>\r\n    <mat-icon class=\"material-symbols-outlined mx-2 small-icon\">\r\n      chevron_right\r\n    </mat-icon>\r\n    <span class=\"shades-text text-black fw-500\">Add Product</span>\r\n  </div>\r\n  <div class=\"mt-8\">\r\n    <div class=\"py-2\">\r\n      <div class=\"input-wrapper\">\r\n        <div class=\"flex align-center mb-2\">\r\n          <p class=\"mat-subtitle-2 font-weight-500 input-label\">Product</p>\r\n          <mat-icon\r\n            class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n            [ngxTippy]=\"producthelpinfotooltip\"\r\n            [tippyProps]=\"{ placement: 'right' }\"\r\n            >help</mat-icon\r\n          >\r\n          <ng-template #producthelpinfotooltip let-name>\r\n            <div class=\"help-info-tooltip\">\r\n              <div class=\"heading-with-background\">Product</div>\r\n              <div class=\"details\">\r\n                Please select the product to include it in the Plan\r\n              </div>\r\n              <button mat-button color=\"primary\" class=\"px-0\">\r\n                Learn more\r\n              </button>\r\n            </div>\r\n          </ng-template>\r\n        </div>\r\n        <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n          <mat-select required formControlName=\"productID\" placeholder=\"select\">\r\n            <mat-option> Microsoft Teams </mat-option>\r\n            <mat-option> Google </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <div>\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label disabled\">\r\n              Product Name\r\n            </p>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <input matInput disabled placeholder=\"Select\" />\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div>\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label disabled\">\r\n              Description\r\n            </p>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <textarea matInput disabled placeholder=\"Enter \"></textarea>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"add-product-table\">\r\n          <p class=\"mat-subtitle-2 font-weight-500 text-primary py-2 mb-3 table-heading\">\r\n            Feature for this plan\r\n          </p>\r\n          <div class=\"relative main-bg border-2\">\r\n            <div class=\"checked-stripe-table\">\r\n              <table mat-table [dataSource]=\"dataSource\">\r\n                <!-- Checkbox Column -->\r\n                <ng-container matColumnDef=\"select\">\r\n                  <th mat-header-cell *matHeaderCellDef>\r\n                    <mat-checkbox\r\n                      (change)=\"$event ? toggleAllRows() : null\"\r\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                      [aria-label]=\"checkboxLabel()\"\r\n                    >\r\n                    </mat-checkbox>\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let row\">\r\n                    <mat-checkbox\r\n                      (click)=\"$event.stopPropagation()\"\r\n                      (change)=\"$event ? selection.toggle(row) : null\"\r\n                      [checked]=\"selection.isSelected(row)\"\r\n                      [aria-label]=\"checkboxLabel(row)\"\r\n                    >\r\n                    </mat-checkbox>\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <!-- Position Column -->\r\n                <ng-container matColumnDef=\"position\">\r\n                  <th mat-header-cell *matHeaderCellDef class=\"font-weight-500\">\r\n                    Name\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let element\">\r\n                    {{ element.position }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <!-- Name Column -->\r\n                <ng-container matColumnDef=\"name\">\r\n                  <th mat-header-cell *matHeaderCellDef class=\"font-weight-500\">\r\n                    Type\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\r\n                </ng-container>\r\n\r\n                <!-- Weight Column -->\r\n                <ng-container matColumnDef=\"status\">\r\n                  <th mat-header-cell *matHeaderCellDef class=\"font-weight-500\">\r\n                    Status\r\n                  </th>\r\n                  <td\r\n                    mat-cell\r\n                    *matCellDef=\"let element\"\r\n                    [ngClass]=\"element.status\"\r\n                  >\r\n                    {{ element.status }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <!-- Symbol Column -->\r\n                <ng-container matColumnDef=\"symbol\">\r\n                  <th mat-header-cell *matHeaderCellDef class=\"font-weight-500\">\r\n                    Entitlements\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let element\">\r\n                    <mat-form-field appearance=\"fill\" subscriptSizing=\"dynamic\">\r\n                      <mat-select [(value)]=\"selected\" errorState=\"false\">\r\n                        <mat-option value=\"option1\">Available</mat-option>\r\n                        <mat-option value=\"option2\">Not available</mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr\r\n                  mat-row\r\n                  *matRowDef=\"let row; columns: displayedColumns\"\r\n                  (click)=\"selection.toggle(row)\"\r\n                ></tr>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ProductListingComponent",
            "id": "component-ProductListingComponent-b151abeed094e44681b389c495949ba26fc3d02d775c45e6b71fa5e497bb1ff740808b9c543f4fadb1b764da8b4610025edb2e4a9e4b3c8964bf19d9147b684e",
            "file": "src/app/modules/products/components/product-listing/product-listing.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-product-listing",
            "styleUrls": [
                "./product-listing.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./product-listing.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data$",
                    "defaultValue": "this.productService.product$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "[\r\n    'productId',\r\n    'name',\r\n    'description',\r\n    'feature',\r\n    'createdOn',\r\n    'status',\r\n    'action',\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "emptyProductPros",
                    "defaultValue": "noProducts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "filteredProducts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Data_Type[]",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "limit",
                    "defaultValue": "5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "PageNumber",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "productsData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "search",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "searchQuery",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "searchQueryChanged",
                    "defaultValue": "new Subject<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<string>",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "searchSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "selection",
                    "defaultValue": "new SelectionModel<Data_Type>(true, [])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "announceSortChange",
                    "args": [
                        {
                            "name": "sortState",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 156,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "sortState",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "checkboxLabel",
                    "args": [
                        {
                            "name": "row",
                            "type": "Data_Type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 147,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nThe label for the checkbox on the passed row",
                    "description": "<p>The label for the checkbox on the passed row</p>\n",
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "Data_Type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getProduct",
                    "args": [
                        {
                            "name": "PageNumber",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "search",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "PageNumber",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "search",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isAllSelected",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhether the number of selected elements matches the total number of rows.",
                    "description": "<p>Whether the number of selected elements matches the total number of rows.</p>\n"
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onNext",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onPrevious",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSearchInput",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openDelete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectAll",
                    "args": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 172,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectedRow",
                    "args": [
                        {
                            "name": "selectedID",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 164,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "selectedID",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sendElementId",
                    "args": [
                        {
                            "name": "elementId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "elementId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleAllRows",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 138,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSelects all rows if they are not all selected; otherwise clear selection.",
                    "description": "<p>Selects all rows if they are not all selected; otherwise clear selection.</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { SelectionModel } from '@angular/cdk/collections';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { ProductsService } from '../../services/products.service';\r\nimport {\r\n  Subject,\r\n  Subscription,\r\n  debounceTime,\r\n  distinctUntilChanged,\r\n} from 'rxjs';\r\nimport { Data_Type, noProducts } from 'src/app/shared/constants/consants';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DeleteConfirmationComponent } from 'src/app/shared/components/dialog-box/delete-confirmation/delete-confirmation.component';\r\n\r\n@Component({\r\n  selector: 'app-product-listing',\r\n  templateUrl: './product-listing.component.html',\r\n  styleUrls: ['./product-listing.component.scss'],\r\n})\r\nexport class ProductListingComponent implements OnInit {\r\n  loading = false;\r\n  id: string = '';\r\n  displayedColumns: string[] = [\r\n    'productId',\r\n    'name',\r\n    'description',\r\n    'feature',\r\n    'createdOn',\r\n    'status',\r\n    'action',\r\n  ];\r\n  emptyProductPros = noProducts;\r\n  PageNumber = 1;\r\n  limit = 5;\r\n  search: string = '';\r\n  productsData = [];\r\n  filteredProducts: Data_Type[];\r\n\r\n  selection = new SelectionModel<Data_Type>(true, []);\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  searchQuery: string;\r\n  private searchQueryChanged: Subject<string> = new Subject<string>();\r\n  private searchSubscription: Subscription;\r\n  dialogRef: any;\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.productsData.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  constructor(\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    public dialog: MatDialog,\r\n    protected productService: ProductsService\r\n  ) {}\r\n\r\n  onSearchInput() {\r\n    this.searchQueryChanged.next(this.searchQuery);\r\n  }\r\n\r\n  data$ = this.productService.product$;\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    this.getProduct(this.PageNumber, this.limit, this.search);\r\n    this.productService.product$.subscribe((data) => {\r\n      if (data) {\r\n        this.productsData = data;\r\n        this.filteredProducts = data;\r\n        this.loading = false;\r\n      }\r\n    });\r\n\r\n    this.searchSubscription = this.searchQueryChanged\r\n      .pipe(debounceTime(500), distinctUntilChanged())\r\n      .subscribe((value) => {\r\n        this.loading = true;\r\n        this.search = value;\r\n        this.getProduct(this.PageNumber, this.limit, this.search);\r\n      });\r\n  }\r\n\r\n  getProduct(PageNumber: number, limit: number, search: string) {\r\n    this.loading = true;\r\n    this.productService\r\n      .getProducts(this.PageNumber, this.limit, this.search)\r\n      .subscribe(() => {\r\n        this.loading = false;\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.searchSubscription) {\r\n      this.searchSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  onPrevious() {\r\n    if (this.PageNumber > 1) {\r\n      this.PageNumber--;\r\n      this.getProduct(this.PageNumber, this.limit, this.search);\r\n    }\r\n  }\r\n\r\n  onNext() {\r\n    this.PageNumber++;\r\n    this.getProduct(this.PageNumber, this.limit, this.search);\r\n  }\r\n\r\n  sendElementId(elementId: string) {\r\n    console.log(elementId);\r\n\r\n    this.productService.deleteProduct(elementId).subscribe(() => {\r\n      this.data$.subscribe((data) => {});\r\n    });\r\n  }\r\n  openDelete(id: any) {\r\n    this.dialogRef = this.dialog.open(DeleteConfirmationComponent, {\r\n      width: '420px',\r\n      panelClass: 'dialog-curved',\r\n    });\r\n\r\n    this.dialogRef.afterClosed().subscribe((res: any) => {\r\n      if (res) {\r\n        console.log(res);\r\n\r\n        this.sendElementId(id);\r\n      } else {\r\n        console.log('Delete canceled');\r\n      }\r\n    });\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  toggleAllRows() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n    this.selection.select(...this.productsData);\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: Data_Type): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${\r\n      row.product_ID + 1\r\n    }`;\r\n  }\r\n\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n\r\n  selectedRow(selectedID: string, event: any) {\r\n    const selectedRow = document.getElementById(`${selectedID}`);\r\n    if (selectedRow != null) {\r\n      selectedRow.classList.toggle('selected-row');\r\n    }\r\n    event.stopPropagation();\r\n  }\r\n\r\n  selectAll(data: any[]) {\r\n    if (this.isAllSelected()) {\r\n      data.map((element: any) => {\r\n        document.getElementById(element.id)?.classList.add('selected-row');\r\n      });\r\n    } else {\r\n      data.map((element: any) => {\r\n        document.getElementById(element.id)?.classList.remove('selected-row');\r\n      });\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".loader {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(249, 246, 246, 0.477);\r\n  z-index: 9999;\r\n}\r\n\r\n.loader mat-spinner {\r\n  margin-right: 10px;\r\n}",
                    "styleUrl": "./product-listing.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_liveAnnouncer",
                        "type": "LiveAnnouncer",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 53,
                "jsdoctags": [
                    {
                        "name": "_liveAnnouncer",
                        "type": "LiveAnnouncer",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"loader\" *ngIf=\"loading\">\r\n  <mat-spinner></mat-spinner>\r\n  <!-- <span>Loading...</span> -->\r\n</div>\r\n<div\r\n  *ngIf=\"productsData?.length == 0\"\r\n  class=\"relative main-bg border-2 w-full h-full p-7 overflow-scroll\"\r\n>\r\n  <app-empty-listing [items]=\"emptyProductPros\"></app-empty-listing>\r\n</div>\r\n<div\r\n  *ngIf=\"productsData.length > 0\"\r\n  class=\"relative main-bg border-2 w-full h-full py-6 pl-5 pr-6 overflow-scroll\"\r\n>\r\n  <div class=\"flex justify-between align-center px-1\">\r\n    <div class=\"flex align-center\">\r\n      <h1 class=\"text-text text-dark\">Products</h1>\r\n      <mat-chip class=\"chip-dark ml-3\">\r\n        {{ productsData.length }}\r\n      </mat-chip>\r\n    </div>\r\n    <div class=\"flex align-center\">\r\n      <div class=\"global-search light mr-6 border-2\">\r\n        <span class=\"search-icon pointer\">\r\n          <img\r\n            src=\"../../../../assets/images/icons/search.svg\"\r\n            alt=\"search-icon\"\r\n          />\r\n        </span>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search anything...\"\r\n          [(ngModel)]=\"searchQuery\"\r\n          (input)=\"onSearchInput()\"\r\n        />\r\n        <div class=\"loader\" *ngIf=\"loading\">\r\n          <mat-spinner></mat-spinner>\r\n          <!-- <span>Loading...</span> -->\r\n        </div>\r\n      </div>\r\n      <button\r\n        mat-flat-button\r\n        color=\"primary\"\r\n        class=\"create-btn\"\r\n        [routerLink]=\"['create']\"\r\n      >\r\n        <mat-icon class=\"material-symbols-outlined m-0 white-text\"\r\n          >add_circle</mat-icon\r\n        >\r\n        <span class=\"text-nowrap block ml-2 letter-spacing-0\"\r\n          >Create Product</span\r\n        >\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"primary-table mt-8 px-1 pb-2\">\r\n    <table\r\n      mat-table\r\n      [dataSource]=\"filteredProducts\"\r\n      matSort\r\n      (matSortChange)=\"announceSortChange($event)\"\r\n    >\r\n      <!-- Product ID Column -->\r\n      <ng-container matColumnDef=\"productId\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>#ID</th>\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element\"\r\n          [routerLink]=\"['/products/view-product/' + element.productId]\"\r\n        >\r\n          {{ element.productId }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Product Name Column -->\r\n      <ng-container matColumnDef=\"name\">\r\n        <th\r\n          mat-header-cell\r\n          *matHeaderCellDef\r\n          mat-sort-header\r\n          sortActionDescription=\"Sort by title\"\r\n        >\r\n          Product Name\r\n        </th>\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element\"\r\n          [routerLink]=\"'/products/' + element.id\"\r\n        >\r\n          {{ element.name }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Description Column -->\r\n      <ng-container matColumnDef=\"description\">\r\n        <th mat-header-cell *matHeaderCellDef>Description</th>\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element\"\r\n          class=\"description-col\"\r\n          [ngxTippy]=\"fullDescription\"\r\n          [tippyProps]=\"{ placement: 'right' }\"\r\n        >\r\n          <p>{{ element.description }}</p>\r\n          <ng-template #fullDescription let-name class=\"t-template\">\r\n            <div class=\"help-info-tooltip\">\r\n              <div class=\"heading-with-background\">Description</div>\r\n              <p class=\"py-3 black-text\">{{ element.description }}</p>\r\n            </div>\r\n          </ng-template>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Features Column -->\r\n      <ng-container matColumnDef=\"feature\">\r\n        <th mat-header-cell *matHeaderCellDef>Features</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          <div\r\n            class=\"flex align-center\"\r\n            [ngxTippy]=\"featureListinfo\"\r\n            [tippyProps]=\"{ placement: 'right' }\"\r\n          >\r\n            <mat-chip\r\n              *ngIf=\"element.feature.length > 0\"\r\n              class=\"table-chip m-2 ml-0\"\r\n              disableRipple\r\n              >{{ element.feature[0].name }}</mat-chip\r\n            >\r\n            <mat-chip\r\n              *ngIf=\"element.feature.length > 1\"\r\n              class=\"table-chip m-2 ml-0 pointer\"\r\n              >+{{ element.feature.length - 1 }}</mat-chip\r\n            >\r\n            <ng-template #featureListinfo let-name class=\"t-template\">\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Features</div>\r\n                <div *ngFor=\"let feature of element.feature\">\r\n                  <button mat-button color=\"primary\" class=\"p-2 py-3\">\r\n                    {{ feature.name }}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Created Date Column  -->\r\n      <ng-container matColumnDef=\"createdOn\">\r\n        <th mat-header-cell *matHeaderCellDef>Created On</th>\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element\"\r\n          [routerLink]=\"'/products/' + element.id\"\r\n        >\r\n          {{ element.createdOn | date: 'd MMMM y'}}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Created Date Column -->\r\n      <ng-container matColumnDef=\"status\">\r\n        <th mat-header-cell *matHeaderCellDef>Status</th>\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let element\"\r\n          [ngClass]=\"element.status\"\r\n          [routerLink]=\"'/products/' + element.id\"\r\n        >\r\n          {{ element.status }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"action\">\r\n        <th mat-header-cell *matHeaderCellDef>Action</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          <mat-icon\r\n            class=\"material-symbols-outlined\"\r\n            [matMenuTriggerFor]=\"actionsMenu\"\r\n          >\r\n            more_vert\r\n          </mat-icon>\r\n          <mat-menu\r\n            #actionsMenu=\"matMenu\"\r\n            class=\"actions-menu\"\r\n            backdropClass=\"edit-menu\"\r\n          >\r\n            <button\r\n              mat-menu-item\r\n              disableRipple\r\n              [routerLink]=\"['edit-product/' + element.productId]\"\r\n            >\r\n              Edit\r\n            </button>\r\n            <button\r\n              mat-menu-item\r\n              disableRipple\r\n              (click)=\"openDelete(element.productId)\"\r\n            >\r\n              Delete\r\n            </button>\r\n          </mat-menu>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr\r\n        mat-row\r\n        *matRowDef=\"let row; columns: displayedColumns\"\r\n        class=\"pointer\"\r\n        [id]=\"row.id\"\r\n      ></tr>\r\n    </table>\r\n    <div class=\"row\">\r\n      <div class=\"col-2\">\r\n        <div class=\"dataTables_length\">\r\n          <label\r\n            >Show\r\n\r\n            <select\r\n              [(ngModel)]=\"limit\"\r\n              (change)=\"\r\n                this.getProduct(this.PageNumber, this.limit, this.search)\r\n              \"\r\n            >\r\n              <option value=\"5\">5</option>\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"50\">50</option>\r\n              <option value=\"100\">100</option>\r\n            </select>\r\n\r\n            entries</label\r\n          >\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-md-10\" style=\"float: right; text-align: right\">\r\n        <div class=\"paginations\">\r\n          <div>\r\n            <div class=\"btn-group\" id=\"radioBtn\">\r\n              <a\r\n                class=\"btn btn-primary btn-sm notActive\"\r\n                (click)=\"onPrevious()\"\r\n              >\r\n                Previous\r\n              </a>\r\n              <a class=\"btn btn-primary btn-sm active\">{{ PageNumber }}</a>\r\n              <a class=\"btn btn-primary btn-sm notActive\" (click)=\"onNext()\"\r\n                >Next\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "SetPriceComponent",
            "id": "component-SetPriceComponent-09688fdc3f25d43eded010e44cd1e5809ec4d1edf97e02e410762aec6c55d3760a7d80edcab556d3c9a2eb58da26fe852294547fa9daba50aca127da1b703f7b",
            "file": "src/app/modules/plans/components/set-price/set-price.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-set-price",
            "styleUrls": [
                "./set-price.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./set-price.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "monthlyBilling",
                    "defaultValue": "['3', '4', '5']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "periodUnit",
                    "defaultValue": "periodUnit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "previePrice",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "pricingModelTypes",
                    "defaultValue": "pricingModels",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "selectOptions[]",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "readOnly",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "selectedTab",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "setPriceForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addTiers",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "checkIndex",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 134,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "cycleValue",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 114,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteTier",
                    "args": [
                        {
                            "name": "tierIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tierIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getLevelList",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPreviewPrice",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 150,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "lastObj",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onTabChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "MatTabChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MatTabChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "secondLastObj",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setPeriod",
                    "args": [
                        {
                            "name": "periodSelected",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "periodSelected",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setStartingValue",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 142,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "submitValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 127,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport {\r\n  FormArray,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport {\r\n  pricingModels,\r\n  selectOptions,\r\n  periodUnit,\r\n} from 'src/app/shared/constants/consants';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\n@Component({\r\n  selector: 'app-set-price',\r\n  templateUrl: './set-price.component.html',\r\n  styleUrls: ['./set-price.component.scss'],\r\n})\r\nexport class SetPriceComponent {\r\n  pricingModelTypes: selectOptions[] = pricingModels;\r\n  periodUnit: string[] = periodUnit;\r\n  selectedTab: number = 0;\r\n  previePrice: number = 0;\r\n  monthlyBilling = ['3', '4', '5'];\r\n  readOnly: boolean = false;\r\n  public setPriceForm: FormGroup;\r\n  constructor(private form: FormBuilder) {}\r\n  ngOnInit() {\r\n    this.setPriceForm = this.form.group({\r\n      id: ['', Validators.required],\r\n      planID: ['', Validators.required],\r\n      name: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n      invoiceNotes: ['', Validators.required],\r\n      currencyCode: ['', Validators.required],\r\n      pricingModel: ['', Validators.required],\r\n      price: ['', Validators.required],\r\n      periodUnit: ['daily', Validators.required],\r\n      period: ['', Validators.required],\r\n      trialPeriodUnit: ['', Validators.required],\r\n      trialPeriod: ['', Validators.required],\r\n      isExpirable: [true],\r\n      noOfCycle: ['', Validators.required],\r\n      status: [false],\r\n      tiers: this.form.array([\r\n        this.form.group({\r\n          startingUnit: { value: '1', disabled: true },\r\n          endingUnit: { value: '& above', disabled: true },\r\n          price: [''],\r\n        }),\r\n      ]),\r\n    });\r\n  }\r\n  getLevelList(index: number) {\r\n    const tierList = this.tiers.at(index) as FormGroup;\r\n    return tierList;\r\n  }\r\n  setPeriod(periodSelected: string) {\r\n    this.setPriceForm.patchValue({\r\n      periodUnit: periodSelected,\r\n    });\r\n  }\r\n  get tiers() {\r\n    return this.setPriceForm.controls['tiers'] as FormArray;\r\n  }\r\n  lastObj() {\r\n    const checkCurrent = this.tiers.length - 1;\r\n    return this.getLevelList(checkCurrent);\r\n  }\r\n  secondLastObj() {\r\n    const checkPrev = this.tiers.length - 2;\r\n    return this.getLevelList(checkPrev);\r\n  }\r\n  addTiers() {\r\n    this.tiers.push(\r\n      this.form.group({\r\n        startingUnit: { value: '', disabled: true },\r\n        endingUnit: [''],\r\n        price: [''],\r\n      })\r\n    );\r\n\r\n    const lastIdx = this.lastObj();\r\n    const prevIdx = this.secondLastObj();\r\n    console.log('check', lastIdx, prevIdx);\r\n    lastIdx.patchValue({\r\n      endingUnit: '& above',\r\n    });\r\n    lastIdx.get('endingUnit')?.disable();\r\n    prevIdx.patchValue({\r\n      endingUnit: '',\r\n    });\r\n    prevIdx.get('endingUnit')?.enable();\r\n  }\r\n  onTabChange(event: MatTabChangeEvent): void {\r\n    this.selectedTab = event.index;\r\n    if (this.selectedTab == 0) {\r\n      this.setPeriod('daily');\r\n    } else if (this.selectedTab == 1) {\r\n      this.setPeriod('weekly');\r\n    } else if (this.selectedTab == 2) {\r\n      this.setPeriod('monthly');\r\n    } else if (this.selectedTab == 3) {\r\n      this.setPeriod('yearly');\r\n    }\r\n  }\r\n  deleteTier(tierIndex: number) {\r\n    this.tiers.removeAt(tierIndex);\r\n    const lastIdx = this.lastObj();\r\n    lastIdx.get('endingUnit')?.setValue('& Above');\r\n    lastIdx.get('endingUnit')?.disable();\r\n  }\r\n  cycleValue(event: any) {\r\n    if (event.value === '1') {\r\n      this.setPriceForm.patchValue({\r\n        noOfCycle: '2',\r\n        isExpirable: true,\r\n      });\r\n    } else if (event.value === '2') {\r\n      this.setPriceForm.patchValue({\r\n        noOfCycle: '0',\r\n        isExpirable: false,\r\n      });\r\n    }\r\n  }\r\n  submitValues() {\r\n    if (!this.monthlyBilling.includes(this.setPriceForm.value.pricingModel)) {\r\n      this.tiers.clear()\r\n      console.log('test what is here', this.setPriceForm.getRawValue());\r\n    }\r\n    console.log('check value', this.setPriceForm.getRawValue());\r\n  }\r\n  checkIndex(index: number) {\r\n    const position = this.tiers.length - 1;\r\n    if (index > 0 && index !== position) {\r\n      return this.readOnly = true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  setStartingValue(event: any, index: number) {\r\n    const setStarting = Number(event.target.value);\r\n    const getNext = index + 1;\r\n    const NextObject = this.getLevelList(getNext);\r\n    NextObject.patchValue({\r\n      startingUnit: setStarting + 1,\r\n    });\r\n  }\r\n  getPreviewPrice(event: any) {\r\n    this.previePrice = event.target.value * this.setPriceForm.value.price;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./set-price.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "form",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "form",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "tiers": {
                    "name": "tiers",
                    "getSignature": {
                        "name": "tiers",
                        "type": "",
                        "returnType": "",
                        "line": 64
                    }
                }
            },
            "templateData": "<div class=\"main-bg w-full h-full overflow-auto border-2 py-8 pl-11 pr-10\">\r\n  <form [formGroup]=\"setPriceForm\" (ngSubmit)=\"submitValues()\">\r\n    <div class=\"flex align-center mb-2\">\r\n      <mat-icon\r\n        class=\"material-symbols-outlined pointer\"\r\n        color=\"primary\"\r\n        [routerLink]=\"'/features'\"\r\n        >keyboard_backspace</mat-icon\r\n      >\r\n      <span class=\"mat-h1 primary-text text-main ml-2\">Create Plan</span>\r\n    </div>\r\n    <div class=\"flex align-center\">\r\n      <span class=\"pl-8 grey-text text-lighten-9\"> Create plan </span>\r\n      <mat-icon class=\"material-symbols-outlined mx-2 small-icon\">\r\n        chevron_right\r\n      </mat-icon>\r\n      <span class=\"shades-text text-black fw-500\">Set Price</span>\r\n    </div>\r\n    <div class=\"mt-8\">\r\n      <mat-tab-group\r\n        class=\"pricing-tabs mb-6\"\r\n        mat-stretch-tabs=\"false\"\r\n        mat-align-tabs=\"start\"\r\n        (selectedTabChange)=\"onTabChange($event)\"\r\n      >\r\n        <mat-tab\r\n          *ngFor=\"let options of periodUnit\"\r\n          label=\"{{ options }}\"\r\n        ></mat-tab>\r\n      </mat-tab-group>\r\n      <div class=\"py-2 form-section\">\r\n        <!-- Pricing Model -->\r\n        <div class=\"input-wrapper\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Pricing Model\r\n            </p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"helpinfotooltip\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #helpinfotooltip let-name>\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Feature id</div>\r\n                <div class=\"details\">\r\n                  Microsoft Teams is the ultimate messaging app for your\r\n                  organization—a workspace for real-time collaboration and\r\n                  communication, meetings, file and app sharing, and even the\r\n                  occasional emoji! All in one place, all in the open, all\r\n                  accessible to everyone.\r\n                </div>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n            <mat-select\r\n              required\r\n              placeholder=\"select\"\r\n              formControlName=\"pricingModel\"\r\n            >\r\n              <mat-option\r\n                *ngFor=\"let option of pricingModelTypes\"\r\n                value=\"{{ option.value }}\"\r\n              >\r\n                {{ option.title }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <!-- Dynamic Fields -->\r\n        <div\r\n          class=\"w-full form-array-section mb-8\"\r\n          *ngIf=\"monthlyBilling.includes(setPriceForm.value.pricingModel)\"\r\n        >\r\n          <div class=\"header-bottom-border mb-8\">\r\n            <h4 class=\"fw-500 primary-text text-main my-2 mat-subtitle-2\">\r\n              Monthly billing\r\n            </h4>\r\n          </div>\r\n          <div class=\"mb-32\">\r\n            <div class=\"w-full\">\r\n              <div class=\"flex align-center\">\r\n                <div class=\"mr-2 input-wrapper small\">\r\n                  <p class=\"mat-subtitle-2 font-weight-500 input-label mb-2\">\r\n                    From (Units)\r\n                  </p>\r\n                </div>\r\n                <div class=\"mr-2 input-wrapper small\">\r\n                  <p class=\"mat-subtitle-2 font-weight-500 input-label mb-2\">\r\n                    To\r\n                  </p>\r\n                </div>\r\n                <div class=\"input-wrapper small\">\r\n                  <p class=\"mat-subtitle-2 font-weight-500 input-label mb-2\">\r\n                    Price Per unit\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <ng-container formArrayName=\"tiers\">\r\n                  <ng-container\r\n                    *ngFor=\"let tiersGroup of tiers.controls; let i = index\"\r\n                  >\r\n                    <div formGroupName=\"{{i}}\" class=\"flex align-center relative\">\r\n                      <div class=\"input-wrapper small mr-2 relative \">\r\n                        <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n                          <input\r\n                            required\r\n                            matInput\r\n                            placeholder=\"Enter here\"\r\n                            formControlName=\"startingUnit\"\r\n                            type=\"number\"\r\n                          />\r\n                        </mat-form-field>\r\n                      </div>\r\n                      <div class=\"input-wrapper small mr-2\">\r\n                        <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n                          <input\r\n                            required\r\n                            matInput\r\n                            placeholder=\"Enter here\"\r\n                            formControlName=\"endingUnit\"\r\n                            (change)=\"setStartingValue($event, i)\"\r\n                          />\r\n                        </mat-form-field>\r\n                      </div>\r\n                      <div class=\"input-wrapper small relative\" >\r\n                        <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n                          <input\r\n                            required\r\n                            matInput\r\n                            ng-readonly=\"readOnly\"\r\n                            placeholder=\"Enter here\"\r\n                            formControlName=\"price\"\r\n                            type=\"number\"\r\n                          />\r\n                        </mat-form-field>\r\n                      </div>\r\n                      <button\r\n                        mat-icon-button\r\n                        color=\"warn\"\r\n                        class=\"light-bg small rounded-1 absolute delete-tier-btn\"\r\n                        *ngIf=\"i == tiers.length - 1 && i > 0\"\r\n                        (click)=\"deleteTier(i)\"\r\n                      >\r\n                        <mat-icon\r\n                          class=\"material-symbols-outlined mr-0\"\r\n                          color=\"warn\"\r\n                          >close</mat-icon\r\n                        >\r\n                      </button>\r\n                    </div>\r\n                  </ng-container>\r\n                </ng-container>\r\n              </div>\r\n              <!-- <div class=\"mr-2 input-wrapper small\"> -->\r\n              <!-- </div> -->\r\n            </div>\r\n            <button\r\n              disableRipple\r\n              mat-button\r\n              class=\"primary-text text-main\"\r\n              (click)=\"addTiers()\"\r\n            >\r\n              + Add More\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <!-- Price Field -->\r\n        <div class=\"input-wrapper\" *ngIf=\"!monthlyBilling.includes(setPriceForm.value.pricingModel)\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">Price</p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"helpinfotooltip\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #helpinfotooltip let-name>\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Feature id</div>\r\n                <div class=\"details\">\r\n                  Microsoft Teams is the ultimate messaging app for your\r\n                  organization—a workspace for real-time collaboration and\r\n                  communication, meetings, file and app sharing, and even the\r\n                  occasional emoji! All in one place, all in the open, all\r\n                  accessible to everyone.\r\n                </div>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n            <input\r\n              required\r\n              matInput\r\n              placeholder=\"Enter here\"\r\n              formControlName=\"price\"\r\n              type=\"number\"\r\n              min=\"0\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n        <!-- Price Preview field -->\r\n        <div class=\"preview-price mb-6\">\r\n          <p class=\"mat-subtitle-2 font-weight-500 input-label mb-2\">\r\n            Price Preview\r\n          </p>\r\n          <div class=\"flex align-center\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label mb-2\">\r\n              If a customer purchase\r\n            </p>\r\n            <div class=\"w-18 border-2 mx-2 input-wrapper price-digits\">\r\n              <mat-form-field appearance=\"outline\">\r\n                <input\r\n                  matInput\r\n                  type=\"number\"\r\n                  placeholder=\"--\"\r\n                  min=\"1\"\r\n                  max=\"1000\"\r\n                  (keyup)=\"getPreviewPrice($event)\"\r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label mb-2\">\r\n              Units. The total amount payable will be USD {{previePrice}}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <!-- Billing Cycle -->\r\n        <div class=\"input-wrapper\">\r\n          <div class=\"flex align-center mb-2\">\r\n            <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n              Billing Cycle\r\n            </p>\r\n            <mat-icon\r\n              class=\"material-symbols-outlined pointer ml-3 help-icon text-text text-primary\"\r\n              [ngxTippy]=\"helpinfotooltip\"\r\n              [tippyProps]=\"{ placement: 'right' }\"\r\n              >help</mat-icon\r\n            >\r\n            <ng-template #helpinfotooltip let-name>\r\n              <div class=\"help-info-tooltip\">\r\n                <div class=\"heading-with-background\">Feature id</div>\r\n                <div class=\"details\">\r\n                  Microsoft Teams is the ultimate messaging app for your\r\n                  organization—a workspace for real-time collaboration and\r\n                  communication, meetings, file and app sharing, and even the\r\n                  occasional emoji! All in one place, all in the open, all\r\n                  accessible to everyone.\r\n                </div>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\" class=\"border-2\">\r\n            <mat-select required placeholder=\"select\" (selectionChange)=\"cycleValue($event)\">\r\n              <mat-option value=\"1\"> Fixed </mat-option>\r\n              <mat-option value=\"2\"> Forever </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <button mat-flat-button color=\"primary\" type=\"submit\">Set Price</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n"
        },
        {
            "name": "SidebarComponent",
            "id": "component-SidebarComponent-a3863514419d1cd97e9ab9f72fe3f35ee89d03851560e7c9afef2e3a6582b1b4f5ab79fe566daf5686803c3a11e44b2248dbd90aded869c585830180aaf185f8",
            "file": "src/app/core/layouts/sidebar/sidebar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sidebar",
            "styleUrls": [
                "./sidebar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sidebar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "newItemEvent",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "activeRoute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "configOptions",
                    "defaultValue": "Config_Menu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "currentRoute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "globalService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GlobalService",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "Menu_Headings",
                    "defaultValue": "Menu_Headings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "menuItems",
                    "defaultValue": "MENUITEMS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "notificationsData",
                    "defaultValue": "Notifications_Data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "opened",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "route",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActivatedRoute",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "sidenav",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSidenav",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'sidenav'"
                        }
                    ]
                },
                {
                    "name": "userProfile",
                    "defaultValue": "User_Options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "methodsClass": [
                {
                    "name": "getList",
                    "args": [
                        {
                            "name": "item",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleSidenav",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport {\r\n  Config_Menu,\r\n  MENUITEMS,\r\n  User_Options,\r\n  Menu_Headings,\r\n  Notifications_Data,\r\n} from 'src/app/shared/constants/consants';\r\nimport { GlobalService } from '../../services/global.service';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.scss'],\r\n})\r\nexport class SidebarComponent {\r\n  menuItems = MENUITEMS;\r\n  configOptions = Config_Menu;\r\n  Menu_Headings = Menu_Headings;\r\n  userProfile = User_Options;\r\n  notificationsData = Notifications_Data;\r\n  activeRoute: string[];\r\n  currentRoute: string;\r\n\r\n  constructor(\r\n    public globalService: GlobalService,\r\n    private router: Router,\r\n    public route: ActivatedRoute\r\n  ) {\r\n    this.router.events\r\n      .pipe(filter((event: any) => event instanceof NavigationEnd))\r\n      .subscribe((event: any) => {\r\n        this.currentRoute = event.url;\r\n        this.activeRoute = this.currentRoute.split('/')\r\n      });\r\n  }\r\n\r\n  @ViewChild('sidenav') sidenav: MatSidenav;\r\n  @Output() newItemEvent = new EventEmitter<boolean>();\r\n\r\n  opened: boolean = true;\r\n  toggleSidenav() {\r\n    // this.sidenav.toggle();\r\n    this.opened = !this.opened;\r\n    this.newItemEvent.emit(this.opened);\r\n  }\r\n  getList(item: string) {\r\n    let list = [];\r\n    return (list = this.menuItems.filter((ele) => ele.category == item));\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./sidebar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "globalService",
                        "type": "GlobalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 32,
                "jsdoctags": [
                    {
                        "name": "globalService",
                        "type": "GlobalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"sidenav-wrapper border-2\">\r\n  <div class=\"sidebar-toggle\">\r\n    <button\r\n      mat-mini-fab\r\n      color=\"accent\"\r\n      class=\"toggle-sidenav\"\r\n      (click)=\"toggleSidenav()\"\r\n    >\r\n      <svg\r\n        width=\"8\"\r\n        height=\"14\"\r\n        viewBox=\"0 0 8 14\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          d=\"M0.269968 12.3681L1.42697 13.5186L7.85547 7.08355L1.42047 0.648554L0.269969 1.79905L5.55447 7.08355L0.269968 12.3681V12.3681Z\"\r\n          fill=\"white\"\r\n        />\r\n      </svg>\r\n    </button>\r\n  </div>\r\n  <div class=\"sidebar-wrapper\">\r\n    <div class=\"logo pointer\">\r\n      <div class=\"logo-img pointer\">\r\n        <img src=\"../../../../assets/images/framework-logo.png\" alt=\"logo\" />\r\n      </div>\r\n      <div class=\"text-wrapper\">\r\n        <h3>Digital</h3>\r\n        <span class=\"logo-text\">Framework</span>\r\n      </div>\r\n    </div>\r\n    <div class=\"sidebar-scrollable mt-11\">\r\n      <mat-nav-list class=\"sidebar p-0\">\r\n        <div *ngFor=\"let element of Menu_Headings\" class=\"transition-400\">\r\n          <div *ngIf=\"element.name != 'Dashboard'\" class=\"category-heading\">\r\n            <h1>{{ element.name }}</h1>\r\n          </div>\r\n          <mat-list-item\r\n            class=\"nav-list-item p-0 w-full\"\r\n            *ngFor=\"let item of getList(element.category)\"\r\n          >\r\n            <a\r\n              class=\"icon-wrapper flex align-center\"\r\n              [ngClass]=\"{'active': (activeRoute.includes(item.state))}\"\r\n              [routerLink]=\"['/', item.state]\"\r\n            >\r\n              <div class=\"flex justify-center sidebar-icon-wraper\">\r\n                <mat-icon class=\"material-symbols-outlined m-0 sidebar-icon\">{{\r\n                  item.icon\r\n                }}</mat-icon>\r\n              </div>\r\n              <div class=\"content-wrapper\">\r\n                <span class=\"content\">{{ item.name }}</span>\r\n              </div>\r\n            </a>\r\n          </mat-list-item>\r\n        </div>\r\n      </mat-nav-list>\r\n      <div class=\"image-wrapper\">\r\n        <div class=\"img\">\r\n          <img\r\n            src=\"../../../../assets/images/dashboard-cat.png\"\r\n            alt=\"Dashboard Get Started\"\r\n          />\r\n        </div>\r\n        <div class=\"text\">\r\n          <h3>First steps</h3>\r\n          <p class=\"description\">\r\n            Customize your dashboard and lean <br />about out features\r\n          </p>\r\n          <span class=\"pointer\">Get Started</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <mat-nav-list class=\"config-section sidebar\">\r\n      <mat-list-item\r\n        class=\"nav-list-item p-0\" \r\n        *ngFor=\"let item of configOptions\"\r\n      >\r\n        <a\r\n        class=\"icon-wrapper flex align-center\"\r\n          [routerLink]=\"['/', item.state]\"\r\n        >\r\n          <mat-icon class=\"material-symbols-outlined m-0 sidebar-icon\">{{\r\n            item.icon\r\n          }}</mat-icon>\r\n          <div class=\"content-wrapper\">\r\n            <span class=\"content\">{{ item.name }}</span>\r\n          </div>\r\n        </a>\r\n      </mat-list-item>\r\n    </mat-nav-list>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "SuccessDialogComponent",
            "id": "component-SuccessDialogComponent-6c017d18e06b4b5124575f7024285bccf73bbb87a25967440fa139c8d2572e9923fa9c138f240be599cef666f1109b64b3fa87e576472ce69cc04cd25144d458",
            "file": "src/app/shared/components/dialog-box/success-dialog/success-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-success-dialog",
            "styleUrls": [
                "./success-dialog.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./success-dialog.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogData",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialogRef<SuccessDialogComponent>",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject } from '@angular/core';\r\nimport {\r\n  MatDialogRef,\r\n  MatDialog,\r\n  MAT_DIALOG_DATA,\r\n} from '@angular/material/dialog';\r\n\r\nexport interface DialogData {\r\n  module: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-success-dialog',\r\n  templateUrl: './success-dialog.component.html',\r\n  styleUrls: ['./success-dialog.component.scss'],\r\n})\r\nexport class SuccessDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<SuccessDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\r\n  ) {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./success-dialog.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<SuccessDialogComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "data",
                        "type": "DialogData",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<SuccessDialogComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "data",
                        "type": "DialogData",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"p-6 border-4\">\r\n  <h1 class=\"mb-4\">Success</h1>\r\n  <span class=\"mat-body-1 mb-8 block\">{{ data.module }} Created Succefully</span>\r\n  <button mat-flat-button color=\"primary\" class=\"medium ml-auto block\" [mat-dialog-close]=\"true\">Close</button>\r\n</div>\r\n"
        },
        {
            "name": "TextareaComponent",
            "id": "component-TextareaComponent-4003cbef90c49d9733c5c61e965ca3b6f23e8fa4f839c729a1338a7ec275146e4862a32bd9dfc04d2e6da4a2cd27fe3dc0eb7042b7a2e6b168db4b97875f2aa2",
            "file": "src/stories/softobiz-ui/Textarea/textarea.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sft-textarea",
            "styleUrls": [
                "./textarea.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./textarea.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "appearance",
                    "defaultValue": "'outline'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hint",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "'Enter here...'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "readonly",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "rows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "errorState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 38
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation, Input } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NgxTippyModule } from 'ngx-tippy-wrapper';\r\n// import { ButtonVariant } from './types';\r\n\r\n@Component({\r\n  selector: 'sft-textarea',\r\n  templateUrl: './textarea.component.html',\r\n  styleUrls: ['./textarea.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class TextareaComponent {\r\n  @Input() label: string = 'Label';\r\n\r\n  @Input() readonly: boolean = false;\r\n\r\n  @Input() type: string;\r\n\r\n  @Input() placeholder: string = 'Enter here...';\r\n\r\n  @Input() appearance: string = 'outline';\r\n\r\n  @Input() hint?: string = '';\r\n\r\n  @Input() disable: boolean = false;\r\n\r\n  @Input() required: boolean = false;\r\n\r\n  @Input() value: string = '';\r\n\r\n  @Input() class: string = '';\r\n\r\n  @Input() id: string = '';\r\n\r\n  @Input() rows: number ;\r\n\r\n  errorState: boolean;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./textarea.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"input-wrapper\">\r\n  <div class=\"flex align-center mb-2\">\r\n    <p class=\"mat-subtitle-2 font-weight-500 input-label\">\r\n      {{label}}\r\n    </p>\r\n  </div>\r\n  <mat-form-field *ngIf=\"appearance === 'outline'\" appearance=\"outline\" [class]=\"class\" [id]=\"id\">\r\n    <textarea\r\n      [required]=\"required\"\r\n      [rows]=\"rows\"\r\n      matInput\r\n      [placeholder]=\"placeholder\"\r\n      [readonly]=\"readonly\"\r\n      [disabled]=\"disable\"\r\n    ></textarea>\r\n    <mat-hint>{{hint}}</mat-hint>\r\n  </mat-form-field>\r\n  <mat-form-field *ngIf=\"appearance === 'fill'\" appearance=\"fill\" [class]=\"class\" [id]=\"id\">\r\n    <textarea\r\n      [required]=\"required\"\r\n      [rows]=\"rows\"\r\n      matInput\r\n      [placeholder]=\"placeholder\"\r\n      [readonly]=\"readonly\"\r\n      [disabled]=\"disable\"\r\n    ></textarea>\r\n    <mat-hint>{{hint}}</mat-hint>\r\n  </mat-form-field>\r\n</div>"
        },
        {
            "name": "TransactionListComponent",
            "id": "component-TransactionListComponent-33d11bf10da8db8c6bb97e4404be0465502a7d12ab7667c9f93679f19b02fd7ebc7924ea8e8f6f255d9a4c884ed9ec3ab5b2a30bd8da15b6940f068d02284152",
            "file": "src/app/modules/payment-history/transactions/components/transaction-list/transaction-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-transaction-list",
            "styleUrls": [
                "./transaction-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./transaction-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "[\r\n    'select',\r\n    'id',\r\n    'customer_info',\r\n    'payment_method',\r\n    'occured_on',\r\n    'status',\r\n    'amount',\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "emptyCoupons",
                    "defaultValue": "nocoupons",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "noContent",
                    "defaultValue": "noTransactions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "selection",
                    "defaultValue": "new SelectionModel<coupon>(true, [])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ]
                },
                {
                    "name": "transactionData",
                    "defaultValue": "TransactionList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "methodsClass": [
                {
                    "name": "announceSortChange",
                    "args": [
                        {
                            "name": "sortState",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nAnnounce the change in sort state for assistive technology.",
                    "description": "<p>Announce the change in sort state for assistive technology.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "sortState",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "checkboxLabel",
                    "args": [
                        {
                            "name": "row",
                            "type": "coupon",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nThe label for the checkbox on the passed row",
                    "description": "<p>The label for the checkbox on the passed row</p>\n",
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "coupon",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isAllSelected",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhether the number of selected elements matches the total number of rows.",
                    "description": "<p>Whether the number of selected elements matches the total number of rows.</p>\n"
                },
                {
                    "name": "openDelete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectAll",
                    "args": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectedRow",
                    "args": [
                        {
                            "name": "selectedID",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "selectedID",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sendElementId",
                    "args": [
                        {
                            "name": "elementId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "elementId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleAllRows",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSelects all rows if they are not all selected; otherwise clear selection.",
                    "description": "<p>Selects all rows if they are not all selected; otherwise clear selection.</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewChild } from '@angular/core';\r\nimport { DeleteConfirmationComponent } from 'src/app/shared/components/dialog-box/delete-confirmation/delete-confirmation.component';\r\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\n\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport {\r\n  Coupon_Data,\r\n  coupon,\r\n  nocoupons,\r\n  noTransactions,\r\n  TransactionList,\r\n} from 'src/app/shared/constants/consants';\r\n@Component({\r\n  selector: 'app-transaction-list',\r\n  templateUrl: './transaction-list.component.html',\r\n  styleUrls: ['./transaction-list.component.scss'],\r\n})\r\nexport class TransactionListComponent {\r\n  noContent = noTransactions;\r\n  displayedColumns: string[] = [\r\n    'select',\r\n    'id',\r\n    'customer_info',\r\n    'payment_method',\r\n    'occured_on',\r\n    'status',\r\n    'amount',\r\n  ];\r\n  transactionData: any = TransactionList;\r\n  selection = new SelectionModel<coupon>(true, []);\r\n  emptyCoupons = nocoupons;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  dialogRef: any;\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.transactionData.length;\r\n    return numSelected === numRows;\r\n  }\r\n  constructor(\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    public dialog: MatDialog\r\n  ) {}\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  toggleAllRows() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n    // console.log(this.selection.select)\r\n    this.selection.select(...this.transactionData);\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: coupon): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${\r\n      row.coupon_id + 1\r\n    }`;\r\n  }\r\n\r\n  // ngAfterViewInit() {\r\n  //   this.featuresData.sort = this.sort;\r\n  // }\r\n\r\n  /** Announce the change in sort state for assistive technology. */\r\n  announceSortChange(sortState: Sort) {\r\n    // This example uses English messages. If your application supports\r\n    // multiple language, you would internationalize these strings.\r\n    // Furthermore, you can customize the message to add additional\r\n    // details about the values being sorted.\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n  selectedRow(selectedID: string, event: any) {\r\n    const selectedRow = document.getElementById(`${selectedID}`);\r\n    if (selectedRow != null) {\r\n      selectedRow.classList.toggle('selected-row');\r\n    }\r\n    event.stopPropagation();\r\n  }\r\n  selectAll(data: any[]) {\r\n    if (this.isAllSelected()) {\r\n      data.map((element: any) => {\r\n        document.getElementById(element.id)?.classList.add('selected-row');\r\n      });\r\n    } else {\r\n      data.map((element: any) => {\r\n        document.getElementById(element.id)?.classList.remove('selected-row');\r\n      });\r\n    }\r\n  }\r\n  sendElementId(elementId: string) {\r\n    console.log(elementId);\r\n  }\r\n  openDelete(id: any) {\r\n    this.dialogRef = this.dialog.open(DeleteConfirmationComponent, {\r\n      width: '422px',\r\n      panelClass: 'dialog-curved',\r\n    });\r\n\r\n    this.dialogRef.afterClosed().subscribe((res: any) => {\r\n      if (res) {\r\n        console.log(res);\r\n\r\n        this.sendElementId(id);\r\n      } else {\r\n        console.log('Delete canceled');\r\n      }\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./transaction-list.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_liveAnnouncer",
                        "type": "LiveAnnouncer",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 42,
                "jsdoctags": [
                    {
                        "name": "_liveAnnouncer",
                        "type": "LiveAnnouncer",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div\r\n  class=\"relative main-bg border-2 w-full h-full py-6 pl-5 pr-6 overflow-scroll\"\r\n  *ngIf=\"transactionData.length == 0\"\r\n>\r\n  <app-empty-listing [items]=\"noContent\"></app-empty-listing>\r\n</div>\r\n<div\r\n  class=\"relative main-bg border-2 w-full h-full py-6 pl-5 pr-6 overflow-scroll\"\r\n  *ngIf=\"transactionData.length > 0\"\r\n>\r\n  <div class=\"flex justify-between align-center px-1\">\r\n    <div class=\"flex align-center\">\r\n      <h1 class=\"text-text text-dark\">Transaction</h1>\r\n    </div>\r\n    <div class=\"flex align-center\">\r\n      <div class=\"global-search light mr-6 border-2\">\r\n        <span class=\"search-icon pointer\">\r\n          <img\r\n            src=\"../../../../assets/images/icons/search.svg\"\r\n            alt=\"search-icon\"\r\n          />\r\n        </span>\r\n        <input type=\"text\" placeholder=\"Search anything...\" />\r\n        <!-- <div class=\"loader\" *ngIf=\"loading\">\r\n          <mat-spinner></mat-spinner>\r\n        </div> -->\r\n      </div>\r\n      <button mat-flat-button color=\"primary\" class=\"create-btn\">\r\n        <img\r\n          src=\"../../../../../../assets/images/icons/file-download.svg\"\r\n          alt=\"download\"\r\n        />\r\n        <span class=\"text-nowrap block ml-2 letter-spacing-0\">Export Data</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"primary-table overflow-visible mt-8 px-1 pb-2\">\r\n    <table\r\n      mat-table\r\n      [dataSource]=\"transactionData\"\r\n      matSort\r\n      (matSortChange)=\"announceSortChange($event)\"\r\n    >\r\n      <!--- Note that these columns can be defined in any order.\r\n                The actual rendered columns are set as a property on the row definition\" -->\r\n      <ng-container matColumnDef=\"select\">\r\n        <th mat-header-cell *matHeaderCellDef>\r\n          <mat-checkbox\r\n            color=\"primary\"\r\n            (click)=\"selectAll(transactionData)\"\r\n            (change)=\"$event ? toggleAllRows() : null\"\r\n            [checked]=\"selection.hasValue() && isAllSelected()\"\r\n            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n            [aria-label]=\"checkboxLabel()\"\r\n          >\r\n          </mat-checkbox>\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let row\">\r\n          <mat-checkbox\r\n            color=\"primary\"\r\n            (click)=\"selectedRow(row.id, $event)\"\r\n            (change)=\"$event ? selection.toggle(row) : null\"\r\n            [checked]=\"selection.isSelected(row)\"\r\n            [aria-label]=\"checkboxLabel(row)\"\r\n          >\r\n          </mat-checkbox>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- ID Column -->\r\n      <ng-container matColumnDef=\"id\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>#ID</th>\r\n        <td mat-cell *matCellDef=\"let element\">{{ element.id }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Product Name Column -->\r\n      <ng-container matColumnDef=\"customer_info\">\r\n        <th\r\n          mat-header-cell\r\n          *matHeaderCellDef\r\n          mat-sort-header\r\n          sortActionDescription=\"Sort by title\"\r\n        >\r\n          Coupon Name\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let element\">{{ element.customerInfo }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Description Column -->\r\n      <ng-container matColumnDef=\"payment_method\">\r\n        <th mat-header-cell *matHeaderCellDef>Payment Method</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          <div class=\"flex align-center\">\r\n            <mat-icon\r\n              class=\"material-symbols-outlined mr-2 grey-text text-darken-6\"\r\n              >credit_card</mat-icon\r\n            >\r\n            <p>{{ element.paymentMethod }}</p>\r\n          </div>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Created Date Column -->\r\n      <ng-container matColumnDef=\"occured_on\">\r\n        <th mat-header-cell *matHeaderCellDef>Occured On</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          {{ element.occuredOn }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Created Date Column -->\r\n      <ng-container matColumnDef=\"status\">\r\n        <th mat-header-cell *matHeaderCellDef>Status</th>\r\n        <td mat-cell *matCellDef=\"let element\" [ngClass]=\"element.status\">\r\n          {{ element.status }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Created Date Column -->\r\n      <ng-container matColumnDef=\"amount\">\r\n        <th mat-header-cell *matHeaderCellDef class=\"text-right\">Amount</th>\r\n        <td mat-cell *matCellDef=\"let element\" class=\"text-right\">\r\n          $ {{ element.amount }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr\r\n        mat-row\r\n        *matRowDef=\"let row; columns: displayedColumns\"\r\n        [id]=\"row.id\"\r\n      ></tr>\r\n    </table>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "TransactionViewComponent",
            "id": "component-TransactionViewComponent-3f287ec76ff638ea25d3be732f283b1acc4604c859ca355fa5d28413e38b53bdc64b6426ea9f3a5f35b2888561e043bfd0f24fe0f644b24494864139f577e214",
            "file": "src/app/modules/payment-history/transactions/components/transaction-view/transaction-view.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-transaction-view",
            "styleUrls": [
                "./transaction-view.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./transaction-view.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-transaction-view',\r\n  templateUrl: './transaction-view.component.html',\r\n  styleUrls: ['./transaction-view.component.scss']\r\n})\r\nexport class TransactionViewComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./transaction-view.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p>transaction-view works!</p>\r\n"
        },
        {
            "name": "TypographyComponent",
            "id": "component-TypographyComponent-734bbda770f04bdd8ce773b3ba500d74f4698195ed470f12b7151ac1cde9751870ed35aa9453a1d88de30593655d82000d1a885dfe8b80c47b5be769bce7a083",
            "file": "src/stories/softobiz-ui/Typography/typography.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-typography",
            "styleUrls": [
                "./typography.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./typography.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-typography',\n  templateUrl: './typography.component.html',\n  styleUrls: ['./typography.component.scss']\n})\nexport class TypographyComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./typography.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p>typography works!</p>\n"
        },
        {
            "name": "ViewCouponsComponent",
            "id": "component-ViewCouponsComponent-bdc75da5c4e4173faa05551b7c9da2fa80314d84e76516573caeb6af31fdc11fddec013becd54ef4f2346726c3f138684f1c3c94ef1e04a8aadd8c54d132337b",
            "file": "src/app/modules/coupons/components/view-coupons/view-coupons.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-view-coupons",
            "styleUrls": [
                "./view-coupons.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./view-coupons.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "clickedRows",
                    "defaultValue": "new Set<DiscountElement>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "dataDuration",
                    "defaultValue": "Duration_DATA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "dataSource",
                    "defaultValue": "ELEMENT_DATA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "dataValidity",
                    "defaultValue": "Validity_DATA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['Discount', 'Amount']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "displayedColumns2",
                    "defaultValue": "['Duration','time']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "displayedColumns3",
                    "defaultValue": "['Validity','time']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 41
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\nexport interface DiscountElement {\r\n  Discount : string;\r\n  Amount: any;\r\n}\r\nexport interface DurationElement {\r\n  Duration : string;\r\n  time: any;\r\n}\r\n\r\nexport interface ValidityElement {\r\n  Validity : string;\r\n  time: any;\r\n}\r\n\r\nconst ELEMENT_DATA: DiscountElement[] = [\r\n  {  Discount : 'Discount Type', Amount: 'Fixed Amount' },\r\n  { Discount : 'Applied on', Amount: 'Fixed Amount' },\r\n  {  Discount : 'Discount Type', Amount: 'Invoice Amount' },\r\n];\r\n\r\nconst Duration_DATA: DurationElement[] = [\r\n  {  Duration : 'Discount Type', time: 'Forever' },\r\n  { Duration : 'Applied on', time: 'All Plans' },\r\n  {  Duration : 'Discount Type', time: 'All Addons' },\r\n];\r\n\r\nconst Validity_DATA: ValidityElement[] = [\r\n  {  Validity : 'Valid Till', time: 'Forever' },\r\n  { Validity : 'Maximum Redemptions', time: '0 to unlimited' },\r\n];\r\n@Component({\r\n  selector: 'app-view-coupons',\r\n  templateUrl: './view-coupons.component.html',\r\n  styleUrls: ['./view-coupons.component.scss']\r\n})\r\nexport class ViewCouponsComponent {\r\n  displayedColumns: string[] = ['Discount', 'Amount'];\r\n  displayedColumns2: string[] = ['Duration','time'];\r\n  displayedColumns3: string[] = ['Validity','time'];\r\n  dataSource = ELEMENT_DATA;\r\n  dataDuration = Duration_DATA;\r\n  dataValidity = Validity_DATA;\r\n  clickedRows = new Set<DiscountElement>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./view-coupons.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"view-plan-wrapper overflow-auto border-2 w-full h-full\">\r\n    <div class=\"header-block border-2\">\r\n      <h3 class=\"mat-headline-5 heading text-text text-primary\">View Coupon</h3>\r\n  \r\n      <div class=\"brand-info flex align-center justify-between\">\r\n        <div class=\"\">\r\n        <div class=\"flex align-center\">\r\n          <p class=\"mat-headline-5 text-text text-dark title mb-1\">INR 100 Off</p>\r\n          <div\r\n            class=\"active-text flex align-center green-text text-darken-3 ml-4\"\r\n          >\r\n            <mat-icon\r\n              class=\"material-symbols-outlined mr-1 green-text text-darken-3\"\r\n              color=\"primary\"\r\n              >check_circle</mat-icon\r\n            ><span>Active</span>\r\n          </div>\r\n        </div>\r\n        <span class=\"mat-subtitle-2 subtitle font-weight-500 block\">#S0-001</span>  \r\n        <span class=\"mat-subtitle-2 subtitle block\">Invoice Name : Discount</span>\r\n        </div>\r\n        <div class=\"btn-section flex align-center\">\r\n            <button mat-stroked-button color=\"primary\" class=\"mr-2 large\">\r\n              Edit\r\n            </button>\r\n            <button mat-flat-button color=\"primary\" class=\"large\">\r\n              Back to list\r\n            </button>\r\n          </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"inner-wrapper\">\r\n      <div class=\"flex mb-8\">\r\n        <div class=\"flex align-center pr-6 calendar-box\">\r\n          <mat-icon class=\"material-symbols-outlined mr-3 text-lighten-2\"\r\n            >calendar_today</mat-icon\r\n          >\r\n          <span class=\"mat-subtitle-2 text-dark\">Created 24 March, 2023</span>\r\n        </div>\r\n        <div class=\"flex align-center pl-6\">\r\n          <mat-icon class=\"material-symbols-outlined mr-3 text-lighten-2\"\r\n            >calendar_today</mat-icon\r\n          >\r\n          <span class=\"mat-subtitle-2 text-dark\">Created 24 March, 2023</span>\r\n        </div>\r\n      </div>\r\n      <div class=\"Plan-Description\">\r\n        <p class=\"mat-subtitle-2 text-text text-dark font-weight-500 mb-3\">\r\n            Description\r\n        </p>\r\n        <p class=\"mat-subtitle-2 text-dark\">\r\n            Rs. 100.00 for Forever get it today and enjoy it forever. \r\n        </p>\r\n      </div>\r\n      <div class=\"my-10\">\r\n        <div class=\"coupon-table-details mb-6\">\r\n          <table mat-table [dataSource]=\"dataSource\" class=\"primary-lighten-bg border-2 overflow-hidden py-4\">\r\n            <!-- Discount Column -->\r\n            <ng-container matColumnDef=\"Discount\">\r\n              <th\r\n                mat-header-cell\r\n                *matHeaderCellDef\r\n                class=\"mat-subtitle-2 text-text text-dark font-weight-500\"\r\n              >\r\n              Discount \r\n              </th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let element\"\r\n                class=\"mat-subtitle-2 text-headline-light\"\r\n              >\r\n                {{ element.Discount}}\r\n              </td>\r\n            </ng-container>\r\n  \r\n            <!-- Amount Column -->\r\n            <ng-container matColumnDef=\"Amount\">\r\n              <th\r\n                mat-header-cell\r\n                *matHeaderCellDef\r\n                class=\"mat-subtitle-2 text-headline-dark\"\r\n              >\r\n              </th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let element\"\r\n                class=\"mat-subtitle-2 text-dark\"\r\n              >\r\n                {{ element.Amount }}\r\n              </td>\r\n            </ng-container>\r\n  \r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr\r\n              mat-row\r\n              (click)=\"clickedRows.add(row)\"\r\n              [class.demo-row-is-clicked]=\"clickedRows.has(row)\"\r\n              *matRowDef=\"let row; columns: displayedColumns\"\r\n            ></tr>\r\n          </table>\r\n        </div>\r\n        <div class=\"coupon-table-details mb-6\">\r\n            <table mat-table [dataSource]=\"dataDuration\" class=\"primary-lighten-bg border-2 overflow-hidden py-4\">\r\n              <!-- Duration Column -->\r\n              <ng-container matColumnDef=\"Duration\">\r\n                <th\r\n                  mat-header-cell\r\n                  *matHeaderCellDef\r\n                  class=\"mat-subtitle-2 text-text text-dark font-weight-500\"\r\n                >\r\n                Duration \r\n                </th>\r\n                <td\r\n                  mat-cell\r\n                  *matCellDef=\"let element\"\r\n                  class=\"mat-subtitle-2 text-headline-light\"\r\n                >\r\n                  {{ element.Duration}}\r\n                </td>\r\n              </ng-container>\r\n    \r\n              <!-- time Column -->\r\n              <ng-container matColumnDef=\"time\">\r\n                <th\r\n                  mat-header-cell\r\n                  *matHeaderCellDef\r\n                  class=\"mat-subtitle-2 text-headline-dark\"\r\n                >\r\n                </th>\r\n                <td\r\n                  mat-cell\r\n                  *matCellDef=\"let element\"\r\n                  class=\"mat-subtitle-2 text-dark\"\r\n                >\r\n                  {{ element.time }}\r\n                </td>\r\n              </ng-container>\r\n    \r\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns2\"></tr>\r\n              <tr\r\n                mat-row\r\n                (click)=\"clickedRows.add(row)\"\r\n                [class.demo-row-is-clicked]=\"clickedRows.has(row)\"\r\n                *matRowDef=\"let row; columns: displayedColumns2\"\r\n              ></tr>\r\n            </table>\r\n          </div>\r\n          <div class=\"coupon-table-details mb-6\">\r\n            <table mat-table [dataSource]=\"dataValidity\" class=\"primary-lighten-bg border-2 overflow-hidden py-4\">\r\n              <!-- Validity Column -->\r\n              <ng-container matColumnDef=\"Validity\">\r\n                <th\r\n                  mat-header-cell\r\n                  *matHeaderCellDef\r\n                  class=\"mat-subtitle-2 text-text text-dark font-weight-500\"\r\n                >\r\n                Validity \r\n                </th>\r\n                <td\r\n                  mat-cell\r\n                  *matCellDef=\"let element\"\r\n                  class=\"mat-subtitle-2 text-headline-light\"\r\n                >\r\n                  {{ element.Validity}}\r\n                </td>\r\n              </ng-container>\r\n    \r\n              <!-- time Column -->\r\n              <ng-container matColumnDef=\"time\">\r\n                <th\r\n                  mat-header-cell\r\n                  *matHeaderCellDef\r\n                  class=\"mat-subtitle-2 text-headline-dark\"\r\n                >\r\n                </th>\r\n                <td\r\n                  mat-cell\r\n                  *matCellDef=\"let element\"\r\n                  class=\"mat-subtitle-2 text-dark\"\r\n                >\r\n                  {{ element.time }}\r\n                </td>\r\n              </ng-container>\r\n    \r\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns3\"></tr>\r\n              <tr\r\n                mat-row\r\n                (click)=\"clickedRows.add(row)\"\r\n                [class.demo-row-is-clicked]=\"clickedRows.has(row)\"\r\n                *matRowDef=\"let row; columns: displayedColumns3\"\r\n              ></tr>\r\n            </table>\r\n          </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n  "
        },
        {
            "name": "ViewFeatureComponent",
            "id": "component-ViewFeatureComponent-c34e61ecad8706afa8492a10ab6dc187d4555e7906cb7d8d10b92e790e82489ae58026779c76fdb8cc8fc887ae479ced00c832ad1ed14a79c00265ff6df4ff52",
            "file": "src/app/modules/features/components/view-feature/view-feature.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-view-feature",
            "styleUrls": [
                "./view-feature.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./view-feature.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "clickedRows",
                    "defaultValue": "new Set<PeriodicElement>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "createdOn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "dataSource",
                    "defaultValue": "ELEMENT_DATA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['name', 'weight']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "displayName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "displayNameArray",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "featureDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "featureId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "featureName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "featureType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "featureTypes",
                    "defaultValue": "FEATURE_TYPE",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "isUnlimited",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "level",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "levelsArray",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "modifiedOn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "productId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "productName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "productStatus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "unit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                }
            ],
            "methodsClass": [
                {
                    "name": "editFeature",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FeatureService } from '../../services/feature.service';\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  weight: number;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  { name: 'Hydrogen', weight: 1.0079 },\r\n  { name: 'Helium', weight: 4.0026 },\r\n];\r\n\r\nconst FEATURE_TYPE = 'custom';\r\n\r\n@Component({\r\n  selector: 'app-view-feature',\r\n  templateUrl: './view-feature.component.html',\r\n  styleUrls: ['./view-feature.component.scss'],\r\n})\r\nexport class ViewFeatureComponent implements OnInit {\r\n  displayedColumns: string[] = ['name', 'weight'];\r\n  dataSource = ELEMENT_DATA;\r\n  featureTypes = FEATURE_TYPE;\r\n  clickedRows = new Set<PeriodicElement>();\r\n  featureDetails: any;\r\n  productName: string;\r\n  productStatus: string;\r\n  productId: string;\r\n  featureName: string;\r\n  featureType: string;\r\n  description: string;\r\n  unit: string;\r\n  status: string;\r\n  id: string;\r\n  levelsArray: any = [];\r\n  isUnlimited: string;\r\n  displayName: string;\r\n  displayNameArray: any = [];\r\n  level: number;\r\n  value: string;\r\n  createdOn: string;\r\n  modifiedOn: string;\r\n  featureId: string;\r\n\r\n  constructor(\r\n    private featureService: FeatureService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.id = this.route.snapshot.params['id'];\r\n    this.featureService.getFeatureById(this.id).subscribe((res) => {\r\n      this.featureDetails = res;\r\n\r\n      this.featureName = this.featureDetails?.name;\r\n      this.featureId = this.featureDetails?.featureId;\r\n      this.featureType = this.featureDetails?.type;\r\n      this.status = this.featureDetails?.status;\r\n      this.description = this.featureDetails?.description;\r\n      this.unit = this.featureDetails?.unit;\r\n      this.productId = this.featureDetails?.product.productId;\r\n      this.productName = this.featureDetails?.product.name;\r\n      this.productStatus = this.featureDetails?.product.status;\r\n      this.createdOn = this.featureDetails?.createdOn;\r\n      this.modifiedOn = this.featureDetails?.modifiedOn;\r\n      this.levelsArray = Object.values(this.featureDetails?.levels);\r\n      this.levelsArray.forEach((data: any, index: number) => {\r\n        this.isUnlimited = data.isUnlimited;\r\n        this.displayName = data.name;\r\n        this.level = data.level;\r\n        this.value = data.value;\r\n        this.displayNameArray[index] = this.displayName;\r\n      });\r\n    });\r\n  }\r\n\r\n  editFeature() {\r\n    this.router.navigate([`/features/edit-feature/${this.id}`]);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./view-feature.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "featureService",
                        "type": "FeatureService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 45,
                "jsdoctags": [
                    {
                        "name": "featureService",
                        "type": "FeatureService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"view-feature-wrapper\">\r\n  <div class=\"header-block border-2\">\r\n    <h3 class=\"mat-headline-5 heading text-text text-primary\">View Feature</h3>\r\n    <div class=\"flex align-center justify-between\">\r\n      <div class=\"brand-info flex align-end\">\r\n        <div>\r\n          <div class=\"flex align-center\">\r\n            <p class=\"mat-headline-5 text-text text-dark title mb-1\">\r\n              {{featureName}}\r\n            </p>\r\n            <div\r\n              class=\"active-text flex align-center green-text text-darken-3 ml-4\"\r\n            >\r\n              <mat-icon\r\n                class=\"material-symbols-outlined mr-1 green-text text-darken-3\"\r\n                color=\"primary\"\r\n                >check_circle</mat-icon\r\n              ><span>{{status}}</span>\r\n            </div>\r\n          </div>\r\n          <span class=\"mat-subtitle-2 subtitle font-weight-500 block\"\r\n            >{{featureId}}</span\r\n          >\r\n        </div>\r\n      </div>\r\n      <div class=\"btn-section flex align-center\">\r\n        <button mat-stroked-button color=\"primary\" class=\"mr-2 large\" (click)=\"editFeature()\">\r\n          Edit\r\n        </button>\r\n        <button mat-flat-button color=\"primary\" class=\"large\">\r\n          Back to list\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"content-block p-6\">\r\n    <div class=\"date-block flex align-center mb-8\">\r\n      <div class=\"flex align-center\">\r\n        <mat-icon class=\"material-symbols-outlined mr-3\"\r\n          >calendar_today</mat-icon\r\n        >\r\n        <p class=\"mat-subtitle-2 text-dark\">Created {{createdOn | date: 'd MMMM y'}}</p>\r\n      </div>\r\n      <div class=\"vertical-divider mx-6\"></div>\r\n      <div class=\"flex align-center\">\r\n        <mat-icon class=\"material-symbols-outlined mr-3\"\r\n          >calendar_today</mat-icon\r\n        >\r\n       <p class=\"mat-subtitle-2 text-dark\"> modified {{modifiedOn | date: 'd MMMM y'}}</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"product-desc\">\r\n      <h4 class=\"mat-subtitle-2 font-weight-500 mb-4 text-headline-dark\">\r\n        Product\r\n      </h4>\r\n      <div class=\"brand-info flex align-start\">\r\n        <div class=\"product-img mr-4 border-2\">\r\n          <img src=\"../.././../../assets/images/teams.png\" alt=\"product-img\" />\r\n        </div>\r\n        <div>\r\n          <p\r\n            class=\"mat-subtitle-2 text-text text-dark title mb-1 font-weight-600\"\r\n          >\r\n          {{productName}}\r\n          </p>\r\n          <span class=\"mat-body-1 subtitle font-weight-500 block\"\r\n            >{{productId}}</span\r\n          >\r\n          <div\r\n            class=\"active-text flex align-center green-text text-darken-3 mt-1\"\r\n          >\r\n            <mat-icon\r\n              class=\"material-symbols-outlined mr-1 green-text text-darken-3\"\r\n              color=\"primary\"\r\n              >check_circle</mat-icon\r\n            ><span>{{productStatus}}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"feature-type mt-8\">\r\n      <h4 class=\"mat-subtitle-2 font-weight-500 mb-4 text-headline-dark\">\r\n        Feature Type\r\n      </h4>\r\n\r\n      <!-- -----------------------switch type-------------------- -->\r\n\r\n      <!-- ----------------range type--------------------------- -->\r\n      <div class=\"switch-type pt-4 border-2 flex align-center\">\r\n        <mat-icon\r\n          *ngIf=\"featureType === 'range'\"\r\n          class=\"material-symbols-outlined text-darken-3\"\r\n          >arrow_range</mat-icon\r\n        >\r\n\r\n        <img\r\n          *ngIf=\"featureType === 'switch'\"\r\n          src=\"../../../../assets/images/icons/toggle-left.svg\"\r\n          alt=\"toggle-left\"\r\n        />\r\n\r\n        <mat-icon\r\n          *ngIf=\"featureType === 'quantity' || featureType === 'custom' \"\r\n          class=\"material-symbols-outlined text-darken-3\"\r\n          >production_quantity_limits</mat-icon\r\n        >\r\n\r\n        <div>\r\n          <span class=\"mat-body-1 text-headline-light font-weight-500\">{{\r\n            (featureType === \"switch\" && \"Switch\") ||\r\n              (featureType === \"range\" && \"Range\") ||\r\n              (featureType === \"quantity\" && \"Quantity\") ||\r\n              (featureType === \"custom\" && \"Custom\") \r\n          }}</span>\r\n          <p class=\"mat-body-1 text-dark mt-2\">\r\n            {{\r\n              (featureType === \"switch\" &&\r\n                \"This feature type has 2 entitlement levels- “available” and “not\r\n              available”.\") ||\r\n                (featureType === \"range\" &&\r\n                  \"This feature supports range based entitlements.\r\n              For eg : Customer’s access can be between 100 and 300 API / minute.\") ||\r\n                (featureType === \"quantity\" &&\r\n                  \"This feature type has numbered entitlement levels-\r\n                For eg : 2,3,4 or 10 user license's.\") ||\r\n                (featureType === \"custom\" &&\r\n                  \"This feature supports range based entitlements. For eg : Customer’s\r\n                  access can be between 100 and 300 API / minute.\")\r\n            }}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <!-- ----------------range type--------------------------- -->\r\n    </div>\r\n\r\n    <!-- ----------------range detail--------------------------- -->\r\n    <div *ngIf=\"featureType === 'range'\" class=\"mt-8 range-detail-wrapper\">\r\n      <h4 class=\"mat-subtitle-2 font-weight-500 mb-4 text-headline-dark\">\r\n        Range Details\r\n      </h4>\r\n      <div class=\"range-detail py-2 px-3 border-2 mb-4\">\r\n        <p class=\"mat-body-1 text-headline-dark\">Entitlements Units</p>\r\n        <span class=\"mat-body-1 font-weight-500 text-primary\">{{unit}}</span>\r\n      </div>\r\n      <div class=\"detail-info border-2\">\r\n        <table class=\"w-full odd-bg-color\">\r\n          <th class=\"font-weight-500 text-darken-1\">Entitlement Range</th>\r\n          <th class=\"font-weight-500 text-darken-1\">Display Name</th>\r\n          <tr class=\"text-headline-light\">\r\n            <td>1 to Unlimited</td>\r\n            <td class=\"range-td\">Range</td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <!-- ----------------range detail--------------------------- -->\r\n\r\n    <!-- ----------------quantity and custom details--------------------------- -->\r\n    <div *ngIf=\"featureType === 'quantity'\" class=\"mt-8 range-detail-wrapper\">\r\n      <h4 class=\"mat-subtitle-2 font-weight-500 mb-4 text-headline-dark\">\r\n        Quantity Details\r\n      </h4>\r\n      <div class=\"range-detail py-2 px-3 border-2 mb-4\">\r\n        <p class=\"mat-body-1 text-headline-dark\">Entitlements Units</p>\r\n        <span class=\"mat-body-1 font-weight-500 text-primary\">{{unit}}</span>\r\n      </div>\r\n      <div class=\"detail-info border-2\">\r\n        <table class=\"w-full odd-bg-color\">\r\n          <th class=\"font-weight-500 text-darken-1\">Entitlement Levels</th>\r\n          <tr class=\"text-headline-light\" *ngFor=\"let displayName of displayNameArray\">\r\n            <td>{{displayName}}</td>\r\n          </tr>\r\n          <tr class=\"text-headline-light\">\r\n            <td>Unlimited {{unit}}</td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"featureType === 'custom'\" class=\"mt-8 range-detail-wrapper\">\r\n      <h4 class=\"mat-subtitle-2 font-weight-500 mb-4 text-headline-dark\">\r\n        Quantity Details\r\n      </h4>\r\n      <div class=\"detail-info border-2\">\r\n        <table class=\"w-full odd-bg-color\">\r\n          <th class=\"font-weight-500 text-darken-1\">Entitlement Levels</th>\r\n          <tr class=\"text-headline-light\">\r\n            <td>Working hours</td>\r\n          </tr>\r\n          <tr class=\"text-headline-light\">\r\n            <td>Weekdays</td>\r\n          </tr>\r\n          <tr class=\"text-headline-light\">\r\n            <td>All week</td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <!-- ----------------quantity details--------------------------- -->\r\n\r\n    <!-- ----------------range type--------------------------- -->\r\n\r\n    <div class=\"product-desc mt-8\">\r\n      <h4 class=\"mat-subtitle-2 font-weight-500 mb-4 text-headline-dark\">\r\n        {{description}}\r\n      </h4>\r\n      <p class=\"mat-body-1\">\r\n        Teams allows users to communicate in two-way persistent chats with one\r\n        or multiple participants. Participants can message using text, emojis,\r\n        stickers and gifs as well as sharing links and files. Messages can be\r\n        marked as urgent or important. In August 2022, the chat feature was\r\n        updated for \"chat with yourself\"; allowing for the organization of\r\n        files, notes, comments, images, and videos within a private chat tab\r\n      </p>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ViewPlansComponent",
            "id": "component-ViewPlansComponent-e2b854e73187fbc5e90d430a7df8000997f191d8aaf88750a4c212dfff3fe16d5a172afd1854a36c1026b4f716df17c2d05362674e33e1c0311b7b2b1604fd11",
            "file": "src/app/modules/plans/components/view-plans/view-plans.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-view-plans",
            "styleUrls": [
                "./view-plans.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./view-plans.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "clickedRows",
                    "defaultValue": "new Set<PeriodicElement>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "dataSource",
                    "defaultValue": "ELEMENT_DATA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['Currency', 'PricingCycle', 'Price']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "panelOpenState",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "toggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\nexport interface PeriodicElement {\r\n  PricingCycle: string;\r\n  Price: any;\r\n  Currency: any;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  { Currency: '', PricingCycle: 'Daily', Price: '$100/Unit' },\r\n  { Currency: '', PricingCycle: 'Weekly', Price: '$100/Unit' },\r\n  { Currency: '', PricingCycle: 'Monthly', Price: '$100/Unit' },\r\n  { Currency: '', PricingCycle: 'Yearly', Price: '$100/Unit' },\r\n];\r\n\r\n@Component({\r\n  selector: 'app-view-plans',\r\n  templateUrl: './view-plans.component.html',\r\n  styleUrls: ['./view-plans.component.scss'],\r\n})\r\nexport class ViewPlansComponent {\r\n  displayedColumns: string[] = ['Currency', 'PricingCycle', 'Price'];\r\n  dataSource = ELEMENT_DATA;\r\n  clickedRows = new Set<PeriodicElement>();\r\n  panelOpenState = false;\r\n  toggle() {\r\n    this.panelOpenState = !this.panelOpenState;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./view-plans.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"view-plan-wrapper overflow-auto border-2 w-full h-full\">\r\n  <div class=\"header-block border-2\">\r\n    <h3 class=\"mat-headline-5 heading text-text text-primary\">View Plan</h3>\r\n\r\n    <div class=\"brand-info\">\r\n      <div class=\"flex align-center\">\r\n        <p class=\"mat-headline-5 text-text text-dark title mb-1\">Premium</p>\r\n        <div\r\n          class=\"active-text flex align-center green-text text-darken-3 ml-4\"\r\n        >\r\n          <mat-icon\r\n            class=\"material-symbols-outlined mr-1 green-text text-darken-3\"\r\n            color=\"primary\"\r\n            >check_circle</mat-icon\r\n          ><span>Active</span>\r\n        </div>\r\n      </div>\r\n      <span class=\"mat-subtitle-2 subtitle font-weight-500 block\"\r\n        >#AS- 012P</span\r\n      >\r\n    </div>\r\n    <div class=\"flex align-center justify-between mt-8\">\r\n      <div class=\"flex\">\r\n        <div class=\"pricing-box\">\r\n          <span class=\"mat-subtitle-2 text-headline-light\">Pricing Model</span>\r\n          <span class=\"block mat-subtitle-2 text-headline-dark font-weight-500\"\r\n            >Tiered</span\r\n          >\r\n        </div>\r\n        <div class=\"pricing-box\">\r\n          <span class=\"mat-subtitle-2 text-headline-light\">Billing Cycle</span>\r\n          <span class=\"block mat-subtitle-2 text-headline-dark font-weight-500\"\r\n            >Fixed</span\r\n          >\r\n        </div>\r\n        <div class=\"pricing-box\">\r\n          <span class=\"mat-subtitle-2 text-headline-light\">Setup Fee</span>\r\n          <span class=\"block mat-subtitle-2 text-headline-dark font-weight-500\"\r\n            >INR. 0.00</span\r\n          >\r\n        </div>\r\n        <div class=\"pricing-box\">\r\n          <span class=\"mat-subtitle-2 text-headline-light\">Activation Fee</span>\r\n          <span class=\"block mat-subtitle-2 text-headline-dark font-weight-500\"\r\n            >INR. 0.00</span\r\n          >\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"btn-section flex align-center\">\r\n        <button mat-stroked-button color=\"primary\" class=\"mr-2 large\">\r\n          Edit\r\n        </button>\r\n        <button mat-flat-button color=\"primary\" class=\"large\">\r\n          Back to list\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"inner-wrapper\">\r\n    <div class=\"flex mb-8\">\r\n      <div class=\"flex align-center pr-6 calendar-box\">\r\n        <mat-icon class=\"material-symbols-outlined mr-3 text-lighten-2\"\r\n          >calendar_today</mat-icon\r\n        >\r\n        <span class=\"mat-subtitle-2 text-dark\">Created 24 March, 2023</span>\r\n      </div>\r\n      <div class=\"flex align-center pl-6\">\r\n        <mat-icon class=\"material-symbols-outlined mr-3 text-lighten-2\"\r\n          >calendar_today</mat-icon\r\n        >\r\n        <span class=\"mat-subtitle-2 text-dark\">Created 24 March, 2023</span>\r\n      </div>\r\n    </div>\r\n    <div class=\"Plan-Description\">\r\n      <p class=\"mat-subtitle-2 text-headline-dark font-weight-500 mb-3\">\r\n        Plan Description\r\n      </p>\r\n      <p class=\"mat-subtitle-2 text-dark\">\r\n        Smart plan with the right mix of basic and slightly advanced tools to\r\n        help you with all marketing and sales requirements.\r\n      </p>\r\n    </div>\r\n    <div class=\"my-10\">\r\n      <h6 class=\"mat-subtitle-2 text-headline-dark font-weight-500\">\r\n        Pricing Details\r\n      </h6>\r\n      <div class=\"table-priceing-details\">\r\n        <table mat-table [dataSource]=\"dataSource\">\r\n          <!-- Currency Column -->\r\n          <ng-container matColumnDef=\"Currency\">\r\n            <th\r\n              mat-header-cell\r\n              *matHeaderCellDef\r\n              class=\"mat-subtitle-2 text-headline-dark action-header\"\r\n            >\r\n              Currency\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n              <div class=\"flex\">\r\n                <div class=\"flags mr-3\">\r\n                  <img\r\n                    src=\"../../../../../../assets/images/flags.png\"\r\n                    alt=\"flags\"\r\n                  />\r\n                </div>\r\n                <span class=\"mat-subtitle-2 text-headline-dark\">USD</span>\r\n              </div>\r\n            </td>\r\n          </ng-container>\r\n          <!-- PricingCycle Column -->\r\n          <ng-container matColumnDef=\"PricingCycle\">\r\n            <th\r\n              mat-header-cell\r\n              *matHeaderCellDef\r\n              class=\"mat-subtitle-2 text-headline-dark\"\r\n            >\r\n              Pricing Cycle\r\n            </th>\r\n            <td\r\n              mat-cell\r\n              *matCellDef=\"let element\"\r\n              class=\"mat-subtitle-2 text-headline-light\"\r\n            >\r\n              {{ element.PricingCycle }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <!-- Price Column -->\r\n          <ng-container matColumnDef=\"Price\">\r\n            <th\r\n              mat-header-cell\r\n              *matHeaderCellDef\r\n              class=\"mat-subtitle-2 text-headline-dark\"\r\n            >\r\n              Price\r\n            </th>\r\n            <td\r\n              mat-cell\r\n              *matCellDef=\"let element\"\r\n              class=\"mat-subtitle-2 text-headline-light\"\r\n            >\r\n              {{ element.Price }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr\r\n            mat-row\r\n            (click)=\"clickedRows.add(row)\"\r\n            [class.demo-row-is-clicked]=\"clickedRows.has(row)\"\r\n            *matRowDef=\"let row; columns: displayedColumns\"\r\n          ></tr>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div class=\"product-wrapper\">\r\n      <div class=\"product-inner mb-4\">\r\n        <h2 class=\"mat-subtitle-2 text-headline-dark font-weight-500 mb-4\">\r\n          Associated Product\r\n        </h2>\r\n        <div class=\"product-box mb-4 flex\">\r\n          <div class=\"product-img p-2 mr-4\">\r\n            <img\r\n              src=\"../.././../../assets/images/teams.png\"\r\n              alt=\"product-img\"\r\n            />\r\n          </div>\r\n          <div class=\"\">\r\n            <mat-accordion class=\"product-info\">\r\n              <mat-expansion-panel\r\n                hideToggle\r\n                #panelH\r\n                (click)=\"panelH.toggle()\"\r\n              >\r\n                <mat-expansion-panel-header>\r\n                  <mat-panel-title>\r\n                    <h6\r\n                      class=\"mat-subtitle-2 text-headline-light font-weight-500 mb-1\"\r\n                    >\r\n                      MS Teams\r\n                    </h6>\r\n                  </mat-panel-title>\r\n                  <mat-panel-description>\r\n                    <p class=\"mat-subtitle-2 text-dark\">\r\n                      Microsoft Teams is a proprietary business communication\r\n                      platform developed by Microsoft, as part of the Microsoft\r\n                      365 family of products. Teams primarily competes with the\r\n                      similar service Slack, offering workspace chat and\r\n                      videoconferencing, file storage, and application\r\n                      integration.\r\n                      <button\r\n                        mat-button\r\n                        disableRipple\r\n                        class=\"link-text\"\r\n                        (click)=\"panelH.toggle()\"\r\n                      >\r\n                        Explore features\r\n                      </button>\r\n                    </p>\r\n                  </mat-panel-description>\r\n                </mat-expansion-panel-header>\r\n                <h6 class=\"mat-subtitle-2 text-headline-light my-2\">\r\n                  Assigned features to product\r\n                </h6>\r\n                <ul class=\"green-dot\">\r\n                  <li class=\"mat-subtitle-2 text-dark\">\r\n                    <span class=\"ml-n-1\">Whiteboard</span\r\n                    ><span class=\"text-lighten-4 ml-1\"\r\n                      >(Switch\r\n                      <span class=\"text-headline-light\">ON</span> )</span\r\n                    >\r\n                  </li>\r\n                  <li class=\"mat-subtitle-2 text-dark\">\r\n                    <span class=\"ml-n-1\">Email Support</span\r\n                    ><span class=\"text-lighten-4 ml-1\"\r\n                      >(Custom\r\n                      <span class=\"text-headline-light\">All Week</span> )</span\r\n                    >\r\n                  </li>\r\n                  <li class=\"mat-subtitle-2 text-dark\">\r\n                    <span class=\"ml-n-1\">User License</span\r\n                    ><span class=\"text-lighten-4 ml-1\"\r\n                      >(Quantity 10\r\n                      <span class=\"text-headline-light\">License</span> )</span\r\n                    >\r\n                  </li>\r\n                </ul>\r\n              </mat-expansion-panel>\r\n            </mat-accordion>\r\n          </div>\r\n        </div>\r\n        <div class=\"product-box mb-4 flex\">\r\n          <div class=\"product-img p-2 mr-4\">\r\n            <img\r\n              src=\"../.././../../assets/images/excel.png\"\r\n              alt=\"product-img\"\r\n            />\r\n          </div>\r\n          <div class=\"\">\r\n            <mat-accordion class=\"product-info\">\r\n              <mat-expansion-panel hideToggle #panelH (click)=\"panelH.toggle()\">\r\n                <mat-expansion-panel-header>\r\n                  <mat-panel-title>\r\n                    <h6\r\n                      class=\"mat-subtitle-2 text-headline-light font-weight-500 mb-1\"\r\n                    >\r\n                      MS Excel\r\n                    </h6>\r\n                  </mat-panel-title>\r\n                  <mat-panel-description>\r\n                    <p class=\"mat-subtitle-2 text-dark\">\r\n                      MS Excel is a powerful spreadsheet program included mainly\r\n                      used to record data in tables. as part of the Microsoft\r\n                      365 family of products. Teams primarily competes with the\r\n                      similar service Slack, offering workspace chat and\r\n                      videoconferencing, file storage, and application\r\n                      integration.\r\n                      <button\r\n                        mat-button\r\n                        disableRipple\r\n                        class=\"link-text\"\r\n                        (click)=\"panelH.toggle()\"\r\n                      >\r\n                        Explore features\r\n                      </button>\r\n                    </p>\r\n                  </mat-panel-description>\r\n                </mat-expansion-panel-header>\r\n                <h6 class=\"mat-subtitle-2 text-headline-light my-2\">\r\n                  Assigned features to product\r\n                </h6>\r\n                <ul class=\"green-dot\">\r\n                  <li class=\"mat-subtitle-2 text-dark\">\r\n                    <span class=\"ml-n-1\">Data Base</span\r\n                    ><span class=\"text-lighten-4 ml-1\"\r\n                      >(Range\r\n                      <span class=\"text-headline-light\">1-50</span> )</span\r\n                    >\r\n                  </li>\r\n                  <li class=\"mat-subtitle-2 text-dark\">\r\n                    <span class=\"ml-n-1\">Data clearly</span\r\n                    ><span class=\"text-lighten-4 ml-1\"\r\n                      >(Volume\r\n                      <span class=\"text-headline-light\">50-100</span> )</span\r\n                    >\r\n                  </li>\r\n                  <li class=\"mat-subtitle-2 text-dark\">\r\n                    <span class=\"ml-n-1\">Data merger</span\r\n                    ><span class=\"text-lighten-4 ml-1\"\r\n                      >(Switch\r\n                      <span class=\"text-headline-light\">ON</span> )</span\r\n                    >\r\n                  </li>\r\n                </ul>\r\n              </mat-expansion-panel>\r\n            </mat-accordion>\r\n          </div>\r\n        </div>\r\n        <div class=\"product-box mb-4 flex\">\r\n          <div class=\"product-img p-2 mr-4\">\r\n            <img src=\"../.././../../assets/images/word.png\" alt=\"product-img\" />\r\n          </div>\r\n          <div class=\"\">\r\n            <mat-accordion class=\"product-info\">\r\n              <mat-expansion-panel hideToggle #panelH (click)=\"panelH.toggle()\">\r\n                <mat-expansion-panel-header>\r\n                  <mat-panel-title>\r\n                    <h6\r\n                      class=\"mat-subtitle-2 text-headline-light font-weight-500 mb-1\"\r\n                    >\r\n                      MS Word\r\n                    </h6>\r\n                  </mat-panel-title>\r\n                  <mat-panel-description>\r\n                    <p class=\"mat-subtitle-2 text-dark\">\r\n                      Microsoft Word is a word processing program that allows\r\n                      for the creation of both simple and complex documents. 365\r\n                      family of products. Teams primarily competes with the\r\n                      similar service Slack, offering workspace chat and\r\n                      videoconferencing, file storage, and application\r\n                      integration.\r\n                      <button\r\n                        mat-button\r\n                        disableRipple\r\n                        class=\"link-text\"\r\n                        (click)=\"panelH.toggle()\"\r\n                      >\r\n                        Explore features\r\n                      </button>\r\n                    </p>\r\n                  </mat-panel-description>\r\n                </mat-expansion-panel-header>\r\n                <h6 class=\"mat-subtitle-2 text-headline-light my-2\">\r\n                  Assigned features to product\r\n                </h6>\r\n                <ul class=\"green-dot\">\r\n                  <li class=\"mat-subtitle-2 text-dark\">\r\n                    <span class=\"ml-n-1\">Create team sites</span\r\n                    ><span class=\"text-lighten-4 ml-1\"\r\n                      >(Range\r\n                      <span class=\"text-headline-light\">1-50</span> )</span\r\n                    >\r\n                  </li>\r\n                  <li class=\"mat-subtitle-2 text-dark\">\r\n                    <span class=\"ml-n-1\">Huge Files</span\r\n                    ><span class=\"text-lighten-4 ml-1\"\r\n                      >(Volume\r\n                      <span class=\"text-headline-light\">50-100</span> )</span\r\n                    >\r\n                  </li>\r\n                  <li class=\"mat-subtitle-2 text-dark\">\r\n                    <span class=\"ml-n-1\">Mail Merge</span\r\n                    ><span class=\"text-lighten-4 ml-1\"\r\n                      >(Switch\r\n                      <span class=\"text-headline-light\">ON</span> )</span\r\n                    >\r\n                  </li>\r\n                </ul>\r\n              </mat-expansion-panel>\r\n            </mat-accordion>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"addon-wrapper mt-8\">\r\n      <div class=\"product-inner mb-4\">\r\n        <h2 class=\"mat-subtitle-2 text-headline-dark font-weight-500 mb-4\">\r\n          Associated Addon\r\n        </h2>\r\n        <div class=\"product-box mb-4 flex\">\r\n          <div class=\"\">\r\n            <mat-accordion class=\"product-info\">\r\n              <mat-expansion-panel hideToggle #panelH (click)=\"panelH.toggle()\">\r\n                <mat-expansion-panel-header>\r\n                  <mat-panel-title>\r\n                    <h6\r\n                      class=\"mat-subtitle-2 text-headline-light font-weight-500 mb-1 mr-5\"\r\n                    >\r\n                      Teamwork and communication\r\n                    </h6>\r\n                    <mat-chip class=\"success-chip mb-1\" color=\"success\">\r\n                      <span class=\"mat-caption\">$100.00 USD</span>\r\n                    </mat-chip>\r\n                  </mat-panel-title>\r\n                  <mat-panel-description>\r\n                    <p class=\"mat-subtitle-2 text-dark\">\r\n                      We have 3 features which are clubbed in this addon.\r\n                      <button\r\n                        mat-button\r\n                        disableRipple\r\n                        class=\"link-text\"\r\n                        (click)=\"panelH.toggle()\"\r\n                      >\r\n                        Explore features\r\n                      </button>\r\n                    </p>\r\n                  </mat-panel-description>\r\n                </mat-expansion-panel-header>\r\n                <h6 class=\"mat-subtitle-2 text-headline-light my-2\">\r\n                  Assigned features to product\r\n                </h6>\r\n                <ul class=\"green-dot\">\r\n                  <li class=\"mat-subtitle-2 text-dark\">\r\n                    <span class=\"ml-n-1\">Host online calls</span\r\n                    ><span class=\"text-lighten-4 ml-1\"\r\n                      >(Switch\r\n                      <span class=\"text-headline-light\">ON</span> )</span\r\n                    >\r\n                  </li>\r\n                  <li class=\"mat-subtitle-2 text-dark\">\r\n                    <span class=\"ml-n-1\">Host webinars</span\r\n                    ><span class=\"text-lighten-4 ml-1\"\r\n                      >(Volume\r\n                      <span class=\"text-headline-light\">51</span> )</span\r\n                    >\r\n                  </li>\r\n                  <li class=\"mat-subtitle-2 text-dark\">\r\n                    <span class=\"ml-n-1\">Create team sites</span\r\n                    ><span class=\"text-lighten-4 ml-1\"\r\n                      >(Range\r\n                      <span class=\"text-headline-light\">1-50</span> )</span\r\n                    >\r\n                  </li>\r\n                </ul>\r\n              </mat-expansion-panel>\r\n            </mat-accordion>\r\n          </div>\r\n        </div>\r\n        <div class=\"product-box mb-4 flex\">\r\n          <div class=\"\">\r\n            <mat-accordion class=\"product-info\">\r\n              <mat-expansion-panel hideToggle #panelH (click)=\"panelH.toggle()\">\r\n                <mat-expansion-panel-header>\r\n                  <mat-panel-title>\r\n                    <h6\r\n                      class=\"mat-subtitle-2 text-headline-light font-weight-500 mb-1 mr-5\"\r\n                    >\r\n                      Security and compliance\r\n                    </h6>\r\n                    <mat-chip class=\"success-chip mb-1\" color=\"success\">\r\n                      <span class=\"mat-caption\">$100.00 USD</span>\r\n                    </mat-chip>\r\n                  </mat-panel-title>\r\n                  <mat-panel-description>\r\n                    <p class=\"mat-subtitle-2 text-dark\">\r\n                      We have 3 features which are clubbed in this addon.\r\n                      <button\r\n                        mat-button\r\n                        disableRipple\r\n                        class=\"link-text\"\r\n                        (click)=\"panelH.toggle()\"\r\n                      >\r\n                        Explore features\r\n                      </button>\r\n                    </p>\r\n                  </mat-panel-description>\r\n                </mat-expansion-panel-header>\r\n                <h6 class=\"mat-subtitle-2 text-headline-light my-2\">\r\n                  Assigned features to product\r\n                </h6>\r\n                <ul class=\"green-dot\">\r\n                  <li class=\"mat-subtitle-2 text-dark\">\r\n                    <span class=\"ml-n-1\">Online Protection</span\r\n                    ><span class=\"text-lighten-4 ml-1\"\r\n                      >(Switch\r\n                      <span class=\"text-headline-light\">ON</span> )</span\r\n                    >\r\n                  </li>\r\n                  <li class=\"mat-subtitle-2 text-dark\">\r\n                    <span class=\"ml-n-1\">Password policies</span\r\n                    ><span class=\"text-lighten-4 ml-1\"\r\n                      >(Volume\r\n                      <span class=\"text-headline-light\">51</span> )</span\r\n                    >\r\n                  </li>\r\n                  <li class=\"mat-subtitle-2 text-dark\">\r\n                    <span class=\"ml-n-1\">Defender for business</span\r\n                    ><span class=\"text-lighten-4 ml-1\"\r\n                      >(Range\r\n                      <span class=\"text-headline-light\">1-50</span> )</span\r\n                    >\r\n                  </li>\r\n                </ul>\r\n              </mat-expansion-panel>\r\n            </mat-accordion>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ViewProductComponent",
            "id": "component-ViewProductComponent-b133fc99bb1e02f416e84f12b4d7c57a7b3c5489a5e9127daf0dfa243f97834015b0fa87e7e9bea7399d217cd511bb50c27bc273f8b484b752908ed9e3d5fa5b",
            "file": "src/app/modules/products/components/view-product/view-product.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-view-product",
            "styleUrls": [
                "./view-product.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./view-product.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "createdOn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "environment",
                    "defaultValue": "environment",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "feature",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "imageName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "imagePath",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "imageUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "modifiedOn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "product$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "productDetail",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "productId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "getProductId",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { ProductsService } from '../../services/products.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-view-product',\r\n  templateUrl: './view-product.component.html',\r\n  styleUrls: ['./view-product.component.scss'],\r\n})\r\nexport class ViewProductComponent {\r\n  product$: Observable<any>;\r\n  subscription: Subscription;\r\n  productDetail: any\r\n  productId: string\r\n  name: string\r\n  description: string\r\n  modifiedOn:string\r\n  createdOn:string\r\n  status: string\r\n   environment = environment;\r\n  imageUrl: string \r\n  imagePath:string\r\n  imageName:string\r\n  feature:any\r\n  constructor(private productService: ProductsService, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    const id = this.route.snapshot.params['id'];\r\n    this.productService.getProductById(id).\r\n      subscribe((res) => {\r\n        this.productDetail = res\r\n        console.log(\"aaa\", this.productDetail)\r\n        this.productId = this.productDetail?.productId\r\n        this.name = this.productDetail?.name\r\n        this.description = this.productDetail?.description\r\n        this.createdOn = this.productDetail?.createdOn\r\n        this.modifiedOn = this.productDetail?.modifiedOn\r\n        this.status = this.productDetail?.status\r\n        this.imageUrl = this.productDetail?.imageUrl,\r\n        this.imageName = this.imageUrl?.substring(this.imageUrl.lastIndexOf('/') + 1);\r\n        this.imagePath=this.environment.imagePath\r\n        this.feature = this.productDetail?.feature || [];\r\n      })\r\n\r\n  }\r\n  getProductId(id: string){\r\n    this.productService.setId(id)\r\n    \r\n  }\r\n\r\n}\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./view-product.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"view-product-wrapper\">\r\n  <div class=\"header-block border-2\">\r\n    <h3 class=\"mat-headline-5 heading text-text text-primary\">View Product</h3>\r\n    <div class=\"flex align-center justify-between\">\r\n      <div class=\"brand-info flex align-end\">\r\n        <div class=\"product-img mr-4 border-2\" *ngIf=\"productDetail?.imageUrl && productDetail.imageUrl.length > 0;else uploadImage\" >\r\n          <img src=\"{{ imagePath + imageUrl }}\" alt=\"{{imageName}}\" />\r\n        </div>\r\n        <ng-template #uploadImage>\r\n          <div class=\"product-img mr-4 border-2\">\r\n           <img src=\"../.././../../assets/images/no-image.logo.jpg\" alt=\"product-img\" />\r\n        </div>\r\n        </ng-template>\r\n        <div>\r\n          <div class=\"flex align-center\">\r\n            <p class=\"mat-headline-5 text-text text-dark title mb-1\">\r\n              {{name}}\r\n            </p>\r\n            <div\r\n              class=\"active-text flex align-center green-text text-darken-3 ml-4\"\r\n            >\r\n              <mat-icon\r\n                class=\"material-symbols-outlined mr-1 green-text text-darken-3\"\r\n                color=\"primary\"\r\n                >check_circle</mat-icon\r\n              ><span>{{status}}</span>\r\n            </div>\r\n          </div>\r\n          <span class=\"mat-subtitle-2 subtitle font-weight-500 block\"\r\n            >{{productId}}</span\r\n          >\r\n        </div>\r\n      </div>\r\n      <div class=\"btn-section flex align-center\">\r\n        <button mat-stroked-button color=\"primary\" class=\"mr-2 large\" [routerLink]=\"['/products/edit-product/'+productId]\" >\r\n          Edit\r\n        </button>\r\n        <button mat-flat-button color=\"primary\" class=\"large\" [routerLink]=\"['/products']\">\r\n          Back to list\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"content-block p-6\">\r\n    <div class=\"date-block flex align-center mb-8\">\r\n      <div class=\"flex align-center\">\r\n        <mat-icon class=\"material-symbols-outlined mr-3\"\r\n          >calendar_today</mat-icon\r\n        >\r\n         <p class=\"mat-subtitle-2 text-dark\">Created {{createdOn | date: 'd MMMM y'}}</p> \r\n      </div>\r\n      <div class=\"vertical-divider mx-6\"></div>\r\n      <div class=\"flex align-center\">\r\n        <mat-icon class=\"material-symbols-outlined mr-3\"\r\n          >calendar_today</mat-icon\r\n        >\r\n       <p class=\"mat-subtitle-2 text-dark\"> modified {{modifiedOn | date: 'd MMMM y'}}</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"product-desc\">\r\n      <h4 class=\"mat-subtitle-2 font-weight-500 mb-4\">Description</h4>\r\n      <p class=\"mat-subtitle-2\">\r\n        {{description}}\r\n      </p>\r\n    </div>\r\n    <div class=\"product-features mt-8\">\r\n      <div class=\"flex align-center justify-between\">\r\n        <h4 class=\"mat-subtitle-2 font-weight-500 mb-4\">Features</h4>\r\n        <!-- below button will show only when added a feature  -->\r\n        <button mat-button color=\"primary\" (click)=\"getProductId(productId)\" [routerLink]=\"['/features/create/products/' + productId]\">Create feature</button>\r\n      </div>\r\n      <!-- with feature added -->\r\n      <div class=\"features-wrapper\">\r\n       <div *ngIf=\"productDetail?.feature && productDetail.feature.length > 0; else noFeaturesBlock\">\r\n        <div class=\"feature-item flex border-2\" *ngFor=\"let feature of productDetail.feature; let i = index\">\r\n          <div\r\n            class=\"feature-logo border-2 flex-center font-weight-500 primary-text text-main\"\r\n          >\r\n            <span>{{ feature.featureId}}</span>\r\n          </div>\r\n          <div class=\"details ml-8\">\r\n            <div class=\"flex align-center mb-2\">\r\n              <span\r\n                class=\"mat-subtitle-2 font-weight-500 text-text text-primary\"\r\n                >{{ feature.name }}</span\r\n              >\r\n              <div\r\n                class=\"active-text flex align-center green-text text-darken-3 ml-6\"\r\n              >\r\n                <mat-icon\r\n                  class=\"material-symbols-outlined mr-1 green-text text-darken-3\"\r\n                  color=\"primary\"\r\n                  >check_circle</mat-icon\r\n                ><span>{{feature.status}}</span>\r\n              </div>\r\n            </div>\r\n            <p class=\"mat-body-1 text-dark mb-2\">\r\n                   {{ feature.description }}\r\n            </p>\r\n            <span class=\"text-dark\">Feature type : </span>\r\n            <span class=\"text-text text-primary ml-3\">{{feature.type}}</span>\r\n          </div>\r\n          <div class=\"action-btns flex align-center\">\r\n            <button mat-button color=\"primary\" >\r\n              <mat-icon\r\n                class=\"material-symbols-outlined mb-1 small edit-icon\"\r\n                color=\"primary\"\r\n              >\r\n                edit </mat-icon\r\n              >Edit\r\n            </button>\r\n            <button\r\n              mat-icon-button\r\n              class=\"mb-1 ml-4\"\r\n              color=\"warn\"\r\n              aria-label=\"Example icon button with a vertical three dot icon\"\r\n            >\r\n              <mat-icon class=\"material-symbols-outlined\" color=\"warn\"\r\n                >close</mat-icon\r\n              >\r\n            </button>\r\n          </div>\r\n        </div>\r\n        </div>\r\n\r\n         <!-- No features block -->\r\n  <ng-template #noFeaturesBlock>\r\n    <div class=\"feature-add-block flex align-center justify-center p-6\">\r\n      <div class=\"text-center flex align-center flex vertical\">\r\n        <div class=\"icon-with-bg\">\r\n          <div class=\"bg-box\"></div>\r\n          <div class=\"icon inherit\">\r\n            <mat-icon class=\"material-symbols-outlined mb-1\">featured_play_list</mat-icon>\r\n          </div>\r\n        </div>\r\n        <p class=\"mat-subtitle-2 text-dark-1 mb-3 font-weight-500\">\r\n          You have not added any features\r\n        </p>\r\n        <button mat-button color=\"primary\" class=\"small\" (click)=\"getProductId(productId)\" [routerLink]=\"['/features/create/products/' + productId]\">\r\n          Create Features\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        }
    ],
    "modules": [
        {
            "name": "AngularMaterialModule",
            "id": "module-AngularMaterialModule-8da7e9ef39162e302fab6807e8bb93dea5c74447990ca19fb216afedabd881e96192709336ff56ea62c4611b51007c66bf05f0dfc9a7cf51b42b8a4ce8292389",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/modules/angular-material/angular-material.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\n\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkAccordionModule } from '@angular/cdk/accordion';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { BidiModule } from '@angular/cdk/bidi';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { PlatformModule } from '@angular/cdk/platform';\r\nimport { ObserversModule } from '@angular/cdk/observers';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\n@NgModule({\r\n  declarations: [],\r\n  exports: [\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatBottomSheetModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatTableModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatBadgeModule,\r\n    MatSidenavModule,\r\n    MatSlideToggleModule,\r\n    MatSliderModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatStepperModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatNativeDateModule,\r\n    CdkTableModule,\r\n    A11yModule,\r\n    BidiModule,\r\n    CdkAccordionModule,\r\n    ObserversModule,\r\n    OverlayModule,\r\n    PlatformModule,\r\n    PortalModule\r\n  ]\r\n})\r\nexport class AngularMaterialModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-6f5e216f1bdb1c5dbfb4edef3c883db21550916b1ce838455beb7e133a7e5bc9dcf1f9cdd8bb44de45db4d280af6fcc62e56b4f3cc78e559fe1f69942f881f4b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AngularMaterialModule } from './shared/modules/angular-material/angular-material.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SharedModule } from './shared/modules/shared/shared.module';\r\nimport { LayoutComponent } from './core/layouts/layout/layout.component';\r\nimport { SidebarComponent } from './core/layouts/sidebar/sidebar.component';\r\nimport { SuccessDialogComponent } from './shared/components/dialog-box/success-dialog/success-dialog.component';\r\nimport { DeleteConfirmationComponent } from './shared/components/dialog-box/delete-confirmation/delete-confirmation.component';\r\nimport { PageNotFoundComponent } from './shared/components/page-not-found/page-not-found.component';\r\nimport { FeatureDetailsPopupComponent } from './shared/components/dialog-box/feature-details-popup/feature-details-popup.component';\r\nimport { CouponsDeleteSuccessComponent } from './shared/components/dialog-box/coupons-delete-success/coupons-delete-success.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LayoutComponent,\r\n    SidebarComponent,\r\n    SuccessDialogComponent,\r\n    DeleteConfirmationComponent,\r\n    PageNotFoundComponent,\r\n    FeatureDetailsPopupComponent,\r\n    CouponsDeleteSuccessComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AngularMaterialModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    FormsModule,\r\n    SharedModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "CouponsDeleteSuccessComponent"
                        },
                        {
                            "name": "DeleteConfirmationComponent"
                        },
                        {
                            "name": "FeatureDetailsPopupComponent"
                        },
                        {
                            "name": "LayoutComponent"
                        },
                        {
                            "name": "PageNotFoundComponent"
                        },
                        {
                            "name": "SidebarComponent"
                        },
                        {
                            "name": "SuccessDialogComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AngularMaterialModule"
                        },
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-455587bb6e70b17e8e740f985438dc955dee71f913c570226f029727943c688f02f239b2615e04c064616fb13f0a3c42878cdd8d119c4d9d34b41918bb6d4e2e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LayoutComponent } from './core/layouts/layout/layout.component';\r\nimport { PageNotFoundComponent } from './shared/components/page-not-found/page-not-found.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LayoutComponent,\r\n    children: [\r\n      {\r\n        path: 'products',\r\n        loadChildren: () =>\r\n          \"import('../app/modules/products/products.module').then(\\\n            (mod) => mod.ProductsModule\\\n          )\",\r\n      },\r\n      {\r\n        path: 'features',\r\n        loadChildren: () =>\r\n          \"import('../app/modules/features/features.module').then(\\\n            (mod) => mod.FeaturesModule\\\n          )\",\r\n      },\r\n      {\r\n        path: 'plans',\r\n        loadChildren: () =>\r\n          \"import('../app/modules/plans/plans.module').then(\\\n            (mod) => mod.PlansModule\\\n          )\",\r\n      },\r\n      {\r\n        path: 'coupons',\r\n        loadChildren: () =>\r\n          \"import('../app/modules/coupons/coupons.module').then(\\\n            (mod) => mod.CouponsModule\\\n          )\",\r\n      },\r\n      {\r\n        path: '',\r\n        loadChildren: () =>\r\n          \"import('./modules/payment-history/payment-history.module').then(\\\n            (m) => m.PaymentHistoryModule\\\n          )\",\r\n      },\r\n    ],\r\n  },\r\n  { path: '**', component: PageNotFoundComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CouponsModule",
            "id": "module-CouponsModule-e504517ff2ef74d6e152829d36f0257b0cc9c4a4f2a971a02f6ad7700078aae315dfa2b1330016251e7e20487025808dba5d7d4aae1acffcfb3c65b0876593bc",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/coupons/coupons.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CouponsRoutingModule } from './coupons-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AngularMaterialModule } from 'src/app/shared/modules/angular-material/angular-material.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared/shared.module';\r\nimport { ViewCouponsComponent } from './components/view-coupons/view-coupons.component';\r\nimport { CouponsListingComponent } from './components/coupons-listing/coupons-listing.component';\r\nimport { CreateCouponsComponent } from './components/create-coupons/create-coupons.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ViewCouponsComponent,\r\n    CouponsListingComponent,\r\n    CreateCouponsComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    CouponsRoutingModule,\r\n    HttpClientModule,\r\n    AngularMaterialModule,\r\n    SharedModule,\r\n  ],\r\n})\r\nexport class CouponsModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CouponsListingComponent"
                        },
                        {
                            "name": "CreateCouponsComponent"
                        },
                        {
                            "name": "ViewCouponsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AngularMaterialModule"
                        },
                        {
                            "name": "CouponsRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CouponsRoutingModule",
            "id": "module-CouponsRoutingModule-810504d09b6c4ab8de4e71ef43084892db6e1d554baccc0d140edb163beaf4bb19cb46ea287b4a460875c779967008797918bca7de5414691e04b58479e8fcb1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/coupons/coupons-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CouponsListingComponent } from './components/coupons-listing/coupons-listing.component';\r\nimport { CreateCouponsComponent } from './components/create-coupons/create-coupons.component';\r\nimport { ViewCouponsComponent } from './components/view-coupons/view-coupons.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: CouponsListingComponent },\r\n  { path: 'create', component: CreateCouponsComponent },\r\n  { path: 'view', component: ViewCouponsComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CouponsRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FeaturesModule",
            "id": "module-FeaturesModule-9b5f7f21813ac723d3bfea2045d541c20682bc98da48396b74e114f0064745204224d41ee84c8869ebd9372837ffe4588711d6cd65cdd2287afcdd01364f346e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/features/features.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FeaturesRoutingModule } from './features-routing.module';\r\nimport { FeaturesListingComponent } from './components/features-listing/features-listing.component';\r\nimport { AngularMaterialModule } from 'src/app/shared/modules/angular-material/angular-material.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared/shared.module';\r\nimport { CreateFeatureComponent } from './components/create-feature/create-feature.component';\r\nimport { ViewFeatureComponent } from './components/view-feature/view-feature.component';\r\nimport { EditFeatureComponent } from './components/edit-feature/edit-feature.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FeaturesListingComponent,\r\n    CreateFeatureComponent,\r\n    ViewFeatureComponent,\r\n    EditFeatureComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FeaturesRoutingModule,\r\n    AngularMaterialModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class FeaturesModule {\r\n  constructor() {\r\n    console.log('this is features module');\r\n  }\r\n}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CreateFeatureComponent"
                        },
                        {
                            "name": "EditFeatureComponent"
                        },
                        {
                            "name": "FeaturesListingComponent"
                        },
                        {
                            "name": "ViewFeatureComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AngularMaterialModule"
                        },
                        {
                            "name": "FeaturesRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FeaturesRoutingModule",
            "id": "module-FeaturesRoutingModule-a0f5cd8996848fd831d461befb651944e746c958009e89d48a5f1396388257ebd057582457fea9c1543d2598fc4707d18c122dc4239bedba31ba4cac4ded42f2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/features/features-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FeaturesListingComponent } from './components/features-listing/features-listing.component';\r\nimport { CreateFeatureComponent } from './components/create-feature/create-feature.component';\r\nimport { ViewFeatureComponent } from './components/view-feature/view-feature.component';\r\nimport { EditFeatureComponent } from './components/edit-feature/edit-feature.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: FeaturesListingComponent,\r\n  },\r\n  {\r\n    path: 'create',\r\n    component: CreateFeatureComponent,\r\n    children: [\r\n      {path: 'products/:id', component: CreateFeatureComponent}\r\n    ]\r\n  },\r\n  {\r\n    path: 'create/products/:id',\r\n    component: CreateFeatureComponent,\r\n  },\r\n  { path: 'view/:id', component: ViewFeatureComponent },\r\n  {\r\n    path: 'edit-feature/:id',\r\n    component: EditFeatureComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class FeaturesRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PaymentHistoryModule",
            "id": "module-PaymentHistoryModule-79b3029405126c73daf802846a1184c6e7d732031e82a0f0dca4397232ddb11581154491c2f53a26275fc4202be591a41471b2d5f8e46ba1e81febb5f43700f7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/payment-history/payment-history.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PaymentHistoryRoutingModule } from './payment-history-routing.module';\r\nimport { TransactionListComponent } from './transactions/components/transaction-list/transaction-list.component';\r\nimport { TransactionViewComponent } from './transactions/components/transaction-view/transaction-view.component';\r\nimport { LogsListComponent } from './logs/components/logs-list/logs-list.component';\r\nimport { LogViewComponent } from './logs/components/log-view/log-view.component';\r\nimport { InvoiceListComponent } from './invoices/components/invoice-list/invoice-list.component';\r\nimport { InvoiceViewComponent } from './invoices/components/invoice-view/invoice-view.component';\r\nimport { SharedModule } from 'src/app/shared/modules/shared/shared.module';\r\nimport { AngularMaterialModule } from 'src/app/shared/modules/angular-material/angular-material.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TransactionListComponent,\r\n    TransactionViewComponent,\r\n    LogsListComponent,\r\n    LogViewComponent,\r\n    InvoiceListComponent,\r\n    InvoiceViewComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PaymentHistoryRoutingModule,\r\n    SharedModule,\r\n    AngularMaterialModule\r\n  ]\r\n})\r\nexport class PaymentHistoryModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "InvoiceListComponent"
                        },
                        {
                            "name": "InvoiceViewComponent"
                        },
                        {
                            "name": "LogViewComponent"
                        },
                        {
                            "name": "LogsListComponent"
                        },
                        {
                            "name": "TransactionListComponent"
                        },
                        {
                            "name": "TransactionViewComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AngularMaterialModule"
                        },
                        {
                            "name": "PaymentHistoryRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PaymentHistoryRoutingModule",
            "id": "module-PaymentHistoryRoutingModule-a15ab6317f7cede9f187de160d362a50eb0ba15bb5fa57cabf66065faea29c58575845aa2923b448cf37a07d7506678d9c588d4b0b99f96ee12f990fd9895260",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/payment-history/payment-history-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TransactionListComponent } from './transactions/components/transaction-list/transaction-list.component';\r\nimport { TransactionViewComponent } from './transactions/components/transaction-view/transaction-view.component';\r\nimport { InvoiceListComponent } from './invoices/components/invoice-list/invoice-list.component';\r\nimport { InvoiceViewComponent } from './invoices/components/invoice-view/invoice-view.component';\r\nimport { LogsListComponent } from './logs/components/logs-list/logs-list.component';\r\nimport { LogViewComponent } from './logs/components/log-view/log-view.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'transactions',\r\n    component: TransactionListComponent,\r\n  },\r\n  {\r\n    path: 'transactions/view',\r\n    component: TransactionViewComponent,\r\n  },\r\n  {\r\n    path: 'invoices',\r\n    component: InvoiceListComponent\r\n  },\r\n  {\r\n    path: 'invoices/view',\r\n    component: InvoiceViewComponent\r\n  },\r\n  {\r\n    path: 'logs',\r\n    component: LogsListComponent\r\n  },\r\n  {\r\n    path: 'logs/view',\r\n    component: LogViewComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class PaymentHistoryRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PlansModule",
            "id": "module-PlansModule-9bed0cefdf0f24262096f04a1ec4d0586a494a9b605248d4c0cb8ffe6a5c1f8a43a4176b5a23aaa086ea5247f73353ae444c709e5efb4008defa43e8323d724e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/plans/plans.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PlansRoutingModule } from './plans-routing.module';\r\nimport { AngularMaterialModule } from 'src/app/shared/modules/angular-material/angular-material.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared/shared.module';\r\nimport { PlansListingComponent } from './components/plans-listing/plans-listing.component';\r\nimport { ViewPlansComponent } from './components/view-plans/view-plans.component';\r\nimport { PlanAddEmptyLayoutComponent } from './components/plan-add-empty-layout/plan-add-empty-layout.component';\r\nimport { CreatePlanComponent } from './components/create-plan/create-plan.component';\r\nimport { SetPriceComponent } from './components/set-price/set-price.component';\r\nimport { ProductDetailsComponent } from './components/product-details/product-details.component';\r\nimport { AddOnsDetailsComponent } from './components/add-ons-details/add-ons-details.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PlansListingComponent,\r\n    ViewPlansComponent,\r\n    CreatePlanComponent,\r\n    PlanAddEmptyLayoutComponent,\r\n    SetPriceComponent,\r\n    ProductDetailsComponent,\r\n    AddOnsDetailsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PlansRoutingModule,\r\n    AngularMaterialModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class PlansModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AddOnsDetailsComponent"
                        },
                        {
                            "name": "CreatePlanComponent"
                        },
                        {
                            "name": "PlanAddEmptyLayoutComponent"
                        },
                        {
                            "name": "PlansListingComponent"
                        },
                        {
                            "name": "ProductDetailsComponent"
                        },
                        {
                            "name": "SetPriceComponent"
                        },
                        {
                            "name": "ViewPlansComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AngularMaterialModule"
                        },
                        {
                            "name": "PlansRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PlansRoutingModule",
            "id": "module-PlansRoutingModule-fae2d3a0fab95a19c33b028517c656104f41ea786d55f5da5cd4508a7396ee6c6752dec5241128b28921f14091404a6f664a5e05184a6772dc6cb423f9201c10",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/plans/plans-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { PlansListingComponent } from './components/plans-listing/plans-listing.component';\r\nimport { ViewPlansComponent } from './components/view-plans/view-plans.component';\r\nimport { CreatePlanComponent } from './components/create-plan/create-plan.component';\r\nimport { SetPriceComponent } from './components/set-price/set-price.component';\r\nimport { ProductDetailsComponent } from './components/product-details/product-details.component';\r\nimport { AddOnsDetailsComponent } from './components/add-ons-details/add-ons-details.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PlansListingComponent },\r\n  { path: 'view', component: ViewPlansComponent },\r\n  { path: 'create', component: CreatePlanComponent },\r\n  { path: 'create/set-price', component: SetPriceComponent},\r\n  { path: 'create/product-detail', component: ProductDetailsComponent},\r\n  { path: 'create/add-ons', component:AddOnsDetailsComponent},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\n\r\nexport class PlansRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProductsModule",
            "id": "module-ProductsModule-7926079249fb0438d61ef91a6092f35c305442ab5a95a9feaf6c94bb47a697bfc2409a6cf75a8856cd051af1b24891f1353aba0b7043acc497dd5c0915948e18",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/products/products.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProductsRoutingModule } from './products-routing.module';\r\nimport { ProductListingComponent } from './components/product-listing/product-listing.component';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\n\r\nimport { AngularMaterialModule } from 'src/app/shared/modules/angular-material/angular-material.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared/shared.module';\r\nimport { CreateProductComponent, DialogAnimationsDialog } from './components/create-product/create-product.component';\r\nimport { ViewProductComponent } from './components/view-product/view-product.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { EditProductComponent } from './components/edit-product/edit-product.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CreateProductComponent,\r\n    ProductListingComponent,\r\n    DialogAnimationsDialog,\r\n    ViewProductComponent,\r\n    EditProductComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    ProductsRoutingModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    AngularMaterialModule,\r\n    SharedModule,\r\n    MatDividerModule\r\n  ],\r\n})\r\nexport class ProductsModule { }",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CreateProductComponent"
                        },
                        {
                            "name": "DialogAnimationsDialog"
                        },
                        {
                            "name": "EditProductComponent"
                        },
                        {
                            "name": "ProductListingComponent"
                        },
                        {
                            "name": "ViewProductComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AngularMaterialModule"
                        },
                        {
                            "name": "ProductsRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProductsRoutingModule",
            "id": "module-ProductsRoutingModule-8dfed7bb122d68bcc6716f3b8611196b8ffe6618dab2f522b3be4d04ad4f5849e782660730e695827da99b134e48df7f6cbeff927153749261ad8a64baee2f62",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/products/products-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ProductListingComponent } from './components/product-listing/product-listing.component';\r\nimport { CreateProductComponent } from './components/create-product/create-product.component';\r\nimport { ViewProductComponent } from './components/view-product/view-product.component';\r\nimport { EditProductComponent } from './components/edit-product/edit-product.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProductListingComponent\r\n  },\r\n  {\r\n    path: 'create',\r\n    component: CreateProductComponent\r\n  },\r\n\r\n  {\r\n    path: 'edit-product/:id',\r\n    component: EditProductComponent\r\n  },\r\n  {\r\n    path: 'view-product/:id',\r\n    component: ViewProductComponent\r\n  },\r\n  {\r\n    path: 'view-product',\r\n    component: ViewProductComponent\r\n  },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProductsRoutingModule { }",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SftBreadcrumbModule",
            "id": "module-SftBreadcrumbModule-0e93e743aa4d15b37e427a115f885afb6d57b49272cba45e30b3eb195cbdb40bb29f5622c28bd5bfbf2867f3c9d632961aecd3126c7c89db0c0fecf7024a4349",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/softobiz-ui/breadcrumb/breadcrumb.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Breadcrumb } from './breadcrumb.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    BrowserAnimationsModule,\r\n  ],\r\n  declarations: [Breadcrumb],\r\n  exports: [Breadcrumb],\r\n})\r\nexport class SftBreadcrumbModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "Breadcrumb"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "Breadcrumb"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SftButtonModule",
            "id": "module-SftButtonModule-c0772d301344b03fa3f94916108da11b549475999d0e60036196ae9ec64b679c945e6ef9a0538e1cecb8b135fea614052ecff3c42fd85a6835f4dd6cdf2a45a2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/softobiz-ui/button/button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { ButtonComponent } from './button.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MatButtonModule, MatIconModule],\r\n  declarations: [ButtonComponent],\r\n  exports: [ButtonComponent],\r\n})\r\nexport class SftButtonModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SftCheckboxModule",
            "id": "module-SftCheckboxModule-8b1feb798c70b8582eb98ccaed055c34af37f0b9c57cc487b67c5038e1bb27b01f184a96baa3695f7576114583f90fac2c0e049a87075709f68b5cd2a3f76de2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/softobiz-ui/Checkbox/checkbox.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CheckboxComponent } from './checkbox.component';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MatCheckboxModule],\r\n  declarations: [CheckboxComponent],\r\n  schemas: [\r\n    NO_ERRORS_SCHEMA\r\n  ],\r\n  exports: [CheckboxComponent],\r\n})\r\nexport class SftCheckboxModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CheckboxComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CheckboxComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SftChipModule",
            "id": "module-SftChipModule-2e7fc3142e8df1c53bb7603b30bef64ec91cbd0aa092138334486844091ba571d6d22b545c23846075cec1d1c7f1a672a363c3b4e05cd8797ecfd7a198645a06",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/softobiz-ui/Chip/chip.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ChipComponent } from './chip.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MatChipsModule, MatIconModule],\r\n  declarations: [ChipComponent],\r\n  exports: [ChipComponent],\r\n})\r\nexport class SftChipModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ChipComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ChipComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SftDialogModule",
            "id": "module-SftDialogModule-c5ed3af840b8bd67966fb64f50e49d9ca156cc5eb8f4631c784f3d696aa0c198645c9d1c4ccb5542b6699636b7644fef2484770b3ae95c05e499c2f907c82c67",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/softobiz-ui/Dialog/dialog.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DialogComponent } from './dialog.component';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MatDialogModule, MatButtonModule],\r\n  declarations: [DialogComponent],\r\n  exports: [DialogComponent],\r\n})\r\nexport class SftDialogModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DialogComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "DialogComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SftDividerModule",
            "id": "module-SftDividerModule-40e77cb1e49b8a05dd19847de3d977264a26d5743b282837bb2cf9cace94f58587ac407917490991cb0c20f000b0f1557a010de3ba1bb9ea04417a38bdbe05e5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/softobiz-ui/divider/divider.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DividerComponent } from './divider.component';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatListModule} from '@angular/material/list';\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MatDividerModule, MatListModule],\r\n  declarations: [DividerComponent],\r\n  exports: [DividerComponent],\r\n})\r\nexport class SftDividerModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DividerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "DividerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SftInputModule",
            "id": "module-SftInputModule-db86d87cfddf5e054e9f2081d7e7e4b1cf85bd9ba6767968b52d4858214ba7aff22dfa42fef515d6f57dd2ab17a60df4c43da04b201efd1bbea925e95a9d95b6",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/softobiz-ui/Input/input.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { InputComponent } from './input.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport { NgxTippyModule } from 'ngx-tippy-wrapper';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MatButtonModule, MatIconModule, MatFormFieldModule, MatInputModule, NgxTippyModule, BrowserAnimationsModule],\r\n  declarations: [InputComponent],\r\n  exports: [InputComponent ],\r\n})\r\nexport class SftInputModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "InputComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "InputComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SftTextareaModule",
            "id": "module-SftTextareaModule-59b980d8a6aa15639943e4c7c402c3b07105813cd65d2fd59c49c471fd09377790aa9f932e51ced32c51c19f5e2af9e28be466e019b3741f8fd7917b29cfad11",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/softobiz-ui/Textarea/textarea.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { TextareaComponent } from './textarea.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport { NgxTippyModule } from 'ngx-tippy-wrapper';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MatButtonModule, MatIconModule, MatFormFieldModule, MatInputModule, NgxTippyModule, BrowserAnimationsModule],\r\n  declarations: [TextareaComponent],\r\n  exports: [TextareaComponent, MatIconModule, NgxTippyModule ],\r\n})\r\nexport class SftTextareaModule {}\r\n\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TextareaComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TextareaComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "id": "module-SharedModule-00a7430591f9bef014f41cc8d86e56215193be439053519f02fd8766a271867496c71f3efccd87bc415ae904362ad2db8bc56f75438d91d9e229c18797f36256",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/modules/shared/shared.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgxTippyModule } from 'ngx-tippy-wrapper';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { EmptyListingComponent } from '../../components/empty-listing/empty-listing.component';\r\nimport { AngularMaterialModule } from '../angular-material/angular-material.module';\r\nimport { CustomDateHeaderComponent } from '../../components/custom-date-header/custom-date-header.component';\r\n\r\n@NgModule({\r\n  declarations: [EmptyListingComponent, \r\n    CustomDateHeaderComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule\r\n  ],\r\n  exports: [\r\n    NgxTippyModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    EmptyListingComponent,\r\n    CustomDateHeaderComponent\r\n    \r\n  ],\r\n})\r\nexport class SharedModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CustomDateHeaderComponent"
                        },
                        {
                            "name": "EmptyListingComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AngularMaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CustomDateHeaderComponent"
                        },
                        {
                            "name": "EmptyListingComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SoftobizUiModule",
            "id": "module-SoftobizUiModule-c73cc893906b4e6e0ca6b15800115e013f143d55f7e904034eb73a7d50a91fed73ff989668b4b12862a04dc9c56e33ef1bfd0dcb2db830168e084b71c0ba760c",
            "description": "<p>HumaUI shared modules</p>\n",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/softobiz-ui/softobiz-ui.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { SftButtonModule } from './button/button.module';\r\n// import { SftProgressbarModule } from './ProgressBar/progressbar.module';\r\n// import { SftButtonToggleModule } from './ButtonToggle/buttonToggle.module';\r\n// import { SftCardModule } from './Card/card.module';\r\n// import { SftDividerModule } from './divider/divider.module';\r\n// import { SftExpensionModule } from './expansion-panel/expansion.module';\r\nimport { NgxTippyModule } from 'ngx-tippy-wrapper';\r\nimport { TypographyComponent } from './Typography/typography.component';\r\n\r\nconst SFT_UI_MODULES = [SftButtonModule, NgxTippyModule];\r\n\r\n/**\r\n * HumaUI shared modules\r\n */\r\n@NgModule({\r\n  imports: SFT_UI_MODULES,\r\n  exports: SFT_UI_MODULES,\r\n  declarations: [\r\n    TypographyComponent\r\n  ],\r\n})\r\nexport class SoftobizUiModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TypographyComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SftButtonModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SftButtonModule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "breadcrumb",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/breadcrumb/stories/breadcrumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    items: [\r\n      { label: 'Home', link: '/' },\r\n      { label: 'Products', link: '/products' },\r\n      { label: 'Category', link: '/products/category' },\r\n      { label: 'Current Page' },\r\n    ]\r\n  },\r\n}"
            },
            {
                "name": "Button",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/button/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    variant: 'flat',\r\n    color: 'primary',\r\n    label: 'Button',\r\n    size: 'medium',\r\n    disable: false,\r\n    disableRipple: false,\r\n    onClick: 'funtion()',\r\n  },\r\n}"
            },
            {
                "name": "Checkbox",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/Checkbox/stories/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    indeterminate: false,\r\n    label: 'Click Me!',\r\n    checked: false,\r\n    disable:false,\r\n    disableRipple: false,\r\n    labelPosition: 'after',\r\n  },\r\n}"
            },
            {
                "name": "Chip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/Chip/stories/chip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    highlighted: true,\r\n    withIcon: false,\r\n    disabled: false,\r\n    label: 'chip',\r\n  },\r\n}"
            },
            {
                "name": "Config_Menu",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Settings',\r\n    icon: 'settings',\r\n    category: 'Config',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'LogOut ',\r\n    icon: 'logout',\r\n    category: 'Confog',\r\n  },\r\n]"
            },
            {
                "name": "Coupon_Data",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    id: 'coupon_id_459',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'coupon_id_460',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n]"
            },
            {
                "name": "Dialog",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/Dialog/stories/dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n}"
            },
            {
                "name": "Divider",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/divider/stories/divider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n}"
            },
            {
                "name": "Duration_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/coupons/components/view-coupons/view-coupons.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "DurationElement[]",
                "defaultValue": "[\r\n  {  Duration : 'Discount Type', time: 'Forever' },\r\n  { Duration : 'Applied on', time: 'All Plans' },\r\n  {  Duration : 'Discount Type', time: 'All Addons' },\r\n]"
            },
            {
                "name": "ELEMENT_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/coupons/components/view-coupons/view-coupons.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "DiscountElement[]",
                "defaultValue": "[\r\n  {  Discount : 'Discount Type', Amount: 'Fixed Amount' },\r\n  { Discount : 'Applied on', Amount: 'Fixed Amount' },\r\n  {  Discount : 'Discount Type', Amount: 'Invoice Amount' },\r\n]"
            },
            {
                "name": "ELEMENT_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/features/components/view-feature/view-feature.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "PeriodicElement[]",
                "defaultValue": "[\r\n  { name: 'Hydrogen', weight: 1.0079 },\r\n  { name: 'Helium', weight: 4.0026 },\r\n]"
            },
            {
                "name": "ELEMENT_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/plans/components/add-ons-details/add-ons-details.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "PeriodicElement[]",
                "defaultValue": "[\r\n  { id:'element123456', name: 'Host online calls', status: \"Active\",Product: 'Microsoft Teams', type: 'Switch' },\r\n  {  id:'element1234', name: 'Union all information', status: \"Active\",Product: 'Microsoft Teams', type: 'Range' },\r\n  {  id:'element12', name: 'Create team sites', status: \"Active\",Product: 'Microsoft Teams', type: 'Custom' },\r\n]"
            },
            {
                "name": "ELEMENT_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/plans/components/create-plan/create-plan.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "PeriodicElement[]",
                "defaultValue": "[\r\n  { PricingCycle: 'Daily', Price: 'Set Price' },\r\n  { PricingCycle: 'Weekly', Price: 'Set Price' },\r\n  { PricingCycle: 'Monthly', Price: 'Set Price' },\r\n  { PricingCycle: 'Yearly', Price: 'Set Price' },\r\n]"
            },
            {
                "name": "ELEMENT_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/plans/components/product-details/product-details.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "PeriodicElement[]",
                "defaultValue": "[\r\n  { position: 'Whiteboard', name: 'Hydrogen', status: \"Active\", symbol: 'Available' },\r\n  { position: 'Email support', name: 'Custom', status: \"Active\", symbol: 'Available' },\r\n  { position: 'Whiteboard', name: 'Hydrogen', status: \"Active\", symbol: 'Available' },\r\n  { position: 'Email support', name: 'Custom', status: \"Active\", symbol: 'Available' },\r\n  { position: 'Whiteboard', name: 'Hydrogen', status: \"Active\", symbol: 'Available' },\r\n  { position: 'Email support', name: 'Custom', status: \"Active\", symbol: 'Available' },\r\n  { position: 'Whiteboard', name: 'Hydrogen', status: \"Active\", symbol: 'Available' },\r\n  { position: 'Email support', name: 'Custom', status: \"Active\", symbol: 'Available' },\r\n  { position: 'Whiteboard', name: 'Hydrogen', status: \"Active\", symbol: 'Available' },\r\n  { position: 'Email support', name: 'Custom', status: \"Active\", symbol: 'Available' },\r\n]"
            },
            {
                "name": "ELEMENT_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/plans/components/view-plans/view-plans.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "PeriodicElement[]",
                "defaultValue": "[\r\n  { Currency: '', PricingCycle: 'Daily', Price: '$100/Unit' },\r\n  { Currency: '', PricingCycle: 'Weekly', Price: '$100/Unit' },\r\n  { Currency: '', PricingCycle: 'Monthly', Price: '$100/Unit' },\r\n  { Currency: '', PricingCycle: 'Yearly', Price: '$100/Unit' },\r\n]"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true,\r\n  apiUrl: 'http://[::1]:4201/pcm/api/v1/products'\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false,  \r\n  productData:'http://[::1]:4201/pcm/api/v1/products',\r\n  uploadUrl:'http://[::1]:4201/pcm/api/v1/blob/upload',\r\n  apiUrl: 'http://[::1]:4201/pcm/api/v1/feature',\r\n  featureUrl: 'http://[::1]:4201/pcm/api/v1/feature',\r\n  imagePath:'https://saasframeworkuploads.blob.core.windows.net',\r\n}"
            },
            {
                "name": "FEATURE_TYPE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/features/components/view-feature/view-feature.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'custom'"
            },
            {
                "name": "feature_types",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  { value: 1, title: 'switch' },\r\n  { value: 2, title: 'range' },\r\n  { value: 3, title: 'quantity' },\r\n  { value: 4, title: 'custom' },\r\n]"
            },
            {
                "name": "Features_Data",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    id: 'feature_id_459',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'feature_id_4591',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n]"
            },
            {
                "name": "Input",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/Input/stories/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    readonly: false,\r\n    placeholder: 'Enter here...',\r\n    disable: false,\r\n    required: true,\r\n    label: 'Label',\r\n    infoIcon: false,\r\n    infoTitle: 'Title',\r\n    infoDetail:\r\n      'Microsoft Teams is the ultimate messaging app for your organization—a workspace for real-time collaboration and communication, meetings, file and app sharing, and even the occasional emoji! All in one place, all in the open, all accessible to everyone.',\r\n  },\r\n}"
            },
            {
                "name": "Menu_Headings",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Dashboard',\r\n    icon: 'settings',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Product Catalog ',\r\n    icon: 'logout',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Payment History ',\r\n    icon: 'logout',\r\n    category: 'Payment History',\r\n  },\r\n]"
            },
            {
                "name": "MENUITEMS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    state: 'dashboard',\r\n    type: 'link',\r\n    name: 'Overview',\r\n    icon: 'space_dashboard',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'button',\r\n    type: 'link',\r\n    name: 'Customer',\r\n    icon: 'account_box',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'grid',\r\n    type: 'link',\r\n    name: 'Subscription',\r\n    icon: 'card_membership',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'products',\r\n    type: 'link',\r\n    name: 'Products',\r\n    icon: 'local_mall',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'features',\r\n    type: 'link',\r\n    name: 'Features',\r\n    icon: 'featured_play_list',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'plans',\r\n    type: 'link',\r\n    name: 'Plans',\r\n    icon: 'quick_reference_all',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Add Ons',\r\n    icon: 'add_notes',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'coupons',\r\n    type: 'link',\r\n    name: 'Coupons',\r\n    icon: 'confirmation_number',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'transactions',\r\n    type: 'link',\r\n    name: 'Transactions',\r\n    icon: 'compare_arrows',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: 'invoices',\r\n    type: 'link',\r\n    name: 'Invoices',\r\n    icon: 'receipt_long',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: 'logs',\r\n    type: 'link',\r\n    name: 'Logs',\r\n    icon: 'list_alt',\r\n    category: 'Payment History',\r\n  },\r\n]"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/button/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ButtonComponent>",
                "defaultValue": "{\r\n  component: ButtonComponent,\r\n  title: 'softobiz-ui/Atom/Button',\r\n  tags: ['autodocs'],\r\n  render: (args: ButtonComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    variant: {\r\n      control: 'select',\r\n      options: [\r\n        'default',\r\n        'raised',\r\n        'flat',\r\n        'stroked',\r\n        'icon',\r\n        'fab',\r\n        'mini-fab',\r\n      ],\r\n    },\r\n    color: {\r\n      options: ['primary', 'accent', 'warn'],\r\n      control: { type: 'radio' },\r\n    },\r\n    label: { control: 'text' },\r\n    id: { control: 'text' },\r\n    class: { control: 'text' },\r\n    onClick: { control: 'text', defaultValue: 'clickfuntion()' },\r\n    disable: {\r\n      control: 'boolean',\r\n      defaultValue: false,\r\n    },\r\n    disableRipple: {\r\n      control: 'boolean',\r\n    },\r\n    size: {\r\n      control: 'select',\r\n      options: ['small', 'medium', 'large', 'link-text', 'icon-text'],\r\n    },\r\n    type: {\r\n      control: 'select',\r\n      options: ['button', 'submit', 'reset'],\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [MatButtonModule, BrowserAnimationsModule, MatIconModule],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/breadcrumb/stories/breadcrumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<Breadcrumb>",
                "defaultValue": "{\r\n  component: Breadcrumb,\r\n  title: 'softobiz-ui/Atom/Breadcrumb',\r\n  tags: ['autodocs'],\r\n  render: (args: Breadcrumb) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    id: { control: 'text' },\r\n    class: { control: 'text' }\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [MatIconModule, BrowserAnimationsModule],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/Chip/stories/chip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ChipComponent>",
                "defaultValue": "{\r\n  component: ChipComponent,\r\n  title: 'softobiz-ui/Atom/Chip',\r\n  tags: ['autodocs'],\r\n  render: (args: ChipComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    // color: {\r\n    //   options: ['primary', 'accent', 'warn', 'primary-light'],\r\n    //   control: { type: 'radio' },\r\n    // },\r\n\r\n    ariaDescription: {\r\n      control: 'text',\r\n    },\r\n\r\n    ariaLabel: {\r\n      control: 'text',\r\n    },\r\n\r\n    disableRipple: {\r\n      control: 'boolean',\r\n    },\r\n\r\n    disabled: {\r\n      control: 'boolean',\r\n    },\r\n\r\n    // selected: {\r\n    //   control: 'boolean',\r\n    // },\r\n\r\n    highlighted: {\r\n      control: 'boolean',\r\n    },\r\n\r\n    withIcon: {\r\n      control: 'boolean',\r\n    },\r\n\r\n    label: { control: 'text' },\r\n\r\n    class: {\r\n      control: 'text',\r\n    },\r\n    id: {\r\n      control: 'text',\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [MatChipsModule, MatIconModule],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/Checkbox/stories/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CheckboxComponent>",
                "defaultValue": "{\r\n  component: CheckboxComponent,\r\n  title: 'softobiz-ui/Atom/Checkbox',\r\n  tags: ['autodocs'],\r\n  render: (args: CheckboxComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    disable: {\r\n      control: 'boolean',\r\n    },\r\n    checked: {\r\n      control: 'boolean',\r\n    },\r\n    disableRipple: {\r\n      control: 'boolean',\r\n    },\r\n    color: {\r\n      options: ['primary', 'accent', 'warn'],\r\n      control: { type: 'radio' },\r\n    },\r\n    indeterminate: {\r\n      control: 'boolean',\r\n      option: [true, false]\r\n    },\r\n    label: {\r\n      control:'text'\r\n    },\r\n    task: {\r\n      table: {\r\n        disable: true\r\n      }\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [MatCheckboxModule],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/Textarea/stories/textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TextareaComponent>",
                "defaultValue": "{\r\n  component: TextareaComponent,\r\n  title: 'softobiz-ui/Atom/Textarea',\r\n  tags: ['autodocs'],\r\n  render: (args: TextareaComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    hint: { control: 'text' },\r\n    class: { control: 'text' },\r\n    appearance: {\r\n      control: 'select',\r\n      options: [\r\n        'outline',\r\n        'fill'\r\n      ],\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        BrowserAnimationsModule,\r\n        MatIconModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        NgxTippyModule\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/Input/stories/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<InputComponent>",
                "defaultValue": "{\r\n  component: InputComponent,\r\n  title: 'softobiz-ui/Atom/Input',\r\n  tags: ['autodocs'],\r\n  render: (args: InputComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    hint: { control: 'text' },\r\n    class: { control: 'text' },\r\n    infoIcon: {\r\n      control: 'boolean',\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        BrowserAnimationsModule,\r\n        MatIconModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        NgxTippyModule,\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/Dialog/stories/dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DialogComponent>",
                "defaultValue": "{\r\n  component: DialogComponent,\r\n\r\n  title: 'softobiz-ui/Organism/Dialog',\r\n  tags: ['autodocs'],\r\n  render: (args: DialogComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {},\r\n  decorators: [\r\n    moduleMetadata({\r\n      providers: [MatDialog],\r\n      imports: [\r\n        MatDialogModule,\r\n        MatButtonModule,\r\n        BrowserAnimationsModule,\r\n        MatIconModule,\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/divider/stories/divider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DividerComponent>",
                "defaultValue": "{\r\n  component: DividerComponent,\r\n\r\n  title: 'softobiz-ui/Organism/Divider',\r\n  tags: ['autodocs'],\r\n  render: (args: DividerComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    inset: {\r\n      control: 'boolean',\r\n    },\r\n\r\n    vertical: {\r\n      control: 'boolean',\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      providers: [],\r\n      imports: [\r\n        MatDividerModule,\r\n        BrowserAnimationsModule,\r\n        MatIconModule,\r\n        MatListModule\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/Typography/stories/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TypographyComponent>",
                "defaultValue": "{\r\n  component: TypographyComponent,\r\n  title: 'softobiz-ui/Atom/Typography',\r\n  tags: ['autodocs'],\r\n  render: (args: TypographyComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    variant: {\r\n      control: 'select',\r\n      options: [\r\n        'default',\r\n        'raised',\r\n        'flat',\r\n        'stroked',\r\n        'icon',\r\n        'fab',\r\n        'mini-fab',\r\n      ],\r\n    },\r\n    color: {\r\n      options: ['primary', 'accent', 'warn'],\r\n      control: { type: 'radio' },\r\n    },\r\n    label: { control: 'text' },\r\n    id: { control: 'text' },\r\n    class: { control: 'text' },\r\n    onClick: { control: 'text', defaultValue: 'clickfuntion()' },\r\n    disable: {\r\n      control: 'boolean',\r\n      defaultValue: false,\r\n    },\r\n    disableRipple: {\r\n      control: 'boolean',\r\n    },\r\n    size: {\r\n      control: 'select',\r\n      options: ['small', 'medium', 'large', 'link-text', 'icon-text'],\r\n    },\r\n    type: {\r\n      control: 'select',\r\n      options: ['button', 'submit', 'reset'],\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "nocoupons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n]"
            },
            {
                "name": "noFeatures",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    heading: 'Features',\r\n    imgPath: '../../../../assets/images/empty-illustrations-2.png',\r\n    alt: 'no features available',\r\n    subtext: 'Looking for Features',\r\n    text: \"Seems like you haven't added any feature. Start adding feature by click on “Create Feature” button \",\r\n    showButton: true,\r\n    buttonTxt: 'Create Feature',\r\n    path: '/features/create',\r\n  },\r\n]"
            },
            {
                "name": "noPageFound",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/404-page.png',\r\n    alt: 'No Page Found',\r\n    subtext: \"Oops! Why you're here?\",\r\n    text: \"We are very sorry for inconvenience. It looks like you're try to access a page that either has been deleted or never existed.\",\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n]"
            },
            {
                "name": "noPlans",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    heading: 'Plans',\r\n    imgPath: '../../../../assets/images/empty-illustrations-4.png',\r\n    alt: 'no Plans available',\r\n    subtext: 'Looking for Plans',\r\n    text: \"Seems like you haven't added any Plan. Start adding plan by click on “Create Plan” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Plan',\r\n    path: '/plans/view',\r\n  },\r\n]"
            },
            {
                "name": "noProducts",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    heading: 'Products',\r\n    imgPath: '../../../../assets/images/empty-illustrations.png',\r\n    alt: 'no proudcts available',\r\n    subtext: 'Looking for Product',\r\n    text: \"Seems like you haven't added any Product. Start adding products by click on “Create Product” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Product',\r\n    path: '/products/create',\r\n  },\r\n]"
            },
            {
                "name": "Notifications_Data",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  // {\r\n  //   user: 'John Smith' ,\r\n  //   message: 'subscriptione_created',\r\n  //   created_at: 'Aug 7th, 2023'\r\n  // }\r\n]"
            },
            {
                "name": "noTransactions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    heading: 'Transaction',\r\n    imgPath: '../../../../assets/images/empty-illustrations-5.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'NO transaction yet',\r\n    text: 'After your first transaction you will be able to view it here.',\r\n    showButton: false,\r\n  },\r\n]"
            },
            {
                "name": "periodUnit",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "['Daily', 'Weekly', 'Monthly', 'Yearly']"
            },
            {
                "name": "plan_add_empty_data",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    titleIcon:\r\n      '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n    iconAlt: 'invoice-outline-icon',\r\n    title: 'Product Details',\r\n    subtitle:\r\n      'Please click the “Add” button below to add a new product. Once you clicked the button, you will be prompted to enter the name of product, description and additional details.',\r\n    btnTitle: 'Add product',\r\n    btnPath: '/#',\r\n  },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Pricing Plans',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new pricing plans. Once you clicked the button, you will be prompted to enter pricing and additional details.',\r\n  //   btnTitle: 'Add Pricing',\r\n  //   btnPath: '/#',\r\n  // },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Add-ons Details',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new add-on. Once you have click button, you will be prompted to select add-on.',\r\n  //   btnTitle: 'Add Add-on',\r\n  //   btnPath: '/#',\r\n  // },\r\n]"
            },
            {
                "name": "Plans_Data",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    id: 'ychvjbknk1',\r\n    plan_ID: 'As-012P',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.3',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: '1i23op1j2eo',\r\n    plan_ID: 'As-099G',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.2',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n]"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\r\n  parameters: {\r\n    actions: { argTypesRegex: '^on[A-Z].*' },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/,\r\n      },\r\n    },\r\n    docs: {\r\n      theme: themes.light,\r\n    },\r\n    // global: {\r\n    //   css: `\r\n    //     .sidebar-header {\r\n    //       background-color: #f2f2f2 !important;\r\n    //     }\r\n  \r\n    //     .myButton {\r\n    //       background-color: blue;\r\n    //       color: white;\r\n    //       padding: 10px 20px;\r\n    //       border-radius: 4px;\r\n    //     }\r\n    //   `,\r\n    // },\r\n    // options: {\r\n    //   storySort: (a: any, b: any) =>\r\n    //     a.id === b.id\r\n    //       ? 0\r\n    //       : a.id.localeCompare(b.id, undefined, { numeric: true }),\r\n    // },\r\n  },\r\n}"
            },
            {
                "name": "pricingModels",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  { value: 1, title: 'Flat fee' },\r\n  { value: 2, title: 'Per unit' },\r\n  { value: 3, title: 'Tiered' },\r\n  { value: 4, title: 'Volume' },\r\n  { value: 5, title: 'Stairstep' },\r\n]"
            },
            {
                "name": "SFT_UI_MODULES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/softobiz-ui.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[SftButtonModule, NgxTippyModule]"
            },
            {
                "name": "StaticRoutes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  features: ['features'],\r\n  products: ['products'],\r\n}"
            },
            {
                "name": "Stepper",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    id: 1,\r\n    title: 'Step 1',\r\n    caption: 'Plan Information',\r\n    isVisible: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Step 2',\r\n    caption: 'Add Plan Pricing',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Step 3',\r\n    caption: 'Product Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Step 4',\r\n    caption: 'Add-on Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Step 5',\r\n    caption: 'Charges',\r\n    isVisible: false,\r\n  },\r\n]"
            },
            {
                "name": "Textarea",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/Textarea/stories/textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    readonly: false,\r\n    placeholder: 'Enter here...',\r\n    disable: false,\r\n    required: true,\r\n    label: 'Label',\r\n  },\r\n}"
            },
            {
                "name": "TransactionList",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n]"
            },
            {
                "name": "Typography",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/softobiz-ui/Typography/stories/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n  },\r\n}"
            },
            {
                "name": "User_Data",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    id: 'random_id_1234',\r\n    product_ID: '#O365ProPlusRetail',\r\n    title: 'Microsoft Teams',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Host Online Calls', 'Unlimited Internet', 'Conference Calls'],\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_555',\r\n    product_ID: '#Or65SuperSupreme',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: [\r\n      'Unlimited Repos',\r\n      'Upto 50 Team Members',\r\n      'Host Online Calls',\r\n      'Unlimited Internet',\r\n      'Conference Calls',\r\n    ],\r\n    created_at: 'June 11th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_6969',\r\n    product_ID: '#Ow65Basic',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Conference Calls'],\r\n    created_at: 'June 18th, 2020',\r\n    status: 'Active',\r\n  },\r\n]"
            },
            {
                "name": "User_Options",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/consants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    path: '/user:id',\r\n    icon: 'account_circle',\r\n    name: 'My Account',\r\n    toggle: false,\r\n  },\r\n  { path: '/inbox', icon: 'inbox_outline', name: 'My Inbox', toggle: false },\r\n  { path: '', icon: 'clear_day', name: 'Dark Mode', toggle: true },\r\n  { path: '/help', icon: 'live_help', name: 'Help', toggle: false },\r\n]"
            },
            {
                "name": "Validity_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/coupons/components/view-coupons/view-coupons.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ValidityElement[]",
                "defaultValue": "[\r\n  {  Validity : 'Valid Till', time: 'Forever' },\r\n  { Validity : 'Maximum Redemptions', time: '0 to unlimited' },\r\n]"
            }
        ],
        "functions": [
            {
                "name": "genUniqueId",
                "file": "src/app/core/utils/functions/getUniqueId.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "string"
            }
        ],
        "typealiases": [
            {
                "name": "ButtonVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"basic\" | \"raised\" | \"flat\" | \"icon\" | \"stroked\"",
                "file": "src/stories/softobiz-ui/button/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "ButtonVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"basic\" | \"raised\" | \"flat\" | \"icon\" | \"stroked\"",
                "file": "src/stories/softobiz-ui/Input/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "ButtonVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"basic\" | \"raised\" | \"flat\" | \"icon\" | \"stroked\"",
                "file": "src/stories/softobiz-ui/Textarea/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonComponent>",
                "file": "src/stories/softobiz-ui/button/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<Breadcrumb>",
                "file": "src/stories/softobiz-ui/breadcrumb/stories/breadcrumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ChipComponent>",
                "file": "src/stories/softobiz-ui/Chip/stories/chip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CheckboxComponent>",
                "file": "src/stories/softobiz-ui/Checkbox/stories/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TextareaComponent>",
                "file": "src/stories/softobiz-ui/Textarea/stories/textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<InputComponent>",
                "file": "src/stories/softobiz-ui/Input/stories/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DialogComponent>",
                "file": "src/stories/softobiz-ui/Dialog/stories/dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DividerComponent>",
                "file": "src/stories/softobiz-ui/divider/stories/divider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TypographyComponent>",
                "file": "src/stories/softobiz-ui/Typography/stories/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/stories/softobiz-ui/breadcrumb/stories/breadcrumb.stories.ts": [
                {
                    "name": "breadcrumb",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/breadcrumb/stories/breadcrumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    items: [\r\n      { label: 'Home', link: '/' },\r\n      { label: 'Products', link: '/products' },\r\n      { label: 'Category', link: '/products/category' },\r\n      { label: 'Current Page' },\r\n    ]\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/breadcrumb/stories/breadcrumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<Breadcrumb>",
                    "defaultValue": "{\r\n  component: Breadcrumb,\r\n  title: 'softobiz-ui/Atom/Breadcrumb',\r\n  tags: ['autodocs'],\r\n  render: (args: Breadcrumb) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    id: { control: 'text' },\r\n    class: { control: 'text' }\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [MatIconModule, BrowserAnimationsModule],\r\n    }),\r\n  ],\r\n}"
                }
            ],
            "src/stories/softobiz-ui/button/stories/button.stories.ts": [
                {
                    "name": "Button",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/button/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    variant: 'flat',\r\n    color: 'primary',\r\n    label: 'Button',\r\n    size: 'medium',\r\n    disable: false,\r\n    disableRipple: false,\r\n    onClick: 'funtion()',\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/button/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ButtonComponent>",
                    "defaultValue": "{\r\n  component: ButtonComponent,\r\n  title: 'softobiz-ui/Atom/Button',\r\n  tags: ['autodocs'],\r\n  render: (args: ButtonComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    variant: {\r\n      control: 'select',\r\n      options: [\r\n        'default',\r\n        'raised',\r\n        'flat',\r\n        'stroked',\r\n        'icon',\r\n        'fab',\r\n        'mini-fab',\r\n      ],\r\n    },\r\n    color: {\r\n      options: ['primary', 'accent', 'warn'],\r\n      control: { type: 'radio' },\r\n    },\r\n    label: { control: 'text' },\r\n    id: { control: 'text' },\r\n    class: { control: 'text' },\r\n    onClick: { control: 'text', defaultValue: 'clickfuntion()' },\r\n    disable: {\r\n      control: 'boolean',\r\n      defaultValue: false,\r\n    },\r\n    disableRipple: {\r\n      control: 'boolean',\r\n    },\r\n    size: {\r\n      control: 'select',\r\n      options: ['small', 'medium', 'large', 'link-text', 'icon-text'],\r\n    },\r\n    type: {\r\n      control: 'select',\r\n      options: ['button', 'submit', 'reset'],\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [MatButtonModule, BrowserAnimationsModule, MatIconModule],\r\n    }),\r\n  ],\r\n}"
                }
            ],
            "src/stories/softobiz-ui/Checkbox/stories/checkbox.stories.ts": [
                {
                    "name": "Checkbox",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/Checkbox/stories/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    indeterminate: false,\r\n    label: 'Click Me!',\r\n    checked: false,\r\n    disable:false,\r\n    disableRipple: false,\r\n    labelPosition: 'after',\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/Checkbox/stories/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CheckboxComponent>",
                    "defaultValue": "{\r\n  component: CheckboxComponent,\r\n  title: 'softobiz-ui/Atom/Checkbox',\r\n  tags: ['autodocs'],\r\n  render: (args: CheckboxComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    disable: {\r\n      control: 'boolean',\r\n    },\r\n    checked: {\r\n      control: 'boolean',\r\n    },\r\n    disableRipple: {\r\n      control: 'boolean',\r\n    },\r\n    color: {\r\n      options: ['primary', 'accent', 'warn'],\r\n      control: { type: 'radio' },\r\n    },\r\n    indeterminate: {\r\n      control: 'boolean',\r\n      option: [true, false]\r\n    },\r\n    label: {\r\n      control:'text'\r\n    },\r\n    task: {\r\n      table: {\r\n        disable: true\r\n      }\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [MatCheckboxModule],\r\n    }),\r\n  ],\r\n}"
                }
            ],
            "src/stories/softobiz-ui/Chip/stories/chip.stories.ts": [
                {
                    "name": "Chip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/Chip/stories/chip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    highlighted: true,\r\n    withIcon: false,\r\n    disabled: false,\r\n    label: 'chip',\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/Chip/stories/chip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ChipComponent>",
                    "defaultValue": "{\r\n  component: ChipComponent,\r\n  title: 'softobiz-ui/Atom/Chip',\r\n  tags: ['autodocs'],\r\n  render: (args: ChipComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    // color: {\r\n    //   options: ['primary', 'accent', 'warn', 'primary-light'],\r\n    //   control: { type: 'radio' },\r\n    // },\r\n\r\n    ariaDescription: {\r\n      control: 'text',\r\n    },\r\n\r\n    ariaLabel: {\r\n      control: 'text',\r\n    },\r\n\r\n    disableRipple: {\r\n      control: 'boolean',\r\n    },\r\n\r\n    disabled: {\r\n      control: 'boolean',\r\n    },\r\n\r\n    // selected: {\r\n    //   control: 'boolean',\r\n    // },\r\n\r\n    highlighted: {\r\n      control: 'boolean',\r\n    },\r\n\r\n    withIcon: {\r\n      control: 'boolean',\r\n    },\r\n\r\n    label: { control: 'text' },\r\n\r\n    class: {\r\n      control: 'text',\r\n    },\r\n    id: {\r\n      control: 'text',\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [MatChipsModule, MatIconModule],\r\n    }),\r\n  ],\r\n}"
                }
            ],
            "src/app/shared/constants/consants.ts": [
                {
                    "name": "Config_Menu",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Settings',\r\n    icon: 'settings',\r\n    category: 'Config',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'LogOut ',\r\n    icon: 'logout',\r\n    category: 'Confog',\r\n  },\r\n]"
                },
                {
                    "name": "Coupon_Data",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    id: 'coupon_id_459',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'coupon_id_460',\r\n    coupon_id: '#S0-001',\r\n    coupon_name: 'INR 100 Off',\r\n    description: 'Rs. 100.00 for Forever get it today and enjoy it forever... ',\r\n    created_at: '24 March, 2023',\r\n    status: 'Active',\r\n  },\r\n]"
                },
                {
                    "name": "feature_types",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  { value: 1, title: 'switch' },\r\n  { value: 2, title: 'range' },\r\n  { value: 3, title: 'quantity' },\r\n  { value: 4, title: 'custom' },\r\n]"
                },
                {
                    "name": "Features_Data",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    id: 'feature_id_459',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'feature_id_4591',\r\n    feature_id: '#98569',\r\n    product_name: 'Microsoft Teams',\r\n    feature_name: 'Whiteboard',\r\n    feature_type: 'Switch',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'Jun 10th, 2023',\r\n    status: 'Active',\r\n  },\r\n]"
                },
                {
                    "name": "Menu_Headings",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Dashboard',\r\n    icon: 'settings',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Product Catalog ',\r\n    icon: 'logout',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Payment History ',\r\n    icon: 'logout',\r\n    category: 'Payment History',\r\n  },\r\n]"
                },
                {
                    "name": "MENUITEMS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    state: 'dashboard',\r\n    type: 'link',\r\n    name: 'Overview',\r\n    icon: 'space_dashboard',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'button',\r\n    type: 'link',\r\n    name: 'Customer',\r\n    icon: 'account_box',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'grid',\r\n    type: 'link',\r\n    name: 'Subscription',\r\n    icon: 'card_membership',\r\n    category: 'Dashboard',\r\n  },\r\n  {\r\n    state: 'products',\r\n    type: 'link',\r\n    name: 'Products',\r\n    icon: 'local_mall',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'features',\r\n    type: 'link',\r\n    name: 'Features',\r\n    icon: 'featured_play_list',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'plans',\r\n    type: 'link',\r\n    name: 'Plans',\r\n    icon: 'quick_reference_all',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'stepper',\r\n    type: 'link',\r\n    name: 'Add Ons',\r\n    icon: 'add_notes',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'coupons',\r\n    type: 'link',\r\n    name: 'Coupons',\r\n    icon: 'confirmation_number',\r\n    category: 'Product_Catalog',\r\n  },\r\n  {\r\n    state: 'transactions',\r\n    type: 'link',\r\n    name: 'Transactions',\r\n    icon: 'compare_arrows',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: 'invoices',\r\n    type: 'link',\r\n    name: 'Invoices',\r\n    icon: 'receipt_long',\r\n    category: 'Payment History',\r\n  },\r\n  {\r\n    state: 'logs',\r\n    type: 'link',\r\n    name: 'Logs',\r\n    icon: 'list_alt',\r\n    category: 'Payment History',\r\n  },\r\n]"
                },
                {
                    "name": "nocoupons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/empty-coupons.png',\r\n    alt: 'no coupons available',\r\n    subtext: 'Start Adding Coupons',\r\n    text: 'Click on the below buttons to open create coupons form.',\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n]"
                },
                {
                    "name": "noFeatures",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    heading: 'Features',\r\n    imgPath: '../../../../assets/images/empty-illustrations-2.png',\r\n    alt: 'no features available',\r\n    subtext: 'Looking for Features',\r\n    text: \"Seems like you haven't added any feature. Start adding feature by click on “Create Feature” button \",\r\n    showButton: true,\r\n    buttonTxt: 'Create Feature',\r\n    path: '/features/create',\r\n  },\r\n]"
                },
                {
                    "name": "noPageFound",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    heading: '',\r\n    imgPath: '../../../../assets/images/404-page.png',\r\n    alt: 'No Page Found',\r\n    subtext: \"Oops! Why you're here?\",\r\n    text: \"We are very sorry for inconvenience. It looks like you're try to access a page that either has been deleted or never existed.\",\r\n    showButton: true,\r\n    buttonTxt: 'Back to home',\r\n    path: '',\r\n  },\r\n]"
                },
                {
                    "name": "noPlans",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    heading: 'Plans',\r\n    imgPath: '../../../../assets/images/empty-illustrations-4.png',\r\n    alt: 'no Plans available',\r\n    subtext: 'Looking for Plans',\r\n    text: \"Seems like you haven't added any Plan. Start adding plan by click on “Create Plan” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Plan',\r\n    path: '/plans/view',\r\n  },\r\n]"
                },
                {
                    "name": "noProducts",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    heading: 'Products',\r\n    imgPath: '../../../../assets/images/empty-illustrations.png',\r\n    alt: 'no proudcts available',\r\n    subtext: 'Looking for Product',\r\n    text: \"Seems like you haven't added any Product. Start adding products by click on “Create Product” button\",\r\n    showButton: true,\r\n    buttonTxt: 'Create Product',\r\n    path: '/products/create',\r\n  },\r\n]"
                },
                {
                    "name": "Notifications_Data",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  // {\r\n  //   user: 'John Smith' ,\r\n  //   message: 'subscriptione_created',\r\n  //   created_at: 'Aug 7th, 2023'\r\n  // }\r\n]"
                },
                {
                    "name": "noTransactions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    heading: 'Transaction',\r\n    imgPath: '../../../../assets/images/empty-illustrations-5.png',\r\n    alt: 'no transactions to show',\r\n    subtext: 'NO transaction yet',\r\n    text: 'After your first transaction you will be able to view it here.',\r\n    showButton: false,\r\n  },\r\n]"
                },
                {
                    "name": "periodUnit",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "['Daily', 'Weekly', 'Monthly', 'Yearly']"
                },
                {
                    "name": "plan_add_empty_data",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    titleIcon:\r\n      '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n    iconAlt: 'invoice-outline-icon',\r\n    title: 'Product Details',\r\n    subtitle:\r\n      'Please click the “Add” button below to add a new product. Once you clicked the button, you will be prompted to enter the name of product, description and additional details.',\r\n    btnTitle: 'Add product',\r\n    btnPath: '/#',\r\n  },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Pricing Plans',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new pricing plans. Once you clicked the button, you will be prompted to enter pricing and additional details.',\r\n  //   btnTitle: 'Add Pricing',\r\n  //   btnPath: '/#',\r\n  // },\r\n  // {\r\n  //   titleIcon:\r\n  //     '../../../../../../assets/images/icons/basil_invoice-outline.svg',\r\n  //   iconAlt: 'invoice-outline-icon',\r\n  //   title: 'Add-ons Details',\r\n  //   subtitle:\r\n  //     'Please click the “Add” button below to add a new add-on. Once you have click button, you will be prompted to select add-on.',\r\n  //   btnTitle: 'Add Add-on',\r\n  //   btnPath: '/#',\r\n  // },\r\n]"
                },
                {
                    "name": "Plans_Data",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    id: 'ychvjbknk1',\r\n    plan_ID: 'As-012P',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.3',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: '1i23op1j2eo',\r\n    plan_ID: 'As-099G',\r\n    external_name: 'Premium',\r\n    internal_name: 'Premium v.2',\r\n    description:\r\n      'lorem ipsumDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.',\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n]"
                },
                {
                    "name": "pricingModels",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  { value: 1, title: 'Flat fee' },\r\n  { value: 2, title: 'Per unit' },\r\n  { value: 3, title: 'Tiered' },\r\n  { value: 4, title: 'Volume' },\r\n  { value: 5, title: 'Stairstep' },\r\n]"
                },
                {
                    "name": "StaticRoutes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  features: ['features'],\r\n  products: ['products'],\r\n}"
                },
                {
                    "name": "Stepper",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    id: 1,\r\n    title: 'Step 1',\r\n    caption: 'Plan Information',\r\n    isVisible: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Step 2',\r\n    caption: 'Add Plan Pricing',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Step 3',\r\n    caption: 'Product Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Step 4',\r\n    caption: 'Add-on Details',\r\n    isVisible: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Step 5',\r\n    caption: 'Charges',\r\n    isVisible: false,\r\n  },\r\n]"
                },
                {
                    "name": "TransactionList",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    id: '#S0-001',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n  {\r\n    id: '#S0-002',\r\n    customerInfo: 'Greenplus Enterprises',\r\n    paymentMethod: '2341',\r\n    occuredOn: 'Jan 16, 2023',\r\n    status: 'Active',\r\n    amount: '199.00',\r\n  },\r\n]"
                },
                {
                    "name": "User_Data",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    id: 'random_id_1234',\r\n    product_ID: '#O365ProPlusRetail',\r\n    title: 'Microsoft Teams',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Host Online Calls', 'Unlimited Internet', 'Conference Calls'],\r\n    created_at: 'June 10th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_555',\r\n    product_ID: '#Or65SuperSupreme',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: [\r\n      'Unlimited Repos',\r\n      'Upto 50 Team Members',\r\n      'Host Online Calls',\r\n      'Unlimited Internet',\r\n      'Conference Calls',\r\n    ],\r\n    created_at: 'June 11th, 2020',\r\n    status: 'Active',\r\n  },\r\n  {\r\n    id: 'random_id_6969',\r\n    product_ID: '#Ow65Basic',\r\n    title: 'Azure Devops',\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    features: ['Conference Calls'],\r\n    created_at: 'June 18th, 2020',\r\n    status: 'Active',\r\n  },\r\n]"
                },
                {
                    "name": "User_Options",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/consants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    path: '/user:id',\r\n    icon: 'account_circle',\r\n    name: 'My Account',\r\n    toggle: false,\r\n  },\r\n  { path: '/inbox', icon: 'inbox_outline', name: 'My Inbox', toggle: false },\r\n  { path: '', icon: 'clear_day', name: 'Dark Mode', toggle: true },\r\n  { path: '/help', icon: 'live_help', name: 'Help', toggle: false },\r\n]"
                }
            ],
            "src/stories/softobiz-ui/Dialog/stories/dialog.stories.ts": [
                {
                    "name": "Dialog",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/Dialog/stories/dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/Dialog/stories/dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DialogComponent>",
                    "defaultValue": "{\r\n  component: DialogComponent,\r\n\r\n  title: 'softobiz-ui/Organism/Dialog',\r\n  tags: ['autodocs'],\r\n  render: (args: DialogComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {},\r\n  decorators: [\r\n    moduleMetadata({\r\n      providers: [MatDialog],\r\n      imports: [\r\n        MatDialogModule,\r\n        MatButtonModule,\r\n        BrowserAnimationsModule,\r\n        MatIconModule,\r\n      ],\r\n    }),\r\n  ],\r\n}"
                }
            ],
            "src/stories/softobiz-ui/divider/stories/divider.stories.ts": [
                {
                    "name": "Divider",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/divider/stories/divider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/divider/stories/divider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DividerComponent>",
                    "defaultValue": "{\r\n  component: DividerComponent,\r\n\r\n  title: 'softobiz-ui/Organism/Divider',\r\n  tags: ['autodocs'],\r\n  render: (args: DividerComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    inset: {\r\n      control: 'boolean',\r\n    },\r\n\r\n    vertical: {\r\n      control: 'boolean',\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      providers: [],\r\n      imports: [\r\n        MatDividerModule,\r\n        BrowserAnimationsModule,\r\n        MatIconModule,\r\n        MatListModule\r\n      ],\r\n    }),\r\n  ],\r\n}"
                }
            ],
            "src/app/modules/coupons/components/view-coupons/view-coupons.component.ts": [
                {
                    "name": "Duration_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/coupons/components/view-coupons/view-coupons.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DurationElement[]",
                    "defaultValue": "[\r\n  {  Duration : 'Discount Type', time: 'Forever' },\r\n  { Duration : 'Applied on', time: 'All Plans' },\r\n  {  Duration : 'Discount Type', time: 'All Addons' },\r\n]"
                },
                {
                    "name": "ELEMENT_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/coupons/components/view-coupons/view-coupons.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DiscountElement[]",
                    "defaultValue": "[\r\n  {  Discount : 'Discount Type', Amount: 'Fixed Amount' },\r\n  { Discount : 'Applied on', Amount: 'Fixed Amount' },\r\n  {  Discount : 'Discount Type', Amount: 'Invoice Amount' },\r\n]"
                },
                {
                    "name": "Validity_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/coupons/components/view-coupons/view-coupons.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidityElement[]",
                    "defaultValue": "[\r\n  {  Validity : 'Valid Till', time: 'Forever' },\r\n  { Validity : 'Maximum Redemptions', time: '0 to unlimited' },\r\n]"
                }
            ],
            "src/app/modules/features/components/view-feature/view-feature.component.ts": [
                {
                    "name": "ELEMENT_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/features/components/view-feature/view-feature.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PeriodicElement[]",
                    "defaultValue": "[\r\n  { name: 'Hydrogen', weight: 1.0079 },\r\n  { name: 'Helium', weight: 4.0026 },\r\n]"
                },
                {
                    "name": "FEATURE_TYPE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/features/components/view-feature/view-feature.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'custom'"
                }
            ],
            "src/app/modules/plans/components/add-ons-details/add-ons-details.component.ts": [
                {
                    "name": "ELEMENT_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/plans/components/add-ons-details/add-ons-details.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PeriodicElement[]",
                    "defaultValue": "[\r\n  { id:'element123456', name: 'Host online calls', status: \"Active\",Product: 'Microsoft Teams', type: 'Switch' },\r\n  {  id:'element1234', name: 'Union all information', status: \"Active\",Product: 'Microsoft Teams', type: 'Range' },\r\n  {  id:'element12', name: 'Create team sites', status: \"Active\",Product: 'Microsoft Teams', type: 'Custom' },\r\n]"
                }
            ],
            "src/app/modules/plans/components/create-plan/create-plan.component.ts": [
                {
                    "name": "ELEMENT_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/plans/components/create-plan/create-plan.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PeriodicElement[]",
                    "defaultValue": "[\r\n  { PricingCycle: 'Daily', Price: 'Set Price' },\r\n  { PricingCycle: 'Weekly', Price: 'Set Price' },\r\n  { PricingCycle: 'Monthly', Price: 'Set Price' },\r\n  { PricingCycle: 'Yearly', Price: 'Set Price' },\r\n]"
                }
            ],
            "src/app/modules/plans/components/product-details/product-details.component.ts": [
                {
                    "name": "ELEMENT_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/plans/components/product-details/product-details.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PeriodicElement[]",
                    "defaultValue": "[\r\n  { position: 'Whiteboard', name: 'Hydrogen', status: \"Active\", symbol: 'Available' },\r\n  { position: 'Email support', name: 'Custom', status: \"Active\", symbol: 'Available' },\r\n  { position: 'Whiteboard', name: 'Hydrogen', status: \"Active\", symbol: 'Available' },\r\n  { position: 'Email support', name: 'Custom', status: \"Active\", symbol: 'Available' },\r\n  { position: 'Whiteboard', name: 'Hydrogen', status: \"Active\", symbol: 'Available' },\r\n  { position: 'Email support', name: 'Custom', status: \"Active\", symbol: 'Available' },\r\n  { position: 'Whiteboard', name: 'Hydrogen', status: \"Active\", symbol: 'Available' },\r\n  { position: 'Email support', name: 'Custom', status: \"Active\", symbol: 'Available' },\r\n  { position: 'Whiteboard', name: 'Hydrogen', status: \"Active\", symbol: 'Available' },\r\n  { position: 'Email support', name: 'Custom', status: \"Active\", symbol: 'Available' },\r\n]"
                }
            ],
            "src/app/modules/plans/components/view-plans/view-plans.component.ts": [
                {
                    "name": "ELEMENT_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/plans/components/view-plans/view-plans.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PeriodicElement[]",
                    "defaultValue": "[\r\n  { Currency: '', PricingCycle: 'Daily', Price: '$100/Unit' },\r\n  { Currency: '', PricingCycle: 'Weekly', Price: '$100/Unit' },\r\n  { Currency: '', PricingCycle: 'Monthly', Price: '$100/Unit' },\r\n  { Currency: '', PricingCycle: 'Yearly', Price: '$100/Unit' },\r\n]"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,\r\n  apiUrl: 'http://[::1]:4201/pcm/api/v1/products'\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false,  \r\n  productData:'http://[::1]:4201/pcm/api/v1/products',\r\n  uploadUrl:'http://[::1]:4201/pcm/api/v1/blob/upload',\r\n  apiUrl: 'http://[::1]:4201/pcm/api/v1/feature',\r\n  featureUrl: 'http://[::1]:4201/pcm/api/v1/feature',\r\n  imagePath:'https://saasframeworkuploads.blob.core.windows.net',\r\n}"
                }
            ],
            "src/stories/softobiz-ui/Input/stories/input.stories.ts": [
                {
                    "name": "Input",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/Input/stories/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    readonly: false,\r\n    placeholder: 'Enter here...',\r\n    disable: false,\r\n    required: true,\r\n    label: 'Label',\r\n    infoIcon: false,\r\n    infoTitle: 'Title',\r\n    infoDetail:\r\n      'Microsoft Teams is the ultimate messaging app for your organization—a workspace for real-time collaboration and communication, meetings, file and app sharing, and even the occasional emoji! All in one place, all in the open, all accessible to everyone.',\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/Input/stories/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<InputComponent>",
                    "defaultValue": "{\r\n  component: InputComponent,\r\n  title: 'softobiz-ui/Atom/Input',\r\n  tags: ['autodocs'],\r\n  render: (args: InputComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    hint: { control: 'text' },\r\n    class: { control: 'text' },\r\n    infoIcon: {\r\n      control: 'boolean',\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        BrowserAnimationsModule,\r\n        MatIconModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        NgxTippyModule,\r\n      ],\r\n    }),\r\n  ],\r\n}"
                }
            ],
            "src/stories/softobiz-ui/Textarea/stories/textarea.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/Textarea/stories/textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TextareaComponent>",
                    "defaultValue": "{\r\n  component: TextareaComponent,\r\n  title: 'softobiz-ui/Atom/Textarea',\r\n  tags: ['autodocs'],\r\n  render: (args: TextareaComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    hint: { control: 'text' },\r\n    class: { control: 'text' },\r\n    appearance: {\r\n      control: 'select',\r\n      options: [\r\n        'outline',\r\n        'fill'\r\n      ],\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        BrowserAnimationsModule,\r\n        MatIconModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        NgxTippyModule\r\n      ],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Textarea",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/Textarea/stories/textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    readonly: false,\r\n    placeholder: 'Enter here...',\r\n    disable: false,\r\n    required: true,\r\n    label: 'Label',\r\n  },\r\n}"
                }
            ],
            "src/stories/softobiz-ui/Typography/stories/typography.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/Typography/stories/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TypographyComponent>",
                    "defaultValue": "{\r\n  component: TypographyComponent,\r\n  title: 'softobiz-ui/Atom/Typography',\r\n  tags: ['autodocs'],\r\n  render: (args: TypographyComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    variant: {\r\n      control: 'select',\r\n      options: [\r\n        'default',\r\n        'raised',\r\n        'flat',\r\n        'stroked',\r\n        'icon',\r\n        'fab',\r\n        'mini-fab',\r\n      ],\r\n    },\r\n    color: {\r\n      options: ['primary', 'accent', 'warn'],\r\n      control: { type: 'radio' },\r\n    },\r\n    label: { control: 'text' },\r\n    id: { control: 'text' },\r\n    class: { control: 'text' },\r\n    onClick: { control: 'text', defaultValue: 'clickfuntion()' },\r\n    disable: {\r\n      control: 'boolean',\r\n      defaultValue: false,\r\n    },\r\n    disableRipple: {\r\n      control: 'boolean',\r\n    },\r\n    size: {\r\n      control: 'select',\r\n      options: ['small', 'medium', 'large', 'link-text', 'icon-text'],\r\n    },\r\n    type: {\r\n      control: 'select',\r\n      options: ['button', 'submit', 'reset'],\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Typography",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/Typography/stories/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n  },\r\n}"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\r\n  parameters: {\r\n    actions: { argTypesRegex: '^on[A-Z].*' },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/,\r\n      },\r\n    },\r\n    docs: {\r\n      theme: themes.light,\r\n    },\r\n    // global: {\r\n    //   css: `\r\n    //     .sidebar-header {\r\n    //       background-color: #f2f2f2 !important;\r\n    //     }\r\n  \r\n    //     .myButton {\r\n    //       background-color: blue;\r\n    //       color: white;\r\n    //       padding: 10px 20px;\r\n    //       border-radius: 4px;\r\n    //     }\r\n    //   `,\r\n    // },\r\n    // options: {\r\n    //   storySort: (a: any, b: any) =>\r\n    //     a.id === b.id\r\n    //       ? 0\r\n    //       : a.id.localeCompare(b.id, undefined, { numeric: true }),\r\n    // },\r\n  },\r\n}"
                }
            ],
            "src/stories/softobiz-ui/softobiz-ui.module.ts": [
                {
                    "name": "SFT_UI_MODULES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/softobiz-ui/softobiz-ui.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[SftButtonModule, NgxTippyModule]"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/core/utils/functions/getUniqueId.ts": [
                {
                    "name": "genUniqueId",
                    "file": "src/app/core/utils/functions/getUniqueId.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "string"
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/stories/softobiz-ui/button/types.ts": [
                {
                    "name": "ButtonVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"basic\" | \"raised\" | \"flat\" | \"icon\" | \"stroked\"",
                    "file": "src/stories/softobiz-ui/button/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/stories/softobiz-ui/Input/types.ts": [
                {
                    "name": "ButtonVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"basic\" | \"raised\" | \"flat\" | \"icon\" | \"stroked\"",
                    "file": "src/stories/softobiz-ui/Input/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/stories/softobiz-ui/Textarea/types.ts": [
                {
                    "name": "ButtonVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"basic\" | \"raised\" | \"flat\" | \"icon\" | \"stroked\"",
                    "file": "src/stories/softobiz-ui/Textarea/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/stories/softobiz-ui/button/stories/button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonComponent>",
                    "file": "src/stories/softobiz-ui/button/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/stories/softobiz-ui/breadcrumb/stories/breadcrumb.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<Breadcrumb>",
                    "file": "src/stories/softobiz-ui/breadcrumb/stories/breadcrumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/stories/softobiz-ui/Chip/stories/chip.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ChipComponent>",
                    "file": "src/stories/softobiz-ui/Chip/stories/chip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/stories/softobiz-ui/Checkbox/stories/checkbox.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CheckboxComponent>",
                    "file": "src/stories/softobiz-ui/Checkbox/stories/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/stories/softobiz-ui/Textarea/stories/textarea.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TextareaComponent>",
                    "file": "src/stories/softobiz-ui/Textarea/stories/textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/stories/softobiz-ui/Input/stories/input.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<InputComponent>",
                    "file": "src/stories/softobiz-ui/Input/stories/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/stories/softobiz-ui/Dialog/stories/dialog.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DialogComponent>",
                    "file": "src/stories/softobiz-ui/Dialog/stories/dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/stories/softobiz-ui/divider/stories/divider.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DividerComponent>",
                    "file": "src/stories/softobiz-ui/divider/stories/divider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/stories/softobiz-ui/Typography/stories/typography.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TypographyComponent>",
                    "file": "src/stories/softobiz-ui/Typography/stories/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "component": "LayoutComponent",
                        "children": [
                            {
                                "path": "products",
                                "loadChildren": "../app/modules/products/products.module#ProductsModule",
                                "children": [
                                    {
                                        "kind": "module",
                                        "children": [
                                            {
                                                "name": "routes",
                                                "filename": "src/app/modules/products/products-routing.module.ts",
                                                "module": "ProductsRoutingModule",
                                                "children": [
                                                    {
                                                        "path": "",
                                                        "component": "ProductListingComponent"
                                                    },
                                                    {
                                                        "path": "create",
                                                        "component": "CreateProductComponent"
                                                    },
                                                    {
                                                        "path": "edit-product/:id",
                                                        "component": "EditProductComponent"
                                                    },
                                                    {
                                                        "path": "view-product/:id",
                                                        "component": "ViewProductComponent"
                                                    },
                                                    {
                                                        "path": "view-product",
                                                        "component": "ViewProductComponent"
                                                    }
                                                ],
                                                "kind": "module"
                                            }
                                        ],
                                        "module": "ProductsModule"
                                    }
                                ]
                            },
                            {
                                "path": "features",
                                "loadChildren": "../app/modules/features/features.module#FeaturesModule",
                                "children": [
                                    {
                                        "kind": "module",
                                        "children": [
                                            {
                                                "name": "routes",
                                                "filename": "src/app/modules/features/features-routing.module.ts",
                                                "module": "FeaturesRoutingModule",
                                                "children": [
                                                    {
                                                        "path": "",
                                                        "component": "FeaturesListingComponent"
                                                    },
                                                    {
                                                        "path": "create",
                                                        "component": "CreateFeatureComponent",
                                                        "children": [
                                                            {
                                                                "path": "products/:id",
                                                                "component": "CreateFeatureComponent"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "path": "create/products/:id",
                                                        "component": "CreateFeatureComponent"
                                                    },
                                                    {
                                                        "path": "view/:id",
                                                        "component": "ViewFeatureComponent"
                                                    },
                                                    {
                                                        "path": "edit-feature/:id",
                                                        "component": "EditFeatureComponent"
                                                    }
                                                ],
                                                "kind": "module"
                                            }
                                        ],
                                        "module": "FeaturesModule"
                                    }
                                ]
                            },
                            {
                                "path": "plans",
                                "loadChildren": "../app/modules/plans/plans.module#PlansModule",
                                "children": [
                                    {
                                        "kind": "module",
                                        "children": [
                                            {
                                                "name": "routes",
                                                "filename": "src/app/modules/plans/plans-routing.module.ts",
                                                "module": "PlansRoutingModule",
                                                "children": [
                                                    {
                                                        "path": "",
                                                        "component": "PlansListingComponent"
                                                    },
                                                    {
                                                        "path": "view",
                                                        "component": "ViewPlansComponent"
                                                    },
                                                    {
                                                        "path": "create",
                                                        "component": "CreatePlanComponent"
                                                    },
                                                    {
                                                        "path": "create/set-price",
                                                        "component": "SetPriceComponent"
                                                    },
                                                    {
                                                        "path": "create/product-detail",
                                                        "component": "ProductDetailsComponent"
                                                    },
                                                    {
                                                        "path": "create/add-ons",
                                                        "component": "AddOnsDetailsComponent"
                                                    }
                                                ],
                                                "kind": "module"
                                            }
                                        ],
                                        "module": "PlansModule"
                                    }
                                ]
                            },
                            {
                                "path": "coupons",
                                "loadChildren": "../app/modules/coupons/coupons.module#CouponsModule",
                                "children": [
                                    {
                                        "kind": "module",
                                        "children": [
                                            {
                                                "name": "routes",
                                                "filename": "src/app/modules/coupons/coupons-routing.module.ts",
                                                "module": "CouponsRoutingModule",
                                                "children": [
                                                    {
                                                        "path": "",
                                                        "component": "CouponsListingComponent"
                                                    },
                                                    {
                                                        "path": "create",
                                                        "component": "CreateCouponsComponent"
                                                    },
                                                    {
                                                        "path": "view",
                                                        "component": "ViewCouponsComponent"
                                                    }
                                                ],
                                                "kind": "module"
                                            }
                                        ],
                                        "module": "CouponsModule"
                                    }
                                ]
                            },
                            {
                                "path": "",
                                "loadChildren": "./modules/payment-history/payment-history.module#PaymentHistoryModule",
                                "children": [
                                    {
                                        "kind": "module",
                                        "children": [
                                            {
                                                "name": "routes",
                                                "filename": "src/app/modules/payment-history/payment-history-routing.module.ts",
                                                "module": "PaymentHistoryRoutingModule",
                                                "children": [
                                                    {
                                                        "path": "transactions",
                                                        "component": "TransactionListComponent"
                                                    },
                                                    {
                                                        "path": "transactions/view",
                                                        "component": "TransactionViewComponent"
                                                    },
                                                    {
                                                        "path": "invoices",
                                                        "component": "InvoiceListComponent"
                                                    },
                                                    {
                                                        "path": "invoices/view",
                                                        "component": "InvoiceViewComponent"
                                                    },
                                                    {
                                                        "path": "logs",
                                                        "component": "LogsListComponent"
                                                    },
                                                    {
                                                        "path": "logs/view",
                                                        "component": "LogViewComponent"
                                                    }
                                                ],
                                                "kind": "module"
                                            }
                                        ],
                                        "module": "PaymentHistoryModule"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "path": "**",
                        "component": "PageNotFoundComponent"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/layouts/layout/layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/core/layouts/sidebar/sidebar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SidebarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/global.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GlobalService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/utils/functions/getUniqueId.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "genUniqueId",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/coupons/components/coupons-listing/coupons-listing.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CouponsListingComponent",
                "coveragePercent": 23,
                "coverageCount": "4/17",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/coupons/components/create-coupons/create-coupons.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CreateCouponsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/coupons/components/view-coupons/view-coupons.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ViewCouponsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/coupons/components/view-coupons/view-coupons.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DiscountElement",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/coupons/components/view-coupons/view-coupons.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DurationElement",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/coupons/components/view-coupons/view-coupons.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ValidityElement",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/coupons/components/view-coupons/view-coupons.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Duration_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/coupons/components/view-coupons/view-coupons.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ELEMENT_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/coupons/components/view-coupons/view-coupons.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Validity_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/coupons/services/coupons.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CouponsService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/features/components/create-feature/create-feature.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CreateFeatureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/26",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/features/components/create-feature/create-feature.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "menuOptions",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/features/components/edit-feature/edit-feature.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EditFeatureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/features/components/edit-feature/edit-feature.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "menuOptions",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/features/components/features-listing/features-listing.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FeaturesListingComponent",
                "coveragePercent": 13,
                "coverageCount": "4/29",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/features/components/view-feature/view-feature.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ViewFeatureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/27",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/features/components/view-feature/view-feature.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PeriodicElement",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/features/components/view-feature/view-feature.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ELEMENT_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/features/components/view-feature/view-feature.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FEATURE_TYPE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/features/services/feature.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FeatureService",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/payment-history/invoices/components/invoice-list/invoice-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InvoiceListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/payment-history/invoices/components/invoice-view/invoice-view.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InvoiceViewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/payment-history/invoices/service/invoices.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "InvoicesService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/payment-history/logs/components/log-view/log-view.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LogViewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/payment-history/logs/components/logs-list/logs-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LogsListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/payment-history/logs/service/logs.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LogsService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/payment-history/transactions/components/transaction-list/transaction-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TransactionListComponent",
                "coveragePercent": 22,
                "coverageCount": "4/18",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/payment-history/transactions/components/transaction-view/transaction-view.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TransactionViewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/payment-history/transactions/service/transactions.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TransactionsService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/plans/components/add-ons-details/add-ons-details.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddOnsDetailsComponent",
                "coveragePercent": 21,
                "coverageCount": "3/14",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/plans/components/add-ons-details/add-ons-details.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PeriodicElement",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/plans/components/add-ons-details/add-ons-details.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ELEMENT_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/plans/components/create-plan/create-plan.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CreatePlanComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/plans/components/create-plan/create-plan.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PeriodicElement",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/plans/components/create-plan/create-plan.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ELEMENT_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/plans/components/plan-add-empty-layout/plan-add-empty-layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PlanAddEmptyLayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/plans/components/plans-listing/plans-listing.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PlansListingComponent",
                "coveragePercent": 30,
                "coverageCount": "4/13",
                "status": "medium"
            },
            {
                "filePath": "src/app/modules/plans/components/product-details/product-details.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductDetailsComponent",
                "coveragePercent": 37,
                "coverageCount": "3/8",
                "status": "medium"
            },
            {
                "filePath": "src/app/modules/plans/components/product-details/product-details.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PeriodicElement",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/plans/components/product-details/product-details.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ELEMENT_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/plans/components/set-price/set-price.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SetPriceComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/plans/components/view-plans/view-plans.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ViewPlansComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/plans/components/view-plans/view-plans.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PeriodicElement",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/plans/components/view-plans/view-plans.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ELEMENT_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/products/components/create-product/create-product.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CreateProductComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/products/components/create-product/create-product.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DialogAnimationsDialog",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/products/components/edit-product/edit-product.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EditProductComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/products/components/product-listing/product-listing.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductListingComponent",
                "coveragePercent": 9,
                "coverageCount": "3/33",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/products/components/view-product/view-product.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ViewProductComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/products/services/products.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProductsService",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/custom-date-header/custom-date-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomDateHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dialog-box/coupons-delete-success/coupons-delete-success.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CouponsDeleteSuccessComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dialog-box/coupons-delete-success/coupons-delete-success.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DialogData",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dialog-box/delete-confirmation/delete-confirmation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DeleteConfirmationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dialog-box/delete-confirmation/delete-confirmation.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DialogData",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dialog-box/feature-details-popup/feature-details-popup.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FeatureDetailsPopupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dialog-box/success-dialog/success-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SuccessDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dialog-box/success-dialog/success-dialog.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DialogData",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/empty-listing/empty-listing.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EmptyListingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/page-not-found/page-not-found.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageNotFoundComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "coupon",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Data_Type",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Feature",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FeatureList",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "features",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GetFeature",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GetProduct",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Menu",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "plansFields",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Product",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "selectOptions",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Config_Menu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Coupon_Data",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "feature_types",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Features_Data",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Menu_Headings",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MENUITEMS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "nocoupons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "noFeatures",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "noPageFound",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "noPlans",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "noProducts",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Notifications_Data",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "noTransactions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "periodUnit",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "plan_add_empty_data",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Plans_Data",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pricingModels",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "StaticRoutes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Stepper",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TransactionList",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "User_Data",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/consants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "User_Options",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Checkbox/checkbox.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Task",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Checkbox/stories/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Checkbox",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Checkbox/stories/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Chip/chip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Chip/stories/chip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Chip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Chip/stories/chip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Dialog/dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Dialog/dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DialogOverviewExampleDialog",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Dialog/dialog.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DialogData",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Dialog/stories/dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dialog",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Dialog/stories/dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Input/stories/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Input",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Input/stories/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Textarea/stories/textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Textarea/stories/textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Textarea",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Textarea/textarea.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextareaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Typography/stories/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Typography/stories/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Typography",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/Typography/typography.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TypographyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/breadcrumb/breadcrumb.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "Breadcrumb",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/breadcrumb/breadcrumb.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BreadcrumbItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/breadcrumb/stories/breadcrumb.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "breadcrumb",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/breadcrumb/stories/breadcrumb.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 23,
                "coverageCount": "3/13",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/button/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Button",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/button/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/divider/divider.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DividerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/divider/stories/divider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Divider",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/divider/stories/divider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/softobiz-ui/softobiz-ui.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SFT_UI_MODULES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}