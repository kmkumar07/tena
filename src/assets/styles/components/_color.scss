// Google Color Palette defined: http://www.google.com/design/spec/style/color.html
$red: (
  "base": #ff0404,
);
$blue: (
  "primary": #4198ff,
  "base": #070029,
  "darken": #090039,
  "darken-2": #1272ca,
  "darken-3": #0D76EE,
  "darken-4": #4D7AEF,
  "lighten": #3a4580,
  "lighten-1": #e7e8f0,
  "lighten-2": #e5f5ff,
  "lighten-3": #fafafc,
  "lighten-4": #bcdeff,
  "lighten-5": #68b5fd,
  "lighten-6": #f2f9ff,
  "lighten-7": #dff0ff,
  "lighten-8": #e8edfb,
  "lighten-11": #9CA8BA,
);
$green: (
  "base": #1bd2a4,
  "darken": #00af5a,
  "darken-2": #16a883,
  "darken-3": #4DA63E,
  "darken-4": #00A885,
  "lighten": #e7faf6,
  "lighten-1": #e1fbf5,
  "lighten-2": #e9f5f0,
  "lighten-3": #e5f8f0,
  "lighten-base": #edfbf8,
  "lighten-4": #b9ebde,
  "lighten-5": #6be1c4,
  "lighten-6": #e8faf6,
  "lighten-7": #f5fffd,
);
$orange: (
  "base": #ff8b55,
  "lighten": #ffab27,
  "lighten-2": #e8920c,
  "lighten-3": #fff5e5,
);
$red: (
  "base": #ed5267,
  "darken": #c42339,
  "darken-1": #FF6F6F,
  "darken-2": #EA3829,
  "lighten": #e44258,
  "lighten-2": #f9dade,
  "lighten-3": #FBF5FB,
);
$shades: (
  "black": #000000,
  "white": #ffffff,
  "transparent": transparent,
);
//Project Color pallete
$primary: (
  "main": #7868e6,
  "light": #F3F1FF,
  "dark": #6062e8,
  "hover": #5456cc,
  "light2": #f0ecff,
  "light3": #696cff,
  "lighten-4": #F5F3FF,
  "lighten-5":  #FBF9FD,
  "lighten-6":  #7868e61a,
);
$text: (
  "primary": #405189,
  "secondary": #1A3447,
  "dark": #2C2466,
  "lighten": #748291,
  "lighten-1": #92929d,
  "red": #e97272,
  "lighten-2": #9CA8BA,
  "lighten-3": #8B97BD,
  "lighten-4": #7A7E83,

);
$error: (
  "main": #e34f4f,
  "light": #ff5b3f,
  "dark": #e8381a,
  "primary": #ff3030,
);
// empty-state Classes
$purple: (
  "lighten": #696cff,
  "darken": #444791,
  "darken-1": #3A3742,
  "dark-2": #364A63,
  "lighten-1":#5B3CC6,
);
$grey: (
  "base": #000000,
  "darken": #2b2b30,
  "darken-2": #32475c,
  "darken-3": #5b5b5b,
  "darken-4": #979797,
  "darken-5": #2a2a2a,
  "darken-6": #495057,
  "darken-7": #1B1B1E,
  "light": #6e6d76,
  "lighten-1": #E0E0E0,
  "lighten-2": #b1b9c1,
  "lighten-3": #f5f5f9,
  "lighten-4": #8592a3,
  "lighten-5": #c4c4c4,
  "lighten-6": #7c7b7b,
  "lighten-7": #D6D6D6,
  "lighten-8": #EDEDED,
  "lighten-9": #AAAAAA,
  "lighten-10": #EAE7FF,
  "lighten-11": #E5E7EB,
  "lighten-12": #8394A4,
  "lighten-13": #5E7080,
  "primary": #f9f9f9,
  "border": #D6D6D6,
  "border-2": #D9D9D9,
  "stepper-border":#AFABC9,
  "form-caption": #6C6c6C
);

//not is use
$sky-blue: (
  "base": #009e8e,
  "lighten": #abfbf3,
);
$empty-red: (
  "base": #ff6f41,
  "lighten": #ffdace,
);
$empty-pink: (
  "base": #ed5267,
  "lighten": #ffdce1,
);
$colors: (
  "red": $red,
  "blue": $blue,
  "green": $green,
  "purple": $purple,
  "orange": $orange,
  "grey": $grey,
  "shades": $shades,
  "sky-blue": $sky-blue,
  "empty-red": $empty-red,
  "empty-pink": $empty-pink,
  "primary": $primary,
  "text": $text,
  "error": $error,
) !default;
$lighten-blue: #3a4580;
$red-lighten: #e44258;
$red-lighten1: #f9dade;
$yellow-lighten: #fff5e6;
$yellow-lighten2: #fbf3e0;
$input-grey: #909194;
$white-2: #f2f2f2;
$white-3: #ffffff0d;

// Color Classes
@each $color_name, $color in $colors {
  @each $color_type, $color_value in $color {
    @if $color_type== "base" {
      .#{$color_name} {
        background-color: $color_value !important;
      }
      .#{$color_name}-text {
        color: $color_value !important;
      }
    } @else if $color_name != "shades" {
      .#{$color_name}.#{$color_type} {
        background-color: $color_value !important;
      }
      .#{$color_name}-text.text-#{$color_type} {
        color: $color_value !important;
      }
    }
  }
}

// Shade classes
@each $color, $color_value in $shades {
  .#{$color} {
    background-color: $color_value !important;
  }
  .#{$color}-text {
    color: $color_value !important;
  }
}

// usage: color("name_of_color", "type_of_color")
// to avoid to repeating map-get($colors, ...)
@function color($color, $type) {
  @if map-has-key($colors, $color) {
    $curr_color: map-get($colors, $color);
    @if map-has-key($curr_color, $type) {
      @return map-get($curr_color, $type);
    }
  }
  @return null;
}