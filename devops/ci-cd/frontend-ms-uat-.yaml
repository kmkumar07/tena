trigger: none

pool: 
  vmImage: 'ubuntu-latest'

variables:
- group: DF-TP-PipelineVariables

stages:
- stage: Build_Frontend_Application_uat
  displayName: 'Build stage for Frontend application'
  variables:
  - group: DF-TP-PipelineVariables
  jobs:
  # - job: Sonarqube
  #   displayName: Sonarqube
  #   pool:
  #     vmImage: ubuntu-latest
  #   steps:
  #   - task: SonarQubePrepare@5
  #     inputs:
  #       SonarQube: 'SonarQube-service-connection-DF'
  #       scannerMode: 'CLI'
  #       configMode: 'manual'
  #       cliProjectKey: 'DF-Tenant-Portal'
  #       cliProjectName: 'DF-Tenant-Portal'
  #   - task: SonarQubeAnalyze@5
  #   - task: SonarQubePublish@5
  #     inputs:
  #       pollingTimeoutSec: '300'
  #   - script: |
  #       echo $(Build.BuildId)
  #       pwd && ls -l
  
  - job: Build
    displayName: 'Build for Frontend application'
    steps:
    - script: |
        echo $(Build.BuildId)
        pwd && ls -l
        sed -i  '6d' Dockerfile
        sed -i '6i RUN npm run build:uat' Dockerfile
        cat Dockerfile

    - task: Docker@2
      displayName: buildAndPush
      inputs:
        containerRegistry: 'dockerhub-connection'
        repository: gopiprasanth3070/ory
        Dockerfile: '**/Dockerfile'
        tags: 'df-tenant-portal-$(Build.BuildId)'
    
- stage: Deploy_Frontend_Application_uat
  displayName: 'Helm Deploy to Frontend application uat'
  pool: DF-UAT-selfhost
  jobs:
  - job: Deploy  
    displayName: Deploying Application into uat Environment
    steps:
    - script: |
          echo $(Build.BuildId)
          pwd && ls -lrta
          helm upgrade --recreate-pods -i df-tenant-portal --set image.tag=df-tenant-portal-$(Build.BuildId) -f devops/helm-charts/app/values/values-dev.yaml devops/helm-charts/app/charts -n $(K8sNamespace-UAT)